%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Mainmenu.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Daniel
%%CreationDate: 5/22/2017
%%BoundingBox: 0 0 512 512
%%HiResBoundingBox: 0 0 512 512
%%CropBox: 0 0 512 512
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2017-05-22T17:28:02+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2017-05-22T17:28:02+02:00</xmp:CreateDate>
         <xmp:MetadataDate>2017-05-22T17:28:02+02:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6NnVvFuxV2KuxVE2GnT3&#xA;zskJUMg5Hm3HatNsryZRDm24sJmaCPHlbUShbnCCP2C+5/Cn45T+bh5t/wCRnXT5ui8s3LH97cQR&#xA;U7F6mv0YnVjoCsdFLqQPi2vle6qRJcW6D9kl+vuNsTq49AVGil1MVRPKykfHfwhuwBr/ABGROr/o&#xA;lmND3yCn/hib1Sv1u39P/fnP+GH82K5Fj+SN/VGlsvlq5T7FxbyDtSSh/H+uEaoHmCiWikORifig&#xA;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&#xA;vqOpW9639yQYZz4KxqD94zL0mQRnu5GHcGPxZLNS4tXERDc1PE9s3Sp/5x12117zLc6raRyR280c&#xA;KIswCvWNKNUAt398w9DglixiMubfqMgnKww/zJqKwWT20Z5XNyPSRB1AbYn7st1OQRgfNrxje+gS&#xA;+JBHEkY6IoUfQKZonFkbNr64EOriqyuFLq4q6uKqf+kQ3KXlnM1teRbJKvcfysDsRmv1/Z2PUx4Z&#xA;B23Zfa2TSmhvA9P1Mig/MrzFDEI7nTo7lh/uyOUIp/2Lq5zjc3shO/TLb4H9Ieuxe0GkkLJ4T8f0&#xA;WEFq3nLzLq8bQfDp1s+z8G5ykeAYUUfQMzdB7JxhISyG6/HL9ri6r2lwxjWIcR+Q+3dK4Yo4Y1jj&#xA;HFF6DOyx4xAUOTxefPPLMzmbkWp4Y5o+D9OoI2II6EHxyOXFHJHhlyZaXUzwTE4GiE40vzx5n0yM&#xA;QyIuowqKIxf05af5RIZT91c4zW+yQlK8Zr8d233vaab2lwTH70cMvx3Ii6/MjzLdRGO3sktGO3qy&#xA;SCSnyVVT8cx8HshK/XLb5fpLfm9odLAen1HyB/TTH1SVppLm5la4u5jWWd+p9gOw9s7PRaHHp4cM&#xA;A8f2l2nk1UrltEcgqVzNdY6uKurirq4q6uKurirq4q6uKurirq4q6uKurirq4q6uKrZESRGRxyRh&#xA;Qg4pBINhDQtqthtaSerD2jY0Ye1TsfpzMxayURR3DkDJGXPYqza15glBURCM9ORdaD/gQDlx7Q7g&#xA;n0DqpW9oyym4uJPWuD+12UHsozByZZTNlryZbFDYIquVtLq4q6uKrK4pdXFXVxV1cVdXFXVxV1cV&#xA;dXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVx&#xA;V1cVdXFX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:AA7643EA023FE711860BF351378AC283</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:AA7643EA023FE711860BF351378AC283</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:50b5264c-e934-4feb-a1d9-880377ce7418</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:781ad072-9f2c-4432-a187-51733de1d820</stRef:instanceID>
            <stRef:documentID>xmp.did:41A60208C53EE711880B9C849F66AC23</stRef:documentID>
            <stRef:originalDocumentID>uuid:50b5264c-e934-4feb-a1d9-880377ce7418</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:41A60208C53EE711880B9C849F66AC23</stEvt:instanceID>
                  <stEvt:when>2017-05-22T10:03:43+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AA7643EA023FE711860BF351378AC283</stEvt:instanceID>
                  <stEvt:when>2017-05-22T17:28:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mainmenu</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>512.000000</stDim:w>
            <stDim:h>512.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Standard-Farbfeldgruppe</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Weiß</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Schwarz</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Rot</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Gelb</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Grün</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blau</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -512 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 512 li
512 512 li
512 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
512 512 mo
0 512 li
0 0 li
512 0 li
512 512 li
cp
clp
768 96 mo
-256 96 li
-256 0 li
768 0 li
768 96 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.454902 .784314 .968627 rgb
f
566.853 63.2437 mo
492.126 62.6816 417.073 44.9302 342.347 46.0508 cv
267.68 47.1704 194.648 67.1504 119.981 68.8296 cv
45.3149 70.5088 -30.9868 53.8862 -105.653 55.0059 cv
-155.85 55.7583 -189 70.0215 -256 70.0215 cv
-256 96 li
768.001 96 li
768.001 70.0215 li
701.466 70.7241 632.706 63.7388 566.853 63.2437 cv
cp
.231373 .658824 .658824 rgb
f
301.87 63.1865 mo
222.282 64.9595 141.724 58.0674 62.1377 59.8408 cv
-17.522 61.6152 -35.6719 71.8955 -115.332 71.8955 cv
-154.666 71.8955 -199.999 65.5171 -256 65.5171 cv
-256 96 li
768.001 96 li
768.001 65.5171 li
693.002 65.5171 616.919 51.2886 540.405 51.1318 cv
460.745 50.9688 381.528 61.4121 301.87 63.1865 cv
cp
.266667 .756863 .494118 rgb
f
768.001 76.1675 mo
426.667 63.3457 85.334 88.9897 -256 76.1675 cv
-256 96 li
768.001 96 li
768.001 89.3896 768.001 82.7783 768.001 76.1675 cv
cp
.945098 .905882 .552941 rgb
f
768.001 85.3262 mo
426.667 76.1675 85.334 94.4849 -256 85.3262 cv
-256 96 li
768.001 96 li
768.001 92.4419 768.001 88.8843 768.001 85.3262 cv
cp
.905882 .811765 .462745 rgb
f
768 32.9585 mo
768 32.9844 670 23.3271 536 23.9844 cv
475 22.8975 277 30.1729 94.25 34.8271 cv
-88.5 41.0376 -256 33.498 -256 32.9585 cv
-256 28.9312 -256 24.9038 -256 20.8765 cv
-256 21.4146 -88.4585 30.5747 94.312 26.2212 cv
277.083 22.9272 475.083 17.2554 536 18.3452 cv
670.166 17.6909 768 20.9048 768 20.8765 cv
768 24.9038 768 28.9312 768 32.9585 cv
cp
.639216 .85098 .968627 rgb
f
75.0083 15.0708 mo
75.6909 15.1138 87.5039 15.8687 102.421 14.6855 cv
113.674 15.2759 125.444 14.9888 136.312 14.4385 cv
144.736 14.8657 155.024 15.1782 162.875 14.6841 cv
174.651 15.1782 184.669 14.6343 185.12 14.5864 cv
188.333 14.2441 181.717 13.4053 181.717 13.0083 cv
181.717 12.6123 181.557 12.231 178.344 11.8896 cv
176.56 11.6997 174.459 11.4385 171.853 11.2734 cv
169.812 11.1455 168.059 10.2432 165.579 10.1323 cv
163.438 10.0366 161.367 9.2207 158.939 9.14014 cv
156.745 9.06787 153.405 11.2925 151.005 11.2339 cv
148.779 11.1792 147.075 9.11816 144.694 9.07715 cv
142.445 9.0376 140.063 8.72314 137.696 8.69629 cv
135.43 8.67139 132.887 9.86279 130.53 9.84961 cv
128.253 9.83691 125.911 9.77979 123.563 9.77979 cv
121.215 9.77979 118.996 11.3545 116.72 11.3662 cv
114.363 11.3794 111.808 9.33057 109.542 9.35547 cv
107.175 9.38184 105.127 10.748 102.877 10.7852 cv
100.498 10.8267 98.4692 11.5103 96.2427 11.5649 cv
93.8433 11.6226 90.9067 10.1245 88.7129 10.1963 cv
86.2852 10.2769 84.6167 11.417 82.4761 11.5127 cv
79.9961 11.6226 77.0601 10.877 75.019 11.0049 cv
72.4121 11.1704 72.4019 14.9053 75.0083 15.0708 cv
cp
.878431 .956863 1 rgb
f
592 30.0405 mo
592 30.4077 589.434 29.7207 586.748 30.0356 cv
585.256 30.2114 585.154 31.8843 582.977 32.0366 cv
582.406 32.0762 572.533 32.7739 560.064 31.6802 cv
550.66 32.2271 540.824 31.9604 531.74 31.4526 cv
524.699 31.8477 516.102 32.1357 509.539 31.6802 cv
499.697 32.1357 491.324 31.6343 490.947 31.5894 cv
488.262 31.2734 493.791 30.4985 493.791 30.1318 cv
493.791 29.7656 493.926 29.4131 496.611 29.0977 cv
498.102 28.9224 499.857 28.6812 502.035 28.5293 cv
503.742 28.4097 505.207 27.5762 507.279 27.4746 cv
509.068 27.3857 510.801 26.6323 512.828 26.5581 cv
514.662 26.4912 517.455 28.5459 519.459 28.4922 cv
521.32 28.4419 522.744 26.5366 524.734 26.4995 cv
526.615 26.4634 528.604 26.1724 530.582 26.1479 cv
532.477 26.1255 534.604 27.2246 536.572 27.2139 cv
538.475 27.2017 540.434 27.1489 542.396 27.1489 cv
544.357 27.1489 546.213 28.603 548.115 28.6152 cv
550.084 28.626 552.221 26.7334 554.113 26.7568 cv
556.092 26.7808 557.805 28.043 559.684 28.0781 cv
561.674 28.1157 563.369 28.7476 565.229 28.7979 cv
567.234 28.8516 569.689 27.4668 571.523 27.5342 cv
573.553 27.6079 574.945 28.6611 576.734 28.749 cv
578.809 28.8516 581.262 28.1621 582.967 28.2813 cv
585.146 28.4331 587.326 28.4824 588.818 28.6577 cv
591.504 28.9731 592 29.6748 592 30.0405 cv
cp
f
770 512 mo
-254 512 li
-254 96 li
770 96 li
770 512 li
cp
level3{
gsave
clp
[-1.81839e-5 -416 416 -1.81839e-5 258 512 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.2 .454902 .541176 ]
/C1 [.266667 .756863 .709804 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.81839e-5 -416 416 -1.81839e-5 258 512 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~1G^gC1G^gC1G^gC1G^gC1c.$G1c.$G1c.$G1c.$H2)R6K2)R6K2)R6K2)R9M2E!HO2E!HO2E!HO2E*QR
2`EZS2`EZS2`EZS3&ilW3&ilW3&ilW3&ilX3B9)[3B9)[3B9)[3B9,]3]];_3]];_3]];_3]fDb4$,Mc
4$,Mc4$,Mc4?P_g4?P_g4?P_g4?P_h4Ztqk4Ztqk4Ztqk4Zttm5!D.o5!D.o5!D.o5!M7r5<h@s5<h@s
5<h@s5X7S"5X7S"5X7S"5X7S#5s[e&5s[e&5s[e&5s[h(6:+"*6:+"*6:+"*6:4+-6UO4.6UO4.6UO4.
~>
<~FEDVHF`hhMG'8(RGB\:VG^4R[H?sm`H[C*eI!g?jI=6QnIXcisJ:N0#JUrB(JqAW-K7ei1KS>,6L5(G;
LPLY@LkpnEM2@+IMMmCNN/W^SNK&pXNfK0]O,oBaOHGZfP*1ukPEV2pPa%GuQ'IZ$QC!r)R$a8.R@0J3
R[T_8S"-"=S=Q4ASt;OGT:_aKTV/!PTq\9UU8+KYUnjf_V5:#cVP^8hVl6PmW2ZbqWiE)"X/i;&XK8P+
Xfeh0Y-5%4Yct@:Z*CR>ZEggCZa@*H['d<L[^NWR\$riV\@B)[\[oA`]">Sd]Y(nj]tM+n^:q@s^VIY#
~>
<~MMd:KMMd=MMi3LON/W^SN/WaUNK&pWNfK-[NfK0]O,o?_OH>QcOH>TeOcbcgP*1ukP*2#mPEV2oPa%Ds
Pa%GuQ'IW"QBmi&QBml(Q^=&*R$a8.R$a;0R@0J2R[T\6R[T_8S"#n:S=H+>S=H.@SXl=BSt;OFSt;RH
T:_aKTV.sNTV8'QTqS0SU8"BVU8+KYUSFT[Unjf^UnsoaV5:#cVP^5fVPg>iVl-GkW2QYnW2ZbqWMuks
WiE)!WiN2$X/i;&XK8M)XKAV,Xf\_.Y-+q1Y-5%4YHP.6Yct@9Yd(I<Z*CR>ZEgdAZEpmDZa7!F['[3I
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
768 93.5371 mo
760.583 93.5371 759.013 92.0449 750.025 92.0449 cv
741.038 92.0449 741.038 90.771 732.051 90.771 cv
723.064 90.771 723.064 91.2866 714.078 91.2866 cv
707.97 91.2866 706.01 93.1211 702.561 94.2969 cv
694.84 94.4346 li
687.313 94.6025 li
685.003 94.2495 682.758 93.8867 678.141 93.8867 cv
669.156 93.8867 669.156 93.373 660.171 93.373 cv
656.026 93.373 653.796 93.9238 651.711 94.5171 cv
652.842 94.7881 650.913 94.7441 651.711 94.5171 cv
649.298 93.9375 647.062 93.3149 642.257 93.3149 cv
638.86 93.3149 636.749 94.1035 634.95 95.084 cv
633.322 95.0723 li
631.041 94.6113 628.795 94.1436 624.235 94.1436 cv
615.252 94.1436 615.252 91.5537 606.27 91.5537 cv
598.736 91.5537 597.502 94.2305 592.009 95.0977 cv
585.114 95.123 li
583.706 95.0815 li
578.941 94.415 577.446 92.8193 570.335 92.8193 cv
566.427 92.8193 564.221 93.5859 562.233 94.4512 cv
548.54 94.0493 li
529.14 94.6909 li
524.882 93.2666 523.211 90.375 516.44 90.375 cv
507.457 90.375 507.457 92.6006 498.474 92.6006 cv
494.471 92.6006 492.253 93.6074 490.228 94.7227 cv
475.401 94.3574 li
470.699 94.4067 li
468.697 93.2114 466.485 92.145 462.539 92.145 cv
453.557 92.145 453.557 93.1465 444.573 93.1465 cv
435.59 93.1465 435.59 90.4404 426.607 90.4404 cv
421.609 90.4404 419.392 92.2305 416.86 93.8188 cv
419.434 94.0439 412.661 93.4902 408.744 93.4902 cv
404.113 93.4902 401.869 94.2764 399.551 95.0381 cv
382.977 94.73 li
380.216 93.5771 378.044 92.1597 372.71 92.1597 cv
363.728 92.1597 363.728 93.4585 354.745 93.4585 cv
345.764 93.4585 345.764 93.1626 336.781 93.1626 cv
327.799 93.1626 327.799 91.251 318.815 91.251 cv
313.99 91.251 311.756 92.9146 309.33 94.4561 cv
292.541 94.3384 li
280.529 94.4487 li
273.842 94.4414 273.032 94.4023 264.922 94.4023 cv
262.658 94.4023 260.967 94.4985 259.557 94.6416 cv
255.97 94.6748 li
250.45 94.6318 li
249.473 94.4199 248.377 94.2856 247.078 94.2856 cv
245.313 94.2856 243.901 94.3965 242.693 94.5718 cv
219.4 94.3916 li
216.254 94.3687 li
214.895 94.0942 213.279 93.9111 211.148 93.9111 cv
209.58 93.9111 208.297 94.063 207.181 94.3027 cv
204.548 94.2837 li
201.12 92.9751 199.153 90.9478 193.067 90.9478 cv
187.774 90.9478 185.596 92.6914 182.865 94.1265 cv
182.827 94.126 li
162.781 94.7178 li
161.338 94.2891 159.608 93.9946 157.255 93.9946 cv
153.71 93.9946 151.568 94.4971 149.717 95.103 cv
146.258 95.2051 li
131.217 94.793 li
128.579 93.5269 126.381 92.0391 121.219 92.0391 cv
114.166 92.0391 112.637 93.5566 107.962 94.2104 cv
99.6963 94.2432 li
94.0796 93.3628 92.8911 90.5132 85.2939 90.5132 cv
76.3145 90.5132 76.3145 94.0557 67.3345 94.0557 cv
58.3535 94.0557 58.3535 94.0386 49.3721 94.0386 cv
47.7969 94.0386 46.5093 94.1577 45.3896 94.3457 cv
36.5566 94.3442 li
18.8726 94.626 li
17.4507 94.2632 15.7466 94.0176 13.4521 94.0176 cv
4.47217 94.0176 4.47217 93.0801 -4.50781 93.0801 cv
-13.4902 93.0801 -13.4902 93.5483 -22.4727 93.5483 cv
-26.2603 93.5483 -28.4473 94.1006 -30.3872 94.7373 cv
-36.5815 94.6987 li
-73.1484 94.8984 li
-102.255 94.54 li
-104.911 93.3711 -107.105 91.9897 -112.292 91.9897 cv
-121.274 91.9897 -121.274 92.5601 -130.256 92.5601 cv
-139.238 92.5601 -139.238 92.0293 -148.219 92.0293 cv
-157.201 92.0293 -157.201 91.2354 -166.183 91.2354 cv
-175.165 91.2354 -175.165 92.6821 -184.146 92.6821 cv
-193.128 92.6821 -193.128 91.0317 -202.109 91.0317 cv
-208.787 91.0317 -210.505 93.3486 -214.635 94.5386 cv
-219.429 94.5952 li
-219.429 94.5952 -248.719 93.5371 -256 93.5371 cv
-256 94.8047 -256 97.3906 -256 98.6763 cv
-252.719 98.6763 -249.188 98.6133 -246.344 97.0356 cv
-245.824 97.0391 li
-243.974 97.4165 -241.864 97.8257 -238.037 97.8257 cv
-235.016 97.8257 -233.019 97.5293 -231.347 97.1396 cv
-229.565 97.1519 li
-227.128 98.6104 -224.894 100.191 -220.05 100.191 cv
-211.064 100.191 -211.064 98.5605 -202.078 98.5605 cv
-195.653 98.5605 -193.811 98.2007 -190.004 97.9956 cv
-182.84 98.1841 li
-146.265 98.042 li
-116.829 98 li
-115.575 98.1045 -114.107 98.1729 -112.235 98.1729 cv
-103.253 98.1729 -103.253 98.6699 -94.27 98.6699 cv
-85.2856 98.6699 -85.2856 98.3281 -76.3013 98.3281 cv
-75.8433 98.3281 -75.4229 98.3159 -75.0093 98.3018 cv
-73.1138 98.3184 li
-48.5684 97.7749 li
-46.5566 98.6553 -44.3418 99.4443 -40.3711 99.4443 cv
-31.3896 99.4443 -31.3896 97.7739 -22.4077 97.7739 cv
-13.4238 97.7739 -13.4238 97.7222 -4.44043 97.7222 cv
4.54297 97.7222 4.54297 98.3135 13.5264 98.3135 cv
22.5107 98.3135 22.5107 99.6504 31.4946 99.6504 cv
37.0815 99.6504 39.1948 98.5063 42.1548 97.6421 cv
61.1787 97.1904 li
62.7627 97.2739 64.6699 97.335 67.4268 97.335 cv
74.8379 97.335 76.1455 97.0972 81.4175 97.0137 cv
88.9414 97.1123 li
94.5684 97.5405 95.7539 98.9312 103.357 98.9312 cv
107.066 98.9312 109.239 98.23 111.15 97.4092 cv
146.318 98.0127 li
169.235 97.3589 li
170.769 97.8657 172.609 98.228 175.219 98.228 cv
184.201 98.228 184.201 98.6787 193.184 98.6787 cv
196.014 98.6787 197.951 98.2046 199.559 97.5566 cv
219.459 98.2578 li
256.03 97.7056 li
256.748 97.6963 li
258.785 99.0132 261.006 100.208 265.04 100.208 cv
274.023 100.208 274.023 99.6167 283.006 99.6167 cv
291.987 99.6167 291.987 98.0645 300.969 98.0645 cv
309.951 98.0645 309.951 98.5591 318.934 98.5591 cv
327.914 98.5591 327.914 97.6855 336.895 97.6855 cv
338.988 97.6855 340.582 97.5317 341.927 97.3018 cv
364.174 97.0898 li
366.313 98.0464 368.552 98.958 372.82 98.958 cv
377.666 98.958 379.898 98.228 382.337 97.5552 cv
402.31 98.1328 li
435.84 97.0688 li
438.035 98.375 440.278 99.6533 444.666 99.6533 cv
451.799 99.6533 453.279 97.9854 458.081 97.2979 cv
468.505 97.4741 li
472.321 98.1689 474.158 99.3896 480.59 99.3896 cv
483.74 99.3896 485.777 98.6064 487.492 97.5967 cv
512.011 97.6069 li
540.531 97.9175 li
544.229 98.3911 546.106 99.1919 552.437 99.1919 cv
559.981 99.1919 561.206 98.2139 566.724 97.8999 cv
585.148 97.7935 li
600.336 97.709 li
601.871 98.0181 603.715 98.2388 606.329 98.2388 cv
615.311 98.2388 615.311 98.8271 624.292 98.8271 cv
627.18 98.8271 629.136 98.2549 630.764 97.4814 cv
658.29 97.1523 li
672.922 97.373 li
674.312 97.5752 675.975 97.7104 678.184 97.7104 cv
687.165 97.7104 687.165 98.8477 696.146 98.8477 cv
699.174 98.8477 701.173 98.3545 702.848 97.7061 cv
731.43 97.7144 li
744.833 97.7173 li
746.211 98.0962 747.856 98.3491 750.037 98.3491 cv
754.974 98.3491 757.226 98.1221 759.721 97.7212 cv
759.721 97.7212 765.563 98.6763 768 98.6763 cv
768 97.4629 768 95.0684 768 93.5371 cv
cp
1 1 1 rgb
f
grestore
452.736 289.734 mo
451.762 289.734 450.971 290.525 450.971 291.5 cv
450.971 292.475 451.762 293.266 452.736 293.266 cv
453.711 293.266 454.5 292.475 454.5 291.5 cv
454.5 290.525 453.711 289.734 452.736 289.734 cv
cp
452.034 287.979 mo
449.354 287.979 447.174 290.159 447.174 292.84 cv
447.174 295.52 449.354 297.699 452.034 297.699 cv
454.714 297.699 456.895 295.52 456.895 292.84 cv
456.895 290.159 454.714 287.979 452.034 287.979 cv
452.034 287.979 li
cp
452.034 288.758 mo
454.289 288.758 456.117 290.585 456.117 292.84 cv
456.117 295.094 454.289 296.922 452.034 296.922 cv
449.779 296.922 447.952 295.094 447.952 292.84 cv
447.952 290.585 449.779 288.758 452.034 288.758 cv
452.034 288.758 li
cp
false sop
.682353 .941176 .917647 rgb
f
458.399 242.587 mo
457.611 242.587 456.971 243.227 456.971 244.016 cv
456.971 244.804 457.611 245.443 458.399 245.443 cv
459.188 245.443 459.826 244.804 459.826 244.016 cv
459.826 243.227 459.188 242.587 458.399 242.587 cv
cp
457.831 241.167 mo
455.662 241.167 453.898 242.931 453.898 245.1 cv
453.898 247.268 455.662 249.032 457.831 249.032 cv
460 249.032 461.764 247.268 461.764 245.1 cv
461.764 242.931 460 241.167 457.831 241.167 cv
457.831 241.167 li
cp
457.831 241.796 mo
459.656 241.796 461.135 243.275 461.135 245.1 cv
461.135 246.924 459.656 248.403 457.831 248.403 cv
456.006 248.403 454.527 246.924 454.527 245.1 cv
454.527 243.275 456.006 241.796 457.831 241.796 cv
457.831 241.796 li
cp
f
441 323.733 mo
440.025 323.733 439.235 324.524 439.235 325.499 cv
439.235 326.474 440.025 327.265 441 327.265 cv
441.975 327.265 442.765 326.474 442.765 325.499 cv
442.765 324.524 441.975 323.733 441 323.733 cv
cp
440.299 321.979 mo
437.619 321.979 435.438 324.159 435.438 326.839 cv
435.438 329.519 437.619 331.7 440.299 331.7 cv
442.979 331.7 445.158 329.519 445.158 326.839 cv
445.158 324.159 442.979 321.979 440.299 321.979 cv
440.299 321.979 li
cp
440.299 322.757 mo
442.554 322.757 444.381 324.585 444.381 326.839 cv
444.381 329.095 442.554 330.921 440.299 330.921 cv
438.045 330.921 436.217 329.095 436.217 326.839 cv
436.217 324.585 438.045 322.757 440.299 322.757 cv
440.299 322.757 li
cp
f
425.764 300.815 mo
424.579 300.815 423.621 301.774 423.621 302.958 cv
423.621 304.14 424.579 305.099 425.764 305.099 cv
426.945 305.099 427.904 304.14 427.904 302.958 cv
427.904 301.774 426.945 300.815 425.764 300.815 cv
cp
424.912 298.686 mo
421.659 298.686 419.014 301.331 419.014 304.583 cv
419.014 307.835 421.659 310.481 424.912 310.481 cv
428.163 310.481 430.809 307.835 430.809 304.583 cv
430.809 301.331 428.163 298.686 424.912 298.686 cv
424.912 298.686 li
cp
424.912 299.63 mo
427.647 299.63 429.865 301.847 429.865 304.583 cv
429.865 307.319 427.647 309.536 424.912 309.536 cv
422.176 309.536 419.959 307.319 419.959 304.583 cv
419.959 301.847 422.176 299.63 424.912 299.63 cv
424.912 299.63 li
cp
f
442.195 261.335 mo
441.22 261.335 440.431 262.125 440.431 263.1 cv
440.431 264.074 441.22 264.865 442.195 264.865 cv
443.17 264.865 443.96 264.074 443.96 263.1 cv
443.96 262.125 443.17 261.335 442.195 261.335 cv
cp
441.494 259.58 mo
438.813 259.58 436.633 261.759 436.633 264.439 cv
436.633 267.12 438.813 269.3 441.494 269.3 cv
444.173 269.3 446.353 267.12 446.353 264.439 cv
446.353 261.759 444.173 259.58 441.494 259.58 cv
441.494 259.58 li
cp
441.494 260.357 mo
443.749 260.357 445.576 262.186 445.576 264.439 cv
445.576 266.694 443.749 268.521 441.494 268.521 cv
439.239 268.521 437.412 266.694 437.412 264.439 cv
437.412 262.186 439.239 260.357 441.494 260.357 cv
441.494 260.357 li
cp
f
98.5 205.469 mo
97.5254 205.469 96.7344 206.26 96.7344 207.234 cv
96.7344 208.209 97.5254 209 98.5 209 cv
99.4746 209 100.264 208.209 100.264 207.234 cv
100.264 206.26 99.4746 205.469 98.5 205.469 cv
cp
97.7979 203.714 mo
95.1182 203.714 92.9375 205.894 92.9375 208.574 cv
92.9375 211.254 95.1182 213.434 97.7979 213.434 cv
100.478 213.434 102.658 211.254 102.658 208.574 cv
102.658 205.894 100.478 203.714 97.7979 203.714 cv
97.7979 203.714 li
cp
97.7979 204.492 mo
100.053 204.492 101.881 206.319 101.881 208.574 cv
101.881 210.828 100.053 212.656 97.7979 212.656 cv
95.543 212.656 93.7158 210.828 93.7158 208.574 cv
93.7158 206.319 95.543 204.492 97.7979 204.492 cv
97.7979 204.492 li
cp
f
64.1357 144.488 mo
63.3477 144.488 62.707 145.127 62.707 145.916 cv
62.707 146.705 63.3477 147.344 64.1357 147.344 cv
64.9238 147.344 65.5625 146.705 65.5625 145.916 cv
65.5625 145.127 64.9238 144.488 64.1357 144.488 cv
cp
63.5674 143.067 mo
61.3984 143.067 59.6348 144.831 59.6348 147 cv
59.6348 149.168 61.3984 150.933 63.5674 150.933 cv
65.7363 150.933 67.5 149.168 67.5 147 cv
67.5 144.831 65.7363 143.067 63.5674 143.067 cv
63.5674 143.067 li
cp
63.5674 143.696 mo
65.3926 143.696 66.8711 145.175 66.8711 147 cv
66.8711 148.824 65.3926 150.303 63.5674 150.303 cv
61.7422 150.303 60.2637 148.824 60.2637 147 cv
60.2637 145.175 61.7422 143.696 63.5674 143.696 cv
63.5674 143.696 li
cp
f
67 235.233 mo
66.0254 235.233 65.2354 236.024 65.2354 236.999 cv
65.2354 237.974 66.0254 238.765 67 238.765 cv
67.9746 238.765 68.7646 237.974 68.7646 236.999 cv
68.7646 236.024 67.9746 235.233 67 235.233 cv
cp
66.2988 233.479 mo
63.6191 233.479 61.4375 235.659 61.4375 238.339 cv
61.4375 241.019 63.6191 243.2 66.2988 243.2 cv
68.9785 243.2 71.1582 241.019 71.1582 238.339 cv
71.1582 235.659 68.9785 233.479 66.2988 233.479 cv
66.2988 233.479 li
cp
66.2988 234.257 mo
68.5537 234.257 70.3809 236.085 70.3809 238.339 cv
70.3809 240.595 68.5537 242.421 66.2988 242.421 cv
64.0449 242.421 62.2168 240.595 62.2168 238.339 cv
62.2168 236.085 64.0449 234.257 66.2988 234.257 cv
66.2988 234.257 li
cp
f
112.5 242.717 mo
111.315 242.717 110.357 243.676 110.357 244.859 cv
110.357 246.041 111.315 247 112.5 247 cv
113.682 247 114.641 246.041 114.641 244.859 cv
114.641 243.676 113.682 242.717 112.5 242.717 cv
cp
111.648 240.587 mo
108.396 240.587 105.75 243.232 105.75 246.484 cv
105.75 249.736 108.396 252.383 111.648 252.383 cv
114.899 252.383 117.545 249.736 117.545 246.484 cv
117.545 243.232 114.899 240.587 111.648 240.587 cv
111.648 240.587 li
cp
111.648 241.531 mo
114.384 241.531 116.602 243.748 116.602 246.484 cv
116.602 249.221 114.384 251.438 111.648 251.438 cv
108.912 251.438 106.695 249.221 106.695 246.484 cv
106.695 243.748 108.912 241.531 111.648 241.531 cv
111.648 241.531 li
cp
f
87.3428 182.396 mo
86.3672 182.396 85.5781 183.186 85.5781 184.16 cv
85.5781 185.135 86.3672 185.926 87.3428 185.926 cv
88.3174 185.926 89.1074 185.135 89.1074 184.16 cv
89.1074 183.186 88.3174 182.396 87.3428 182.396 cv
cp
86.6416 180.641 mo
83.9609 180.641 81.7803 182.819 81.7803 185.5 cv
81.7803 188.181 83.9609 190.36 86.6416 190.36 cv
89.3203 190.36 91.5 188.181 91.5 185.5 cv
91.5 182.819 89.3203 180.641 86.6416 180.641 cv
86.6416 180.641 li
cp
86.6416 181.418 mo
88.8965 181.418 90.7236 183.246 90.7236 185.5 cv
90.7236 187.755 88.8965 189.582 86.6416 189.582 cv
84.3867 189.582 82.5596 187.755 82.5596 185.5 cv
82.5596 183.246 84.3867 181.418 86.6416 181.418 cv
86.6416 181.418 li
cp
f
79.2236 349.276 mo
78.9199 351.838 78.1885 353.599 79.4893 353.752 cv
80.7881 353.908 83.626 352.398 83.9297 349.838 cv
84.2334 347.277 83.4277 345.075 82.1289 344.921 cv
80.8301 344.767 79.5273 346.717 79.2236 349.276 cv
cp
.65098 .427451 .109804 rgb
f
83.4453 346.045 mo
83.3008 346.115 83.5801 347.316 83.5918 347.448 cv
83.6748 348.394 83.6592 349.489 83.332 350.394 cv
83.0283 351.233 82.415 351.929 81.6914 352.436 cv
81.1904 352.786 80.0439 353.493 79.3965 353.164 cv
79.2148 353.187 79.6855 349.101 79.7432 348.699 cv
79.8516 347.945 80.0439 347.204 80.3477 346.506 cv
80.3955 346.396 80.9033 345.582 80.8037 345.471 cv
80.7285 345.334 80.2451 345.828 80.2109 345.866 cv
79.6943 346.422 79.3418 347.129 79.1084 347.846 cv
78.6084 349.328 78.2168 351.238 78.2051 352.805 cv
78.2383 353.957 79.0996 354.447 80.1699 354.27 cv
82.1064 353.872 83.9219 352.325 84.3047 350.335 cv
84.4717 349.393 84.4229 348.355 84.1787 347.432 cv
84.1582 347.348 83.6523 345.883 83.4453 346.045 cv
83.2979 346.116 83.5566 345.958 83.4453 346.045 cv
cp
.478431 .164706 .129412 rgb
f
62.6211 342.594 mo
60.5449 341.314 58.498 340.088 56.1113 338.846 cv
55.4053 338.48 55.0938 338.635 55.4316 339.193 cv
55.5215 339.188 58.3633 343.047 58.3477 344.538 cv
58.3633 346.028 55.5215 349.888 55.4316 349.882 cv
55.0938 350.441 55.4053 350.595 56.1113 350.231 cv
56.2441 350.228 61.3008 347.567 62.6211 346.483 cv
64.2314 345.265 65.168 344.154 62.6211 342.594 cv
cp
.8 .52549 .133333 rgb
f
55.5078 337.647 mo
55.0527 337.647 54.6563 337.869 54.4463 338.24 cv
54.2793 338.537 54.166 339.033 54.5762 339.711 cv
54.6289 339.799 54.6953 339.877 54.7695 339.943 cv
55.3789 340.643 57.3574 343.67 57.3477 344.527 cv
57.3574 345.406 55.3809 348.434 54.7705 349.132 cv
54.6953 349.198 54.6289 349.276 54.5762 349.365 cv
54.166 350.044 54.2793 350.539 54.4463 350.835 cv
54.6563 351.206 55.0527 351.428 55.5078 351.428 cv
55.8203 351.428 56.167 351.327 56.5684 351.121 cv
56.5605 351.104 li
58.0469 350.499 62.459 347.91 63.2559 347.257 cv
64.2842 346.479 65.2559 345.57 65.1973 344.359 cv
65.1348 343.103 63.9951 342.264 63.1436 341.742 cv
60.8672 340.339 58.8789 339.158 56.5732 337.958 cv
56.168 337.748 55.8203 337.647 55.5078 337.647 cv
55.5078 337.647 li
cp
55.5078 338.647 mo
55.6475 338.647 55.8535 338.711 56.1113 338.846 cv
58.498 340.088 60.5449 341.314 62.6211 342.594 cv
65.168 344.154 64.2314 345.265 62.6211 346.483 cv
61.3008 347.567 56.2441 350.228 56.1113 350.231 cv
55.8535 350.364 55.6484 350.428 55.5078 350.428 cv
55.2646 350.428 55.2178 350.236 55.4316 349.882 cv
55.4316 349.882 li
55.5264 349.882 58.3633 346.027 58.3477 344.538 cv
58.3633 343.047 55.5254 339.193 55.4316 339.193 cv
55.4316 339.193 li
55.2178 338.84 55.2646 338.647 55.5078 338.647 cv
55.5078 338.647 li
cp
.478431 .164706 .129412 rgb
f
56.0371 339.977 mo
56.0381 339.979 56.0391 339.979 56.0391 339.979 cv
58.0039 341.037 62.1924 342.734 62.6211 342.594 cv
60.5449 341.314 58.498 340.088 56.1113 338.846 cv
55.4053 338.48 55.0938 338.635 55.4316 339.193 cv
55.4316 339.194 55.6914 339.505 56.0371 339.977 cv
cp
.960784 .913725 .470588 rgb
f
76.752 338.705 mo
71.7324 339.205 67.5928 340.517 65.2764 341.93 cv
65.0928 342.025 64.4219 342.611 64.3135 342.762 cv
64.3135 342.762 li
63.3262 344.161 63.7344 346.32 65.2764 347.146 cv
67.6836 348.394 71.7344 349.866 76.752 350.37 cv
85.2295 351.309 92.9609 348.785 92.9668 344.538 cv
92.9609 340.289 85.2295 337.768 76.752 338.705 cv
cp
.960784 .772549 .164706 rgb
f
80.2598 337.51 mo
79.0664 337.51 77.8486 337.577 76.6416 337.711 cv
71.8789 338.186 67.4316 339.443 64.7559 341.076 cv
64.7559 341.076 li
64.4111 341.285 63.6934 341.911 63.502 342.178 cv
62.8379 343.119 62.6172 344.32 62.8916 345.481 cv
63.1543 346.589 63.8516 347.518 64.8047 348.028 cv
66.3584 348.833 70.5977 350.757 76.6523 351.365 cv
77.8496 351.498 79.0674 351.565 80.2617 351.565 cv
88.3252 351.565 93.9609 348.677 93.9668 344.539 cv
93.9609 340.399 88.3242 337.51 80.2598 337.51 cv
80.2598 337.51 li
cp
80.2598 338.51 mo
87.248 338.51 92.9619 340.887 92.9668 344.538 cv
92.9619 348.188 87.25 350.565 80.2617 350.565 cv
79.1201 350.565 77.9424 350.502 76.752 350.37 cv
71.7344 349.866 67.6836 348.394 65.2764 347.146 cv
63.7344 346.32 63.3262 344.161 64.3135 342.762 cv
64.4219 342.611 65.0928 342.025 65.2764 341.93 cv
67.5928 340.517 71.7324 339.205 76.752 338.705 cv
77.9424 338.572 79.1182 338.51 80.2598 338.51 cv
80.2598 338.51 li
cp
.478431 .164706 .129412 rgb
f
92.9668 344.538 mo
92.9668 340.984 87.3574 338.52 80.4561 338.54 cv
80.4561 338.54 80.4561 338.54 80.4551 338.54 cv
81.2285 339.034 81.7607 339.524 81.9141 339.926 cv
87.5918 340.484 91.8447 342.866 91.8027 345.912 cv
91.7949 346.525 91.5859 347.11 91.2402 347.66 cv
91.2402 347.66 91.2412 347.66 91.2422 347.66 cv
92.3311 346.757 92.9668 345.686 92.9668 344.538 cv
cp
.960784 .913725 .470588 rgb
f
65.2764 341.93 mo
65.0928 342.025 64.4219 342.611 64.3135 342.762 cv
64.0781 343.096 63.9258 343.476 63.8457 343.868 cv
65.4863 342.643 68.3867 341.336 69.9375 340.586 cv
70.2793 340.42 70.5625 340.118 70.7891 339.767 cv
68.4883 340.372 66.584 341.132 65.2764 341.93 cv
cp
f
87.7197 343.808 mo
87.7197 345.912 86.0156 347.617 83.9102 347.617 cv
81.8076 347.617 80.1025 345.912 80.1025 343.808 cv
80.1025 341.704 81.8076 339.999 83.9102 339.999 cv
86.0156 339.999 87.7197 341.704 87.7197 343.808 cv
cp
.8 .52549 .133333 rgb
f
87.5654 343.353 mo
87.5654 345.114 86.1396 346.541 84.3779 346.541 cv
82.6182 346.541 81.1914 345.114 81.1914 343.353 cv
81.1914 341.593 82.6182 340.167 84.3779 340.167 cv
86.1396 340.167 87.5654 341.593 87.5654 343.353 cv
cp
1 1 1 rgb
f
85.8662 343.353 mo
85.8662 344.175 85.2002 344.841 84.3779 344.841 cv
83.5576 344.841 82.8916 344.175 82.8916 343.353 cv
82.8916 342.532 83.5576 341.866 84.3779 341.866 cv
85.2002 341.866 85.8662 342.532 85.8662 343.353 cv
cp
0 0 0 rgb
f
86.4102 342.239 mo
86.4102 342.804 85.9541 343.261 85.3896 343.261 cv
84.8252 343.261 84.3682 342.804 84.3682 342.239 cv
84.3682 341.675 84.8252 341.219 85.3896 341.219 cv
85.9541 341.219 86.4102 341.675 86.4102 342.239 cv
cp
1 1 1 rgb
f
75.0557 349.421 mo
73.8389 351.695 72.5156 353.068 73.6709 353.686 cv
74.8232 354.305 78.0166 353.934 79.2334 351.66 cv
80.4502 349.387 80.5029 347.043 79.3496 346.425 cv
78.1963 345.808 76.2725 347.148 75.0557 349.421 cv
cp
.8 .52549 .133333 rgb
f
80.165 347.952 mo
80.0049 347.965 79.8271 349.185 79.79 349.312 cv
79.5225 350.223 79.1084 351.237 78.4736 351.96 cv
77.8848 352.631 77.0605 353.055 76.2012 353.263 cv
75.6074 353.406 74.2822 353.646 73.7988 353.104 cv
73.6221 353.059 75.5498 349.426 75.75 349.073 cv
76.126 348.411 76.5752 347.791 77.1133 347.251 cv
77.1973 347.166 77.9668 346.594 77.915 346.454 cv
77.8945 346.299 77.2646 346.583 77.2188 346.605 cv
76.5352 346.935 75.9492 347.465 75.4707 348.047 cv
74.4639 349.245 73.4033 350.881 72.8213 352.335 cv
72.4316 353.42 73.0547 354.19 74.1162 354.415 cv
76.0645 354.752 78.3184 353.974 79.4014 352.26 cv
79.9004 351.443 80.2324 350.46 80.3428 349.511 cv
80.3535 349.425 80.417 347.876 80.165 347.952 cv
80.002 347.965 80.3008 347.911 80.165 347.952 cv
cp
.478431 .164706 .129412 rgb
f
69.9854 340.105 mo
69.9395 340.134 69.9043 340.157 69.8672 340.18 cv
72.0928 339.505 74.6934 339.071 77.5 339 cv
79.6348 338.946 81.666 339.107 83.5137 339.432 cv
82.8809 337.404 74.9082 332.893 70.3926 333.023 cv
70.5283 335.903 72.0029 338.803 69.9854 340.105 cv
cp
.8 .52549 .133333 rgb
f
81.1797 339.13 mo
81.9824 339.204 82.7656 339.301 83.5137 339.432 cv
82.959 337.658 76.7871 333.982 72.2275 333.178 cv
71.5762 333.063 70.957 333.006 70.3926 333.023 cv
70.4141 333.482 70.4717 333.94 70.542 334.395 cv
74.0498 334.781 78.8408 337.182 81.1797 339.13 cv
cp
.960784 .913725 .470588 rgb
f
83.1523 338.43 mo
82.7871 337.899 82.1758 337.279 81.3691 336.643 cv
79.7559 335.377 77.3809 333.986 74.5947 333.065 cv
73.1387 332.596 71.708 332.307 70.375 332.376 cv
70.3496 332.377 li
70.334 332.378 li
70.0645 332.404 69.8662 332.709 69.8906 333.054 cv
69.9775 334.292 70.2275 335.33 70.3945 336.23 cv
70.5684 337.129 70.6699 337.897 70.6045 338.482 cv
70.4668 339.657 69.7705 340.03 69.8672 340.18 cv
69.8906 340.239 70.0605 340.23 70.3398 340.049 cv
70.6094 339.873 71.0176 339.438 71.1963 338.668 cv
71.5313 337.287 71.0986 335.552 70.9414 333.705 cv
71.9941 333.785 73.1475 334.053 74.3398 334.438 cv
77.0098 335.32 79.3672 336.526 81.0039 337.521 cv
81.8223 338.021 82.4609 338.482 82.8691 338.84 cv
83.2871 339.193 83.4395 339.459 83.5137 339.432 cv
83.5918 339.412 83.5293 338.954 83.1523 338.43 cv
cp
.478431 .164706 .129412 rgb
f
431.874 170.852 mo
431.57 173.413 430.839 175.174 432.14 175.327 cv
433.438 175.483 436.276 173.974 436.58 171.413 cv
436.884 168.853 436.078 166.65 434.779 166.496 cv
433.48 166.342 432.178 168.292 431.874 170.852 cv
cp
.670588 .227451 .176471 rgb
f
436.096 167.62 mo
435.951 167.69 436.23 168.892 436.242 169.023 cv
436.325 169.969 436.31 171.064 435.982 171.969 cv
435.679 172.809 435.065 173.504 434.342 174.011 cv
433.841 174.361 432.694 175.068 432.047 174.739 cv
431.865 174.762 432.336 170.676 432.394 170.274 cv
432.502 169.521 432.694 168.779 432.998 168.081 cv
433.046 167.971 433.554 167.157 433.454 167.046 cv
433.379 166.909 432.896 167.403 432.861 167.441 cv
432.345 167.997 431.992 168.704 431.759 169.421 cv
431.259 170.903 430.867 172.813 430.855 174.38 cv
430.889 175.532 431.75 176.022 432.82 175.845 cv
434.757 175.447 436.572 173.9 436.955 171.91 cv
437.122 170.968 437.073 169.931 436.829 169.007 cv
436.809 168.923 436.303 167.458 436.096 167.62 cv
435.948 167.691 436.207 167.533 436.096 167.62 cv
cp
.478431 .164706 .129412 rgb
f
415.271 164.169 mo
413.195 162.89 411.148 161.663 408.762 160.421 cv
408.056 160.056 407.744 160.21 408.082 160.769 cv
408.172 160.764 411.014 164.622 410.998 166.113 cv
411.014 167.604 408.172 171.463 408.082 171.457 cv
407.744 172.017 408.056 172.17 408.762 171.807 cv
408.895 171.803 413.951 169.143 415.271 168.059 cv
416.882 166.84 417.818 165.729 415.271 164.169 cv
cp
.839216 .290196 .219608 rgb
f
408.158 159.223 mo
407.703 159.223 407.307 159.444 407.097 159.815 cv
406.93 160.112 406.816 160.608 407.227 161.286 cv
407.279 161.374 407.346 161.452 407.42 161.519 cv
408.029 162.218 410.008 165.245 409.998 166.103 cv
410.008 166.981 408.031 170.009 407.421 170.707 cv
407.346 170.773 407.279 170.852 407.227 170.94 cv
406.816 171.619 406.93 172.114 407.097 172.41 cv
407.307 172.781 407.703 173.003 408.158 173.003 cv
408.471 173.003 408.817 172.902 409.219 172.696 cv
409.211 172.679 li
410.697 172.074 415.109 169.485 415.906 168.832 cv
416.935 168.054 417.906 167.146 417.848 165.935 cv
417.785 164.678 416.646 163.839 415.794 163.317 cv
413.518 161.914 411.529 160.733 409.224 159.533 cv
408.818 159.323 408.471 159.223 408.158 159.223 cv
408.158 159.223 li
cp
408.158 160.223 mo
408.298 160.223 408.504 160.286 408.762 160.421 cv
411.148 161.663 413.195 162.89 415.271 164.169 cv
417.818 165.729 416.882 166.84 415.271 168.059 cv
413.951 169.143 408.895 171.803 408.762 171.807 cv
408.504 171.939 408.299 172.003 408.158 172.003 cv
407.915 172.003 407.868 171.812 408.082 171.457 cv
408.082 171.457 li
408.177 171.457 411.014 167.603 410.998 166.113 cv
411.014 164.622 408.176 160.769 408.082 160.769 cv
408.082 160.769 li
407.868 160.415 407.915 160.223 408.158 160.223 cv
408.158 160.223 li
cp
.478431 .164706 .129412 rgb
f
408.688 161.552 mo
408.688 161.554 408.689 161.554 408.689 161.555 cv
410.654 162.612 414.843 164.31 415.271 164.169 cv
413.195 162.89 411.148 161.663 408.762 160.421 cv
408.056 160.056 407.744 160.21 408.082 160.769 cv
408.082 160.77 408.342 161.08 408.688 161.552 cv
cp
1 .658824 .509804 rgb
f
429.402 160.28 mo
424.383 160.78 420.243 162.092 417.927 163.505 cv
417.743 163.601 417.072 164.187 416.964 164.337 cv
416.964 164.337 li
415.977 165.736 416.385 167.896 417.927 168.722 cv
420.334 169.969 424.385 171.441 429.402 171.945 cv
437.88 172.884 445.611 170.36 445.617 166.113 cv
445.611 161.864 437.88 159.343 429.402 160.28 cv
cp
.929412 .435294 .372549 rgb
f
432.91 159.085 mo
431.717 159.085 430.499 159.152 429.292 159.286 cv
424.529 159.761 420.082 161.019 417.406 162.651 cv
417.406 162.651 li
417.062 162.86 416.344 163.486 416.152 163.753 cv
415.488 164.694 415.268 165.896 415.542 167.057 cv
415.805 168.164 416.502 169.093 417.455 169.604 cv
419.009 170.408 423.248 172.332 429.303 172.94 cv
430.5 173.073 431.718 173.141 432.912 173.141 cv
440.976 173.141 446.611 170.252 446.617 166.114 cv
446.611 161.975 440.975 159.085 432.91 159.085 cv
432.91 159.085 li
cp
432.91 160.085 mo
439.898 160.085 445.612 162.462 445.617 166.113 cv
445.612 169.764 439.9 172.141 432.912 172.141 cv
431.771 172.141 430.593 172.077 429.402 171.945 cv
424.385 171.441 420.334 169.969 417.927 168.722 cv
416.385 167.896 415.977 165.736 416.964 164.337 cv
417.072 164.187 417.743 163.601 417.927 163.505 cv
420.243 162.092 424.383 160.78 429.402 160.28 cv
430.593 160.147 431.769 160.085 432.91 160.085 cv
432.91 160.085 li
cp
.478431 .164706 .129412 rgb
f
445.617 166.113 mo
445.617 162.56 440.008 160.095 433.106 160.115 cv
433.106 160.115 433.106 160.115 433.105 160.115 cv
433.879 160.609 434.411 161.1 434.564 161.501 cv
440.242 162.06 444.495 164.441 444.453 167.487 cv
444.445 168.101 444.236 168.686 443.891 169.235 cv
443.891 169.235 443.892 169.235 443.893 169.235 cv
444.981 168.332 445.617 167.261 445.617 166.113 cv
cp
1 .658824 .509804 rgb
f
417.927 163.505 mo
417.743 163.601 417.072 164.187 416.964 164.337 cv
416.729 164.671 416.576 165.051 416.496 165.443 cv
418.137 164.218 421.037 162.911 422.588 162.161 cv
422.93 161.995 423.213 161.693 423.439 161.342 cv
421.139 161.947 419.234 162.707 417.927 163.505 cv
cp
f
440.37 165.383 mo
440.37 167.487 438.666 169.192 436.561 169.192 cv
434.458 169.192 432.753 167.487 432.753 165.383 cv
432.753 163.279 434.458 161.574 436.561 161.574 cv
438.666 161.574 440.37 163.279 440.37 165.383 cv
cp
.670588 .227451 .176471 rgb
f
440.216 164.928 mo
440.216 166.689 438.79 168.116 437.028 168.116 cv
435.269 168.116 433.842 166.689 433.842 164.928 cv
433.842 163.168 435.269 161.742 437.028 161.742 cv
438.79 161.742 440.216 163.168 440.216 164.928 cv
cp
1 1 1 rgb
f
438.517 164.928 mo
438.517 165.75 437.851 166.416 437.028 166.416 cv
436.208 166.416 435.542 165.75 435.542 164.928 cv
435.542 164.107 436.208 163.441 437.028 163.441 cv
437.851 163.441 438.517 164.107 438.517 164.928 cv
cp
0 0 0 rgb
f
439.061 163.814 mo
439.061 164.379 438.604 164.836 438.04 164.836 cv
437.476 164.836 437.019 164.379 437.019 163.814 cv
437.019 163.25 437.476 162.794 438.04 162.794 cv
438.604 162.794 439.061 163.25 439.061 163.814 cv
cp
1 1 1 rgb
f
427.706 170.996 mo
426.489 173.271 425.166 174.644 426.321 175.261 cv
427.474 175.88 430.667 175.509 431.884 173.235 cv
433.101 170.962 433.153 168.618 432 168 cv
430.847 167.383 428.923 168.724 427.706 170.996 cv
cp
.839216 .290196 .219608 rgb
f
432.815 169.527 mo
432.655 169.54 432.478 170.76 432.44 170.887 cv
432.173 171.798 431.759 172.813 431.124 173.535 cv
430.535 174.206 429.711 174.63 428.852 174.838 cv
428.258 174.981 426.933 175.222 426.449 174.68 cv
426.272 174.634 428.2 171.001 428.4 170.648 cv
428.776 169.986 429.226 169.366 429.764 168.826 cv
429.848 168.741 430.617 168.169 430.565 168.029 cv
430.545 167.874 429.915 168.158 429.869 168.181 cv
429.186 168.51 428.6 169.04 428.121 169.622 cv
427.114 170.82 426.054 172.456 425.472 173.91 cv
425.082 174.995 425.705 175.766 426.767 175.99 cv
428.715 176.327 430.969 175.549 432.052 173.835 cv
432.551 173.019 432.883 172.035 432.993 171.086 cv
433.004 171 433.067 169.451 432.815 169.527 cv
432.652 169.54 432.951 169.486 432.815 169.527 cv
cp
.478431 .164706 .129412 rgb
f
422.636 161.681 mo
422.59 161.709 422.555 161.732 422.518 161.755 cv
424.743 161.08 427.344 160.646 430.15 160.575 cv
432.285 160.521 434.316 160.683 436.164 161.007 cv
435.531 158.979 427.559 154.468 423.043 154.599 cv
423.179 157.479 424.653 160.378 422.636 161.681 cv
cp
.839216 .290196 .219608 rgb
f
433.83 160.705 mo
434.633 160.779 435.416 160.876 436.164 161.007 cv
435.609 159.233 429.438 155.558 424.878 154.753 cv
424.227 154.639 423.607 154.581 423.043 154.599 cv
423.064 155.058 423.122 155.516 423.192 155.97 cv
426.7 156.356 431.491 158.757 433.83 160.705 cv
cp
1 .658824 .509804 rgb
f
435.803 160.005 mo
435.438 159.475 434.826 158.854 434.02 158.218 cv
432.406 156.952 430.031 155.562 427.245 154.641 cv
425.789 154.171 424.358 153.882 423.025 153.951 cv
423 153.952 li
422.984 153.953 li
422.715 153.979 422.517 154.284 422.541 154.629 cv
422.628 155.867 422.878 156.905 423.045 157.806 cv
423.219 158.704 423.32 159.473 423.255 160.058 cv
423.117 161.232 422.421 161.605 422.518 161.755 cv
422.541 161.814 422.711 161.806 422.99 161.624 cv
423.26 161.448 423.668 161.013 423.847 160.243 cv
424.182 158.862 423.749 157.127 423.592 155.28 cv
424.645 155.36 425.798 155.628 426.99 156.014 cv
429.66 156.896 432.018 158.102 433.654 159.097 cv
434.473 159.597 435.111 160.058 435.52 160.415 cv
435.938 160.769 436.09 161.034 436.164 161.007 cv
436.242 160.987 436.18 160.529 435.803 160.005 cv
cp
.478431 .164706 .129412 rgb
f
184.483 69.4409 mo
187.269 70.355 189.946 72.3076 192.225 74.0679 cv
191.62 69.5566 191.013 65.0464 190.418 60.5337 cv
186.131 66.8677 179.823 63.8057 173.475 64.1372 cv
176.669 66.668 180.92 67.5356 184.483 69.4409 cv
184.888 69.5732 184.483 69.4409 184.483 69.4409 cv
cp
269.478 118.669 mo
273.429 118.669 275.234 121.665 277.034 124.624 cv
277.426 123.641 277.828 122.661 278.247 121.689 cv
278.89 120.199 277.849 119.631 277.445 118.128 cv
277.125 116.933 277.042 115.652 276.872 114.43 cv
272.986 115.49 268.832 117.775 264.766 117.775 cv
260.765 117.775 258.615 115.045 256.992 111.8 cv
255.91 109.639 255.928 110.33 255.522 112.188 cv
255.073 114.135 254.402 115.805 252.825 117.13 cv
255.921 117.375 259.021 118.111 261.743 119.643 cv
262.291 119.951 262.819 120.289 263.328 120.658 cv
264.537 121.537 264.338 120.738 265.406 119.975 cv
266.588 119.129 268.026 118.669 269.478 118.669 cv
271.905 118.669 268.971 118.669 269.478 118.669 cv
cp
234.266 170.693 mo
219.861 170.693 207.025 160.295 202.269 146.994 cv
199.863 140.268 199.408 132.756 201.568 125.902 cv
201.801 125.162 202.064 124.434 202.356 123.716 cv
203.028 122.068 202.427 122.65 201.198 121.798 cv
199.93 120.918 198.943 119.661 198.389 118.221 cv
197.536 116.004 197.517 113.523 197.22 111.191 cv
191.232 119.048 181.135 122.967 171.458 123.307 cv
163.992 123.568 145.394 121.582 146.199 110.71 cv
146.374 108.349 147.122 105.8 147.705 103.513 cv
148.377 100.875 148.482 97.7974 149.763 95.3418 cv
151.955 91.1406 157.623 89.9116 161.371 92.813 cv
165.573 96.0669 170.318 97.937 174.919 94.2764 cv
172.664 93.2998 170.021 93.3179 167.647 92.6899 cv
164.385 91.8271 161.242 90.5137 158.375 88.7314 cv
152.817 85.2778 148.55 80.1494 145.688 74.3018 cv
142.301 67.376 141.868 61.0698 144.208 53.7148 cv
144.757 51.9907 146.623 54.2969 147.314 53.1016 cv
148.215 51.5444 149.115 49.9873 150.016 48.4307 cv
150.853 49.0503 151.69 49.6694 152.528 50.2891 cv
153.589 47.7085 153.305 47.6221 155.924 48.5605 cv
156.332 46.3022 156.207 46.4121 158.501 46.4019 cv
158.01 43.5239 158.212 43.9087 161.034 43.2974 cv
160.486 42.1445 159.938 40.9917 159.391 39.8389 cv
161.106 39.2788 162.821 38.7192 164.537 38.1592 cv
164.965 38.019 164.347 36.4478 164.568 36.0928 cv
164.824 35.6831 166.747 35.3892 167.222 35.2358 cv
170.736 34.1016 174.569 33.6118 178.255 33.7686 cv
180.624 33.8687 182.981 34.2686 185.235 35.0117 cv
186.328 35.3721 187.395 35.8115 188.424 36.3271 cv
189.988 37.1113 189.529 36.4814 190.632 35.4424 cv
193.901 32.3623 200.819 32.3979 205.102 31.6841 cv
209.997 30.8677 216.047 29.8804 218.57 35.4966 cv
221.772 33.4727 226.231 34.043 229.763 33.0796 cv
235.147 31.6113 242.718 31.6699 243.9 38.6533 cv
248.462 32.251 255.836 36.229 258.426 41.9189 cv
259.697 44.7134 261.23 47.5093 262.285 50.3921 cv
265.699 55.9404 267.92 62.6235 270.656 68.5435 cv
270.105 62.0444 268.987 55.5376 268.102 49.0728 cv
267.323 43.3892 269.042 38.8247 275.147 37.522 cv
278.345 36.8398 281.552 36.2949 284.789 35.8667 cv
288.491 35.3765 292.12 35.1743 295.797 35.438 cv
299.781 35.7231 303.811 36.4971 307.425 38.2515 cv
308.811 38.9238 310.135 40.5752 311.258 39.4702 cv
312.718 38.0317 314.595 37.4204 316.575 37.1006 cv
320.696 36.4346 324.848 35.9468 328.956 35.21 cv
334.585 34.2007 342.718 32.7852 344.056 40.6309 cv
346.765 36.376 348.763 30.3071 354.743 30.3071 cv
360.735 30.3071 362.271 35.6372 363.946 40.2422 cv
365.412 44.272 366.812 48.3369 368.401 52.3179 cv
370.911 58.5991 367.464 62.1382 363.868 66.8076 cv
361.476 69.9141 358.834 72.8315 356.429 75.936 cv
354.889 77.9238 353.739 78.4253 356.015 80.543 cv
357.727 82.1372 359.181 84.1001 360.692 85.8877 cv
362.333 87.8276 364.21 89.5786 365.741 91.6064 cv
368.889 95.7725 366.638 100.45 363.659 103.912 cv
361.058 106.889 358.931 111.243 355.111 112.832 cv
352.356 113.979 349.092 113.393 346.898 111.375 cv
345.79 115.313 341.583 116.989 338.289 118.797 cv
335.33 120.421 332.692 122.699 329.119 122.573 cv
321.201 122.573 320.297 111.916 319.606 105.903 cv
318.26 107.434 316.971 109.265 315.47 110.629 cv
312.001 113.786 306.494 113.865 303.521 109.963 cv
304.002 113.602 302.416 117.176 298.908 118.656 cv
297.597 119.303 293.782 120.281 293.592 121.484 cv
300.913 116.534 310.74 118.723 315.861 125.688 cv
317.539 127.97 318.716 130.59 319.548 133.289 cv
319.991 134.731 320.454 136.226 320.32 137.755 cv
320.254 138.498 320.075 139.214 319.78 139.9 cv
319.249 141.138 319.475 141.367 319.642 142.667 cv
319.957 145.109 320.633 148.073 320.117 150.513 cv
319.383 153.98 316.031 156.049 312.984 157.314 cv
307.356 159.65 300.875 159.984 295.459 156.908 cv
292.893 155.453 292.999 154.905 290.233 155.535 cv
288.726 155.879 287.116 156.415 285.557 156.415 cv
283.04 158.307 279.465 158.252 276.995 156.292 cv
275.711 157.336 274.069 157.366 273.013 158.521 cv
271.943 159.689 270.485 160.473 268.92 160.715 cv
265.602 161.23 262.189 160.806 259.142 159.37 cv
256.794 158.265 252.708 160.217 249.757 159.775 cv
251.77 168.902 241.047 170.693 234.266 170.693 cv
225.818 170.693 234.518 170.693 234.266 170.693 cv
cp
1 1 1 rgb
f
254.688 91.4473 mo
254.867 91.4473 255.076 91.3965 255.314 91.3965 cv
255.434 91.3965 255.561 91.3398 255.695 91.3306 cv
256.945 91.4658 li
257.046 91.459 257.14 91.4424 257.225 91.4424 cv
257.482 91.4424 257.671 91.4663 257.792 91.5269 cv
258.155 91.3618 li
258.048 90.7974 257.846 90.1509 257.55 89.4248 cv
257.349 88.6987 li
257.026 87.2466 li
256.811 86.6821 256.636 86.0366 256.501 85.3105 cv
256.341 84.7056 li
255.695 82.6494 li
255.535 82.1655 li
255.171 80.4321 li
255.051 80.1094 li
253.559 74.7471 li
253.518 74.3838 li
253.236 74.061 li
253.196 75.1499 li
252.913 76.521 li
252.954 76.8838 li
252.752 77.6499 li
252.47 80.3916 li
252.416 80.7949 252.349 81.0903 252.269 81.2788 cv
252.309 81.7627 li
251.824 85.1489 li
251.744 85.7539 li
251.556 86.668 251.435 87.4614 251.381 88.1333 cv
251.139 89.5039 li
251.059 90.23 li
250.978 91.1011 li
252.833 91.4473 li
254.688 91.4473 li
cp
.129412 .235294 .360784 rgb
f
317.496 84.8862 mo
315.862 82.2998 314.152 79.7578 312.479 77.1953 cv
311.53 75.7417 310.745 74.1494 309.688 72.769 cv
311.539 69.207 313.172 65.4888 314.192 61.5967 cv
316.072 69.9375 317.135 78.5186 318.782 86.917 cv
318.354 86.2402 317.924 85.5635 317.496 84.8862 cv
317.422 84.77 317.496 84.8862 317.496 84.8862 cv
cp
238.097 116.496 mo
241.617 116.463 245.607 117.132 249.078 116.284 cv
252.423 115.467 253.181 112.156 253.479 109.19 cv
254.026 108.094 253.219 108.062 254.666 107.959 cv
255.726 107.885 257.249 107.359 257.919 108.226 cv
259.885 109.658 259.676 113.043 262.021 114.486 cv
264.429 115.97 266.896 114.975 269.307 114.211 cv
272.479 113.205 275.657 111.885 278.9 111.159 cv
279.184 113.007 279.466 114.858 279.724 116.714 cv
279.824 117.439 280.024 118.098 280.393 118.732 cv
280.726 119.303 281.149 119.795 281.665 120.207 cv
281.321 120.941 280.987 121.682 280.663 122.428 cv
279.537 125.021 278.529 127.665 277.562 130.322 cv
276.194 128.073 274.826 125.824 273.458 123.576 cv
270.996 119.527 265.136 121.148 264.941 125.84 cv
261.854 121.444 256.613 119.76 251.443 119.564 cv
249.07 119.475 246.506 119.499 244.195 120.107 cv
241.032 120.94 240.625 124.493 239.866 127.161 cv
238.452 126.231 236.89 126.301 235.369 126.873 cv
236.377 123.885 239.521 119.693 238.097 116.496 cv
238.097 116.496 238.571 117.561 238.097 116.496 cv
cp
185.518 72.6958 mo
182.383 70.9482 178.928 69.8037 175.677 68.3052 cv
173.784 67.4326 171.089 66.1914 170.278 64.0938 cv
169.345 61.6802 173.667 61.6133 174.931 61.5474 cv
178.163 61.3789 182.256 63.1514 185.317 61.9761 cv
187.859 61 191.129 55.7373 192.124 53.0039 cv
193.485 62.2588 194.43 71.6357 195.679 80.9185 cv
192.953 77.4697 189.349 74.7993 185.518 72.6958 cv
185.486 72.6782 189.847 75.0723 185.518 72.6958 cv
cp
366.521 54.375 mo
365.087 50.7891 363.79 47.1548 362.469 43.5239 cv
361.341 40.4238 360.476 35.2061 357.469 33.4995 cv
352.137 30.4741 349.396 36.7534 347.142 40.3589 cv
345.397 43.1484 343.529 45.9575 341.991 48.8682 cv
341.892 46.1978 342.317 42.1152 341.139 39.6597 cv
339.216 35.6543 333.719 36.6089 330.188 37.4897 cv
327.313 37.981 324.426 38.4502 321.541 38.8945 cv
317.747 39.479 312.072 39.4419 311.498 44.3843 cv
304.934 36.8242 291.964 36.8071 282.87 38.625 cv
280.688 39.0615 278.495 39.375 276.314 39.8398 cv
271.316 40.9067 269.916 43.8306 270.582 48.6782 cv
272.232 60.7095 273.767 72.7632 275.381 84.7905 cv
269.31 71.502 263.116 58.2847 257.071 45.0029 cv
256.048 42.7534 255.075 39.8926 252.828 38.5981 cv
249.334 36.5835 245.685 39.0693 244.966 42.6587 cv
244.13 46.8423 243.197 51 242.291 55.1763 cv
240.789 62.0991 239.406 69.0376 237.919 75.9644 cv
238.645 69.3657 239.308 62.7637 239.992 56.1602 cv
240.54 50.8804 241.498 45.4668 241.498 40.1558 cv
241.498 31.959 230.447 35.5254 225.623 36.2749 cv
222.064 36.6499 217.502 37.481 217.476 42.0161 cv
216.94 45.48 217.862 49.3281 217.144 52.7476 cv
217.047 49.3799 216.952 46.0122 216.856 42.6445 cv
216.747 38.835 216.854 33.4624 211.504 33.4624 cv
208.769 33.2642 205.632 34.1206 202.948 34.665 cv
198.827 35.501 191.118 34.9014 190.716 40.71 cv
184.75 36.1582 177.142 35.4697 170.003 37.083 cv
167.805 37.5796 167.127 37.4331 167.208 39.7148 cv
167.229 40.3096 163.562 41.1182 162.883 41.3398 cv
163.475 42.5864 164.067 43.8335 164.66 45.0806 cv
163.469 45.3389 162.277 45.5967 161.086 45.8545 cv
160.801 45.917 161.402 48.4731 161.475 48.8989 cv
158.262 48.9131 158.439 48.7622 157.869 51.9243 cv
157.366 51.7441 155.431 50.6943 154.994 50.894 cv
154.462 51.1362 153.87 53.6265 153.625 54.2222 cv
152.677 53.5215 151.729 52.8208 150.782 52.1201 cv
150.023 53.4321 149.264 54.7441 148.505 56.0566 cv
148.325 56.3691 146.77 55.9038 146.412 55.8467 cv
145.721 55.7368 145.194 60.1035 145.116 60.7886 cv
144.381 67.2202 147.677 73.9268 151.459 78.9678 cv
155.067 83.7769 159.991 87.4229 165.657 89.4414 cv
169.349 90.7578 176.329 90.4399 179.169 93.6821 cv
175.975 97.2163 171.772 99.8853 166.87 98.5757 cv
162.464 97.3989 157.028 90.6396 152.726 95.4458 cv
151.077 97.2876 150.908 100.471 150.388 102.795 cv
149.946 104.768 149.58 106.76 149.132 108.735 cv
146.573 120.032 166.368 121.418 173.853 120.623 cv
184.75 119.464 194.786 113.711 198.61 103.096 cv
199.629 108.204 198.445 122.102 206.818 120.559 cv
197.947 134.244 204.146 152.934 216.538 162.116 cv
222.87 166.809 230.708 169.021 238.542 167.865 cv
241.679 167.402 246.718 166.791 247.445 162.98 cv
247.868 160.77 246.672 158.104 246 156.039 cv
248.382 157.172 251.007 157.619 253.625 157.332 cv
255.226 157.156 256.796 156.707 258.234 155.977 cv
259.902 157.094 261.786 157.877 263.766 158.219 cv
266.384 158.672 270.013 158.741 271.628 156.219 cv
272.785 154.41 275.666 155.246 276.748 152.518 cv
277.612 153.407 278.443 154.463 279.616 154.956 cv
280.795 155.451 282.161 155.415 283.313 154.856 cv
283.841 154.6 284.301 154.252 284.695 153.816 cv
285.323 153.941 285.95 153.934 286.577 153.793 cv
288.534 153.557 291.518 151.834 293.41 152.237 cv
297.09 155.848 302.052 157.223 307.077 156.39 cv
311.216 155.705 318.198 153.563 317.702 148.261 cv
317.538 146.506 317.38 144.749 317.154 143.002 cv
316.959 141.483 316.029 141.047 316.941 139.824 cv
317.734 138.762 318.02 137.379 317.711 136.09 cv
316.678 131.785 314.827 127.402 311.372 124.482 cv
305.665 119.658 297.151 120.534 292.181 126.008 cv
291.628 123.898 291.243 121.656 290.466 119.619 cv
290.788 119.045 293.672 118.246 294.164 117.967 cv
295.202 117.498 296.252 117.053 297.303 116.609 cv
302.712 114.326 301.017 106.504 300.443 101.635 cv
302.786 105.039 306.442 111.872 311.343 110.237 cv
315.335 108.906 318.374 103.188 321.19 100.199 cv
321.869 103.913 322.348 107.701 323.148 111.39 cv
324.009 115.709 324.895 121.084 330.778 119.972 cv
333.938 119.373 337.306 116.375 340.137 114.841 cv
342.538 113.539 344.745 112.147 344.675 109.038 cv
344.635 107.328 344.597 105.617 344.557 103.907 cv
346.794 106.889 348.646 111.793 353.259 110.791 cv
356.388 110.11 358.362 106.52 360.189 104.188 cv
362.686 101 367.204 96.5083 363.261 92.5718 cv
361.054 90.3516 359.271 87.688 357.055 85.4785 cv
356.078 84.3579 355.051 83.2734 354.069 82.1621 cv
352.931 80.874 350.559 79.3354 351.747 77.8174 cv
353.643 75.3994 355.523 72.9688 357.484 70.6055 cv
359.233 68.4961 361.007 66.4087 362.679 64.2368 cv
364.943 61.2979 368.186 58.5288 366.521 54.375 cv
366.521 54.375 366.769 54.9941 366.521 54.375 cv
cp
f
300.123 137.426 mo
300.123 137.427 300.123 137.427 300.123 137.427 cv
300.123 137.427 300.061 137.427 300.061 137.426 cv
300.061 137.429 300.029 137.431 300.03 137.434 cv
306.512 135.215 li
305.849 133.818 li
305.249 132.22 304.081 131.102 302.658 131.102 cv
302.638 131.102 302.612 131.102 302.59 131.103 cv
302.024 131.117 301.418 131.307 300.793 131.711 cv
299.098 132.808 299.216 135.09 300.058 137.416 cv
300.058 137.419 300.123 137.423 300.123 137.426 cv
cp
f
299.993 137.416 mo
299.751 136.75 299.649 136.471 299.627 136.41 cv
299.651 136.479 299.95 137.299 299.993 137.416 cv
cp
f
252.162 137.293 mo
252.131 137.293 252.101 137.293 252.069 137.295 cv
252.001 137.297 251.932 137.301 251.863 137.305 cv
249.149 137.514 247.315 140.021 248.092 142.816 cv
248.608 144.678 250.127 145.758 251.791 145.758 cv
251.822 145.758 251.853 145.758 251.884 145.758 cv
252.635 145.738 253.414 145.5 254.139 145.014 cv
255.454 144.129 255.944 142.504 255.701 140.77 cv
255.434 138.854 254.145 137.293 252.162 137.293 cv
cp
f
291.5 53.2554 mo
290.774 53.3364 290.089 53.5918 289.443 54.022 cv
289.604 54.6133 289.686 55.2988 289.686 56.0786 cv
289.806 56.8442 li
290.049 60.3926 li
290.21 61.3335 290.291 62.1396 290.291 62.8115 cv
290.411 63.457 li
290.532 65.1104 li
290.654 65.7554 li
290.774 66.4004 li
296.069 65.9702 298.476 63.5513 297.991 59.1426 cv
297.158 55.5674 294.993 53.6055 291.5 53.2554 cv
cp
f
299.997 137.424 mo
299.995 137.423 299.993 137.418 299.993 137.416 cv
299.993 137.416 li
299.993 137.419 299.995 137.422 299.997 137.424 cv
cp
299.997 137.426 mo
299.997 137.426 li
299.995 137.423 299.993 137.419 299.993 137.416 cv
299.95 137.299 299.651 136.479 299.627 136.41 cv
299.623 136.4 299.623 136.396 299.623 136.396 cv
299.623 136.396 299.626 136.407 299.627 136.41 cv
299.649 136.471 299.751 136.75 299.993 137.416 cv
299.152 135.09 299.097 132.808 300.792 131.711 cv
301.417 131.307 302.022 131.117 302.588 131.103 cv
304.04 131.067 305.231 132.194 305.841 133.818 cv
306.496 135.215 li
299.998 137.434 li
299.998 137.431 299.997 137.429 299.997 137.426 cv
299.997 137.426 li
cp
304.588 146.976 mo
304.378 146.98 304.168 146.977 303.957 146.963 cv
301.293 146.799 300.189 144.525 300.489 141.316 cv
304.684 139.684 309.056 138.496 313.345 137.137 cv
311.861 130.949 308.63 125.64 302.268 125.795 cv
301.47 125.814 300.622 125.918 299.724 126.119 cv
288.087 130.751 290.917 150.49 302.699 152.104 cv
303.15 152.166 303.651 152.188 304.19 152.176 cv
307.215 152.102 311.337 150.893 313.269 149.053 cv
313.269 149.053 312.838 144.396 312.646 143.168 cv
310.054 145.279 307.372 146.908 304.588 146.976 cv
cp
299.997 137.427 mo
299.997 137.427 299.997 137.427 299.997 137.426 cv
299.997 137.426 li
299.997 137.427 299.997 137.427 299.997 137.427 cv
299.997 137.427 li
cp
254.139 145.014 mo
253.414 145.5 252.635 145.738 251.884 145.758 cv
250.185 145.799 248.618 144.712 248.092 142.816 cv
247.315 140.021 249.149 137.514 251.863 137.305 cv
251.932 137.301 252.001 137.297 252.069 137.295 cv
254.105 137.245 255.429 138.824 255.701 140.77 cv
255.944 142.504 255.454 144.129 254.139 145.014 cv
cp
286.279 121.195 mo
286.139 121.227 li
283.129 127.398 281.054 134.201 278.564 140.608 cv
269.478 125.668 li
266.904 148.724 li
264.499 148.439 262.665 146.978 261.405 144.328 cv
262.199 138.955 264.809 132.848 260.923 127.959 cv
258.264 124.615 253.673 123.938 249.486 124.041 cv
248.482 124.064 247.501 124.134 246.576 124.221 cv
246.071 124.365 245.658 124.441 245.338 124.449 cv
244.781 126.201 244.308 127.971 243.801 129.738 cv
244.749 129.549 245.641 129.244 246.612 129.218 cv
246.917 129.079 247.291 129 247.649 128.99 cv
247.698 128.99 247.745 128.99 247.792 128.991 cv
248.397 128.92 248.966 128.879 249.501 128.865 cv
253.773 128.762 255.786 130.519 255.541 134.139 cv
255.356 134.707 li
253.563 133.885 251.865 133.492 250.265 133.531 cv
248.078 133.585 246.068 134.444 244.239 136.107 cv
241.377 139.922 241.057 143.835 243.281 147.846 cv
245.35 150.863 247.989 152.55 251.196 152.905 cv
251.561 152.928 251.917 152.936 252.263 152.928 cv
254.744 152.867 256.814 151.992 258.475 150.301 cv
260.79 152.793 263.434 154.002 266.402 153.93 cv
266.874 153.92 267.356 153.875 267.847 153.799 cv
268.103 152.843 268.383 151.891 268.705 150.955 cv
272.574 150.861 li
273.854 143.094 li
281.354 150.816 li
284.253 140.046 li
285.582 149.416 li
293.219 147.677 li
286.279 121.195 li
cp
221.951 115.475 mo
225.944 115.378 229.965 116.325 234.01 118.316 cv
232.948 121.012 231.565 123.767 230.766 126.555 cv
228.945 125.282 227.3 124.762 225.838 124.798 cv
220.4 124.93 217.502 132.758 217.556 138.279 cv
217.63 145.723 222.18 152.952 229.884 152.765 cv
230.115 152.76 230.348 152.748 230.585 152.729 cv
230.696 152.67 230.787 152.555 230.858 152.383 cv
230.006 149.619 228.865 145.889 228.795 143.004 cv
228.624 142.923 li
227.456 143.643 226.163 144.189 224.942 144.82 cv
223.966 142.314 222.681 139.705 222.045 137.098 cv
227.131 134.98 232.23 132.823 237.394 130.909 cv
238.387 133.584 239.492 136.26 240.3 138.998 cv
239.195 139.941 237.793 140.666 236.577 141.46 cv
238.575 147.736 240.613 153.992 242.652 160.254 cv
242.817 160.865 243.021 161.502 243.036 162.138 cv
240.245 163.119 237.509 163.621 234.854 163.686 cv
227.81 163.857 221.343 160.948 215.981 155.764 cv
205.568 145.697 203.648 127.836 214.26 118.796 cv
216.021 117.297 217.875 116.172 220.336 115.572 cv
220.874 115.521 221.412 115.488 221.951 115.475 cv
221.951 115.475 li
cp
1 1 1 rgb
f
182.997 77.2871 mo
177.494 73.7578 169.423 73.2725 165.867 67.0757 cv
162.303 60.8633 170.047 54.6431 176.123 56.3003 cv
177.438 56.6592 182.484 57.4565 183.603 56.7637 cv
185.617 53.9658 187.276 50.855 189.056 47.9136 cv
191.138 44.4712 181.037 41.769 178.875 41.5723 cv
174.724 41.1948 170.828 42.2129 166.929 43.4727 cv
167.527 44.5181 168.125 45.564 168.724 46.6099 cv
167.958 46.8921 165.128 47.4189 164.75 48.0742 cv
164.371 48.729 165.326 51.4443 165.463 52.248 cv
164.648 52.252 161.807 51.7808 161.228 52.2671 cv
160.649 52.7529 160.621 55.6328 160.477 56.4351 cv
159.708 56.1597 157.202 54.7476 156.49 55.0068 cv
155.779 55.2656 154.766 57.9585 154.354 58.6631 cv
153.412 57.8784 152.47 57.0938 151.527 56.3091 cv
148.554 64.0723 151.993 72.1108 157.399 77.9702 cv
159.753 80.5215 162.63 82.5444 165.823 83.9072 cv
169.125 85.3164 172.583 85.4526 175.941 86.4395 cv
178.638 87.2324 181.796 88.3789 183.501 90.7236 cv
186.324 94.605 182.729 97.9697 179.695 100.368 cv
172.271 106.236 163.696 104.412 156.627 98.939 cv
155.816 102.401 155.157 105.84 154.375 109.299 cv
153.953 111.162 153.7 111.672 155.719 112.5 cv
158.208 113.521 160.782 114.346 163.419 114.883 cv
168.474 115.915 173.725 115.823 178.679 114.33 cv
187.659 111.623 194.131 105.313 195.002 95.6436 cv
195.762 87.2207 189.928 81.0908 182.997 77.2871 cv
182.997 77.2871 195.093 83.9263 182.997 77.2871 cv
cp
.956863 .729412 .168627 rgb
f
236.261 41.9258 mo
236.261 40.2769 236.637 39.7456 234.81 40.1519 cv
233.725 40.3926 232.591 40.4917 231.503 40.6353 cv
229.318 40.9243 227.181 41.3638 224.994 41.6748 cv
224.019 41.8135 223.153 41.8262 222.713 42.4497 cv
222.299 44.7583 222.681 47.1348 222.431 49.4658 cv
222.371 51.6392 222.27 53.7686 222.27 55.9253 cv
222.27 60.7046 222.075 65.4966 221.966 70.2773 cv
221.935 71.6543 221.904 73.0308 221.873 74.4072 cv
221.86 74.9478 220.661 74.96 220.212 75.0688 cv
217.672 75.6875 215.132 76.3062 212.593 76.9243 cv
212.231 64.2148 211.869 51.5049 211.507 38.7954 cv
211.497 38.4526 204.856 39.6216 204.119 39.7715 cv
202.44 40.1118 200.73 40.1738 199.06 40.5913 cv
198.083 40.8354 196.958 41.0786 195.94 41.0786 cv
195.69 41.3662 195.901 42.9678 195.982 43.3955 cv
197.443 51.0708 198.022 58.9805 199.061 66.7466 cv
200.28 75.8662 201.446 84.9902 202.747 94.0889 cv
203.75 101.099 203.896 108.547 205.617 115.43 cv
206.411 115.43 212.593 110.231 212.593 109.472 cv
212.593 105.902 212.754 102.375 212.754 98.8066 cv
212.754 94.813 212.556 90.5522 213.072 86.5918 cv
213.236 85.3325 213.11 85.2256 214.212 85.0381 cv
215.276 84.8564 216.34 84.6753 217.404 84.4941 cv
219.12 84.2017 220.836 83.9097 222.552 83.6172 cv
222.552 88.4932 222.884 93.6245 222.375 98.4702 cv
222.121 100.875 222.27 103.33 222.27 105.746 cv
222.27 106.75 228.412 107.768 229.285 107.85 cv
230.966 96.1899 231.724 84.3115 233.028 72.5381 cv
234.157 62.3555 234.781 52.0601 236.261 41.9258 cv
236.261 41.9258 li
cp
f
257.792 91.52 mo
256.248 90.7461 253.615 91.3398 251.906 91.1172 cv
250.706 90.9609 250.976 90.6445 251.139 89.5039 cv
251.347 88.0503 251.599 86.6006 251.824 85.1489 cv
252.371 81.6362 253.348 77.5991 253.236 74.061 cv
254.627 75.9248 255.002 79.6255 255.497 81.9854 cv
255.801 83.4385 258.74 90.9478 257.792 91.52 cv
257.631 91.4395 257.792 91.52 257.792 91.52 cv
cp
278.557 103.898 mo
275.818 99.6479 274.05 94.2383 271.864 89.665 cv
269.388 84.4829 267.038 79.1855 264.622 73.9565 cv
262.317 68.9678 259.899 64.0293 257.711 58.9956 cv
256.562 56.3545 255.354 53.7544 254.123 51.1592 cv
252.897 48.5771 252.053 45.3555 250.212 43.1353 cv
247.939 54.4956 245.444 65.8638 243.008 77.2119 cv
242.435 79.8789 241.904 82.5557 241.35 85.2271 cv
240.862 87.583 240.672 90.6729 239.749 92.8906 cv
238.596 95.6611 238.409 99.2617 237.799 102.236 cv
237.221 105.056 235.886 108.426 236.1 111.277 cv
238.781 111.252 241.445 111.352 244.124 111.357 cv
244.893 111.359 245.649 111.348 246.415 111.295 cv
248.397 111.158 248.022 110.396 248.302 108.395 cv
248.512 106.889 248.608 105.297 249.007 103.833 cv
249.331 102.648 250.442 103.008 251.571 102.928 cv
254.499 102.721 257.427 102.514 260.354 102.307 cv
261.159 102.25 262.511 105.766 262.953 106.56 cv
263.507 107.551 264.032 108.558 264.544 109.58 cv
265.007 110.506 266.177 109.708 266.958 109.461 cv
268.49 108.976 272.357 108.455 273.477 107.326 cv
274.697 106.95 275.982 106.434 277.227 106.197 cv
278.799 105.717 279.424 105.596 278.557 103.898 cv
278.557 103.898 li
cp
f
290.774 66.4004 mo
290.345 64.3398 290.166 62.1147 290.023 60.0239 cv
289.951 58.9644 289.894 57.9028 289.806 56.8442 cv
289.645 54.8774 288.955 53.54 291.5 53.2554 cv
295.243 53.6304 298.168 56.6016 298.049 60.4683 cv
297.922 64.5342 294.374 66.1079 290.774 66.4004 cv
290.774 66.4004 296.069 65.9702 290.774 66.4004 cv
cp
317.467 94.5845 mo
314.726 89.3584 310.86 84.6748 307.832 79.6289 cv
307.12 78.4429 306.363 76.7876 305.411 75.835 cv
304.95 75.3745 304.646 74.687 304.303 74.1392 cv
303.368 72.6504 303.992 72.3447 304.831 70.7544 cv
307.313 66.0542 309.726 60.7822 309.905 55.376 cv
310.239 45.3628 300.222 43.0625 292.069 43.0562 cv
288.817 43.0532 285.615 43.5229 282.396 44.061 cv
281.2 44.2612 280.023 44.5034 278.817 44.6768 cv
277.343 44.8882 275.573 44.7363 275.573 46.3462 cv
275.573 49.2422 276.465 52.208 276.722 55.1108 cv
276.97 57.895 277.46 60.6968 277.84 63.4692 cv
278.295 66.7842 280.105 80.0054 280.452 82.6895 cv
281.672 93.73 283.355 104.789 284.883 115.793 cv
285.001 116.643 288.079 114.945 288.763 114.65 cv
290.339 113.971 291.877 113.23 293.453 112.555 cv
294.109 112.272 294.767 111.995 295.425 111.717 cv
296.136 111.417 295.773 110.83 295.773 110.107 cv
295.773 108.404 295.467 106.67 295.393 104.955 cv
295.26 101.93 294.869 98.9272 294.764 95.9038 cv
294.631 92.1118 294.701 87.9263 293.96 84.2222 cv
297.787 89.0659 301.475 94.1055 305.081 99.1133 cv
306.002 100.392 306.889 101.84 307.951 102.991 cv
308.564 103.656 309.064 104.432 309.602 105.158 cv
309.928 105.598 311.531 103.354 311.838 103.006 cv
313.196 101.46 314.875 99.9004 316.015 98.1929 cv
316.777 97.0503 318.785 96.0283 317.467 94.5845 cv
317.467 94.5845 li
cp
f
360.529 53.4976 mo
360.529 51.8101 359.001 49.3091 358.438 47.7612 cv
357.71 45.7627 356.964 43.7695 356.255 41.7642 cv
355.93 40.8447 355.223 37.2847 354.415 38.5186 cv
353.136 40.4697 352.029 42.4961 350.792 44.4722 cv
346.266 51.6963 341.957 59.0396 337.667 66.4004 cv
337.055 64.5332 337.322 62.0337 337.265 60.0908 cv
337.208 58.1016 337.029 56.1377 336.952 54.1455 cv
336.796 50.0669 336.546 46.002 336.417 41.9258 cv
333.104 42.4058 329.832 42.9141 326.513 43.4268 cv
324.555 43.7295 322.585 43.9673 320.632 44.3037 cv
318.916 44.5996 316.04 44.2334 316.773 46.6416 cv
318.696 52.958 318.971 59.9131 320.318 66.3823 cv
323.372 81.0303 325.235 95.8677 328.313 110.508 cv
328.608 111.908 328.88 113.283 329.1 114.703 cv
329.185 115.254 332.025 113.597 332.442 113.278 cv
333.107 112.77 339.454 109.826 339.439 109.193 cv
339.357 105.633 339.312 102.07 338.998 98.5259 cv
338.832 96.6646 338.807 94.8003 338.762 92.9282 cv
338.71 90.749 338.192 88.377 338.755 86.2383 cv
342.303 90.3687 345.066 95.4312 348.21 99.8984 cv
349.017 101.045 349.687 102.301 350.549 103.415 cv
350.962 103.947 351.837 105.91 352.404 105.471 cv
352.983 105.024 353.351 104.428 353.795 103.858 cv
354.666 102.741 355.539 101.625 356.415 100.512 cv
356.781 100.061 357.207 99.356 357.646 98.9795 cv
358.113 98.5786 358.507 97.9937 358.855 97.4873 cv
359.686 96.2798 359.503 96.2681 358.594 95.23 cv
356.282 92.1484 353.431 89.2583 350.893 86.3589 cv
350.253 85.6626 343.949 79.2813 344.523 78.5474 cv
348.825 73.0547 353.374 67.7354 357.623 62.2188 cv
358.766 60.7349 359.965 59.3525 361.134 57.8984 cv
362.253 56.5073 361.121 54.9775 360.529 53.4976 cv
360.529 53.3364 360.529 53.4976 360.529 53.4976 cv
cp
f
225.391 78.1377 mo
214.517 78.3569 207.213 80.0879 201.155 82.3472 cv
201.244 83.0015 201.333 83.6641 201.424 84.3433 cv
201.545 84.9077 li
201.545 85.3647 201.599 85.8213 201.706 86.2783 cv
201.745 87.125 li
201.944 89.3833 li
201.944 89.7861 li
202.148 90.5122 li
202.35 91.6006 li
202.492 92.6089 li
202.664 93.5767 li
202.951 95.5518 li
203.075 96.3584 li
203.075 96.9229 203.169 97.2593 203.277 97.3667 cv
203.439 98.3345 li
203.439 99.1812 li
203.561 99.5845 li
203.662 100.875 li
203.662 101.6 203.745 102.205 203.934 102.689 cv
204.09 103.656 li
204.09 104.409 204.127 105.068 204.208 105.633 cv
204.369 106.197 li
204.449 107.486 204.583 108.508 204.771 109.262 cv
204.933 111.236 li
204.933 111.774 204.935 112.098 204.935 112.205 cv
204.935 112.607 li
205.433 113.736 205.31 114.678 205.498 115.43 cv
205.766 115.43 206.015 115.377 206.122 115.27 cv
206.716 114.705 li
207.134 114.422 li
207.699 113.965 208.029 113.643 208.11 113.455 cv
208.557 113.172 li
209.244 112.486 li
209.597 112.205 li
212.41 109.543 li
212.41 104.625 li
212.909 103.535 li
212.909 97.9307 li
212.909 97.1782 212.909 96.52 212.909 95.9556 cv
212.909 90.0688 li
212.909 88.1064 212.952 86.48 213.248 85.1899 cv
222.377 83.6172 li
222.377 90.0688 li
222.377 91.0098 222.377 91.8022 222.377 92.4478 cv
222.377 97.9307 li
222.377 99.4634 li
222.377 106.197 li
222.768 106.318 li
224.272 106.721 li
224.46 106.721 224.769 106.774 225.227 106.883 cv
226.349 107.164 li
227.451 107.541 228.402 107.77 229.263 107.85 cv
229.355 106.721 li
229.355 105.633 li
229.355 105.068 li
229.355 104.504 li
229.582 103.535 li
229.77 102.299 229.918 101.264 229.918 100.431 cv
230.105 99.7456 li
230.148 98.7778 li
230.148 98.0249 230.352 97.1382 230.352 96.1167 cv
230.352 95.1084 li
230.58 94.7056 li
230.58 94.1411 230.85 93.8052 230.85 93.6973 cv
230.85 92.7295 li
230.85 91.708 231.156 90.499 231.237 89.1011 cv
231.39 88.1333 li
231.507 87.125 li
231.507 86.7031 231.806 83.73 232.404 78.2393 cv
230.234 78.1265 227.907 78.0869 225.391 78.1377 cv
cp
.94902 .6 .0784314 rgb
f
184.691 93.4961 mo
184.651 93.7778 li
184.462 94.7993 184.14 95.7002 183.683 96.4795 cv
175.645 105.86 166.627 106.681 156.627 98.939 cv
155.91 102.205 li
155.884 102.931 155.596 103.509 155.596 103.939 cv
155.596 104.302 li
155.097 106.358 li
155.097 106.721 li
154.673 108.052 li
154.602 108.455 li
154.425 109.141 li
153.934 111.277 li
154.149 111.653 154.414 111.922 154.737 112.084 cv
163.633 115.955 171.897 116.612 179.532 114.059 cv
185.069 112.446 189.234 109.463 192.03 105.107 cv
195.806 97.7061 196.069 91.3223 192.824 85.9561 cv
189.698 87.4287 186.605 88.9155 183.096 90.2261 cv
183.912 91.1543 184.447 92.2422 184.691 93.4961 cv
cp
f
299.686 91.8828 mo
300.895 93.5361 li
301.379 94.1816 li
301.742 94.7056 li
302.226 95.3101 li
302.589 95.834 li
303.596 97.1245 li
303.758 97.2856 303.959 97.5415 304.2 97.8906 cv
305.652 99.9067 li
306.016 100.31 li
306.257 100.74 306.539 101.117 306.861 101.438 cv
307.226 101.963 li
307.71 102.729 li
308.193 103.254 li
309.685 105.27 li
309.926 105.188 310.209 104.974 310.531 104.625 cv
310.935 104.033 311.298 103.576 311.619 103.254 cv
314.563 99.9067 li
315.048 99.2349 315.49 98.7241 315.894 98.374 cv
316.136 98.0117 li
317.95 95.9556 li
317.829 95.0684 li
317.467 94.5845 li
316.861 93.5361 li
316.499 93.0522 li
316.015 92.2861 li
315.652 91.7622 li
313.659 88.6187 li
309.672 89.8735 305.073 90.8701 299.342 91.3867 cv
299.686 91.8828 li
cp
f
324.045 86.8828 mo
324.045 87.3672 li
324.543 87.8779 324.344 88.3481 324.344 88.7783 cv
324.533 89.1812 li
324.67 90.0688 li
324.67 90.4185 324.73 90.8481 324.838 91.3584 cv
325.124 92.4072 li
325.205 92.7563 325.267 93.0791 325.307 93.3745 cv
325.348 93.6704 325.422 94.168 325.529 94.8667 cv
325.65 95.8745 li
325.84 96.3857 325.933 96.856 325.933 97.2856 cv
326.337 99.2212 li
326.498 99.9873 li
326.578 100.848 326.754 101.842 327.022 102.971 cv
327.184 103.979 li
327.306 105.027 li
327.492 105.539 327.641 106.224 327.747 107.084 cv
327.909 107.783 328.043 108.604 328.151 109.543 cv
328.272 110.31 li
328.434 111.075 li
328.676 111.985 li
329.119 114.871 li
329.804 114.871 li
331.86 113.558 li
332.264 113.426 li
332.949 112.896 li
336.256 111.078 li
336.538 110.836 li
339.44 109.262 li
339.319 103.979 li
339.132 103.388 339.078 102.837 339.159 102.326 cv
339.038 99.5034 li
339.038 98.8047 338.984 98.1997 338.877 97.6895 cv
338.688 92.6489 li
338.688 92.2188 338.497 91.8828 338.497 91.6416 cv
338.497 89.8267 li
338.497 88.4556 338.419 87.2593 338.688 86.2383 cv
339.406 87.125 li
339.827 87.8916 li
341.368 90.0688 li
342.058 91.1172 li
342.342 91.3584 li
346.334 97.165 li
346.456 97.4067 li
348.271 99.9873 li
348.554 100.512 li
349.011 101.103 349.333 101.573 349.521 101.923 cv
350.206 102.971 li
350.893 103.858 li
351.349 104.638 351.766 105.242 352.144 105.673 cv
352.666 105.27 li
353.109 104.785 li
353.795 103.858 li
356.415 100.512 li
356.765 100.082 356.993 99.8262 357.102 99.7456 cv
357.505 99.1006 li
357.787 98.8584 li
358.62 97.8906 359.211 97.0303 359.562 96.2778 cv
359.293 96.0093 358.97 95.6597 358.594 95.23 cv
357.948 94.3696 357.397 93.7241 356.94 93.2939 cv
356.657 93.0522 li
355.973 92.2861 li
354.763 90.875 li
353.353 89.1812 li
352.828 88.6567 li
352.451 88.1465 352.075 87.7168 351.698 87.3672 cv
351.538 87.125 351.27 86.7896 350.893 86.3589 cv
350.328 85.8345 li
349.643 85.0688 li
349.265 84.4507 348.675 83.7651 347.868 83.0127 cv
347.41 82.394 347.035 81.9639 346.739 81.7222 cv
346.618 81.4399 li
345.53 80.3105 li
345.045 79.6929 344.629 79.209 344.279 78.8594 cv
346.021 76.6348 li
336.339 78.334 330.189 81.5542 323.665 84.5903 cv
323.771 85.5103 324.045 86.2749 324.045 86.8828 cv
cp
f
256.341 84.7056 mo
256.501 85.3105 li
256.636 86.0366 256.811 86.6816 257.026 87.2461 cv
257.349 88.6978 li
257.55 89.4233 li
257.846 90.1494 258.048 90.7944 258.155 91.3584 cv
257.792 91.52 li
257.631 91.4395 257.349 91.4126 256.945 91.4395 cv
255.695 91.3828 li
255.292 91.4102 254.956 91.4473 254.688 91.4473 cv
252.833 91.4473 li
250.978 91.1011 li
251.059 90.2822 li
251.139 89.5303 li
251.381 88.146 li
251.435 87.4741 251.556 86.6743 251.744 85.7607 cv
251.824 85.1523 li
252.242 82.228 li
249.33 81.1567 246.188 80.1919 242.542 79.4668 cv
242.511 79.626 li
240.414 89.7461 li
240.333 90.3911 li
239.997 91.52 li
239.82 92.2456 li
239.82 92.6489 li
239.634 93.1328 li
239.439 94.02 li
239.359 94.9341 239.214 95.686 238.999 96.2778 cv
238.356 99.4229 li
238.276 99.9067 li
237.631 103.052 li
237.551 103.535 li
237.349 104.422 li
236.422 108.818 li
236.153 109.731 236.045 110.551 236.1 111.277 cv
240.414 111.249 li
240.924 111.303 241.543 111.383 242.269 111.383 cv
244.124 111.383 li
245.252 111.289 li
245.494 111.364 li
247.833 111.199 li
247.914 110.714 li
248.101 109.881 248.222 109.168 248.276 108.576 cv
248.519 106.842 li
248.599 106.479 li
248.68 105.162 248.895 104.033 249.244 103.092 cv
260.654 102.285 li
261.784 104.302 li
262.066 105.027 li
262.348 105.391 li
262.953 106.56 li
263.195 106.922 li
263.222 107.084 263.37 107.366 263.639 107.77 cv
264.768 110.027 li
265.654 109.947 li
266.824 109.504 li
269.242 108.737 li
269.848 108.576 li
270.452 108.374 li
272.993 107.486 li
273.234 107.46 273.396 107.406 273.477 107.326 cv
274.807 106.963 li
275.17 106.842 li
275.976 106.52 276.661 106.305 277.227 106.197 cv
279.041 105.592 li
279.015 105.162 278.946 104.826 278.839 104.584 cv
278.557 103.898 li
278.274 103.535 li
278.167 103.133 277.966 102.648 277.67 102.084 cv
277.267 101.237 li
277.105 100.753 li
275.654 97.77 li
275.492 97.2856 li
275.211 96.8423 li
272.59 91.0767 li
272.482 90.8345 272.388 90.6733 272.308 90.5928 cv
272.146 90.1089 li
271.864 89.665 li
271.843 89.6055 li
265.772 88.0171 261.066 85.7847 256.028 83.7095 cv
256.341 84.7056 li
cp
f
281.592 91.3472 mo
281.783 92.6489 li
281.904 93.4155 li
281.904 93.9258 281.944 94.2217 282.024 94.3022 cv
282.146 95.1895 li
282.267 96.0762 li
282.353 97.4873 li
282.681 99.6646 li
282.681 100.028 li
283.199 103.737 li
283.338 104.383 li
283.467 105.793 li
283.592 106.438 li
284.005 108.979 li
284.175 109.624 li
284.175 110.391 li
284.175 111.398 li
284.175 111.762 li
284.854 116.115 li
285.418 116.115 285.993 115.981 286.503 115.713 cv
286.885 115.471 li
288.345 114.826 li
290.406 113.938 li
290.729 113.857 291.188 113.643 291.779 113.293 cv
293.232 112.648 li
294.079 112.285 li
295.826 111.52 li
295.638 110.754 li
295.638 109.463 li
295.638 108.629 295.465 107.918 295.465 107.326 cv
295.378 105.391 li
295.272 102.608 li
295.16 101.721 li
295.044 99.1406 li
294.926 98.5356 li
294.806 97.1245 li
294.685 93.6572 li
294.544 92.9263 294.476 92.2808 294.458 91.6948 cv
293.834 91.7188 293.203 91.7388 292.555 91.752 cv
288.438 91.835 284.827 91.6797 281.592 91.3472 cv
cp
f
232.281 79.3545 mo
232.356 78.6558 232.437 77.915 232.523 77.123 cv
230.308 77.0049 227.935 76.9634 225.369 77.0161 cv
214.499 77.2349 207.094 78.9692 201.002 81.2109 cv
201.102 81.9502 201.204 82.7104 201.308 83.4814 cv
207.345 81.1958 214.51 79.479 225.414 79.2598 cv
227.882 79.2104 230.159 79.2466 232.281 79.3545 cv
cp
1 .823529 .25098 rgb
f
193.369 86.9395 mo
193.031 86.2808 192.646 85.6357 192.206 85.0063 cv
192.015 85.0967 191.824 85.1865 191.633 85.2764 cv
188.571 86.7212 185.57 88.1362 182.197 89.3682 cv
182.845 89.8989 183.375 90.4966 183.784 91.1631 cv
186.963 89.9609 189.794 88.626 192.591 87.3066 cv
192.851 87.1841 193.11 87.0615 193.369 86.9395 cv
cp
f
347.042 75.332 mo
337.554 76.8311 331.378 79.7417 325.357 82.583 cv
324.729 82.8789 324.104 83.1733 323.479 83.4658 cv
323.595 84.1416 li
323.716 84.5449 li
323.766 84.9819 323.825 85.3804 323.893 85.7485 cv
324.707 85.3711 325.513 84.9917 326.313 84.6133 cv
331.874 81.9897 337.231 79.4634 344.987 77.9561 cv
347.042 75.332 li
cp
f
292.576 92.8735 mo
293.252 92.8604 293.907 92.8389 294.557 92.8135 cv
294.489 92.3218 294.443 91.8545 294.443 91.4395 cv
294.443 91.1211 294.434 90.8335 294.414 90.5742 cv
293.798 90.5972 293.173 90.6172 292.53 90.6299 cv
288.332 90.7139 284.682 90.5527 281.426 90.208 cv
281.759 92.4858 li
284.97 92.8057 288.536 92.9551 292.576 92.8735 cv
cp
f
252.309 81.7627 mo
252.269 81.2788 li
252.292 81.2236 252.312 81.1396 252.333 81.0664 cv
249.466 80.0259 246.356 79.0854 242.762 78.3701 cv
242.511 79.6255 li
242.318 80.5552 li
245.981 81.2827 249.129 82.2593 252.081 83.3579 cv
252.309 81.7627 li
cp
f
313.071 87.6895 mo
313.04 87.6479 li
309.015 88.896 304.376 89.8623 298.523 90.3345 cv
298.838 90.7534 li
299.322 91.3584 li
299.686 91.8828 li
300.095 92.4424 li
305.748 91.8862 310.314 90.8613 314.279 89.5952 cv
313.071 87.6895 li
cp
f
272.308 90.5928 mo
272.146 90.1089 li
271.864 89.665 li
271.42 88.4556 li
271.386 88.4038 271.363 88.3643 271.332 88.3149 cv
266.932 87.0952 263.218 85.5234 259.41 83.9111 cv
258.15 83.3779 256.884 82.8418 255.584 82.3169 cv
255.695 82.6494 li
256.341 84.7056 li
256.445 85.0972 li
257.142 85.3882 257.837 85.6826 258.535 85.9785 cv
262.777 87.7754 267.097 89.6025 272.516 90.9272 cv
272.439 90.7749 272.368 90.6538 272.308 90.5928 cv
cp
f
288.234 43.1758 mo
287.993 43.3369 li
286.661 43.4575 li
285.533 43.5786 li
284.201 43.6997 li
283.597 43.8208 li
283.113 43.9414 li
282.146 44.0425 li
281.54 44.1021 li
281.057 44.1021 li
280.17 44.4053 li
279.443 44.5562 li
278.662 44.6929 li
275.703 45.353 li
275.703 46.8853 li
275.759 47.4092 li
275.848 48.2964 li
275.928 48.8877 275.973 49.3516 276.013 49.687 cv
276.054 50.0234 276.105 50.4468 276.187 50.9575 cv
276.304 51.7236 li
276.422 52.6108 li
276.542 53.4976 li
276.662 54.4253 li
276.783 55.7959 li
276.783 56.0649 276.824 56.2397 276.904 56.3198 cv
277.025 57.207 li
277.041 57.3281 li
277.124 57.3276 277.2 57.3296 277.283 57.3291 cv
282.282 57.3052 286.319 57.0073 289.759 56.5391 cv
289.686 56.0786 li
289.686 55.2988 289.604 54.6133 289.443 54.022 cv
290.089 53.5918 290.774 53.3364 291.5 53.2554 cv
293.451 53.4507 294.972 54.168 296.093 55.3696 cv
300.996 54.2188 304.815 52.7603 309.503 51.5488 cv
307.789 45.2148 300.702 42.4224 288.234 43.1758 cv
cp
360.529 53.4976 mo
360.529 53.3364 360.434 53.0815 360.247 52.7314 cv
356.255 41.7642 li
356.133 41.314 li
354.883 38.1216 li
354.602 38.1216 li
354.48 38.4517 li
352.949 40.7729 li
352.761 41.2842 352.531 41.7056 352.263 42.0552 cv
351.456 43.3413 li
351.349 43.583 351.255 43.7563 351.175 43.8633 cv
349.078 47.2085 li
348.675 47.8535 li
347.055 50.5854 li
352.252 51.5679 356.26 52.916 360.773 54.1094 cv
360.529 53.4976 li
cp
255.01 53.0542 mo
254.567 51.9658 li
254.123 51.1592 li
253.679 50.1914 li
251.22 44.7886 li
251.059 44.5464 li
250.762 43.9282 250.48 43.4575 250.212 43.1353 cv
249.448 47.1675 li
249.29 47.6514 li
249.29 48.0142 li
248.187 52.8945 li
250.762 53.6104 253.223 54.3545 255.941 55.0259 cv
255.706 54.4653 li
255.357 53.9277 255.117 53.4575 255.01 53.0542 cv
cp
336.538 45.7563 mo
336.417 41.9258 li
335.448 42.0464 li
333.918 42.168 li
333.378 42.3291 332.882 42.4097 332.426 42.4097 cv
332.236 42.5171 331.914 42.5708 331.458 42.5708 cv
330.49 42.8125 li
325.53 43.5786 li
324.616 43.6597 323.856 43.7671 323.252 43.9014 cv
322.647 44.0356 321.928 44.1431 321.095 44.2236 cv
318.691 44.627 li
317.885 44.708 317.067 44.8286 316.569 44.9902 cv
316.569 46.4014 li
316.917 47.3286 li
317.574 49.9165 li
321.023 49.4443 324.847 49.2241 329.87 49.2002 cv
332.381 49.1885 334.667 49.2476 336.76 49.3647 cv
336.695 47.5703 li
336.695 46.8984 336.646 46.2939 336.538 45.7563 cv
cp
234.81 40.2344 mo
234.567 40.2881 234.124 40.3633 233.479 40.4438 cv
232.632 40.6138 li
231.947 40.6138 li
231.503 40.6851 li
230.818 40.8218 li
229.285 40.9302 li
228.721 41.1182 228.21 41.2065 227.753 41.2065 cv
227.31 41.3643 li
226.181 41.4834 li
225.213 41.6445 li
224.448 41.7646 li
222.876 42.0464 li
222.876 42.4497 li
222.377 43.498 222.526 44.3853 222.607 45.1108 cv
222.607 47.2617 222.377 48.7129 222.377 49.4658 cv
222.377 49.7285 li
222.876 49.7241 223.074 49.7148 223.425 49.7134 cv
228.098 49.6909 231.969 49.9189 235.32 50.3027 cv
235.689 46.8047 li
235.976 44.9902 li
236.174 42.8936 li
236.332 41.9258 li
236.332 40.1152 li
235.575 40.1152 li
235.307 40.1152 235.051 40.1802 234.81 40.2344 cv
cp
170.095 42.4497 mo
166.929 43.4727 li
168.724 46.6099 li
164.75 48.0742 li
165.463 52.248 li
161.228 52.2671 li
160.477 56.4351 li
156.49 55.0068 li
155.461 56.7686 li
159.042 57.353 163.209 57.7573 168.45 57.8311 cv
169.114 57.3584 169.832 56.9556 170.619 56.6426 cv
171.506 56.4814 li
175.376 56.2798 li
175.901 56.2397 li
176.344 56.3608 li
176.774 56.3071 177.298 56.3198 177.917 56.4004 cv
178.563 56.4546 178.938 56.4072 179.046 56.4604 cv
179.745 56.4878 180.336 56.5615 180.82 56.5615 cv
181.223 56.5615 li
183.265 56.9595 li
183.441 57.0356 li
183.468 57.0063 li
183.603 56.751 li
184.086 56.0791 184.584 55.3193 185.094 54.459 cv
186.546 52.0029 li
186.814 51.4648 187.11 51.0234 187.433 50.6733 cv
187.701 50.1362 187.93 49.7471 188.118 49.5054 cv
188.521 48.7397 li
188.925 48.1479 189.233 47.6377 189.449 47.207 cv
189.167 46.2803 li
184.409 41.6567 178.052 40.3799 170.095 42.4497 cv
cp
211.504 38.6201 mo
211.837 50.3569 li
205.836 51.1025 201.633 52.3799 197.49 53.6548 cv
197.463 53.4204 197.447 53.2017 197.412 52.9639 cv
197.264 51.9424 196.994 50.2671 196.645 47.9287 cv
196.462 47.0869 li
196.462 46.522 li
196.363 45.9575 li
196.363 45.3936 196.291 44.748 196.103 44.0225 cv
195.964 43.1758 li
195.964 41.0786 li
196.462 41.0786 197.458 41.1118 198.481 40.6138 cv
198.884 40.6138 li
200.013 40.3423 li
200.47 40.3423 200.792 40.3901 200.981 40.3096 cv
201.464 40.3096 201.974 40.1152 202.513 40.1152 cv
203.238 40.1152 li
206.021 39.4678 li
206.746 39.3062 li
208.279 39.084 li
210.375 38.6201 li
211.504 38.6201 li
cp
f
306.299 61.876 mo
306.296 61.876 306.379 61.3423 306.479 60.3789 cv
306.572 59.4165 306.692 58.0151 306.585 56.3159 cv
306.471 54.6338 306.118 52.5962 304.966 50.7876 cv
303.838 48.9644 301.822 47.5894 299.408 46.8652 cv
296.994 46.1235 294.51 45.9302 292.258 45.8706 cv
290 45.8208 287.946 45.9253 286.22 46.0317 cv
282.767 46.2715 280.61 46.4326 280.611 46.4141 cv
280.617 46.4316 282.699 45.9033 286.133 45.2886 cv
287.853 44.9956 289.918 44.7002 292.249 44.6079 cv
294.57 44.5298 297.191 44.6226 299.854 45.4365 cv
301.178 45.8472 302.438 46.4463 303.513 47.2529 cv
304.588 48.0547 305.458 49.0659 306.051 50.1426 cv
307.249 52.3208 307.398 54.5557 307.334 56.3071 cv
307.253 58.0825 306.942 59.4722 306.71 60.4189 cv
306.471 61.3657 306.296 61.875 306.299 61.876 cv
cp
1 1 1 rgb
f
209.41 54.1445 mo
209.41 54.1445 208.427 49.5586 208.136 43.8545 cv
208.095 42.895 li
208.091 42.7852 li
208.093 42.7837 li
208.097 42.7778 li
208.107 42.7554 li
208.106 42.7515 208.102 42.7471 208.096 42.7427 cv
208.085 42.7368 li
208.064 42.7368 208.116 42.7266 208.012 42.7388 cv
207.159 42.8267 li
205.558 42.9648 li
204.541 43.0425 203.632 43.0903 202.873 43.1211 cv
201.354 43.1821 200.433 43.1714 200.433 43.1714 cv
200.433 43.1714 201.311 42.8916 202.781 42.5063 cv
203.516 42.3145 204.399 42.0952 205.394 41.8721 cv
206.967 41.5366 li
207.808 41.3711 li
209.467 41.0933 li
209.631 43.7778 li
209.922 49.4824 209.41 54.1445 209.41 54.1445 cv
cp
f
232.23 57.6362 mo
232.23 57.6362 232.023 52.5532 232.687 46.3818 cv
232.761 45.6938 232.843 45.0205 232.929 44.3677 cv
233.061 43.4243 li
233.075 43.4019 233.092 43.3643 233.112 43.3086 cv
233.093 43.2993 233.063 43.2896 233.018 43.2808 cv
233 43.2803 233.009 43.2749 232.966 43.2769 cv
232.777 43.292 li
232.405 43.3198 li
231.002 43.4111 li
230.116 43.4619 229.334 43.4941 228.685 43.5142 cv
227.386 43.5532 226.619 43.5454 226.619 43.5454 cv
226.619 43.5454 227.355 43.3301 228.616 43.0166 cv
229.247 42.8604 230.008 42.6787 230.875 42.4878 cv
232.25 42.1963 li
232.616 42.1221 li
232.802 42.0854 li
233.13 42.0293 li
234.59 41.7866 li
234.365 44.5225 li
234.312 45.1782 234.248 45.8535 234.175 46.542 cv
233.512 52.7134 232.23 57.6362 232.23 57.6362 cv
cp
f
169.508 44.543 mo
169.511 44.5591 170.818 43.9502 173.112 43.4951 cv
175.384 43.043 178.744 42.8433 182.236 43.9189 cv
183.104 44.1855 183.932 44.5137 184.702 44.8921 cv
185.088 45.0815 185.459 45.2832 185.814 45.4976 cv
185.994 45.606 186.164 45.7129 186.34 45.8311 cv
186.647 46.0269 186.93 46.2378 187.182 46.4443 cv
187.373 46.5981 li
187.342 46.6709 187.292 46.7471 187.252 46.8203 cv
187.004 47.2568 li
186.764 47.6787 li
186.617 47.9087 li
186.047 48.7871 li
185.004 50.3511 li
183.711 52.2544 182.85 53.396 182.85 53.396 cv
182.85 53.396 183.386 52.0698 184.353 49.9824 cv
185.157 48.2832 li
185.616 47.3423 li
185.736 47.1011 li
185.75 47.0479 li
185.745 47.0181 185.79 46.9824 185.735 46.9731 cv
185.7 46.96 185.671 46.9517 185.646 46.9453 cv
185.154 46.6841 li
184.817 46.5127 184.464 46.3491 184.102 46.1919 cv
183.375 45.8789 182.603 45.5967 181.798 45.3496 cv
178.574 44.355 175.456 44.1665 173.195 44.2388 cv
170.929 44.3125 169.508 44.5591 169.508 44.543 cv
cp
f
259.912 68.8589 mo
259.912 68.8589 256.476 62.7378 253.084 54.8237 cv
252.572 53.6299 252.09 52.4629 251.642 51.3428 cv
251.312 50.5112 li
251.271 50.4092 li
251.265 50.3916 251.269 50.3975 251.267 50.3901 cv
251.263 50.3647 li
251.251 50.3008 li
251.232 50.207 251.197 50.0684 251.143 49.8804 cv
251.057 50.0293 250.994 50.02 250.667 51.3364 cv
249.968 53.8994 li
249.314 56.1396 li
249.556 53.8184 li
249.882 51.1812 li
249.95 50.4966 250.33 48.2358 250.726 45.939 cv
252.933 50.7896 li
253.435 51.8877 253.947 53.04 254.459 54.2344 cv
257.851 62.1484 259.912 68.8589 259.912 68.8589 cv
cp
f
335.104 53.646 mo
335.104 53.646 334.207 49.8408 334.022 45.1104 cv
334.014 44.8809 li
334.017 44.8794 li
334.018 44.8779 334.021 44.8745 334.025 44.8682 cv
334.027 44.8613 334.023 44.8535 334.011 44.8452 cv
333.276 44.8955 li
331.849 44.9653 li
330.943 44.9976 330.128 45.0024 329.447 44.9951 cv
328.083 44.981 327.248 44.917 327.248 44.917 cv
327.248 44.917 328.046 44.6626 329.37 44.3345 cv
330.032 44.1709 330.825 43.9883 331.716 43.811 cv
333.119 43.5498 li
333.892 43.4248 li
335.435 43.2202 li
335.518 45.0522 li
335.702 49.7822 335.104 53.646 335.104 53.646 cv
cp
f
357.051 48.6577 mo
357.051 48.6577 356.616 48.0044 356 46.9004 cv
355.692 46.3481 355.339 45.6841 354.971 44.9316 cv
354.455 43.8467 li
354.422 43.8286 354.412 43.8501 354.41 43.8647 cv
354.409 43.874 li
354.64 43.4897 353.786 44.8203 353.331 45.4429 cv
352.811 46.1733 352.316 46.8159 351.888 47.3477 cv
351.031 48.4106 350.441 49.0322 350.441 49.0322 cv
350.441 49.0322 350.711 48.2183 351.247 46.9629 cv
351.515 46.3345 351.849 45.5967 352.248 44.7935 cv
352.714 43.8833 352.871 43.5283 354.164 41.374 cv
354.703 40.4824 li
355.673 43.1382 li
355.816 43.5654 li
355.914 43.8833 li
356.096 44.499 li
356.33 45.3027 356.512 46.0327 356.653 46.6489 cv
356.936 47.8813 357.051 48.6577 357.051 48.6577 cv
cp
f
295.825 67.7363 mo
295.821 67.7319 295.149 68.2822 293.931 68.9761 cv
293.319 69.3198 292.568 69.6973 291.678 70.0151 cv
291.229 70.1719 290.748 70.3145 290.217 70.4087 cv
290.065 70.4331 289.985 70.4492 289.766 70.4688 cv
289.518 70.4912 289.265 70.4961 289.028 70.4697 cv
288.688 70.4097 li
288.636 70.3936 288.563 70.4014 288.527 70.3647 cv
288.484 70.1885 li
288.313 69.4746 li
288.243 69.1875 288.238 69.106 288.218 68.9717 cv
288.164 68.5903 li
288.071 67.8428 li
288.016 67.3521 287.971 66.877 287.936 66.4238 cv
287.865 65.5166 287.832 64.6953 287.817 64.0029 cv
287.791 62.6182 287.845 61.751 287.845 61.751 cv
287.845 61.751 288.16 62.5605 288.557 63.8872 cv
288.755 64.5508 288.974 65.3438 289.184 66.2285 cv
289.287 66.6714 289.39 67.1372 289.487 67.6216 cv
289.626 68.3618 li
289.733 68.9902 li
289.733 68.9893 289.729 68.9927 289.729 68.9985 cv
289.729 69.001 289.73 69.0049 289.733 69.0083 cv
289.762 69.0098 289.93 68.9985 290.024 68.9893 cv
290.471 68.9492 290.918 68.876 291.346 68.7969 cv
292.203 68.6338 292.99 68.4443 293.654 68.2808 cv
295.825 67.7363 li
cp
f
255.049 93.2993 mo
255.049 93.2993 254.333 93.4688 253.136 93.6733 cv
252.537 93.7764 251.818 93.8872 251.01 93.9912 cv
249.733 94.1392 li
249.395 94.1729 li
248.877 94.2114 li
247.483 94.2949 li
247.831 91.7212 li
248.516 87.0918 249.812 83.4482 249.812 83.4482 cv
249.812 83.4482 249.996 87.311 249.31 91.9409 cv
249.179 92.7671 li
249.173 92.7695 249.163 92.7788 249.149 92.8022 cv
249.149 92.811 249.156 92.8223 249.173 92.8335 cv
249.189 92.8418 li
249.346 92.8462 li
249.685 92.8545 li
250.97 92.9077 li
251.784 92.9517 252.509 93.0093 253.113 93.0679 cv
254.322 93.1836 255.049 93.2993 255.049 93.2993 cv
cp
f
185.282 108.887 mo
185.257 108.869 186.484 107.764 187.942 105.646 cv
189.397 103.545 190.91 100.306 191.271 96.4849 cv
191.666 92.6738 190.958 89.1543 190.042 86.7783 cv
189.142 84.3726 187.985 83.1616 187.994 83.1675 cv
187.974 83.1572 189.416 84.0913 190.719 86.4609 cv
192.022 88.7734 193.187 92.4858 192.76 96.6372 cv
192.551 98.6982 191.964 100.617 191.174 102.221 cv
190.393 103.832 189.424 105.127 188.529 106.111 cv
186.71 108.074 185.258 108.863 185.282 108.887 cv
cp
f
210.813 91.9585 mo
210.813 91.9473 210.065 88.626 210.065 84.4302 cv
210.07 83.2598 li
211.373 83.0186 li
212.058 82.9136 li
212.508 82.8491 212.941 82.7944 213.355 82.749 cv
214.183 82.6577 214.93 82.6011 215.558 82.5659 cv
216.813 82.4956 217.594 82.5132 217.594 82.5132 cv
217.594 82.5132 216.88 82.8286 215.694 83.2471 cv
215.102 83.4561 214.39 83.6914 213.591 83.9248 cv
213.191 84.042 212.77 84.1587 212.33 84.272 cv
211.657 84.439 li
211.489 84.4766 211.581 84.4624 211.555 84.4707 cv
211.557 84.478 li
211.56 84.4824 211.562 84.4824 211.562 84.4824 cv
211.562 88.5742 210.813 91.9702 210.813 91.9585 cv
cp
f
295.264 82.3882 mo
295.264 82.3882 294.89 82.2886 294.272 82.0771 cv
293.965 81.9707 293.597 81.8364 293.183 81.6729 cv
293.027 81.6104 li
292.964 81.6025 li
292.924 81.5986 292.891 81.5977 292.863 81.6001 cv
292.808 81.604 292.777 81.6201 292.768 81.6445 cv
292.802 81.7656 292.831 81.8242 292.853 81.8457 cv
292.859 81.853 li
292.864 81.9858 li
292.873 82.2886 li
292.878 82.9067 li
292.853 86.2041 292.084 88.8726 292.084 88.8726 cv
292.084 88.8726 291.355 86.1938 291.381 82.8955 cv
291.394 82.2773 li
291.424 81.519 li
291.451 80.7534 291.486 80.0542 291.526 79.4536 cv
292.751 80.2773 li
293.267 80.6387 li
293.499 80.8052 li
293.632 80.9126 li
293.975 81.1953 294.271 81.4536 294.512 81.6719 cv
294.996 82.1094 295.264 82.3882 295.264 82.3882 cv
cp
f
340.341 85.126 mo
340.341 85.126 339.94 84.9766 339.313 84.6719 cv
338.999 84.5195 338.627 84.3281 338.22 84.0977 cv
338.177 84.0752 338.101 84.0254 338.084 84.0229 cv
338.035 84.0176 li
338.005 84.0156 337.982 84.0181 337.964 84.0234 cv
337.93 84.0347 337.918 84.0601 337.921 84.0894 cv
337.944 84.1797 337.963 84.188 337.963 84.188 cv
337.912 84.6318 li
337.841 85.1367 li
337.789 85.4673 337.729 85.7852 337.665 86.0874 cv
337.538 86.6919 337.392 87.2339 337.255 87.6865 cv
336.98 88.5933 336.74 89.1475 336.74 89.1475 cv
336.74 89.1475 336.608 88.5581 336.511 87.6157 cv
336.461 87.1455 336.42 86.5854 336.408 85.9683 cv
336.401 85.6592 336.403 85.3359 336.415 85.0015 cv
336.439 84.4917 li
336.488 83.8916 li
336.573 82.9932 336.674 82.1318 336.776 81.3936 cv
337.979 82.4521 li
338.493 82.9248 li
338.728 83.1436 li
338.802 83.2148 338.818 83.2388 338.865 83.2881 cv
339.181 83.6333 339.45 83.9526 339.668 84.2251 cv
340.105 84.7695 340.341 85.126 340.341 85.126 cv
cp
f
161.652 104.21 mo
161.652 104.21 161.136 104.176 160.348 104.018 cv
159.955 103.938 159.493 103.828 158.993 103.676 cv
158.611 103.554 li
158.417 103.486 li
158.318 103.451 li
158.309 103.45 158.311 103.453 158.307 103.455 cv
158.289 103.47 158.295 103.486 158.296 103.489 cv
158.297 103.489 li
158.297 103.489 158.288 103.475 158.266 103.482 cv
158.21 103.683 158.125 104.004 158.049 104.238 cv
157.892 104.743 157.72 105.191 157.561 105.566 cv
157.243 106.315 156.976 106.767 156.976 106.767 cv
156.976 106.767 156.875 106.252 156.824 105.439 cv
156.798 105.033 156.786 104.554 156.805 104.025 cv
156.817 103.745 156.826 103.524 156.867 103.163 cv
156.941 102.609 157.032 102.014 157.134 101.417 cv
157.152 101.315 li
157.696 101.567 158.233 101.828 158.727 102.078 cv
158.907 102.172 li
158.998 102.223 li
159.176 102.327 li
159.517 102.537 li
159.958 102.818 160.342 103.098 160.658 103.346 cv
161.291 103.841 161.652 104.21 161.652 104.21 cv
cp
f
167.388 52.5854 mo
167.388 52.5854 167.142 52.2222 166.841 51.6089 cv
166.691 51.3027 166.527 50.9351 166.375 50.5186 cv
166.297 50.3105 166.224 50.0903 166.156 49.8599 cv
166.132 49.7983 166.061 49.4814 166.01 49.2622 cv
165.852 48.521 li
166.292 48.3545 li
167.039 48.0864 li
167.409 47.9746 li
167.653 47.9053 167.893 47.8481 168.123 47.7998 cv
168.583 47.7046 169.008 47.646 169.37 47.6118 cv
170.095 47.543 170.567 47.5669 170.567 47.5669 cv
170.567 47.5669 170.225 47.8931 169.63 48.313 cv
169.333 48.5234 168.974 48.7568 168.562 48.9839 cv
168.356 49.0977 168.138 49.2104 167.907 49.3174 cv
167.554 49.4736 li
167.553 49.4795 167.556 49.4814 167.556 49.4819 cv
167.553 49.4795 li
167.549 49.4785 167.543 49.4771 167.535 49.479 cv
167.532 49.5024 167.506 49.4248 167.527 49.5972 cv
167.549 49.8364 167.562 50.0688 167.567 50.2905 cv
167.578 50.7334 167.562 51.1367 167.536 51.4766 cv
167.482 52.1563 167.388 52.5854 167.388 52.5854 cv
cp
f
162.806 54.1445 mo
162.806 54.1445 162.934 54.6484 163.037 55.457 cv
163.087 55.8613 163.133 56.3413 163.152 56.8735 cv
163.161 57.1396 163.164 57.418 163.158 57.707 cv
163.105 58.5171 li
163.029 59.4258 li
162.662 59.3506 li
161.743 59.1489 li
161.351 59.0566 li
161.132 58.9966 li
160.844 58.915 160.568 58.8267 160.306 58.7363 cv
159.783 58.5547 159.319 58.3618 158.932 58.1846 cv
158.157 57.8311 157.693 57.5425 157.693 57.5425 cv
157.693 57.5425 158.233 57.4648 159.085 57.4526 cv
159.511 57.4463 160.014 57.4565 160.566 57.5005 cv
160.842 57.5229 161.13 57.5537 161.426 57.5952 cv
161.65 57.6279 li
161.704 57.6362 li
161.706 57.6338 li
161.707 57.6294 li
161.708 57.6245 161.707 57.6211 161.707 57.6211 cv
161.708 57.5864 li
161.71 57.5889 161.714 57.5581 161.722 57.5581 cv
161.734 57.5581 li
161.741 57.5581 161.74 57.6357 161.756 57.5308 cv
161.807 57.2471 161.865 56.9922 161.927 56.7334 cv
162.051 56.2158 162.19 55.7627 162.32 55.377 cv
162.58 54.604 162.806 54.1445 162.806 54.1445 cv
cp
f
285.582 149.416 mo
293.219 147.677 li
291.321 140.436 li
289.378 141.165 287.171 141.81 284.577 142.329 cv
285.582 149.416 li
cp
.929412 .929412 .929412 rgb
f
223.694 141.795 mo
224.12 142.814 224.555 143.826 224.942 144.82 cv
226.163 144.189 227.456 143.643 228.624 142.923 cv
228.795 143.004 li
228.865 145.889 230.006 149.619 230.858 152.383 cv
230.787 152.555 230.696 152.67 230.585 152.729 cv
230.348 152.748 230.115 152.76 229.884 152.765 cv
224.369 152.899 220.471 149.23 218.673 144.405 cv
216.062 145.961 213.704 147.597 210.881 149.084 cv
212.238 151.525 213.944 153.795 215.981 155.764 cv
221.343 160.948 227.81 163.857 234.854 163.686 cv
237.509 163.621 240.245 163.119 243.036 162.138 cv
243.021 161.502 242.817 160.865 242.652 160.254 cv
240.613 153.992 238.575 147.736 236.577 141.46 cv
237.793 140.666 239.195 139.941 240.3 138.998 cv
240.214 138.707 240.114 138.419 240.021 138.129 cv
238.931 138.204 237.786 138.314 236.572 138.467 cv
231.003 139.166 226.982 140.362 223.694 141.795 cv
cp
f
305.841 133.818 mo
306.496 135.215 li
299.998 137.434 li
299.998 137.431 299.997 137.429 299.997 137.426 cv
299.997 137.427 li
299.997 137.426 li
299.997 137.426 li
299.995 137.423 299.993 137.419 299.993 137.416 cv
299.95 137.299 299.651 136.479 299.627 136.41 cv
299.623 136.4 299.623 136.396 299.623 136.396 cv
299.623 136.396 299.623 136.4 299.627 136.41 cv
299.649 136.471 299.751 136.75 299.993 137.416 cv
299.846 137.006 299.723 136.599 299.63 136.197 cv
297.46 137.545 295.2 138.863 292.407 140.01 cv
293.063 145.813 296.728 151.286 302.699 152.104 cv
303.15 152.166 303.651 152.188 304.19 152.176 cv
307.215 152.102 311.337 150.893 313.269 149.053 cv
313.269 149.053 312.838 144.396 312.646 143.168 cv
310.054 145.279 307.372 146.908 304.588 146.976 cv
304.378 146.98 304.168 146.977 303.957 146.963 cv
301.293 146.799 300.189 144.525 300.489 141.316 cv
304.684 139.684 309.056 138.496 313.345 137.137 cv
312.742 134.624 311.853 132.256 310.58 130.34 cv
308.6 131.074 306.887 131.895 305.311 132.758 cv
305.517 133.078 305.695 133.434 305.841 133.818 cv
cp
f
274.225 143.476 mo
281.354 150.816 li
283.588 142.518 li
282.545 142.706 281.446 142.877 280.274 143.023 cv
278.054 143.303 276.054 143.442 274.225 143.476 cv
cp
f
267.535 143.07 mo
266.904 148.724 li
264.499 148.439 262.665 146.978 261.405 144.328 cv
261.527 143.504 261.691 142.664 261.869 141.813 cv
259.683 141.183 257.638 140.465 255.472 139.822 cv
255.577 140.123 255.655 140.439 255.701 140.77 cv
255.944 142.504 255.454 144.129 254.139 145.014 cv
253.414 145.5 252.635 145.738 251.884 145.758 cv
250.185 145.799 248.618 144.712 248.092 142.816 cv
247.608 141.074 248.138 139.445 249.263 138.414 cv
247.403 138.143 245.359 137.987 243.034 138.009 cv
241.348 141.22 241.425 144.499 243.281 147.846 cv
245.35 150.863 247.989 152.55 251.196 152.905 cv
251.561 152.928 251.917 152.936 252.263 152.928 cv
254.744 152.867 256.814 151.992 258.475 150.301 cv
260.79 152.793 263.434 154.002 266.402 153.93 cv
266.874 153.92 267.356 153.875 267.847 153.799 cv
268.103 152.843 268.383 151.891 268.705 150.955 cv
272.574 150.861 li
273.791 143.481 li
271.455 143.502 269.402 143.345 267.535 143.07 cv
cp
f
391.808 231.471 mo
391.808 236.971 387.308 241.471 381.808 241.471 cv
161.809 241.471 li
156.31 241.471 151.81 236.971 151.81 231.471 cv
151.81 191.469 li
151.81 185.969 156.31 181.469 161.809 181.469 cv
381.808 181.469 li
387.308 181.469 391.808 185.969 391.808 191.469 cv
391.808 231.471 li
cp
1 1 1 rgb
f
215.126 214.312 mo
216.501 216.697 220.429 217.707 220.878 215.209 cv
221.047 214.115 220.626 212.993 219.672 212.319 cv
217.792 211.028 215.126 211.197 214.116 208.363 cv
213.414 206.398 213.779 203.732 214.312 202.582 cv
215.322 200.309 217.483 198.625 221.019 198.766 cv
221.917 198.794 223.432 199.187 224.302 199.917 cv
223.656 205.164 li
222.927 203.62 221.889 203.171 220.962 203.143 cv
219.363 203.143 218.381 204.182 218.269 205.725 cv
218.156 207.184 218.858 207.914 220.177 208.475 cv
222.955 209.625 225.003 210.327 225.396 213.975 cv
225.537 215.434 225.2 217.005 224.554 217.987 cv
223.488 219.615 221.524 220.092 219.756 220.092 cv
218.044 220.092 215.968 219.587 214.845 218.829 cv
215.126 214.312 li
cp
.478431 .164706 .129412 rgb
f
225.729 203.143 mo
226.038 199.299 li
237.964 199.299 li
238.329 203.143 li
234.428 203.143 li
234.428 219.699 li
229.826 219.699 li
229.826 203.143 li
225.729 203.143 li
cp
f
244.275 203.171 mo
243.152 212.123 li
246.155 212.123 li
244.977 203.171 li
244.275 203.171 li
cp
242.591 215.827 mo
242.17 219.699 li
237.4 219.699 li
241.02 199.299 li
248.147 199.299 li
251.767 219.699 li
247.137 219.699 li
246.66 215.827 li
242.591 215.827 li
cp
f
261.107 206.37 mo
261.107 204.63 260.49 202.75 258.638 202.75 cv
258.16 202.75 257.627 202.807 257.207 202.891 cv
257.207 210.074 li
259.9 211.084 261.107 208.896 261.107 206.37 cv
cp
265.484 219.699 mo
260.686 219.699 li
257.684 213.414 li
257.207 213.414 li
257.207 219.699 li
252.829 219.699 li
252.829 199.299 li
253.979 199.271 256.701 198.85 257.992 198.85 cv
259.311 198.85 260.854 198.906 262.201 199.607 cv
264.418 200.73 265.625 203.087 265.484 207.324 cv
265.203 210.776 263.969 212.432 262.089 213.105 cv
265.484 219.699 li
cp
f
266.267 203.143 mo
266.576 199.299 li
278.502 199.299 li
278.866 203.143 li
274.966 203.143 li
274.966 219.699 li
270.363 219.699 li
270.363 203.143 li
266.267 203.143 li
cp
f
297.858 205.192 mo
297.354 204.069 296.428 203.171 295.164 203.031 cv
291.938 202.694 290.844 205.669 290.45 208.334 cv
290.282 209.541 289.973 216.22 293.172 216.304 cv
295.727 216.416 295.838 212.937 295.613 211.113 cv
293.678 211.113 li
293.678 207.493 li
299.822 207.493 li
300.16 211.309 300.355 215.658 298.392 218.156 cv
297.241 219.503 295.361 220.26 292.555 220.064 cv
287.055 219.671 285.68 214.48 285.68 209.457 cv
285.68 206.819 286.27 204.097 287.645 202.021 cv
289.216 199.748 291.32 198.766 294.267 198.766 cv
295.558 198.766 297.325 199.074 298.645 200.057 cv
297.858 205.192 li
cp
f
307.9 203.171 mo
306.778 212.123 li
309.781 212.123 li
308.603 203.171 li
307.9 203.171 li
cp
306.217 215.827 mo
305.797 219.699 li
301.025 219.699 li
304.646 199.299 li
311.773 199.299 li
315.393 219.699 li
310.764 219.699 li
310.286 215.827 li
306.217 215.827 li
cp
f
324.508 218.717 mo
321.365 209.906 li
321.365 219.699 li
316.932 219.699 li
316.932 199.299 li
321.618 199.299 li
324.508 208.475 li
327.371 199.299 li
332.057 199.299 li
332.057 219.699 li
327.623 219.699 li
327.623 209.906 li
324.508 218.717 li
cp
f
334.297 219.699 mo
334.297 199.299 li
343.5 199.299 li
343.5 203.143 li
338.787 203.143 li
338.787 207.605 li
343.276 207.605 li
343.276 211.253 li
338.787 211.253 li
338.787 215.714 li
343.5 215.714 li
343.5 219.699 li
334.297 219.699 li
cp
f
159.396 172.075 mo
138.995 172.075 122.4 188.669 122.4 209.067 cv
122.4 229.467 138.995 246.063 159.396 246.063 cv
179.794 246.063 196.389 229.467 196.389 209.067 cv
196.389 188.669 179.794 172.075 159.396 172.075 cv
159.396 172.075 li
cp
f
192.278 208.04 mo
192.278 226.203 177.555 240.926 159.396 240.926 cv
141.234 240.926 126.511 226.203 126.511 208.04 cv
126.511 189.879 141.234 175.155 159.396 175.155 cv
177.555 175.155 192.278 189.879 192.278 208.04 cv
cp
.317647 .686275 .27451 rgb
f
192.278 205.343 mo
192.278 222.156 177.555 235.787 159.396 235.787 cv
141.234 235.787 126.511 222.156 126.511 205.343 cv
126.511 188.528 141.234 174.897 159.396 174.897 cv
177.555 174.897 192.278 188.528 192.278 205.343 cv
cp
.392157 .819608 .278431 rgb
f
159.396 181.061 mo
176.432 181.061 189.045 203.075 189.045 203.075 cv
190.731 206.017 192.186 207.505 192.278 206.382 cv
192.278 206.382 192.278 206.382 192.278 205.343 cv
192.278 188.528 177.555 174.897 159.396 174.897 cv
141.234 174.897 126.511 188.528 126.511 205.343 cv
126.511 206.382 126.511 206.382 126.511 206.382 cv
126.604 207.505 128.057 206.017 129.744 203.075 cv
129.744 203.075 142.359 181.061 159.396 181.061 cv
cp
.54902 .901961 .384314 rgb
f
173.216 205.364 mo
173.667 205.702 173.667 206.257 173.216 206.595 cv
152.252 222.32 li
151.8 222.66 151.43 222.474 151.43 221.908 cv
151.43 190.051 li
151.43 189.485 151.8 189.301 152.252 189.639 cv
173.216 205.364 li
cp
1 1 1 rgb
f
151.831 187.415 mo
151.831 187.415 li
150.432 187.415 149.375 188.547 149.375 190.051 cv
149.375 221.908 li
149.375 223.412 150.432 224.545 151.831 224.545 cv
152.406 224.545 152.979 224.344 153.484 223.963 cv
174.448 208.239 li
175.186 207.687 175.611 206.862 175.611 205.979 cv
175.611 205.097 175.186 204.272 174.448 203.72 cv
153.484 187.997 li
152.979 187.615 152.406 187.415 151.831 187.415 cv
151.831 187.415 li
cp
151.831 189.469 mo
151.955 189.469 152.099 189.524 152.252 189.639 cv
173.216 205.364 li
173.667 205.702 173.667 206.257 173.216 206.595 cv
152.252 222.32 li
152.099 222.435 151.955 222.49 151.831 222.49 cv
151.592 222.49 151.43 222.281 151.43 221.908 cv
151.43 190.051 li
151.43 189.677 151.592 189.469 151.831 189.469 cv
151.831 189.469 li
cp
.203922 .611765 .215686 rgb
f
402.141 314.957 mo
402.141 320.457 397.641 324.957 392.141 324.957 cv
172.141 324.957 li
166.642 324.957 162.142 320.457 162.142 314.957 cv
162.142 274.955 li
162.142 269.455 166.642 264.955 172.141 264.955 cv
392.141 264.955 li
397.641 264.955 402.141 269.455 402.141 274.955 cv
402.141 314.957 li
cp
1 1 1 rgb
f
224.476 282.785 mo
229.022 282.785 li
229.022 290.951 li
232.726 290.951 li
232.726 282.785 li
237.272 282.785 li
237.272 303.186 li
232.726 303.186 li
232.726 294.599 li
229.022 294.599 li
229.022 303.186 li
224.476 303.186 li
224.476 282.785 li
cp
.478431 .164706 .129412 rgb
f
239.457 282.785 mo
244.031 282.785 li
244.031 303.186 li
239.457 303.186 li
239.457 282.785 li
cp
f
258.059 288.678 mo
257.555 287.555 256.628 286.657 255.365 286.518 cv
252.138 286.18 251.044 289.154 250.651 291.82 cv
250.483 293.027 250.174 299.705 253.373 299.789 cv
255.927 299.902 256.039 296.422 255.814 294.599 cv
253.878 294.599 li
253.878 290.979 li
260.023 290.979 li
260.36 294.795 260.557 299.145 258.592 301.642 cv
257.441 302.988 255.562 303.746 252.756 303.55 cv
247.256 303.157 245.881 297.966 245.881 292.943 cv
245.881 290.305 246.47 287.583 247.845 285.507 cv
249.417 283.234 251.521 282.252 254.467 282.252 cv
255.758 282.252 257.525 282.561 258.845 283.543 cv
258.059 288.678 li
cp
f
261.928 282.785 mo
266.473 282.785 li
266.473 290.951 li
270.178 290.951 li
270.178 282.785 li
274.723 282.785 li
274.723 303.186 li
270.178 303.186 li
270.178 294.599 li
266.473 294.599 li
266.473 303.186 li
261.928 303.186 li
261.928 282.785 li
cp
f
277.666 297.797 mo
279.041 300.183 282.969 301.193 283.418 298.695 cv
283.586 297.602 283.166 296.479 282.211 295.805 cv
280.331 294.514 277.666 294.683 276.655 291.849 cv
275.953 289.885 276.318 287.219 276.852 286.068 cv
277.861 283.795 280.022 282.111 283.559 282.252 cv
284.456 282.279 285.972 282.672 286.842 283.402 cv
286.195 288.649 li
285.467 287.105 284.428 286.657 283.502 286.629 cv
281.902 286.629 280.92 287.668 280.809 289.211 cv
280.695 290.67 281.397 291.399 282.717 291.961 cv
285.494 293.111 287.543 293.813 287.936 297.461 cv
288.076 298.92 287.739 300.491 287.094 301.473 cv
286.027 303.102 284.063 303.578 282.295 303.578 cv
280.584 303.578 278.508 303.072 277.385 302.314 cv
277.666 297.797 li
cp
f
297.416 286.572 mo
294.779 286.657 293.685 290.502 293.74 293.392 cv
293.74 296.311 294.582 299.51 296.884 299.789 cv
297.67 299.874 299.129 299.51 300.251 297.881 cv
300.363 302.652 li
299.072 303.354 297.781 303.578 296.828 303.578 cv
291.637 303.605 289.167 299.2 289.082 293.083 cv
288.971 287.471 291.243 282.224 297.305 282.252 cv
298.455 282.252 299.773 282.588 300.729 283.458 cv
300.139 288.678 li
299.156 286.797 298.063 286.572 297.416 286.572 cv
cp
f
306.028 292.971 mo
306.028 295.777 306.59 299.818 309.171 299.93 cv
311.725 299.818 312.286 295.777 312.286 292.971 cv
312.286 290.193 311.725 286.602 309.171 286.433 cv
306.59 286.602 306.028 290.193 306.028 292.971 cv
cp
301.314 292.914 mo
301.314 287.808 303.223 282.224 309.171 282.252 cv
315.092 282.224 317 287.808 316.973 292.914 cv
316.973 298.078 315.176 303.605 309.171 303.578 cv
303.139 303.605 301.37 298.078 301.314 292.914 cv
cp
f
327.434 289.855 mo
327.434 288.116 326.816 286.236 324.965 286.236 cv
324.487 286.236 323.954 286.293 323.533 286.377 cv
323.533 293.561 li
326.227 294.57 327.434 292.382 327.434 289.855 cv
cp
331.811 303.186 mo
327.013 303.186 li
324.01 296.899 li
323.533 296.899 li
323.533 303.186 li
319.156 303.186 li
319.156 282.785 li
320.307 282.757 323.027 282.336 324.318 282.336 cv
325.638 282.336 327.182 282.393 328.527 283.094 cv
330.744 284.216 331.951 286.572 331.811 290.811 cv
331.53 294.262 330.296 295.918 328.416 296.591 cv
331.811 303.186 li
cp
f
333.52 303.186 mo
333.52 282.785 li
342.723 282.785 li
342.723 286.629 li
338.009 286.629 li
338.009 291.091 li
342.498 291.091 li
342.498 294.738 li
338.009 294.738 li
338.009 299.2 li
342.723 299.2 li
342.723 303.186 li
333.52 303.186 li
cp
f
169.098 255.494 mo
148.7 255.494 132.102 272.09 132.102 292.488 cv
132.102 312.887 148.7 329.482 169.098 329.482 cv
189.497 329.482 206.092 312.887 206.092 292.488 cv
206.092 272.09 189.497 255.494 169.098 255.494 cv
169.098 255.494 li
cp
f
201.983 291.461 mo
201.983 309.623 187.258 324.346 169.098 324.346 cv
150.937 324.346 136.214 309.623 136.214 291.461 cv
136.214 273.299 150.937 258.576 169.098 258.576 cv
187.258 258.576 201.983 273.299 201.983 291.461 cv
cp
.94902 .6 .0784314 rgb
f
201.983 288.764 mo
201.983 305.576 187.258 319.207 169.098 319.207 cv
150.937 319.207 136.214 305.576 136.214 288.764 cv
136.214 271.947 150.937 258.318 169.098 258.318 cv
187.258 258.318 201.983 271.947 201.983 288.764 cv
cp
.956863 .729412 .168627 rgb
f
169.098 264.482 mo
186.135 264.482 198.75 286.494 198.75 286.494 cv
200.436 289.438 201.89 290.926 201.983 289.803 cv
201.983 289.803 201.983 289.803 201.983 288.764 cv
201.983 271.947 187.258 258.318 169.098 258.318 cv
150.937 258.318 136.214 271.947 136.214 288.764 cv
136.214 289.803 136.214 289.803 136.214 289.803 cv
136.307 290.926 137.76 289.438 139.448 286.494 cv
139.448 286.494 152.062 264.482 169.098 264.482 cv
cp
1 .823529 .25098 rgb
f
185.85 288.15 mo
185.175 288.15 184.552 287.949 184.006 287.622 cv
184.315 285.536 184.421 283.164 184.297 280.926 cv
184.771 280.7 185.292 280.561 185.85 280.561 cv
186.563 280.561 188.048 280.561 188.048 284.353 cv
188.048 288.15 186.563 288.15 185.85 288.15 cv
cp
153.085 288.15 mo
152.372 288.15 150.886 288.15 150.886 284.353 cv
150.886 280.561 152.372 280.561 153.085 280.561 cv
153.684 280.561 154.246 280.726 154.747 280.987 cv
154.641 283.168 154.736 285.51 155.024 287.57 cv
154.458 287.933 153.796 288.15 153.085 288.15 cv
cp
185.85 277.408 mo
185.18 277.408 184.541 277.535 183.927 277.721 cv
183.687 276.434 183.355 275.298 182.904 274.451 cv
181.231 271.295 158.07 271.1 156.095 274.451 cv
155.644 275.217 155.309 276.377 155.081 277.743 cv
154.444 277.547 153.781 277.408 153.085 277.408 cv
151.085 277.408 147.735 278.308 147.735 284.353 cv
147.735 290.404 151.085 291.305 153.085 291.305 cv
154.013 291.305 154.9 291.11 155.713 290.769 cv
155.828 291.14 155.955 291.489 156.095 291.796 cv
157.603 295.072 163.746 296.44 165.468 299.604 cv
166.261 301.06 166.405 303.286 165.473 304.656 cv
164.475 306.123 160.863 307.317 159.346 308.236 cv
156.366 310.04 157.391 311.72 160.827 312.295 cv
165.374 313.057 173.657 313.15 178.174 312.295 cv
181.597 311.647 182.624 310.049 179.635 308.262 cv
178.102 307.342 174.452 306.159 173.444 304.686 cv
172.505 303.313 172.641 301.066 173.444 299.605 cv
175.18 296.429 181.385 295.086 182.904 291.796 cv
183.044 291.491 183.17 291.15 183.292 290.789 cv
184.085 291.115 184.945 291.305 185.85 291.305 cv
187.849 291.305 191.204 290.404 191.204 284.353 cv
191.204 278.308 187.849 277.408 185.85 277.408 cv
cp
1 1 1 rgb
f
169.332 270.01 mo
163.428 270.01 156.041 270.604 154.372 273.436 cv
154.056 273.972 153.782 274.637 153.552 275.423 cv
153.396 275.413 153.24 275.408 153.085 275.408 cv
151.361 275.408 145.735 276.053 145.735 284.353 cv
145.735 292.659 151.361 293.305 153.085 293.305 cv
153.583 293.305 154.076 293.263 154.564 293.178 cv
155.7 295.11 157.801 296.352 159.838 297.555 cv
161.46 298.514 163.137 299.505 163.712 300.56 cv
164.207 301.47 164.258 302.886 163.819 303.531 cv
163.451 304.072 161.419 305.009 160.443 305.458 cv
159.644 305.827 158.889 306.175 158.31 306.525 cv
155.719 308.094 155.43 309.755 155.644 310.872 cv
155.877 312.09 156.908 313.667 160.497 314.268 cv
162.903 314.671 166.29 314.902 169.789 314.902 cv
173.25 314.902 176.36 314.674 178.546 314.26 cv
182.132 313.582 183.139 312.013 183.352 310.816 cv
183.547 309.719 183.239 308.086 180.662 306.545 cv
180.077 306.194 179.313 305.847 178.502 305.479 cv
177.517 305.031 175.466 304.1 175.096 303.557 cv
174.648 302.903 174.696 301.479 175.197 300.569 cv
175.778 299.506 177.472 298.517 179.109 297.561 cv
181.166 296.359 183.287 295.121 184.431 293.186 cv
184.9 293.265 185.374 293.305 185.85 293.305 cv
187.575 293.305 193.204 292.659 193.204 284.353 cv
193.204 276.053 187.575 275.408 185.85 275.408 cv
185.712 275.408 185.573 275.412 185.434 275.42 cv
185.215 274.692 184.962 274.06 184.67 273.512 cv
183.136 270.618 175.482 270.011 169.332 270.01 cv
169.332 270.01 li
cp
153.085 288.15 mo
153.796 288.15 154.458 287.933 155.024 287.57 cv
154.736 285.51 154.641 283.168 154.747 280.987 cv
154.246 280.726 153.684 280.561 153.085 280.561 cv
152.372 280.561 150.886 280.561 150.886 284.353 cv
150.886 288.15 152.372 288.15 153.085 288.15 cv
153.085 288.15 li
cp
185.85 288.15 mo
186.563 288.15 188.048 288.15 188.048 284.353 cv
188.048 280.561 186.563 280.561 185.85 280.561 cv
185.292 280.561 184.771 280.7 184.297 280.926 cv
184.421 283.164 184.315 285.536 184.006 287.622 cv
184.552 287.949 185.175 288.15 185.85 288.15 cv
185.85 288.15 li
cp
169.332 272.01 mo
175.671 272.011 182.055 272.85 182.904 274.451 cv
183.355 275.298 183.687 276.434 183.927 277.721 cv
184.541 277.535 185.18 277.408 185.85 277.408 cv
187.849 277.408 191.204 278.308 191.204 284.353 cv
191.204 290.404 187.849 291.305 185.85 291.305 cv
184.945 291.305 184.085 291.115 183.292 290.789 cv
183.17 291.15 183.044 291.491 182.904 291.796 cv
181.385 295.086 175.18 296.429 173.444 299.605 cv
172.641 301.066 172.505 303.313 173.444 304.686 cv
174.452 306.159 178.102 307.342 179.635 308.262 cv
182.624 310.049 181.597 311.647 178.174 312.295 cv
175.98 312.71 172.9 312.902 169.789 312.902 cv
166.494 312.902 163.166 312.687 160.827 312.295 cv
157.391 311.72 156.366 310.04 159.346 308.236 cv
160.863 307.317 164.475 306.123 165.473 304.656 cv
166.405 303.286 166.261 301.06 165.468 299.604 cv
163.746 296.44 157.603 295.072 156.095 291.796 cv
155.955 291.489 155.828 291.14 155.713 290.769 cv
154.9 291.11 154.013 291.305 153.085 291.305 cv
151.085 291.305 147.735 290.404 147.735 284.353 cv
147.735 278.308 151.085 277.408 153.085 277.408 cv
153.781 277.408 154.444 277.547 155.081 277.743 cv
155.309 276.377 155.644 275.217 156.095 274.451 cv
157.067 272.801 163.178 272.01 169.332 272.01 cv
169.332 272.01 li
cp
.94902 .6 .0784314 rgb
f
402.141 398.457 mo
402.141 403.957 397.641 408.457 392.141 408.457 cv
172.141 408.457 li
166.642 408.457 162.142 403.957 162.142 398.457 cv
162.142 358.455 li
162.142 352.955 166.642 348.455 172.141 348.455 cv
392.141 348.455 li
397.641 348.455 402.141 352.955 402.141 358.455 cv
402.141 398.457 li
cp
1 1 1 rgb
f
225.458 381.297 mo
226.833 383.683 230.762 384.693 231.211 382.195 cv
231.379 381.102 230.958 379.979 230.004 379.305 cv
228.124 378.014 225.458 378.183 224.448 375.349 cv
223.747 373.385 224.111 370.719 224.645 369.568 cv
225.655 367.295 227.815 365.611 231.351 365.752 cv
232.249 365.779 233.765 366.172 234.634 366.902 cv
233.989 372.149 li
233.259 370.605 232.221 370.157 231.295 370.129 cv
229.696 370.129 228.713 371.168 228.601 372.711 cv
228.489 374.17 229.19 374.899 230.509 375.461 cv
233.288 376.611 235.336 377.313 235.729 380.961 cv
235.869 382.42 235.532 383.991 234.887 384.973 cv
233.82 386.602 231.856 387.078 230.088 387.078 cv
228.377 387.078 226.3 386.572 225.178 385.814 cv
225.458 381.297 li
cp
.478431 .164706 .129412 rgb
f
237.465 386.686 mo
237.465 366.285 li
246.669 366.285 li
246.669 370.129 li
241.955 370.129 li
241.955 374.591 li
246.444 374.591 li
246.444 378.238 li
241.955 378.238 li
241.955 382.7 li
246.669 382.7 li
246.669 386.686 li
237.465 386.686 li
cp
f
248.208 370.129 mo
248.518 366.285 li
260.443 366.285 li
260.809 370.129 li
256.908 370.129 li
256.908 386.686 li
252.306 386.686 li
252.306 370.129 li
248.208 370.129 li
cp
f
262.011 370.129 mo
262.32 366.285 li
274.246 366.285 li
274.61 370.129 li
270.71 370.129 li
270.71 386.686 li
266.107 386.686 li
266.107 370.129 li
262.011 370.129 li
cp
f
276.375 366.285 mo
280.949 366.285 li
280.949 386.686 li
276.375 386.686 li
276.375 366.285 li
cp
f
283.275 386.686 mo
283.275 366.285 li
287.064 366.285 li
291.357 376.303 li
291.357 366.285 li
295.679 366.285 li
295.679 386.686 li
292.087 386.686 li
287.653 376.695 li
287.653 386.686 li
283.275 386.686 li
cp
f
309.621 372.178 mo
309.115 371.055 308.189 370.157 306.927 370.018 cv
303.699 369.68 302.605 372.654 302.213 375.32 cv
302.045 376.527 301.735 383.205 304.935 383.289 cv
307.488 383.402 307.6 379.922 307.376 378.099 cv
305.439 378.099 li
305.439 374.479 li
311.585 374.479 li
311.922 378.295 312.118 382.645 310.154 385.142 cv
309.004 386.488 307.123 387.246 304.317 387.05 cv
298.817 386.657 297.442 381.466 297.442 376.443 cv
297.442 373.805 298.031 371.083 299.406 369.007 cv
300.979 366.734 303.082 365.752 306.029 365.752 cv
307.32 365.752 309.088 366.061 310.406 367.043 cv
309.621 372.178 li
cp
f
314.387 381.297 mo
315.762 383.683 319.69 384.693 320.14 382.195 cv
320.309 381.102 319.887 379.979 318.934 379.305 cv
317.053 378.014 314.387 378.183 313.377 375.349 cv
312.676 373.385 313.04 370.719 313.573 369.568 cv
314.584 367.295 316.744 365.611 320.279 365.752 cv
321.178 365.779 322.693 366.172 323.563 366.902 cv
322.918 372.149 li
322.188 370.605 321.15 370.157 320.224 370.129 cv
318.625 370.129 317.643 371.168 317.529 372.711 cv
317.418 374.17 318.119 374.899 319.438 375.461 cv
322.217 376.611 324.265 377.313 324.657 380.961 cv
324.798 382.42 324.461 383.991 323.815 384.973 cv
322.749 386.602 320.785 387.078 319.018 387.078 cv
317.306 387.078 315.229 386.572 314.106 385.814 cv
314.387 381.297 li
cp
f
169.098 338.994 mo
148.7 338.994 132.102 355.59 132.102 375.988 cv
132.102 396.387 148.7 412.982 169.098 412.982 cv
189.497 412.982 206.092 396.387 206.092 375.988 cv
206.092 355.59 189.497 338.994 169.098 338.994 cv
169.098 338.994 li
cp
f
201.983 374.961 mo
201.983 393.123 187.258 407.846 169.098 407.846 cv
150.937 407.846 136.214 393.123 136.214 374.961 cv
136.214 356.799 150.937 342.076 169.098 342.076 cv
187.258 342.076 201.983 356.799 201.983 374.961 cv
cp
.94902 .6 .0784314 rgb
f
201.983 372.264 mo
201.983 389.076 187.258 402.707 169.098 402.707 cv
150.937 402.707 136.214 389.076 136.214 372.264 cv
136.214 355.447 150.937 341.818 169.098 341.818 cv
187.258 341.818 201.983 355.447 201.983 372.264 cv
cp
.956863 .729412 .168627 rgb
f
169.098 347.982 mo
186.135 347.982 198.75 369.994 198.75 369.994 cv
200.436 372.938 201.89 374.426 201.983 373.303 cv
201.983 373.303 201.983 373.303 201.983 372.264 cv
201.983 355.447 187.258 341.818 169.098 341.818 cv
150.937 341.818 136.214 355.447 136.214 372.264 cv
136.214 373.303 136.214 373.303 136.214 373.303 cv
136.307 374.426 137.76 372.938 139.448 369.994 cv
139.448 369.994 152.062 347.982 169.098 347.982 cv
cp
1 .823529 .25098 rgb
f
183.308 388.332 mo
182.153 389.486 180.276 389.486 179.119 388.332 cv
177.962 387.172 177.962 385.299 179.119 384.143 cv
180.276 382.984 182.151 382.984 183.308 384.143 cv
184.462 385.301 184.465 387.172 183.308 388.332 cv
cp
156.769 354.971 mo
155.826 355.277 155.656 356.242 156.359 356.945 cv
163.146 363.732 li
158.33 368.551 li
151.462 361.68 li
150.762 360.98 149.802 361.09 149.451 362.016 cv
147.868 366.201 148.847 370.902 152.146 374.199 cv
155.307 377.363 159.839 378.316 163.821 377.068 cv
176.054 391.219 li
178.779 393.941 183.272 394.018 185.996 391.293 cv
188.719 388.566 188.643 384.076 185.92 381.352 cv
171.52 369.105 li
172.601 365.207 171.606 360.865 168.545 357.803 cv
165.354 354.613 160.789 353.66 156.769 354.971 cv
cp
1 1 1 rgb
f
181.214 387.197 mo
181.064 387.197 180.777 387.161 180.531 386.916 cv
180.159 386.543 180.158 385.932 180.533 385.557 cv
180.779 385.311 181.065 385.273 181.213 385.273 cv
181.362 385.273 181.648 385.311 181.894 385.557 cv
182.267 385.931 182.267 386.544 181.892 386.92 cv
181.65 387.161 181.363 387.197 181.214 387.197 cv
181.214 387.197 li
cp
160.357 352.401 mo
158.925 352.401 157.509 352.626 156.149 353.069 cv
155.062 353.423 154.261 354.258 154.01 355.303 cv
153.753 356.375 154.103 357.518 154.945 358.359 cv
160.318 363.732 li
158.33 365.722 li
152.877 360.266 li
152.206 359.596 151.355 359.227 150.481 359.227 cv
149.179 359.227 148.068 360.023 147.581 361.306 cv
145.691 366.302 146.899 371.783 150.732 375.614 cv
153.299 378.184 156.714 379.599 160.348 379.599 cv
161.282 379.599 162.21 379.504 163.119 379.314 cv
174.541 392.526 li
174.573 392.563 174.606 392.6 174.641 392.634 cv
176.36 394.353 178.655 395.299 181.1 395.299 cv
183.498 395.299 185.739 394.379 187.41 392.707 cv
190.907 389.206 190.873 383.479 187.335 379.938 cv
187.297 379.899 187.257 379.863 187.216 379.828 cv
173.735 368.364 li
174.498 364.029 173.108 359.539 169.96 356.389 cv
167.387 353.817 163.976 352.401 160.357 352.401 cv
160.357 352.401 li
cp
181.214 389.197 mo
181.973 389.197 182.73 388.909 183.308 388.332 cv
184.465 387.172 184.462 385.301 183.308 384.143 cv
182.729 383.563 181.972 383.273 181.213 383.273 cv
180.455 383.273 179.697 383.563 179.119 384.143 cv
177.962 385.299 177.962 387.172 179.119 388.332 cv
179.697 388.909 180.456 389.197 181.214 389.197 cv
160.357 354.401 mo
163.321 354.401 166.28 355.538 168.545 357.803 cv
171.606 360.865 172.601 365.207 171.52 369.105 cv
185.92 381.352 li
188.643 384.076 188.719 388.566 185.996 391.293 cv
184.652 392.637 182.879 393.299 181.1 393.299 cv
179.271 393.299 177.436 392.599 176.054 391.219 cv
163.821 377.068 li
162.693 377.422 161.521 377.599 160.348 377.599 cv
157.381 377.599 154.412 376.467 152.146 374.199 cv
148.847 370.902 147.868 366.201 149.451 362.016 cv
149.65 361.489 150.047 361.227 150.481 361.227 cv
150.81 361.227 151.16 361.378 151.462 361.68 cv
158.33 368.551 li
163.146 363.732 li
156.359 356.945 li
155.656 356.242 155.826 355.277 156.769 354.971 cv
157.935 354.591 159.146 354.401 160.357 354.401 cv
.94902 .6 .0784314 rgb
f
77.0981 432.893 mo
60.7793 432.893 47.501 446.17 47.501 462.488 cv
47.501 478.807 60.7793 492.084 77.0981 492.084 cv
93.4165 492.084 106.693 478.807 106.693 462.488 cv
106.693 446.17 93.4165 432.893 77.0981 432.893 cv
77.0981 432.893 li
cp
.478431 .164706 .129412 rgb
f
103.406 461.666 mo
103.406 476.196 91.626 487.975 77.0981 487.975 cv
62.5688 487.975 50.791 476.196 50.791 461.666 cv
50.791 447.137 62.5688 435.358 77.0981 435.358 cv
91.626 435.358 103.406 447.137 103.406 461.666 cv
cp
.94902 .6 .0784314 rgb
f
103.406 459.509 mo
103.406 472.959 91.626 483.863 77.0981 483.863 cv
62.5688 483.863 50.791 472.959 50.791 459.509 cv
50.791 446.056 62.5688 435.152 77.0981 435.152 cv
91.626 435.152 103.406 446.056 103.406 459.509 cv
cp
.956863 .729412 .168627 rgb
f
77.0981 440.084 mo
90.7275 440.084 100.819 457.693 100.819 457.693 cv
102.168 460.048 103.332 461.238 103.406 460.34 cv
103.406 460.34 103.406 460.34 103.406 459.509 cv
103.406 446.056 91.626 435.152 77.0981 435.152 cv
62.5688 435.152 50.791 446.056 50.791 459.509 cv
50.791 460.34 50.791 460.34 50.791 460.34 cv
50.8652 461.238 52.0278 460.048 53.3774 457.693 cv
53.3774 457.693 63.4692 440.084 77.0981 440.084 cv
cp
1 .823529 .25098 rgb
f
72.4561 471.912 mo
74.7695 466.434 83.4331 469.326 81.8481 475.176 cv
80.1099 481.586 69.7427 478.318 72.4561 471.912 cv
72.7139 471.302 72.1982 472.52 72.4561 471.912 cv
cp
72.5396 465.043 mo
72.4209 463.054 72.2393 460.65 73.0869 459.149 cv
73.8164 457.852 75.0771 457.402 76.4268 457.026 cv
77.2749 456.793 79.3481 456.479 78.5327 455.083 cv
76.9717 452.415 71.8071 457.057 69.8774 457.057 cv
66.8364 457.057 65.77 453.436 67.1157 451.127 cv
70.3125 445.637 79.5591 445.474 84.2734 448.714 cv
89.8931 452.582 88.1899 460.967 81.5737 462.458 cv
81.625 464.961 li
81.6401 465.775 80.9941 466.442 80.1797 466.448 cv
74.0762 466.503 li
73.2617 466.512 72.5884 465.857 72.5396 465.043 cv
cp
1 1 1 rgb
f
76.6206 444.574 mo
76.6201 444.574 76.6191 444.574 76.6191 444.574 cv
71.6079 444.575 67.4092 446.648 65.3872 450.121 cv
64.2661 452.044 64.252 454.525 65.3525 456.44 cv
66.3081 458.103 67.957 459.057 69.8774 459.057 cv
70.2456 459.057 70.6211 458.991 71.0073 458.879 cv
70.2764 460.738 70.415 463.043 70.5298 464.938 cv
70.543 465.162 li
70.6294 466.599 71.5576 467.797 72.8242 468.277 cv
71.9756 468.905 71.2749 469.748 70.7788 470.77 cv
70.7554 470.813 70.7334 470.855 70.7134 470.899 cv
70.6143 471.079 70.52 471.293 70.4575 471.53 cv
69.6963 473.615 69.8979 475.69 71.0396 477.413 cv
72.3618 479.41 74.7686 480.649 77.3203 480.649 cv
80.4756 480.649 82.9502 478.753 83.7783 475.699 cv
84.3535 473.576 83.9731 471.496 82.707 469.842 cv
82.2598 469.257 81.7109 468.746 81.0938 468.324 cv
81.6768 468.164 82.21 467.851 82.6436 467.405 cv
83.2935 466.739 83.6421 465.857 83.6245 464.924 cv
83.604 463.915 li
86.6587 462.688 88.8535 460.082 89.4844 456.813 cv
90.2134 453.033 88.6514 449.299 85.4072 447.066 cv
83.103 445.482 79.9004 444.574 76.6206 444.574 cv
76.6206 444.574 li
cp
72.5303 471.735 mo
72.5308 471.735 72.5107 471.783 72.4561 471.912 cv
72.4019 472.04 72.3818 472.087 72.3818 472.087 cv
72.3813 472.087 72.5303 471.735 72.5303 471.735 cv
72.5303 471.735 li
cp
72.5303 471.735 mo
72.5356 471.735 li
72.5303 471.735 li
cp
76.8193 468.995 mo
79.7969 468.995 82.8438 471.502 81.8481 475.176 cv
81.1875 477.611 79.2813 478.649 77.3203 478.649 cv
74.1201 478.649 70.7734 475.885 72.4561 471.912 cv
73.3164 469.874 75.0557 468.995 76.8193 468.995 cv
76.8193 468.995 li
cp
76.6191 446.574 mo
79.4482 446.574 82.2695 447.337 84.2734 448.714 cv
89.8931 452.582 88.1899 460.967 81.5737 462.458 cv
81.625 464.961 li
81.6401 465.775 80.9941 466.442 80.1797 466.448 cv
74.0762 466.503 li
74.0708 466.503 74.0654 466.503 74.0601 466.503 cv
73.2529 466.503 72.5879 465.852 72.5396 465.043 cv
72.4209 463.054 72.2393 460.65 73.0869 459.149 cv
73.8164 457.852 75.0771 457.402 76.4268 457.026 cv
77.2749 456.793 79.3481 456.479 78.5327 455.083 cv
78.1841 454.487 77.6563 454.256 77.0244 454.256 cv
74.8271 454.256 71.3765 457.057 69.8774 457.057 cv
66.8364 457.057 65.77 453.436 67.1157 451.127 cv
68.9536 447.971 72.793 446.574 76.6191 446.574 cv
76.6191 446.574 li
cp
.94902 .6 .0784314 rgb
f
145.848 432.893 mo
129.529 432.893 116.251 446.17 116.251 462.488 cv
116.251 478.807 129.529 492.084 145.848 492.084 cv
162.167 492.084 175.443 478.807 175.443 462.488 cv
175.443 446.17 162.167 432.893 145.848 432.893 cv
145.848 432.893 li
cp
.478431 .164706 .129412 rgb
f
172.156 461.666 mo
172.156 476.196 160.376 487.975 145.848 487.975 cv
131.319 487.975 119.541 476.196 119.541 461.666 cv
119.541 447.137 131.319 435.358 145.848 435.358 cv
160.376 435.358 172.156 447.137 172.156 461.666 cv
cp
.94902 .6 .0784314 rgb
f
172.156 459.509 mo
172.156 472.959 160.376 483.863 145.848 483.863 cv
131.319 483.863 119.541 472.959 119.541 459.509 cv
119.541 446.056 131.319 435.152 145.848 435.152 cv
160.376 435.152 172.156 446.056 172.156 459.509 cv
cp
.956863 .729412 .168627 rgb
f
145.848 440.084 mo
159.478 440.084 169.569 457.693 169.569 457.693 cv
170.918 460.048 172.082 461.238 172.156 460.34 cv
172.156 460.34 172.156 460.34 172.156 459.509 cv
172.156 446.056 160.376 435.152 145.848 435.152 cv
131.319 435.152 119.541 446.056 119.541 459.509 cv
119.541 460.34 119.541 460.34 119.541 460.34 cv
119.615 461.238 120.778 460.048 122.127 457.693 cv
122.127 457.693 132.219 440.084 145.848 440.084 cv
cp
1 .823529 .25098 rgb
f
156.7 456.319 mo
156.531 455.556 155.776 455.071 155.009 455.24 cv
154.248 455.409 153.764 456.165 153.93 456.932 cv
154.099 457.694 154.857 458.179 155.621 458.01 cv
156.385 457.842 156.869 457.084 156.7 456.319 cv
cp
154.602 459.677 mo
154.428 458.912 153.669 458.435 152.905 458.606 cv
152.141 458.78 151.663 459.539 151.835 460.304 cv
152.009 461.067 152.768 461.545 153.529 461.374 cv
154.293 461.199 154.774 460.44 154.602 459.677 cv
cp
151.222 457.547 mo
151.053 456.781 150.298 456.3 149.531 456.468 cv
148.767 456.636 148.283 457.393 148.452 458.157 cv
148.621 458.921 149.376 459.404 150.141 459.235 cv
150.908 459.067 151.391 458.312 151.222 457.547 cv
cp
150.704 454.98 mo
150.876 455.745 151.637 456.225 152.398 456.052 cv
153.163 455.879 153.641 455.12 153.469 454.356 cv
153.297 453.592 152.536 453.112 151.772 453.286 cv
151.01 453.457 150.53 454.218 150.704 454.98 cv
cp
143.231 459.499 mo
143.114 458.981 142.602 458.656 142.084 458.772 cv
139.949 459.25 li
139.468 457.116 li
139.351 456.6 138.835 456.276 138.321 456.393 cv
137.805 456.51 137.479 457.023 137.597 457.542 cv
138.077 459.669 li
135.948 460.146 li
135.433 460.264 135.104 460.777 135.221 461.294 cv
135.338 461.812 135.851 462.135 136.366 462.021 cv
138.501 461.543 li
138.984 463.675 li
139.102 464.191 139.617 464.515 140.132 464.398 cv
140.65 464.281 140.971 463.768 140.856 463.251 cv
140.373 461.122 li
142.502 460.644 li
143.02 460.528 143.343 460.015 143.231 459.499 cv
cp
162.118 467.587 mo
162.235 470.229 159.768 470.438 158.621 470.197 cv
156.703 469.792 154.353 467.129 152.702 466.079 cv
149.84 464.262 143.847 465.533 141.972 467.82 cv
140.776 469.281 139.213 472.9 137.731 474.069 cv
134.771 476.407 133.461 473.955 133.189 471.951 cv
132.817 469.179 132.313 464.425 132.084 461.946 cv
131.767 458.494 134.136 454.533 138.166 453.62 cv
140.914 453 143.621 453.861 145.335 455.646 cv
146.254 453.588 148.191 451.932 150.684 451.368 cv
154.717 450.455 157.793 452.716 159.513 456.464 cv
160.618 458.872 162.003 464.969 162.118 467.587 cv
cp
144.193 450.937 mo
144.757 449.911 145.813 449.37 146.872 449.185 cv
147.842 449.016 149.497 449.096 150.264 448.369 cv
150.839 447.822 150.209 447.078 149.508 446.284 cv
149.021 445.734 149.688 444.735 150.504 445.249 cv
151.142 445.653 152.201 447.097 151.898 448.459 cv
151.428 450.581 148.128 450.313 146.566 450.775 cv
144.769 451.309 146.16 453.048 145.725 453.758 cv
145.622 453.921 144.771 454.154 144.6 454.064 cv
143.904 453.692 143.764 451.718 144.193 450.937 cv
cp
1 1 1 rgb
f
150.053 443.106 mo
150.053 443.106 li
148.996 443.106 148.028 443.74 147.586 444.721 cv
147.24 445.491 147.273 446.364 147.649 447.085 cv
147.617 447.088 147.586 447.091 147.558 447.093 cv
147.215 447.124 146.861 447.156 146.529 447.214 cv
144.693 447.536 143.243 448.516 142.441 449.973 cv
142.173 450.46 142.029 451.042 141.975 451.631 cv
141.316 451.492 140.637 451.42 139.949 451.42 cv
139.207 451.42 138.458 451.504 137.726 451.669 cv
132.455 452.863 129.706 457.926 130.093 462.13 cv
130.315 464.536 130.826 469.38 131.207 472.217 cv
131.603 475.138 133.311 477.022 135.557 477.022 cv
136.66 477.022 137.809 476.557 138.971 475.639 cv
140.163 474.698 141.164 472.97 142.131 471.298 cv
142.63 470.436 143.146 469.543 143.52 469.088 cv
144.261 468.184 146.678 467.215 149.094 467.215 cv
150.168 467.215 151.068 467.411 151.629 467.768 cv
152.089 468.06 152.701 468.58 153.348 469.132 cv
154.809 470.376 156.464 471.786 158.207 472.154 cv
158.577 472.231 158.983 472.271 159.385 472.271 cv
160.83 472.271 162.098 471.778 162.955 470.883 cv
163.526 470.285 164.192 469.213 164.116 467.498 cv
163.996 464.76 162.598 458.391 161.331 455.63 cv
159.67 452.01 156.954 449.75 153.751 449.265 cv
153.789 449.145 153.822 449.021 153.851 448.892 cv
154.368 446.566 152.798 444.335 151.574 443.56 cv
151.102 443.262 150.578 443.106 150.053 443.106 cv
150.053 443.106 li
cp
153.218 461.408 mo
153.32 461.408 153.424 461.397 153.529 461.374 cv
154.293 461.199 154.774 460.44 154.602 459.677 cv
154.452 459.018 153.867 458.571 153.219 458.571 cv
153.115 458.571 153.01 458.583 152.905 458.606 cv
152.141 458.78 151.663 459.539 151.835 460.304 cv
151.985 460.963 152.571 461.408 153.218 461.408 cv
153.218 461.408 li
cp
149.834 459.269 mo
149.935 459.269 150.038 459.258 150.141 459.235 cv
150.908 459.067 151.391 458.312 151.222 457.547 cv
151.076 456.884 150.49 456.435 149.838 456.435 cv
149.737 456.435 149.634 456.445 149.531 456.468 cv
148.767 456.636 148.283 457.393 148.452 458.157 cv
148.598 458.818 149.184 459.269 149.834 459.269 cv
149.834 459.269 li
cp
136.157 462.043 mo
136.226 462.043 136.296 462.036 136.366 462.021 cv
138.501 461.543 li
138.984 463.675 li
139.086 464.12 139.483 464.422 139.921 464.422 cv
139.991 464.422 140.062 464.414 140.132 464.398 cv
140.65 464.281 140.971 463.768 140.856 463.251 cv
140.373 461.122 li
142.502 460.644 li
143.02 460.528 143.343 460.015 143.231 459.499 cv
143.13 459.053 142.735 458.749 142.295 458.749 cv
142.226 458.749 142.155 458.757 142.084 458.772 cv
139.949 459.25 li
139.468 457.116 li
139.367 456.671 138.97 456.369 138.532 456.369 cv
138.462 456.369 138.392 456.377 138.321 456.393 cv
137.805 456.51 137.479 457.023 137.597 457.542 cv
138.077 459.669 li
135.948 460.146 li
135.433 460.264 135.104 460.777 135.221 461.294 cv
135.322 461.741 135.719 462.043 136.157 462.043 cv
136.157 462.043 li
cp
155.314 458.043 mo
155.416 458.043 155.519 458.032 155.621 458.01 cv
156.385 457.842 156.869 457.084 156.7 456.319 cv
156.554 455.658 155.968 455.207 155.316 455.207 cv
155.215 455.207 155.112 455.218 155.009 455.24 cv
154.248 455.409 153.764 456.165 153.93 456.932 cv
154.076 457.592 154.664 458.043 155.314 458.043 cv
155.314 458.043 li
cp
152.085 456.087 mo
152.188 456.087 152.293 456.075 152.398 456.052 cv
153.163 455.879 153.641 455.12 153.469 454.356 cv
153.321 453.697 152.735 453.251 152.087 453.251 cv
151.983 453.251 151.878 453.262 151.772 453.286 cv
151.01 453.457 150.53 454.218 150.704 454.98 cv
150.852 455.64 151.438 456.087 152.085 456.087 cv
152.085 456.087 li
cp
152.431 451.166 mo
155.608 451.166 158.051 453.277 159.513 456.464 cv
160.618 458.872 162.003 464.969 162.118 467.587 cv
162.213 469.729 160.607 470.271 159.385 470.271 cv
159.101 470.271 158.837 470.242 158.621 470.197 cv
156.703 469.792 154.353 467.129 152.702 466.079 cv
151.754 465.478 150.464 465.215 149.094 465.215 cv
146.324 465.215 143.227 466.29 141.972 467.82 cv
140.776 469.281 139.213 472.9 137.731 474.069 cv
136.873 474.747 136.153 475.022 135.557 475.022 cv
134.099 475.022 133.382 473.374 133.189 471.951 cv
132.817 469.179 132.313 464.425 132.084 461.946 cv
131.767 458.494 134.136 454.533 138.166 453.62 cv
138.766 453.484 139.364 453.42 139.949 453.42 cv
142.048 453.42 143.995 454.251 145.335 455.646 cv
146.254 453.588 148.191 451.932 150.684 451.368 cv
151.288 451.231 151.871 451.166 152.431 451.166 cv
152.431 451.166 li
cp
150.053 445.106 mo
150.193 445.106 150.346 445.149 150.504 445.249 cv
151.142 445.653 152.201 447.097 151.898 448.459 cv
151.428 450.581 148.128 450.313 146.566 450.775 cv
144.769 451.309 146.16 453.048 145.725 453.758 cv
145.637 453.896 145.015 454.084 144.721 454.084 cv
144.668 454.084 144.626 454.078 144.6 454.064 cv
143.904 453.692 143.764 451.718 144.193 450.937 cv
144.757 449.911 145.813 449.37 146.872 449.185 cv
147.842 449.016 149.497 449.096 150.264 448.369 cv
150.839 447.822 150.209 447.078 149.508 446.284 cv
149.116 445.841 149.473 445.106 150.053 445.106 cv
150.053 445.106 li
cp
.94902 .6 .0784314 rgb
f
436.232 432.893 mo
419.913 432.893 406.635 446.17 406.635 462.488 cv
406.635 478.807 419.913 492.084 436.232 492.084 cv
452.551 492.084 465.827 478.807 465.827 462.488 cv
465.827 446.17 452.551 432.893 436.232 432.893 cv
436.232 432.893 li
cp
.180392 .258824 .439216 rgb
f
462.539 461.666 mo
462.539 476.196 450.76 487.975 436.232 487.975 cv
421.703 487.975 409.925 476.196 409.925 461.666 cv
409.925 447.137 421.703 435.358 436.232 435.358 cv
450.76 435.358 462.539 447.137 462.539 461.666 cv
cp
.231373 .407843 .768627 rgb
f
462.539 459.509 mo
462.539 472.959 450.76 483.863 436.232 483.863 cv
421.703 483.863 409.925 472.959 409.925 459.509 cv
409.925 446.056 421.703 435.152 436.232 435.152 cv
450.76 435.152 462.539 446.056 462.539 459.509 cv
cp
.356863 .529412 .890196 rgb
f
436.232 440.084 mo
449.861 440.084 459.953 457.693 459.953 457.693 cv
461.303 460.048 462.465 461.238 462.539 460.34 cv
462.539 460.34 462.539 460.34 462.539 459.509 cv
462.539 446.056 450.76 435.152 436.232 435.152 cv
421.703 435.152 409.925 446.056 409.925 459.509 cv
409.925 460.34 409.925 460.34 409.925 460.34 cv
409.999 461.238 411.162 460.048 412.512 457.693 cv
412.512 457.693 422.604 440.084 436.232 440.084 cv
cp
.478431 .65098 1 rgb
f
437.162 473.727 mo
437.162 462.255 li
440.107 462.255 li
440.861 462.255 441.551 461.65 441.646 460.901 cv
441.942 458.606 li
442.038 457.857 441.506 457.254 440.752 457.254 cv
437.162 457.254 li
437.162 454.061 li
437.162 452.612 437.564 451.624 439.642 451.624 cv
439.642 451.624 440.235 451.624 440.968 451.624 cv
441.697 451.624 442.291 451.014 442.291 450.261 cv
442.291 448.514 li
442.291 447.76 441.684 447.078 440.933 447.03 cv
440.243 446.987 439.37 446.953 438.43 446.953 cv
434.611 446.953 431.999 449.283 431.999 453.565 cv
431.999 457.254 li
429.043 457.254 li
428.289 457.254 427.68 457.863 427.68 458.617 cv
427.68 460.891 li
427.68 461.645 428.289 462.255 429.043 462.255 cv
431.999 462.255 li
431.999 473.727 li
431.999 474.48 432.608 475.09 433.362 475.09 cv
435.799 475.09 li
436.553 475.09 437.162 474.48 437.162 473.727 cv
cp
1 1 1 rgb
f
438.43 444.953 mo
433.309 444.953 429.999 448.334 429.999 453.565 cv
429.999 455.254 li
429.043 455.254 li
427.188 455.254 425.68 456.763 425.68 458.617 cv
425.68 460.891 li
425.68 462.746 427.188 464.255 429.043 464.255 cv
429.999 464.255 li
429.999 473.727 li
429.999 475.581 431.508 477.09 433.362 477.09 cv
435.799 477.09 li
437.653 477.09 439.162 475.581 439.162 473.727 cv
439.162 464.255 li
440.107 464.255 li
441.86 464.255 443.408 462.894 443.631 461.155 cv
443.926 458.862 li
444.045 457.934 443.768 457.011 443.167 456.328 cv
442.566 455.646 441.686 455.254 440.752 455.254 cv
439.162 455.254 li
439.162 454.061 li
439.162 453.874 439.171 453.743 439.182 453.655 cv
439.279 453.64 439.428 453.624 439.642 453.624 cv
440.968 453.624 li
442.8 453.624 444.291 452.115 444.291 450.261 cv
444.291 448.514 li
444.291 446.709 442.842 445.147 441.06 445.034 cv
440.464 444.997 439.526 444.953 438.43 444.953 cv
438.43 444.953 li
cp
438.43 446.953 mo
439.37 446.953 440.243 446.987 440.933 447.03 cv
441.684 447.078 442.291 447.76 442.291 448.514 cv
442.291 450.261 li
442.291 451.014 441.697 451.624 440.968 451.624 cv
440.235 451.624 439.642 451.624 439.642 451.624 cv
437.564 451.624 437.162 452.612 437.162 454.061 cv
437.162 457.254 li
440.752 457.254 li
441.506 457.254 442.038 457.857 441.942 458.606 cv
441.646 460.901 li
441.551 461.65 440.861 462.255 440.107 462.255 cv
437.162 462.255 li
437.162 473.727 li
437.162 474.48 436.553 475.09 435.799 475.09 cv
433.362 475.09 li
432.608 475.09 431.999 474.48 431.999 473.727 cv
431.999 462.255 li
429.043 462.255 li
428.289 462.255 427.68 461.645 427.68 460.891 cv
427.68 458.617 li
427.68 457.863 428.289 457.254 429.043 457.254 cv
431.999 457.254 li
431.999 453.565 li
431.999 449.283 434.611 446.953 438.43 446.953 cv
438.43 446.953 li
cp
.231373 .407843 .768627 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.2
%%For: (Daniel) ()
%%Title: (Mainmenu.eps)
%%CreationDate: 5/22/2017 5:28 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H#jraQ7r*L,4lo@+%Nj0)c\8I80H<OGS.?pI9U$pEmOO:km9e8/4gg[79qP5[Qj^PkMTakKhO*3X6=)O@ML@#M<3Zs59,(@
%`Vf(;GC6]C2a@2k?RE),P8BLG';Okbnbh&V?i9TXa6ghTpFOXNY!-ZGQTq"4*GmG^(2'OXk8/W9/:Q@?-Jr^t_'b_os0k-S4o9@W
%5M[=X!oKDo;nZM0S8Qqkk8uUK'0RqGY^B/PrqckH$S&sD<,Q#lo)X_TD(dQ9),N7TpW'K#kp)mdXtTh@LX!fW(+MNJA\7j.5N/`N
%DmZSAeb8%cHujRR[Y)a%1(eJR#p2p.gUEZQdnBGZ8\>F;?N+Yj<W#(Fmlt:'"as%]K*5H`?gaJ`6\3!Y#lGKWCVRa<E`,YsHd3-d
%/FaV+h4T[_Wo.C/?P'=E@*+bb80#I<[N@])DD&CT=YNY#C@VGg%0!&@r66o#FJC7aBkaZ&WE!\B76T2,&<g#_NH'ufs#f!6qNo<2
%\!uFF3D\c'r:8C[mot)Zrc7Oi=/XgE^[FoM@E^Qn=Z6`GSfM`FiM#f-ldH<fCXPZJTC;PhF8g'($)DfhHA.RPQUtKXcb@$fn8e-T
%(.h9l6b`T1h>MHh+4SXR6G_%!n-beRU,!B*JT?%1'YG&:R6Y+0<e2"\Wf=j:q#RG`qt$"q-bI,!kj")+dS-<@T:[)nqD<4j]DnfG
%dlR<4rg+Q3?,+&-meh#0q0MRJ6KuJ]gE5q4X53=*liYPL"hpOGTb0QhVe>Jne+eY]K.=#fEbD?/olk'<Kp*NXr;>5lm^)c_&#WLu
%iRd7*=!,31]fg`Am*")PfphBiVt8.Fgc>30c2VU@?k%MZh<*r"n(X&$pUff&hX]j5Y"gUYe'6"T5M]-XFRslAEM(,"kq2g]MgpM0
%+''dDMcbN\rTc[?UJ=Uo],1M1l=+i1qhMN<X&Je8[JT.\o^(U]ZIp6orc</[EQBAR38NpZk7d^-59[.Qo$-TCHbT=;o&QF,&"?K9
%L6j:fKJ.4N=9gtiB^$`M-[gj>ae*b4%EV+m*jrP+&,^U_42)!.cZ\bPE<`Uimogr**HCfaWW(Fd+5WNYSm6XKQ)>qeotZm1YjT6_
%\L*qU?+cg-FEVgGCB!ql!cIdXZFeb\2HgQk_gQI,*Y`M[HH?$Fo_9OMZ.PS<T"I/BI!gEaeFf'@n`Ogd[[drpq>MN%3hiV=HKqPl
%gYYdbVk$V"Ir15fL;X#aA-Z"R6;00t"KOu2rbd(f^&7gA==#X^>k%6:Fn15gIJ"NRIEKlC]QjEL9]isOhg^'g3BdI`nX%@aJ)BWO
%+1B4RG?b7p&1Zrr#&tq:oAf#[rp0BdIt.H6;:B(lR]^D!kUPPSFGXrOMdjDTCDEuu?OOU+kP;I[N%W;?ThE:'_56'>iKA;>H%FR`
%%G(rij_Or6IXO,\ZhjL(s-MH<KeBB*[=em!<F)"b=/m`#;$jX2/%($7c]qM<1.j&nDcE^3.`unE.[SMEH"kI51o2h*Z7L]75CY"]
%EX<2B8Loe%A1<47M^<Ic->Ht^@^o,H`<s4^fYS>&TaFqEr:i0:HR/NTcn\U$r'+j*n8$s^WSJ?hT><C_T"n`$TC<Z#(&b;82-q3d
%eHPXcIYF*c.fO&Kn:#lGCT(Z1^TPkYDkjD-[mi],d-""Nk]\JP'VG`7`<rcEJ16%(YVZ\*#FItI^f[[H1mTs>1Dl5m`WQu&Hm"CX
%$oa+U?@o=as7eL<mRQeIKhM#K_H$2=__pIic5.$He4@LdPi/]E\CU(G7CWJ-10hO:o]+\>'MPJa`mi"s)3FU0/Bu>=l_4SH'Ukh*
%\ohlT]!h:5T#1V6euO+6$S/<3L+6D1D2k["Kd?e;ZqJ$:lWGqU1C5'u5U:YfAi6ZA)6APrXGk\G%;SDJW[V?c<Nr(=]S?):K138"
%27T*Y@>,'G7XFKm(AH6?SXtlo^c&]'?otS=XtA9ECZ1E.-FfAk.b?;?+(uV%:=9\`$aG]D9%QgSl&=1G[WY7.Gti.!Xd1di\Ge!n
%URHT#H@AV*W0lkmb-E3c]%"l;pJPc$1%56FI'$%h;:rHV^q_ErkDKDBGQfYgp"aDN?f:NM?&9Ia/o*-^,efA:d9m)P"g$Z$eTrd#
%AShg&;(3ZIG1ED5\7\7_Re\^r!70Z.=7bN2P2X%?g$Tg`aFB_mgO[bW7Cgbt7+95%YlNS[!j<?PWf!OfPs2=#A0ejoKrEh*Ki+,.
%(CGD_V,u0Q356kO1rpI@XF7fb_@ir9)@-IP/lsP0$P?M9b,g+]6)5(FX;7i_>jF7$S[D])P=Lp0(]Ad]N0pDl9Cr2R;eD]ErtU%G
%hCEoKE8gEgjVjT"(@WRMcbnWAT=nFG[A)P)r@XdLGg5L)[FFbI;\+BbX>F1tFItdMs063sfmpk(#.m2K\u#icF?^-EU%h:(AkC0`
%8W.b+@&399!V-*@&k!bH0hI_)$eb*>0%[o#_YlHf4Bp0A-5g`B3=dnZ,s=hEQLE!>c_E%p]c?bd#4KKKnR)&DeKjp.!MpDm>N.03
%CBh2ll2Lq;3"Q&@:b1`9:h'YK!d+W;>(QbB+[Onbn<`d!"_e/KV]F.a#.P6D.c<]%pl_:WjJ.E70je3QoC:EFLT?!\<V0MDY6:F&
%^W7FH"IHn[n^l3m+YI(%5=_k/CERcp^AsEaI_R/R56DdRP/*/IW'E73&5L(V7$9&;lm;STON@P3!cA.U$:Jh>^EC3UF$N=a1]c*D
%/Eo*JF9kHA%LQ=fEoo&e1XL.nkrFXn*'p<C77=B\`XL9,,b?/NWDM>8I0YUioc9t#3"8-8"s?3FK*L7HPpCpE#_r=nOqW)*,WDN_
%+Xg.MEhkbZCPH:$jIW%Q\cX13j&`h^Ws]h/*4mLGL,0`4]NOh0SKmYWGRSRX/Q$ql0n]i6bm;?$#)O#qakBTX3oZ%:dHO_u[4Y0W
%Qm+CSK^ltm`A*pa))*S=4Z`PH,)MAu;Zn]#l&dCj/En4S9.E0CT_ba8P]8.g3!2sbTP`4fUh.oZ:t'Fl2%:d8W+S,M'/Zh#c'fCs
%`^T8OXTHM)<"sU>mE3a)nKd0^aF0AmCMMcXaA%b?/7Gefi!gF&>[5Ub;GhM=85h041S=8RKCrg-['CI[RV3/Hg0)5Xf.]LJf#S3L
%`gkXL"`$HO>g@$n.p;t*B+*l/\-gFllHl-RB<9E0Qj:Ga*d.:9`a85W0AWQ3rK]9EP`%Z`9@iL*B'XPCYMD8<(9]#iAEqP:UTSBH
%(2D9A%:)$BHVsAd)qo5CDOd?RCW^Wt7@@DdkN_qY2,uoTeDtbu[Hb;gSJR;0BX[>IG0PB:=jL[.$YkXhlCQ2k>e96Q)QTH&oiu(S
%j_+Y$$3)J[?,PKk%mR*K69'EE:dsjh6*jYpXWj+Y5eY5p/5c!YW#BAsKiCfp*.LT?lkQT(>R`R\,38ZCi_E/);Qsc+\O\WAD68\4
%X.&FS3SR5<-a@5.fb+?m"RAt'lE!Pqc%q91@+?H&?.7/W?k#1JfNH"UXks:d]PFrd@Dk\\.cT`^"@3Ke!Y()K.4e-M*N8<>+;H.n
%=;@nkB8:b*bh6GJqq3%^(7DMN]N&QrI>#&V.bI4R$q]!RMU3Q9"4-Qs&QqN<)Y1<Jg-KkcK@gM<Zg-[OKXl1\Bu;L)_@2`=p1g&,
%\XtaJ1H/et#@Y@%Cb<Ou8N0:)6Z.A.m&\+KW%]aQcNnJt2^9NjKb!].pN+,+:_'a]61thsJt:/3UD42<kWh3H8A,/n[NaJ$B'Wq-
%P&@[0_t"G54dR;k:oi0?N79Pd1Xa1W.Trp*XU2F1.Zg4"gKW%uk@C!29orM^W!dtPQG6D/b2e`E,"G;CqUU$SZNC$gHst;>2P7N%
%1<ta!89#jN>8-\'#-?JUJQ+'h"(&n,%$W&2lii>(<anXD)qOR0\eMbR,g6cS=4HY=UtmUnZ^[(h=-H[dBm(5*Fu%P5:q'Z5DJ)PM
%1TU[<]hW0ch'2'*T[NoX5g>to)BEP3\NXX=>u%+Hk<4@3a+_`\`Rf]BQ5aY`(FbZg9.Q0p\/$C(Eaj%-d`ui@d,\S\(*ma9d2S6%
%(!@)O"e'"Sj7=QNnf-Zhh.6NDe/11%"93c>)F`[,^A"qF,k%p`=,+7<q>ZU+!:C5XhgOX0"\0_9Gb(.#iNN8T-%AS=q\=INA'M0:
%]FELkhdY#$?mZ4F)1la*7(c(18C2E%o/haTE[LMfVn7a3&3nbPVn7a3:]VWS6(<ZW@*<b;dJ@G5*M^G2>-K^MU7i!U;AI+VftSM!
%n[>k6YKSuaid[KY`Wp*\Qj0*Bl_&_hldH#]fJh)A+,WT?1canZ#u3k)ZR,_</glp3`5hg-l!j+KF%*>Ki#G_#/D+CmS6(S$(\r#&
%0#O%I-Wn*Q9?_O5+6.`\:a:8HfU90[>K$&[ad7(^O]K&np]<bg7e&OSqWsemM<hA.cdq[@X1[ChbmS:19<)b\IDZ6Z)/;"[>kPLk
%mCJt1phk8m2:&J')V%_agUnZj#1rGKi!@+!4AR@ebluE2*,ffOTkuDA/jXjdPb)JH7C(XC=H1b1<qV/F<]!X,&#TCt-on)t=I%>Y
%Yi8@a+'tA?3p;m'&$n+f$#kPU=-8mp)V*;9Bhb,0T30V2GE#AiHSM]:237]plt#V2#o=:u:(MN53+\7Y1m.s?-**S3"n`5%S#@X<
%A^A/Lk`ALB3rP$JVl0ZqTGU4#'bV7UV,3s[7s&G>^Wj&dZ[[G\!q5P*\W$d-p@"I8n,W4EISib47WD,?77/obH)8D5OR9L;#_aQ4
%9p8RXOu6:%-+7@]bLp30GC`bk]Z%k@eq1U!cH`HB_@j\'^0o-a:9:I/;h8?#D5u*[9'iOS23limjF%J^$=M$e;'@\g`@O;T3+&cY
%K<Kkceri6u1X[E*%%rRs2B%N1cpX$CO^ID$ej6787\n:!gB9Sdf1F1<7buk]PRC<_P3?,/^UYkO_?K%t*JY<ppuGNsW)5`"[qs"D
%k,_&*&=]^>nN"k:=@D2b"Z<0E*:HX.-`EOTOlLph7#k=j8c#^T69"fX\[NdQ<MY'N58-bbI\RP&WCCD*`V!ueFUCe\%1X3(R$V']
%7^^aM`W_8#C:m<(]3Ys5;]au2)\g\sinEXV12M>?T)E=@XOnN^AjC)2jGH1&r'5J:]&-KZ*VD?kr*6p2'mm^LjrF8A5=(hNWdLtf
%#6g^Ylns.Og]]Qu-8ao\r.6X+/p?^CphL\tk8:slpIdsUGUu,!#Q^S165`1+Bd*na<3><_,M'ZZ):g<`c@G?qL1&"QXf2hkF%P@a
%$Q'Q<1F5KNAe^HXM.[2UB]e2B+0kS-08](uafCIl\F\l.O.J*&BuLo:LLu-aJ\NFrT+T*K`LB$b-k-mLeo\^/\bJ"]h<:8Jd;-_K
%m$bf01C_J]H1[i/*[MK"h1e)3L=C+*?nQng9"/>p>a!7s,4:aAn1\;cO'fHm4NH_[Nnq<,Ia)m23QLqmb,u]cJC+?CUB:cN!:%!9
%A_J$i$T?l3GNH%5+M-.>mn1SC3)"pTFeiG/bpY@4s2WZC#5B2<_RgP%j!CcYM6Cl0_/$l:@D.eA>.D=k:pcccjV0YkT#_eSje_QP
%U'h3:X(4XtF/6lt]K)#cGm^Pb8']!!:l#TYD!:[NG3Bc4fZcQB0m:k&j=5?>Qm=/gFAX3Y/E'8`MY66c.MN?('o1lR7J;k&X'je0
%")mT:4JFU(1GJH+7*),/C3KP8,B"IT5McG%>X0$$S8#opk"L'AYe9'Ja<rSRj;_Je6V;l(pPI.mB(ReR)H2-[-3p.L1f=SIopd"N
%jOo8+QgE6NaB!<+5Ni$(%_rrP(d6uF`-jVN(u0U/0gI,CrTB]#m.t54T44_U/FXQ7n<"3B!bh"9cI&$"H(Jfu0OTX_I.raM1tPgI
%1DCBf%J-tmhEZ/A3!#K$CKg<EXn+QAaLJ,'.Yb?GBslq]/4&,9/o;*R(?HB*/Ido(EbS*C#c1>)l8FOs,.c%?YKUT-]:d/'F7$"]
%.btu]G4Q^c$L-(W-+?$=(4CrVj1E%HI65H`n9!6q-l1Nbp%dG?#$V3d]D9p2L.DjhM*lG(/@Sc<YA'#sq06'TCcH(HGrr1keaMO2
%^k"lNC_\M4'H*b#Y4IsMa<G8TG3"Sna3Mto$*nA=b1`Au7F'WY\1!X%U=ec&Frsk9^k'2lQUTBU#4trh[f`0Ikcsg+(A-1NZNh(T
%m;,+-'h3k@bV2pfO-'bbU<1bq!@J&W\mjaG4CEBG^$%%;l&[H42(jeUinRh%[P]FsAkg@jb3<)C(QpYcADF"mXCXhD*SPQ<Tdc==
%Z(W3C,=]+E7Fmi:XJA3UhU*PJFOKCe\@Y62kbQZTE-I?Ck_PcnJ\-735`b=)$!cp2a=NiW!)G3RWk+j;6sTq"Mcr/F:'`[F5:igs
%fL#5f/muP8NM7&9D8q9i;']*aTSkL(W*5j_Jc3E!68c\:bY\sC<+Z\3\!6%a'1JR-!c]K1N!RV[Ds^)^oSf<d%e/[*O)>no>MLu!
%+42Ed!G)8,Zi'`!G?5g#O:Dc"P%C7Q+rB;h+BTmCJ3$p2l,$e=$bt"Bj@I&uJ3jH7RrHp]L7FAVa>niU*lJ=U#-$W->%k^Gah"A,
%2(e-Wi9-9Ie'op;,8=Q.!e9/Y8aogBAl=K-=U-'?1bMiQFsMZb.G3#A;'4nNkD:]5O4ou>Qo$tpg@(SRUNuV,%Zrk[eD^<2;5^iY
%jE_&$k.JbU'JrS.E-WS>]-<?N:12.t=J9)1CBBm+8<i7gZjP`#`tHu4/m^6AQinkB7SV)]!fSi`<"LSq<ZnK]-*>$!)&M^b6,nY7
%U#B?X9TAoq(igWj@/O4@[(@O"=OGi&AA5RgMTm"Lrg(4%MdYI\bEptr76p!XfFkXR9k&0Im2cZlk;>Isf"</Kg20'L[85Q*4H*O>
%$&5]B(@Wi3[Q.1[S-Bme`ke8^R<5+3dl&X[2Q4i(#+*rK`_k86GWDjE>i03%bQrl;*C?FXW5UWJSDH>:(Zb"OdJD;p7TSS867IrU
%YollK-!+&7d,YhA=PA#(-7:2?e?jXs,)<"&W:GPUb&n9)Zl+DL"1'+\]nh@G%K(N<<)jSpPl]mZ?q7h@=MJ6/s.#e\PlpR*>V3hT
%`/;Q?o&`?T2,Vi4aoL%;:hCZbV&,FHPhC+KK'*@ng$^inNcP_9Y1\6[$!%O4PoBbI$/G:VJ;Y!Y67V!t!#Hk<"P2Xd!#Hk<KH*f!
%!*kK8&>7nc!A6joiq$eMJVsiQ\B@.Lef=!6]b1FKf?e!I6@)YbV6c*0,,ioY<AuP"?*imd2m-]c1'O57fsPR"R7Fu"^ZXFJ+&HP/
%:RPK<];ilIZcg:FPiK>pg$G0<.tJG=_X)Nb[g]F0.ZC;J3Bp,o!$,F#hSN@):M"K#=.tVf/^E2=_;reXA`t<!12PpO(oXORL0Yag
%M"@i&QT*rZ/\!Q$bnW;T]iu)Z!luL;8hfIViE_D<Y]r+%bVisXB;9Z0g9:n<D8CDBkEXeH*O]4"C$e4N*gZ6Mh9HVs_!13G,VDG:
%8^KD,^muUgWCZc&kS'"A+m3AlGk6bsLYc`FA8\D&_$BTmRiGa27u%[n_=.r.=lKRQ#JST-jb2'"pIr#\V8X=(-;fOMQ@<VG$hX9,
%mj`.OS->\ES+YXBpSL(jpL*eK_?S,Nc24Ahn'1a,JKN/6"Tu*I^jl?B[iopKr4@o7YBLi;2W`3[`2G$lUGqGN[HPh[0]k`9aO!O2
%M),m:b[<lNK!VC,kmN58<"X>91^aJCMh:)'8^bE!-dH[*qLbW42hZY-6n9!N9Z\H'%u_6S\o+C^qtpa"5@[lT_BV_u7`If&s6)G>
%SkjVh[==K$>`7o#W%k^EqQJQ]QOi<^'unjbX1n*Z>o2!-hs'8<<mq/FRSb,g2=P"PAs=@P'cmq:N-[!nY%olGOSC$Q?q#%^\A?;m
%e22s0'$OnAAArBlgT839D^M,JnWHVJA2EaD^>4\9OD][^le3O.Sa[J2_oV'JLfh(c&KVG@^^u6!jB0DbHbAsmJKL?/Rs!@_L@oK4
%F;n!+/0!>!P8p4eaZS673=B%;duBHXJPu?uXc1''.Hm"oC:Q^CQJ;!MU23?OWrNZL1n@cY#rR'5Ss/?86-&%2lEe6IP*BL>fO%?`
%^:1htp4A]melT5n;@C_'@,;7^G*q/P2@FI>K!GBk.G,i.!Q5UuM%,-9T94qsD#aM8o?m.CjgRa!7d\Q>6?*rDS0m1$!ZSKL8!Qi)
%=?E&T3oP/hVf-7c]kYEtecP1SdS(G;do\E1"iJN^a*d/+q>o38H.DJd;rT+T[ITKglTTS5YFD>3ORl:YT*B8:*YG&LXc)+9rbDCb
%E:09I\G\_&kKiQ#`9e)HEQX>H"*+3jDOg9m-g]tcL7tTI!(WS9#W3rZX-2O^Gs[m0Oq>Wa856DWeL,JQ*;EcoTR&]$*Wt_>F/*Jc
%PA2"B%fphY`o6<aDQ]EI<"2>%5h`W?"%f0a7b_/:N]G!RX!N$p,]bg7W]2YFNt4)2P)B=d9=N`t:%re.=2]GR&oS%4\)e-o/,DVN
%kn,'eJ.9nZFF/JG8&TaA]I1XE5lr/:oL-/[hZL/\^17'SF]Fq:lnH^[9b8@=Z\Qa0k7p(2mZAA`!RLtsLS?pe83I756P;dVK2*hj
%4d=t7"Ppo0V7qQ&YB%@@o8p-R?Qqo-_NjKTlJAY.a3(u:Ai99r-'?"/j*#_Gm[AqSe_'iVjpj*VF&aBP-UIs^V8&b>]LQk)UqlP?
%MWft<&^i5I6W'EiH",2i<^;tX'<n2j/EfpKO'I?]:-?Tbh2;Q#Uc=/VYh>!1)6-R<"'q&H+]6en::.qOZ#\c`'WWhmGikZUL>]5u
%4e)bul[g?i/*+5T+.!!.)cJcVY7?(bk=,"tGMqD`K'#XHDAh#dqctGB0gt^tJC_d?4I!8_J)Q_P_Y`Pj8tq2C&oH,D=[G66ZtgW=
%5koO8A!p/gMf(.54ulCb81KXO7d-WSOV-cK>VLE.C$Schg``QDR*ussHFdJ(W2H+(5`pKQ\Sb5Rc23gKlc?&'<nH\F:?,8%B+D^G
%[dVn\#<?NTi*o!b(HF*gg,[R(R^f=!8CrE"Xr/!\0d)qP*9MsSS[/U;kE>2nB]6%EL#_RmR=d=PPaSUoi.X#h)]&p"'I8#UJg].a
%'1HWKG#2[P9bd[L%G<LMaWM88J<+eC#YKZABq<Nt1#Ki8nP^u,[WD..TiGW55:Emr&l_"B[#,Fu%g];S*UaLHXePU<5\O0Wl^BOB
%0>3f/.$Iq^r$mVA6&ekhqNXRjRQn>U,gVmcAf.2%aYi+$Gr0H%?-PoJ&g`2LB8n<K1WF+6/!!KgYtGF+6&dV-R7BHE:WAZTh@o>g
%n@!MWXc<Ng&b)0`drPig%-(VCU0<V'@FSE[Ofg*Yjj@_IOJpO&feWYaVLjcl6_\j:8hUg:cmTo:Zil6JE+lQs:hU8%<<tTl#7tVP
%O%(Xsk%&n/;@#?DC.X(LaL!44hpUK4J:?Y^S8&/na-=[q:bgF7TM/.6o)Mi<]&H8hV]8JUSf7O>Y<G+jd5a%'S2Hd_cE1f;)<6aP
%<KbX9*XkIIQ\>jCEHgH3EX-oSdUsV,nik(tmrY)+ldQfAr\(U,hY64RXbL%_OUKHkK4p4$Yf4sLD>c*-=YNGWJUrDE$3mL9TfSOX
%E#q\M*HEKP,F#Ih$()8Q!\#'?9^E5\PX'nb`#/n>6bdNjJ0fcU,k8EUnQF9n3r`TFp`6pJ('!i;>T-tghi\,Ci_Nio5s\;JOo?Qk
%K*.c^G!.HF0Q]l=8XDi_'&:Wm]2E;=>'WUg-gHM5Ac;VYI*ZOJAkfm"Z2q>qnqEC*`cqXa,+.M_'9n'Q?H@H4<HG+Fo(bL!I7#W#
%F/6EX8Y-s)&qT@WE=q/ildt*`f?A+V\ij[(`7;C.O>ig!dfHgd!mn4UEiUV3Uh&tpj]nB0Ml-r[)U8c@n&FsE3EJ%9Q=`RJRY9uT
%c-!TT>e,`5E\9<RXo\r"lCD-PF&:9:00+Z%'s_g_b"jP0!*G?1J4>9GYMj_?JdN8M2O:"d0HS/AQTPnN5G)u<>0:`?R8$*Mmog7X
%jY?7T[()1/U&[SgcHH<LcX`B*8TlO/R1L7Y,(h\k/,^NR2G`-`cp-u\a^$[H4G`;S&#'C359KIf6,+_FFYO8u&,fLVqq\PW-9_k%
%"+_-nUcn[%%R_BOb`eL>65X9JEj1mcGGS-0DQlqr>UTU]dCtPFO:l!'b671]"WHZ[%Da$+6ANEojNsSqn5'T:JiO*>qn!t=@E(&.
%d?q!)p'J!E#:^ZtD34.j$gJB"Ifj:U*"!]&TW/6qXU8[*j7,$t"!WB84O"e7ScKH5.%C[aS:$Th:-M=W1R_4*.2]`=k%SS'VWR-C
%Z(ES9Vb%GOS_`n]7-ud.;_ti9:k`73!od<?NRaD90po$I&82`:)F`]<Khb)&I@C-&Thl@C,=+;mDLCmnZ+WD/4m:`dCp0JB%T[R*
%b2aIQ&WSdfJs!cm'O_u4d'(J]pYnmar=O']AU1T@i?N&kXEha91l`\uf]tB/?:9Kl>_kn)Uj;T5!?]`bR/rP6--`@j@UKraB)(/+
%S1LE;0p7D003F`HM*f1<'U`d@Srp52#neUT8;Ig<Frj&-UC*@/+aPX:7Va$C@#95<>/&.i;^<c/e&GoLHT[UP%.dm0;Kg/U-l5QO
%"@tJRd;qTEjb]IroTlZ72SD!<9gC;7P+s,LUI3J;gKM8sC4dBu&TP5Sq^t9IYEHL.9K6IKpN>^Y*P/KIqHUUUbaq8]Z!051YCQu7
%r4Heba@)=Km!Lrmi+=>lBKNG?Y'2/#huYXS+2[qiTRYg4]BbPg.Q[e\3Tk79k7K#nUuH)BiB3Lo>dlJ!N69Ih929Y_nS`$FNh?BU
%,I(%a5m'0Tb[h'<GZ!IdFr`umg^=+6I>J@:=GJ2_f7NS)/_Hu.oNnDV.(*SMP[_ClAcZcNdl5+,jqp>8iJGlr*e_A"`P'TljFMsn
%hcfNN\Q:%CaPSmOEf%>NpmLlQC%gjQ&"e$E>_DIE3e`f6)2kF_/uLOePL&6aC$e:fK#_Y%+eq'pR[3=;o)GnaDp%mTq#;Q.D+XG=
%Q/p-2rEb)d:\:>L^R5AAZG_Ab5-Q=:SsR)Ab48+OL4+35qLa201q#@c3$,R>clD8qbMs3WRK*F%Ph+4gD[-9)"CKVgn&FjkF@)H>
%3[T[M-!@=$Z8)1!3H\p7/fDCNjZt#V#2"H?`Z-hkbJY1?:JgO1*p:^tb7!/fB$!UYAIm1E.c/C'-ohg%+H]:uGE<9]T<kCe&lQbl
%e:KW5.#&.VOH!1uS74=Q&]Q@j'p%^E`jDOL^Vs'GnPbZ^Ak#fW.R,55d4GQ9@6>gsVm7JP9Z?h*QIO6<5c/V^2%k.m@7[B@.AI.M
%<E&=`1ntJ\8m4fD.*p?,=LIbBn2X$tj;at_/)SO+Y'_<LPnbGr,O!@m+p;K2k9-V8d$X2FH:*)tdK^s2q,(V0%j-o*+\CG@nDCY8
%Ii`EBg<rRo66Dqd+b\:hoO1(j1'q%U#)g(17BM(P@s:8TLe``t+f"Iu;.nO[*B<Uu,7:DnKoS3H7m5h+^&V&T#Up-*q9WMY6B*up
%*]_83Ehq^5=#]ZW9mgLcY&!$tReW<uEal&J/jqQOjV2MWR@ZD6T_7kqR.mVe.OMQkJh/DoXI2YFgd2%jMhc&!E3pD,qP<^HFY/.u
%YYH=dWo@sJ;c0N1bjOt;pKS#?#`nYs`YHjoP$T&N5BXq[m"0qPKF0TPU,0p_mo.CMqJW:['^Dk"kANR!A_<t_Z@5Wmi$ohIKsmB"
%<p>BUTs'V_Lu/h3f7M;$'oHTA<?s#-kj\mBdSLUK)lqbq\;J4(en$V%%oJ`6\"\U;a);'p[<-=aB]qHR7\E:[mh3g@[D4VI>`kOK
%4N'.<fE5)rs07_c"%(ps`el9n-lOV6!Yj5kV(o.DTj"Cl-)eZkg-Vsj[895#h9jGcX#mj0a4r-fn;u_:W9P;a7DgBA)eoBG,UKhp
%e8g&M#N5uh_unCM=*BYPd8O#umQ3I7b<sX=KXsF8_`DR14<."2f)&9#Dl96B5:FXc)M]<uSXeC3j4VC`Jo<TGGZo=fFs<SgInY&C
%]4J9@AJ*]2MY>iUCd,o'6CGb--sY$-4"+r&B6`u5p,'LVaKYA/kQRl(FW^o2Uc'Ca[.&&_0M>og61[9:n!7(a!"DX^!u`8@h8Zh&
%-f8j4*pM>4CRcJi*tPqY:1Xa:-4^`+7[ohYVlj-#(2Y8bR6Q6KO#b1XP<[=6B!E^*I9ImnW9&Cq0(`._:Zf2g7;u>j-Th.RmdYZP
%533*S`^ru*C;*KiJa0m'(Q`_/PaQ;7_sKg44_DH"dLSjP7=b(C;KpDJ7:X'#V)ohHai<@7CEG>g$p'd]aN9;_-YkCFI<oZ>d#\Yp
%;/Gf=MQXJm`m._rn9[dK^#X>?#i8^YkV,s@0SsbA\0#K-p0t.K-W]#6U*p&JgKUDo0W&CHc_"(9/nCljF`&,4^?0g/`/8_fpcNb9
%7K?))"A1H2*F,6ER;+Q?UFa"_/aqY=]0['DY[I2?n#>@'FmB%%QH:Y$\RWFgCXHMC?+cfJ+!'c&gNh'?0-A(EmVn'VHF7(^(N_3^
%V8FN7msDq-:.7\eHi7i:&H$kR/;1d,!O+ZhQ3P/l(p"*+!in?d_c4(&EYZGjo@=DoY5OQSRM^;&4?MQ/A+sMsSi?dF3qc@\3MU*Q
%iut%D&#E''4:HG*+jVmNGD8;Bq"'#$B:u/DF%-kTF*EpY"+p-''uB^V%_-V99_[amO&5R!oi])1gONE#(H!8bTa;S0o]l9MrDts,
%V2lDHe/3D_[Abm6@d+F5)tqm/C.n`8?1\uOZ4Y6tJQY$,d"]nRRj)@fUV:9l%@SQ(duZ`+q4Y-7=)X!LM,,D(acnfU2KS._I!@nG
%Tul_Y-AA<Rg-qi+VgOSCUt$g"MO:ld6*Vlh-Bq0>Sk-V53hCKBFR.)>SGu"n2I1ne3@VqSZs`MU4,%+iWUYB'IGS-4F]fKU."d2[
%L;!\CL'3\B%?3-C`ZY.7e,4CH]VS*rlKJ2MS+GP;@>oN=4b'ro]pnqK2>Q!=GI^-Oqmqi^+_B$1Va_H0F8'EJ.L]rTK54:&CAQGs
%=O8Qa*]/0h_8rtN<CPY<UPns,.SC[=n^U?]D%g:0`7Hm:<DC!#N]DBPlI[r*DcP>?2QV5/G!0NFDGA]3hsE<D[`=SU>Vm$`boNXb
%Q3%ZuHfm[8%7"s\kYk#`),Bu@+no1Hc&nS>F2H-lhmXaFmC\f4kb8RR:]i]lG"DD(@QlYO]()<9ILG-mh\b65c&5?aC)f0Y4mk@"
%?=0>/X%mX1Br&G!^%U31]?[.u=fe.pDBS;7#E=$ceoX15<aEhQ_??,qikC;2M2Wl)X,uVmVgJ'jXn)klBcl0Qkd-BIdHr^Y3t7K1
%kp%'k,,>;R'QYcl@NZEZ+".1Xp89I4;>dRABdrL8+>Y_Df!R916]UE;(*T67DtARUVWmE6*Z&1cke*G`o6K@X0o<'F@n#kaLq*)7
%aeq^ioC-tLJ(r:`-30guA4\rFmV0$S!gs#!T^f,oWan9Y?6S@E(Ar`Eri!l)"4V7:$V*;LZ&WtJ#F]LTF2ui49Cc<DqS7/hpfnV[
%0#6Z&>8&gUjP[Rdpfmn`(Kaltl[HlOJOq2Pm[T:l]2G)eW?^k@B,8IRB.>C2.U49:DY08(=59kt2_hKTa)QhY3Es)Z'[oV&j?tY:
%JPrfS!\8'W@b9hL7L-"@!=F=uXkji:pS`aT^.)d)/m_Bj<g'Yqd*AP-h#.rEF&$k92%!CeC<7Y-U>3L9NXpZ]OGX_Z\;@d%9[kJj
%W8u7B3!4G^\obU^eT5YOV3'L?$^=!dW^LDiN6%5,W?`K`RL6(.=/O%Ol[nco8_qqARKd/&^dJhBU+43hj@GT+E%E`7_bCu6LgXBU
%N`4[p-maE6H)E24S*ifRB.b+VrTW)Sm]ZtP%<FM0)/2Wr[&)j]-WmD]':.XpAcY>Sc;[64B(HG0c?#X<I7<HY..4_5rA&2o\(R0G
%L388.]eS5ACH`^]S.HF2Vp,]C0L7'9q5e!BpDu=DlNHUm*A69W4OEU>lu2u\E[FcF"!'#P[NC'F]^]qA8tb9A<37SE</iUIN)^u/
%GTF9dp]-9)>aO%fH8Xr1NKDA*'`osB*3#U68b0IP&LbL#Sg;9j,JgEN>HbADT4L8SqfJHrGL\&I5Jt%>-'(qppW:O9B:Oco)+L\5
%`rmh42`Gbpm+gg8nadtR1*\.,f8XB/RtMQ#km'Fh9(k?c@b/"gfGu5ZR1k!MVSb#e)7EYSNmA(slH$uIXZJS.W2<;.e0!\uPt[bE
%J&'XH7Q+7@ccpAn-0Cc5+^+CG>emi4L<X`tXSAI`2HSf/l`Y(-VSk9,)s!O8e]`<#j$LtB!^bKdams-NbE+3sni=R9cauu>A\o4i
%70j-b7ce\F0^\!&P9Q*%cbA0C/_aq7A;JpW!tga_q:'^6V-Z]gfCilgrX>]"?gjk/qbOgfp.uB#86"Wl>$"%8&.!h)5j[&#)g.Dh
%7g=Ib4f)%G3(GQJZ]b:q#]:oS=B4#C-(SeD\,7HE$"fO2B:pjI)EW?^d52-fWk?rn-HloLd$`a;[gKXKAPj"6;VF_L&$)Z2]E_:k
%l5GTADVr4<ZJFO\'Y0.VXUQY#j6#&u$h2O"?5oRJMWJj1E<RpQX_kMQCpU8$C:hVHh"iV3@G>YgmoTc,Uehl"no%7eU_+*pPPmM'
%Mkn$13]]G"4ESi'b&jKSMd'eAEkc_.C`0[bc5fTT%^JIoVr_ZIT^pT;*QbiYGa's-ps;s.TW=WX.o4UD9%+OMi.IjuVJJ%@jmE3s
%8kouo:(2@m6+g)@6&HY<5<3$m"g7W1^/l@3PTBPdY;3Xf&kqnPIiF+gck!(aZfG:8f.so3CkJt0h-Xlj3mO0\B/;NDfO$,=da0(5
%>#5r%(,8Rnmge0hRs>]^S)g+;=)EFr<7r`n8EA=/78VSUfc\ZnM-t(Ujf4CJA3hZ;%&JG?h/Z*M0;?Y+S[,^KK@SBVHR1$hRYO:"
%GcKVPcBL]6e"uhAOXY/&aZ,O9@nnJA'V0WXF=5n?Mj<Hb9net_6$hHU67Z1_ojr.q=?BlC=LPtBH;&<1kte*c*A=?G"Y->6TM2LF
%H"3;q0KK*d-ORlLr>[]hf.sm7#hV80=7u#7$..MRrTd406TD)-T)7-1!lq"+mUM\E'k3ht>FFUoC>@<(;["UJ"W/GkO)mBY+2!-M
%9t-"(gTUI@]WPY4dB?Z:+Ke?9Rduq21]^^LIO1kY,qOE,mD&%\>DWE[(mQKf?2eHt>$4OQ^fN,TkdFj2[oubbDS6=u)ee!q:\]Fk
%W9DTZ;GYDAg8Ceq\+#d@;9?RSs&Ib.Ije+i+5rb#g8U8V]6Uid1fp"#ZWdWN/7B(q`lo)Mh]YKj`ZPPmQ*Q3WJ51FCUk_Y+qkKW8
%gQ5Kr%U_pcX/uHPBHDPs_neiWP*0AV,<J@=8^+,6*&m`3RR\IA^g'!KWO$+o9CeLPdR6#GJ!`rXJaEQ#;NDss_%u87@Xk&FSb"`+
%o#Eo;\:`J9C]j5Y"'(]klFR?!\NS"mc_kBm@?_pV+4*EJ8Ei?,_/s;UA,:aV.Pi!#<&@\$_\1CVI6Q>r9euF]j!**k<L2e7oD@r#
%Abi\ll\*,Q)C(A4d0MCk=>2$<!L^d[HOeY"Nn.*U[$D3EC!58Rb%@(XV_]&dUaTV,BjrU`WY,c+S5H_U-9O`@DkMhffV[S,$V(Mj
%A$\hE=G@695'(+,%=S[Po.UWH"eZ0o_(ftq=\]LLd2DK4N8ZT*WM6";QIjLfmBedQ"+'5<fc;jUnMG:(+`(]U,c2(CUkgR!M-1K#
%)Es=$*k5-XbV6]9C"O]_-d"+j#b'7kF?oTZ!LaF4^D4R38!l'(,!:V+OP.j;WI&m@[7W."D9B-;;D-,%aITtkMs7k/joA$2`H`R(
%FrD%,&ShI?Q^#[fk%upBO9$)V(g)r(lgf5KA=?C#7ljhh8X;3B77i??/0-+"k-gXS^)/4<8s0Y7aTfoY+q]l)'#G[)_S0aT9VYr5
%^!_I-$jPl*4D<[KZeOZ>\fN=W*[fK^eA1JB.r[Or++9.EJ/-+.Mif>URM]aJUkqAoEDpCa$KHKHh+W%&BT<gj!)HNeRk#*5UkPpD
%g>iVD^p0T;8K5/5-F')QI/DbIHduW36[9Tn),9hPA04P>d:==np<dCm:%ltF+&2H+'d(],OX<Pd(hr!79_Nr`+M=CXcO*:p4X2cr
%cE*L:4G9r,6)FH@H8i/gA5HuOX9a.n@ht?4S/"%Nh=#cN8+SS/W2P`8'kn^(O6#gMOLi`2?_s6SH;ZsD)5oQl&>0Whcm&Y&GoZm6
%4d9tCXjBp`h2-=P-md533!.CS#bNjkdd+o*i,mT5,Wb-adnJdQ]9SkggH7,aqs]=EO;h5EOljU(!8VYd=IF"J9/hsWOu\IWfZ\s-
%Z]'-RB0>*<"\<89k?PsYjMS+j_[L+b8LoR4>+X>fAj$r4]*$8D1@I3Ckq#>rd$;[6k6s3-TF\63buu,-,3':,OLR@7':`U$FS5n0
%MGA%$Bqf=.[-X)ia=X_(lZF9>bh-O1)5pDTA3l(Y^1HL*a';0;Cbpa8MtpuI#pnZ#OLj[bRF;796TB4t8gr[W1nj]'h/L5KQ8Ca!
%nudD(pIH/f?7\HIoJU8O3\iF-jm/3QV,)+QBVS@ToZ<1iRK++_RKVmfW'tqO_Jc3Jgu/g?4Y0-F5flp0>k(B4ifT[cBgkFj@1JJB
%X,.gmKE`Y;=jWjcI'b=I=HPd(iE)-\\7=m\3T3ujH:3P@d2M0Mm!.jXS7YJ#,V-$(c^3[<jg>HUh;0n*3V(GC]<sOGV7_iQog:K[
%T149tU`>cl9!u<7Z??LrQb8,d8^X6'l&hR^K0=-8hR!0%Zi;3=;fm:@F5PM"NcG8oG7P[/Qd6WC\9m.9]25TFa*f<TC\L\d\(P4O
%A:l=%oil5e*O<Kqf)NN;VB\fo1bmFs8/'V'7$_WL<e9%8.LLOc0JJ!g#P5'UW@Db7lFl8EgBXs@41=qcE9=b"%U)5F"(r[@:0]b;
%T9O`JZJfksg'aghFIHE&ib"=#q$>]1eeR,$7oSP!W4Og/AH=tMG@H@]4ju"fq6CQPf)_d`WbDh>oc8&;pK]E7b6J=IF<5GD%(BV5
%0IDeNWT/@Y16oPQZ<'f;6q%d=:>5C*F-=N'E\XInbf7'Sa[&rQ)9>Ej;#%BCIE"!/-;'kNCdG92c9-hR24rbOBpWPUV`UU;?*dA3
%HlgdhP>@C::)^F67-eh7X31"<`JeW9he?sd*>3,aGD=m%-4,qT:;gd4ctjI3p\;lXj(MYhg['8C)Kd"=g`$:iX8MRr#",TZO;nfa
%C1D(V$$F4+?i965%%2d;HE<;A+cRSnkXJ?'?'PjTKW-Y"621FDjO=tLEq*SHcit"90UW18+f?Alat/![+*-WU#ekg.XO+1!FkK<9
%O=,0eUd8[+G\cAb>:p^GO,K+]/^O%>cLg8*,7Df_QY(OO\_d,Fc90ic45X7c>\\RmC+J<`AlW^iR<m,OWJtCdPClfeHOWroaX`n=
%1I!oX4$5BF:#(j3ZfJFNMAo\mEp6UKbp8](e>P>S?(RCc1G`<4DRsDJRuS/1HHI(jSaP50F;33LEmtQC:tLo+%b-;Gr)n\gSm4*\
%D;>h9:@44W'g_q^GKK$$"a3AWk;_3aHJV`'WSQt=SDmS+&efQ3U&]=jo&*)Be"L,'#q]78mM(krlH.D#c[,#[4j%Z\UEmWbW]Tpi
%XGW$j5W\SBAgT!0C3dN4)iPfMeqprd#4Tl8Z\M<j#*p-fNt2dcG;=-]3>G71BD=$EJV?"B9*p-U#3[ef1>A_/7YoI'!Cq3@Uk0K:
%*iinefe?%:Sikr9D%sQ9aoRM*9+.0QipdaV&&eohf/guQ4?>[kl*9sl^_LGll2Y('5%)6Cm2l,7C;N3i:b0oDZ_S,%m%Fm!C8?7`
%=d%Qc^Wq^>Am%V*E2X""ZjO#\*FV=b__uI)-GUeKh^!H4>i)@D?pcsljbjW,d*`#O'(aiqh[,S)pKZ'M/V,Xg:,*W*.VMa0!Sr7@
%WM&XoG+d7gm@OHRISKhHSp["$&T!Rq-_E<o)!:;g:3TEZ#sEZddp:Ed'(kr/I;Fi*g;)aq(K+s>e.*3mKf]Z@91AEsMqc+>QA.&%
%nq11L5"'6Of+bC^#s!A_8Z<MZWbVGYW;i^FmNX19$Vk=BK.G*ibZ"8>mCo=->EZGu3P,pDSI=K'KlQ:m\8u*6\M3GV(j@Tk3u>o-
%$R6j@7&c5(1"+!2';%MB^o]:(\P(khhs<Xa>al8n!K?Uklb&JjE6pLng]qo<(4[PNnh=L)!9AbTaJ-]_elh%Nl'/p%6*R4jSZ]6l
%2<ICkJYGg%7:Dc%T0uWo'fj2>SG!dnC;4_,W[SLJ9p=0n>b-qBQ;_q/6ZoMtbhKjBq3#"qI:R17@qX(nnre9:7iR2*Z\PXHdf@+1
%%=V0p_\50AX#"7(L1/#+(W28/b^t<n"=rIM$/*CcAK-/"-%WfJqMRr7="]l3Gf&)L`r6?o/`RC2$Cu5+6o]K`L<og:;G%^=IP.O/
%L?1^%D,=6iToYI[qKF"X(dULAiK)q/-%D;V5Pd)7YFL!b%Xo,ib1jMdi(*cR'<Q"YcSa*dHMf!AE6:5TF@SQ=)us.4Yu)65[O0C4
%kl?6:!lo>qS/(<"V',[Cm:j]).C\sJ-nDb!F0J]1=T.+IGE=?\a%Bc7&S<m.?@gTj?j!@PHOJUZJ,&%Tffp51DY)rab.)Y*RD!?a
%]&I3\QZNdMIUm#Cc8?->9^g0jc:T$G>BV*/R3$S:-tu095s-q]N_b3),lk)F;;Z:\4Y`ndK`,'%Cb5]&.Dh-.i$^`KV[RO=o^j,j
%;$)l&SI4.lN_Y-$oGnN9n/]qrg4t?iNsQQQ*YLMpYVD$,Vm*H"6(o>V(1C^t@mVum(o)@<+_(O,[V>i_/8o`-\&gC-N0#W5]L4MN
%l\O&J(ati\7@:\6R&gNbeiJr('2$gX,jRSN'P@>*(tkVc6?^9:VGQ<g"&?%RN[<U<TV^KI:4%P%ZZ&@jFuVpBp_$hKh:[=aAP(3j
%B/3nUIS):q&5EUo:dQteLN2W*N8)-kh63Qn0ib8L%Cp4gaQ"H$j!!=?+lD<'hr>m;H[<d-rZ#KtTB!I<\Fr(#\[PPfh-s5?j^M_f
%P\g!ejl%"G<,:Ngn4Q([Sqe*b0W.mD>pKdZ&KGdF`21g]@$gC+;*%9Bo=bEnFTjM%-(cVEkPQA^AE?+fl#XDFN#l+c*eK.DN'-n$
%Z?`sT_$.trb2TWLftAMHdu<@5S`Fq@7O@Kf20I_8W_oWj%L%#%cY:jlTaaWUOPC'Oj]p(fJT`)hHdqqsm:2s9b&KSab6X/sU!'-A
%*,`c+WG9lB/0B?(:fV`l.JM(:6!$KCNQb3V<B0g,TkeC,cHi&5*6pLd&3$Xb%$pWrhLr?]fK';XLq&;r9-`:H6ec-bX:4cg*MRu&
%"2Z"hZ>!)mXPZ)]&"Wt03Z.c8c<>(hp,gj`R!Pm!,\/F((IDhn$V7$,1$Cr,6GIinCH,%JcadmIpP5^7^.c81a6R>rDDZc2dq:Lc
%7al!,IJ21_fai.6T1lKd84CuV(!X7nADC9BDCcYaQAcbU`f2;)`fb=OageV:O+fq=2\D!*1"+!2'734_J#J>Qh8qnI:PNNFN4b,<
%]ec+*&:WADZeP9B14/Ig&Q0gi#'rAMCNlJ];b+8KR^hp+]Wt>@fu>PCZnB?KP@DY5)0LO4:=D;5dE8fbR[rROO3]+iL\S@UEP"M]
%e<gHDM+;EW;:j\'aJnKoB[l6FCnacGmbC=K?Of>.[Wth$Zr5slPgU+L&-rTLGirf53T+XN\;W1D<J@Qe=OoVcH5mE,4#r\A1C$RD
%Mp_=bhN:`5dTCF4jfZR<3*6g[9+iKDm)UWN9<jiL[1iLr(>nH?MhMgka^$?&/@/ELs.sF]4U9.D"':^P[qbN>(u4^&l*G4F\7\96
%:r7*H_6.?[2mKY(1Q12f,Wk<'E.*Y<h2n2XG"&AKbV*UZ?*(9T'"aOk]JJ_bRpi`CB6Q75cVAW''pra*@4EBb9)DVQdT2ZR$ef7k
%W]d#D^]CHn;r4p:cb^n+F)u?+4\)s%YFpb&@>.*@/u*!oHRC()84j4a<Wj\qS?01H5`(,X";"=k-ZMF5IE[rn=dnqjc2p?XG1HaO
%MXVha'0YS<J;Mp&)OOq)VKm*`p\1,<.=AsOqpaZ,&nS!R8\WIiC)B>>%sP]IG)\6-4F]"0J+mB9<=#G>?qSNH^P[UmRU"m-Jh(sL
%Yft1JL)H3<'M3KF)WJQ7f`C=_Sc_%35ckpPTP0CXgRGZ[#@j!?BTtLn,<N[1Hofj28`Bn!hQ5\W/<]s^(p5ZbP25U,>Orn;ZjZ@.
%V5eUH)tY8jF'L2+G.S9(rjEiWd<1r%Vo3RJ!0\7+=s`7H+GNi,UskqK5U:p1-;OpK8:b_<amjO_B6Sbc+2VkX#Yi_dEb`J!rqmUE
%,]>jge@<_3N=I,mUI+r""Wqq^\+7P`]F0`6X[rAeB.E[t'p=aq3%F/G*A562c'RPP.K,YBS.>I\`"F+"T\38=-ZBSH<T3"jHin36
%ClG;<[kT^W,6b4gQE]<Ma_LCEe9hm];j&_>?=i9`%5A9@3VGf8,G7M-1A<*:h^-$An@%=fkI\`\W,]Xn]k-Ba^)Hq,7LQbd&c7i^
%c4??7+'iC[.(Gh3m"Ub+F=uW;>\%+h=hELe!OLj,9/0qk__9!rQQF1($h:p!0,(\eK=$N*1-LZRkO`sXVhfIfZho)[Hd)'LOAA+[
%N.20Ps2,%9)d%Z(%A$REk2FubR;D2R:nnG@?-L2gFPrIRkbTV\WJP0.[PK8/-J>msj!rKXV2hH6ns^R>S(f"==nD5:OH#6]:h-pW
%Z7/\=3=W7&]2%q^Za\CKHj'%_q[@lkmi5Z'B#(>_?%2Ao?HmQ(g0$+A#$=A'Ah+PgdGWZKCWGK>hLpo&=<1.>M4?Z;pBYUSZ)0Oe
%PUV43YjV9WV_8kcYKO2gY:'tc*=OJ:-gNImr_a&?[c6?ZMI0AR-:603T.Y`P#8uO_#eV+?"gik7/`4AoZ)2UBJ^*Q>B^)OW/c(&o
%>\e0*n*h[J1'D4W,&NkG!k_)ohNRJtD"E,Am$IA:Q\^<KH%J%lD<1/.^37+q1ESuF7tF,=C:r)R._W";J;&[qDa%*r)\:\EV@&m4
%hE]&',Y"u=5n@gH$UNO_94/O$p,shX/"WUH:K&[le(SK#m[Ue"9tZqt3+Jdj_X\TU7D[dqPpRl!<<:F?H7C4oTj8RY,`/SCQtZ`i
%+DoR*/)sQ/b+dI?_6'f3bojfC.ogqONSBhP]138VU7rPU3L.b.F<CKFC>j:)^e:g$UBC7Vb.Uc_0'Mej>2YtioG86=`;ZK'9S#j4
%1Nf<n5)JG/8m[!k[eo%]A9W=)HhZMglB+\'H2d0BO7ZT>55Sc0H+?)qrFPQ]O.32nmI&SU(o,C6DGSYqeL[0QBa$Q]7#5QV.ljRZ
%+Al!3N1C#)BPdU3l[dtXr;<%2s1dOcs$5hP'/fT/nmDE&9TG`Tq9M:bkDa4@,\:6Rj<^*LSsL8iDnkY;OihiQ<ID;V'n[I5F5?he
%o;u.,0h<.5%VN[ZKG'+C4J6j4PV^1K$tNas=1H%25_B+qq0@UXW+p'?=SS/QU8W,"/hOHTM@"[/J5`sJ99&T#-nHYqAKAPbZE$_M
%I%,R_.\L]n9_L:lE?/*Ue$;=?2#m68?$4/bl"Z+@?DrLJ<`rPcV9-d8f9$fb!XB;jo-Q<[Cd61*:\HV[SEXdn0D&&`L::;uHs1T=
%k\7m8.o?(SH5#C>aE#(P^[7KclrdI=pfU`;5O2obas_qA^=G;ukScuuWk=@ncr5c#qTH$&gN,i,PU`<3Rq^U&=k87<SagEC7;$D\
%e5N-"+nKU4<.Hul2kaAeqe=_eo1uudVZ"uLA_!lgrNpCtr6tM_`u"TMAQ.*[ZV?RrNf50gTjWc%b*XAkVP^gRQ,0>]Uc7PD-65M^
%d$!0B)Zs,?:n-CH3scD+c6D"c9QkZ%LGRW_#2d'urQG^`ZMb/S3$\!<(AW#4mqFSOiM'gA1[c,#_o:VSB&50V;mtr&<]&Ck5VCol
%WqD=P6UcXn%-68NCFZ(_Mao"XF\W=t.NZmJRs!RV<"*Er"%@pV:/hX7hOU`eTJGIRG<#3^=!iYP9)d*[Ino/im57"2,^!kI<_R;2
%b3h@g7FKH?2QO_o^40>LSK2L5H_&Qu+2a&-L'te/STb[TSLsP`lb'QVp(R&9B[8b\WBO/(2QDY\q"sYqX67cY"J_1*a6.ZS6>Q>K
%r;>j>IAeZHaJa=bjaVS_9[LsDq>&Y*c`Zb+C1)4SQd3*g@C3;dNKR>c$_sfB`"]U0HC5T"n>_f.\8qFT7hL5j7kLFSHqtM@OIrqF
%*"YfTWcC9(C](?lU9mg]a+A[?W,WN8+3?GcMjd=(D+Z+r\Pqh"WlZ)/$ltEW8uS\W,Y,r`Wqb`pGr6q`5(?uj@;o80.i+fK(q5g(
%eXF_*[/=LA>Y`,dj8hj<kpqhf]P1=k@3*qI\jn,Tn`A#qO@tDH[[P]M*p\+#oVCE<G4qss%U%nANThC;mW!m!^tQ#V0E3m)q*4==
%&F`@)Mup`sA>Tp:c>s9&m1d:5P&f/DBRu=I@_&"p[T6X>Q;`%<DO7itpN)]a66HS8W\oRG]K&(UL&l:oTh2(+DV?LWe_`TH*L3uM
%P?$I0BRSpf2f;`ud`D50Z:/9,ldVCcca*g!TF,+so;lAL'P>p7bd1@>Y,Y4&^"S"n-0qR:hQ$UQ"d9D\#@DaZWiA)3>3flGKPV,r
%De&V^+.o#s>"<r-2qU]M.:jlZPYlUR^Ur4M=ash<mJ6\,ht:'-5e3LhBJPdA.jn!joU3;?9]RmsQ.37ULg'K,CHaeNheH64jSBYd
%c0\7%pSMTYY?uKFGreot0YgLhFUdRnL?\g%Zf@a]`b19ij`r(4)rD37NRsu-JV'5hC;X&]M,I&":/#7ALZrh'k]/@9R^f\*kYdZs
%]G&@s!`P!6kpoOD\q1m_+)$1l$gGa,/1WsE##p&PbG>&IZWp65ghuhk=\iCMXCi?ik!:sm*5:&di7li*G&KuPGNFLGGu<h%Bs+[p
%f1Fq`mt]=X2/\GF9<(\oW=;Ab&ZQ6V3-hnoCj?u0n0ggLDK'W;3[(3Nei5o(Da+9IS$qF!H^Y1:;eU;8RZH@j/'hnc5>"_R.TDnk
%j&4!u4dP81*UDr?ruBN0>F/98=rt`t=<\$2"p%fS\gV-Zg@\F16FN27mp*;W@UVmrkm.HuN7DMCm+[V#HYdYAF#kJ<g=A62,&4=M
%:@6lg\i+"I<5PE:,,qIT]9<(.4,S&FIh2s>l.)UBPAd'T*E#kE9HO2Lo.sY[?XBdjq3e<!(F!\M(W+(o&D19&WlPc`AP6*BKbAbh
%1_j#)=\h[f\3ak]-u1G'1Zc^D\!8O;0)'Hk:GL6M=0$b3[CugP<;ub1oR&)nGu9)ulYcDJd)\q/V2\>k2"noS5L7V.QR>:i-YL'9
%q/;J3@+gl""Ai`>XT$]0c`\tI:Nl1R?d@i@USFk#5Fu.unE)r0rXEfE$NK^g&c>mu$968qLO2:t(p:aIS>QVsY84N<-J#]06?uGo
%0X64!)K\dIUN<,P\tDK.N(>>IM'""M>)%kc\I`2j@:C7H^t;Xm-PK]'?`lg4-<=9Pf!b[X(2/ue!$bAf;d3@AYUm]19&JT*<Kk^*
%pbWXgE`4@jnQD_iQ;0OX@)8X;>PW<t%:OP5>c:%&$FLYPYc`sWVm`sKl0>Pa;sTjbd3;8$@=04FaA&O40afqJ&RfFf*Yd=Y;bJ_L
%BENXTe#CkT2n5kM*GB.i;^eY,n;Vf850;l?k?;]tkEoN9Sle%nRS9kp;(Q_M[%H-2$]2"]ad'l&G@7L`3k;E#Wibhj.h-8N(=Ol4
%WDtLWP$&O&#^NH?'52-!F8C[PXEr]SG\T"7P.Lm\--iO\IB(IU=nr&FRT]=>-Ed9gB2uiWPUs45SVa5%d4?Pc<L0^B8Rkok_4ZKK
%9jp[CXDi^n7>dG5`)S.tjp+Q13hB<Fl[mkfe;=X98dl5NqG=^PQj>NL`eC)q:hZ,46R<DS_+PO_CauVM1>BUITj#l)%M(e7n-FJ\
%NOcsMcSE%k@UZ>l8U3A-d[-HWL<7ssqa`++PO#SdKS`/-"t*KVnLoTg>,GR;obX.PMXMea:GT?+Q^:!6\&S8:I1("/L#Eda;l3Jt
%Z;`H7_UlS?J<&;LHK&Us_C(aTl1G75/cRA#CV4FT7.hC/6!G+h`%Cr;8hO(c&INZsc=>:jj4()tbo0T^34Y<`mE4?@!5[\'PqpJB
%)Cr>11+GsMYmIKIKs"e,FmTNm%4@>i]Y,W!$Bsd%3-iP+a5PK@Y(*UV*C/Q3:9FY1-(3't+bCb8U(+mf1AZbRY#&4-!['ieXFWWF
%mAr;V24$V_6+J-s=41Mm-/Vs-"W&Xk)n'VlBio:S8q`H?6Fs+_e5aKK!CE6M+rJ.tHjsUl\MdQj@h$4a-0t3/oG2V(LD[NR9C8cs
%N5NP//j,jX=@oYT[en/o='H__>M:Qt>j9EtFG@p1RWDVf:fs'c,T@E!(S"a6&'N+Ka]2Xhes.`&j=4aI>1Zb8\^KAOXImPe=tU5#
%^r[mu&1ZtNP3M%n^;5]/31O6ujC'Q>e6Cu&8L@MaO]5i65PaA4=B-Zr2H[:@3aA\bi^IT=4"(6q*0u:/EA9(Vf1b.JmSWK"P^["/
%_0RS1.gg2^g"P$X9U,u9+TbjPhQK'o<K_X;SCUlJ;%qX`Kgtkr,if!f[It'LD(;]MdNlB+=lg#1j7)Q%/+MO2Al'P.n;/Ld3]Go$
%n2[4^+27T4YLb/":t>/MIh&Ze_12I[gR$fg*H11bhNr"AqJ,T_^HS1Ui56AX_"3aK=-qYLl4j`Lq5/G`dJK-Vj7BD=\"*BlS)%ZR
%&HBB?mGjKrr:5Om^.8G\^$2/Ydjr/u?Tklk8!EAVLV*9HD^TuQd#$X$Y7j53l,<Jdah.;6"+&sFh!a\/H?+E/IR%iH^;oN_m$lV5
%2t+1n:H(f40=QGcln5d)Sm8ujHB7E%pKHA-d?ESk]u6E>D-0$rNK:_5]/i11c;$U<h[C?\h2oJ*4l1S$3P@Jg\Js_dMlY;MCXM&7
%=PZh5pZ:E*Ge*e9$&ctGH^*DOOCnA.0<T*gN@fXlrH`O-EH/;;c22-*C&@ReYcmY>4@FK95GIokdYAu\`:5);&]9q5hK,m,[r3q.
%Qe/<nHh+D]>jL9Gh[X[lT;"Z,B#N*Ml.Pl>IXQ]d\K/PSIlm&0/a(2shmddreW#KJgS=5@qWR5VAUcRf`3.DCDN;0/N]+d'/\Cu/
%m#,=<a'^g/:,h@:IsjH6D0J@EX8S;Rleq:3/^AMUQ^_4P07N"J%?;77Hhm.o(R+psi-cCpjKNP"5+ik05IumF_qE0"o&VPibJ/J:
%B"[-"qNCN+K2d/7knfG6oE0@=$Grb,I.eWS%XHKjZ]El4c/mUY5='>U,P.\LfnYW$(]Dq%IWL#?HH\$0QMiIt\EX<T[U8n-RIrl4
%[6FCZ3M[2IIa:BR,:`#33WQm@!7K4cpTMn%+5`\14TUsqH?/i!k+pUj3^f[O3Bt'%s'^77A:FO)_XS1si7iL&DmT3[F$dXtT"j%>
%804S81Rs([c2%.1Xa&&*&;'*-#5ibWI678iq4=@1ScIp9.3O(sVhOm`e=?\.r1MO(Ts6bAUF*YLTC(%fr9S0B$uMN,oe#PH^\dor
%jRQbFkH_])b,]sNM3h<,DlujE];#Bm=nf$;LF#q!BH;CcL.n3oSFgB:p#5eCbKW8\6YJBkq9alJZks@HIC$K:Y0XTWpBl^tLe)=:
%s&biHS\;Ts\NK.ep)1jNn,)A1FO7s;G<`BRr6nA6A&#.2@4Yl07"+e.N1l3XPT*?-d?NDOmMqZE2ZTR7RW;3?P^@bk!R:W9]<d]Z
%d?s7db[VT5".%pI)KQ".7ADFng2`r?2qi;3:5lX:BZlO8]%k$WD0N2\J67;o*Q8,8!71;M)BrekN?_)CR/S(tS8O't?9:Q`p?gQ/
%a7j5EBC?&'B-Ucq-"#+G?Q1[%,@;Dcg;qkUK!2<%c]1f0kG-0XWbhRWg9s8F,A.rUgDr9.W3hOVgW8&;cLt3sgXhpqJ!?e?3-r>&
%s3L)SdJMhk^YSV]Td.L2aQ^]LET<L6co#CS2)SbI`\fWVWJkFqLaR`>)qKjoa7`M/$emV=4,8IUqs2r"miOG(g[hK&'M0Obmth)C
%SsfsI0RMrre*`S]qami*qo/fZ[+SsClj$=`nc[TabR/F*4W]u:EQeOaq0"-USt-mC'(@iXS"j?)R^f)uO.2o.bMW:s9F".\K?+Eq
%h0]9>C1'79D&KI<n.'IRh1`rk!;M!+HJ*LNHLZH*I.lmcM6-^&,uM_]$2^)-E)`k+hMpQZ[r8I)m)%P)*\b)O#IEn)Cff[mhr90C
%ei+YNG6?1Ca\V"9d)"i\p3?9NJIOco-+j&ZHM&/9X#WS'[jVIibi\Y`%p+CX2W;s%RV#_k"#>2i]i<>\;NbroiS?a0EH:LmX&$nP
%@c3;s%a*3kP_2.(jb[Ylrq*.eF`,9!f+c4Li5R#"3r4'i8&.8ZV.eA87\/c*L5]c_odNClHoBbfm:b#B7VDJZm,n!P3S/'(c\NN\
%^=p;n&N=5AqDNV3I44j%&,UfFh!h8ar_(5.L=I<jL`;'.h?fKr(QRMVWhXN\,Vs6)"luRA12tRO1<RV7-6!KCK7#Thl0q.:QkMQQ
%UO(#QnOZr)O;.3f%s>CY"+8FKs,HjG%oN68M(p+-8JU9bK4IK2-WN:S'ReV!FT_1Q*!?cgPCg!@=/"^;hU9RjPj!$J"?sTp6L/F^
%p;JnfVZYf18"6]r]l't>2k,%qg<gSi4>u?Cf^D9$@Xt>bpIR,H4G>=(T?bXP.,F]J9JWm!li&NcEr`J.>Gu=a^Oji(NYD'6dlQ3(
%7+glO5I_`=*Rrd\Y`8-[(6=gmfrQtZe;q)#SsffYq<dm'I<,=Crf;JsiQKK8+gZM,hFT^F&AOkJs2Rt1@s7SkF-H:Imc_]DA0Xm,
%aJNQI9V+;5I6EbHA!<=*qTNdTW8J4BEH'+m:Zn5'`S2Pk.I85&hg32VhKqD'Vl(Pgg?BsKdj^l`lXP$bE;Kt42EO&B/Y'F*^_(&O
%Bcr_6W!,u_*2MkXRgF2oO$QZ>i>A@VSN*-LO9Q_"FZ@DarTt]';=@;ioCG9Cke0b91S04UKSZNnJffbj0_&'B8.=b#^+[@$KN(#s
%3Sb*8o65upg+CX-*nf1U0Dp62?:-CJqp)jG&u]DQ?@0l.#(]_I*F\gZ0L9U]CpM`DVDU?8rs5A?2][CRA[;&Gr@+6Wn>)/(")s/'
%[njRP@[E&NUrRo3T4WuWP)6#V1GiP?j(@Qu`3/hVL[d2hk5_gAJ'g9L'*faCB*2UqMt`^sDL;4pHb)?YB&C)4nlYkV6g1BJgtVS,
%rKTm=2Tq;BO/JJBm>()so%VF0K+p=A.Q'^i^G0H9'\U[!4+&a83<lb_]pDRuHtrO3UBYi"cs/SdSl9/2@I=$Y(gq.Js6:HJM1a46
%L)e_9))c@"gM2(^^>8cP^i0)CU_fTV5jY")hAgH/J)1%RVZGjHHau-Y8@@m2a6M*'-$X\n7*Rf?6mZcePe>\`)oU8%^-1U&DpQ`n
%$s>$$gS9n]J13K"ZMiP6oiU$04kX[2"&<\rg7044HSu"KT%s0ES_BY%"u,,_dF$L"X(rg_BrBCK+0/W/>;Ekso^)AJjRVB(KDH=#
%IB6`acl(97q1jGiS[c4[q>H@h=_r7/*sPTs^O<*t4Ftur0Bs.+Z53`!d8N<)%-b^(\M$Dtb!,W6#;).Q?gCJgM)(k?LZ=>=MCJF\
%0k^O$NEDFc'0cRub6,ST$t@ldO%"=4_Xf3a;202P@"d^!72`?YHQmL%2ASaZ!O*u)f_aOKW2G/7):F@/F64H'(1e%cmJZ<p$<WN9
%SN%GqDGRJbLCg:B6qkju"a:?WnX+BCfLHVdK&M\FEHi?[%VHtLBe(72"]$V%iU!&c5FhXeH[>5PA:+1L.E$tA@T!Xh<8BD1365,p
%mX;0CN@F#p%+=tF_c\X?C;fa.3i;X#iF.N6jT'h,@NrOL`C*\pIkcN3YM_;9r<b_*E,N\3\GK$Ea4n'N]DaqOfo#X9h-;Q;9jVl/
%@s.1u,GK`Z/F\H!I]Ql3UeCXeJ\_/[)Ek5#[;Ym^CklQ$%-tpLG^%Erh)t`Zn<=D))TW0WSXges1Mje?l<EG,a:H98L\?i<%.Nfc
%11]ADnqcU\J:I$S^4'[B&<CLM&*QA&7O@@f\_m#*LEst;TH:9I\($B2?7+N(QlM?,r'\02*lks@IWG8`_tJ,,-ME31P(sm1\0]O_
%!T5[4]H714Vm'TK$ijp'*!=!I,;TOS`rPTG!+p,*+^eH#23;m>6/T]nqMklT`h;c;o_f2!cPZ<1(JiBpo^1&j`h;c;oR6!Jdc6P#
%Dm,bNiSfE9E\K%PJ;9=M]f=bt"hGZ$WRa!LX*;<q:J];c]t''!-h#o!_@8/YE:<7G*]Cd;a4'3"m+&ls3n`>MB%INS93::p5qa>6
%Xo.mDEbXFL_<<$]4_11CY<7qPgJ.`rp$R4>h0fIleFor,h=8V!Z`j@REd#%-r9AZVr70KrB%Iud)I7!NlYL[6NNTU@!XGZ]U]9].
%PpK9<Lk]_p5P]8@fp<d;RhgM:A'phgd%0PQ]Gp(68a_";2pLoHXMgI8YT=OLZ?0^E94$Q^8bPruAT[H^HN`?or+U`I6/-e0^51*C
%[dS.TQsa"qq?Yg1+>6mp/!&8t!OB\Rp(hP]p/a`(bNO3H"C2od03p_d<6#BY=e+N+]eJMs)'(B*j(3>FN/j7PnM3.3%`7aVHAu:k
%OK]+f"">dh:XtP.D"&FO#O/5TWP+QIBlo;nfd?E4,OO?"#h\lf'14N4m!H0t+nIC"S(JtXk5e,m>N_4(F1HOAEr!W8Ut72HLdH+*
%19o0BED4?Y+2W"k`O$`(nWme<h@%E`!p*g#j-YG_%k&D.1#@?eJfW;nNTlcNMbId@]RG"q*\-"6T#BkTA"'..L@ZL&?iIlT"TqYq
%N>pRnEUaGsRJ-Eb+jd+D*fn<qoO5PO_0".T0DiHG?>"36?>M9724STG#I<DX4,s)`lJiu6$Fn:G5#$*+he)!a"qM2V;FVVm&8\]i
%UAEk]$6:=o+&Q8Rlbj@Rkn3S8;&06pnU<P.`>*9<[-jk9h>-a)GS&#[msD.]Un3OCO@FQgA;m+=_tIX)d?Cie.WG=h4;gN_0R>MJ
%f%(j))2BDM7o..=ZLQ>+0mYSb`05a1g*LEN(IrlXj_1>N0amC9q<$m]F8F_GaUlt4qqd;7'<6PH/fd)/VWVq[nJ$?r6TT3@k44TB
%2S6"#hnsL2kFbcel-5:>WF@n2n^*cM`HH[DrP)Fgh9cddZZ6"TokepHlLO"VLa]m.qgLRd*Ah]fh$;*ra)j[-nX;sC2`)OoE5q"m
%&6XChkM51dq:UNH,Y#7+<_o;^b+pb=d$Qt0bT?C*H8S)bq?&&TqGaViT<?Js>b/`6+0o,?l/Y)IA?bL6eNG5cq1L9l8\%HK+ER5r
%nhm3Nq[WBNSeg7":j3BSnF[mXo3Y;=heZ)lG4/c3m>sOXLZTFO(beLI2^r?o(/VdV4X!>h!)1Z=qQYt+Oo79[fqUG!LTooqZ+SJU
%)st2`Sf@(-d@U4;g2dAgXjN_e$MN6gKSVcGMf(eoL]b$J#4uXekXL2B2!@D]DD^Pu_4^[7p5LJ,YBIt&YbSK2MdCmW[eg)?U!o64
%E;:L"]h:S8rp77X^)m.?eScPdS=QC[H1gn*Ii,$=UT/V0qtB+7rH:,f]U8W;g%hiH_)WoCc\op3q6OQ$o<6K4?.$Drnict"-3[[>
%s+^"A2n\u/./S-2MTN>ks8)1nEXZ=Rq8_[E?5RP&M6TBB5.GfKC:.$Dk_1aF`0YdRPX^H&;G7jN[sP%>jCN^?Q*,_?Y,\)g-c&IP
%Y1AkbpX6`*g`ua1Q-S]ip[BI&?$ZaXGT#DX2C<QD+5E(<jWa"DI!>PoLW<]lpIIJTrdBP8I6;e!^,\C1!\NY$iQ"ln$;i3r.Ag9@
%/U<0.s)XPuWMc#\h>8#f%6Vp<I%6XoW`#$@%.[VMk'[1+g&JqbR_ji&U#?<SYbj+W2:2=p>'Si0_S8q5Zn>%Sb/qu!AFL"')K`Kh
%C[6js5`?XE-%lQmj5?>An;J;KWZ\?8P]?38D"('r/kdr^K'tRNaQdg7,I*&`=@D#c=I8?+,8QITMo"kbELrIfWV*&k\p)r<HHMl>
%_rr<K-2rlG%JS//L3k9t]$XTqm47#9Ucfo\ThTF+Wh]uJj%$nuo-<2MEMImrQ(93!>%G<o8[S*(rr2iKh]:DLI/No1Sp^@3aj:!D
%"\W2$10a`mo'LKoL8CEkAJhUS:Wp%A8NCp7>$>ZD=\cA*JjuiWpXN6s](Em@A<Vl=.]B2LXqpD26D9F'WO!(K^[f?C-q=_g0<G2T
%/p\Ur[n`C/'r\)a[*"i=%BNM&TVQY^+=u=Emoo>F:UgOYT1N;3Q54nJ<I<-.JD9PufLuUqY0cZSKo=WNH:Fd/V(&IecQD.ji)U/J
%?^e"l4/STQ>S-M%gHT>"Ms%m%<SE]0SA:V7&V=HoM5Vab!fU09^j;Y6dMSDeSe&D*!pd"3R25TO^?cqd=jkB,@!7-W^4?'2q+;S"
%(K`.:O:bEb9,rUg^hcV%)8a0G+d;U?%kiGT(U>5NU?toPQ638d1arc4K.-7EoGuW\APnfC!baCc1<n)b+$:YC?sKaTrnV\)^3C(o
%g1@F=Ie!9X(BUC/@;MCq@QpD-rq4=<bF#(,^7Kdto&oJe/q;XtSXgk?gsG69Nr>T"ghom%h7s-lL%e?V>g0qXRV28j[qFkGgh6O5
%:u,a(B5b5^BA_@nd-=]!^R]7La63?Sn39EuaQARlj=L\8\QIZi"bnHsD$n.rF2]VLgVD$Sl&`T"GOG=i!#3lWg"@hHq&<30E:U4"
%kmuP?\(dZNVs+)%ZTI;Jf0bo)hHQ>:PT'Q.8UY?54$9;9!>>m4n*I+('6g<8bkfrS-c^_kqN7m^7o&LO&QI)7bB'D6T=ha_A)gY&
%c(!2L0;7CtG$hSfkNf14A%!YsGV.[ra4&_f09[dT:foq`;:B.UGdtoo@e/@;kktY(iKmDMrYu9OpsT@6:Ka_*^'LoQ<@Ck2jt&p"
%ldiXH'%i^nRdUXa`[MK<1hS0r.To`GqE1e(O0:aJ<.3=I.JN,6kuXMCS()*DJEjJP<dh,Lospdd48$.ao$1g!E4u+,b%E/<:b03\
%Xc+Z&Y6#.D/_.5,6+V1h[X)]2\nihB)O+ZE]>"Hj)Y>@XTSG_/WBahb*%@es!Y..SJTcpV%D&lmpG."qn2o*J#L>-4oo$fkb:@,#
%Ggfs@9Vj.R<fJ,mF.6@KHl!Ho6&AJS[8Zn*-ULH?(W_qFQO5dRKOu&@,3.Aj#E:/IN"=iA2,,*>BV9KETe'StC=W&QHim$RQF<79
%$H*Gbmi<H2^YNDU#SmTFQm!sQK5&uo6bN`)FVe=G7EsQE59WM@qR2hM&DV/&X@L6U<3/U/qQhX%V*5I*FHne1<3/<D@U2(i^S`3%
%-iH.=e`?2A0LsJ@RhchKXcUaG8O)9I.mU5&frb7AGLNZ%e?6&,;M2tq.+J/%cujoE)E3;Ej'iQS%Th/0=a@t=eA0<\$U^@PTg_hO
%9IT]UVGJ;j"h"li,Eu\m:>_ot]uu&k[s5+r:AC&Vg^lodKZ,?)n3):PqjMLHp$L)#Di7KM^9bP%^--dl3@`gZ_EBC(UV]0?Z:@^a
%j!`\B:Vi63q;'6TSbHFAm<?)g)tYgdo]7?PO:[2g4P=k)`#Z5Prn6k6j=YX1;/>I3:;0b'CG"i.YLUEE#\K=Ig#/dQDtUJ5j0N@R
%AQ1>_8F#<emW.s_Np>`)?B4=4W*YMLj^S<;BLF^V&A;"k,&>_T=6cH):1[k7Zj:[$[]]E$W+\ZPDf%mcC]*1_4Lu+MX$HQ_'d>%O
%n@;F)[mu)kWuWnQ(Puq7[d^RF@WY5?5TI#YiHr0-HdEnMU3MK4s0VU[Vr?iB9CS/-K_BtZ\XMMD_8u"`*aQ:NNkNIopA_Zas+`>o
%ka,/crX::M\9W!lWh5ST4`9*q2t,R>o:DXIcSk6CnlHZrH!]a<I.L\<`LBlfhT^CL=K-%='=9aT\``\4<JdU+\HgDRN@F6?hmqqD
%cN+C]qr^#S>RLX>.]P9"1(MuC+$:YA?lV=3+m%a%h<Q-X4j]G6I=%`hr8i7rca35,/kEn[$;*$l;lL2j<+*%JM(;U7O<PMKYm+='
%B6]p31hbE?TL&RATPjm#k\@-_i3^o\9!(_.Yu"1q8Yh&oV'b.3,#C;F!ek2',_&epHQWJ$ScN)^jJ+J<Y<!+',Xbof/d/&f>7[[Z
%eW?"_.qO78@3r4D:1b.-G)nFKP/]ibVF);+?UFil6mrpPs/AE#QelN]E%9m+N.bpT.<YX[m`RpB/Tj\n^FG2d\qLZo2&.G?!6R`A
%NG4@f,-\FOq9W;E%a$8n"Aj+UG30/K?6`?J-1[O@$04DO+IG7;Q`>F4.cC>_<a2g*#Iq3Yh@,oVeTHKU>#_iLFkcCGN(6K?n;_Xe
%3`H:r6DF7Jk")BM5p+:=%07VEDg%6Q"JV8Qe,-nWV(Tr1CYWq@'2+@V:b.?Kcm2$YoJiATO=(1rXUEmn)/*1l`J$pN>R4r'1C0[+
%egnr]!>U40Mcr3:J9<.P'ilqtM1s)L'MMT42jC(!/SYso2Fpa/mXmflCo.8J.@PD+PA63$q#h*'%M7++05=Wif&(;7apKdPRWYX=
%/@dGe4_b'PC6^>M>mik):p0+FG"])C+C&.u%KQ']U98<J[%JBu>Eo^N1`-YP`f.<^CXGLkf,Gb/!Xg@)g3S?dgk,51RY-aq"H'%=
%k4?ZuifSrC?VaGSDOVilaeRrF(J5DZGK+\,N=50,V\(M;r;pEWVQ-#3e:MqU2Si.?QUdVVLt]jE@Bl,Q49Vnr0^%sT2L4/AA*XJf
%4"XKe_Q9EL)@LNs+TZ45#jJFX,L=s:E<U%!d^;'CW@1,liT1Z@)nnQ)e(Eo\ME!ruo2OsU;/BK8(q\0M`_J+0ldciZFIiJY`P[a0
%gE9-(-oGcNkVkAM;i3VZVY7p2JbKKj5.)$Zjta+A(hE^f1jPZ3rh;l.,2T1onSf]n$DC[h<`Q(af$9)I\p4"fj#f!;g8&:*)!Qf_
%pooQds-rJ!;FMS!r-?G2Toh/a(<166N:BbQ<\Gk(MU@HNJU1>98.aEMg)B-bYbc;;T[7eZSI!a#7'OI0DYlbl&Wd8Ln)DSG,TqH@
%X-S?b=9tp#i?W1>@U"UR("5L33N.JS@aj.(QbXU^NBo?P(E,SLVr6U@n@TeEDP\:!N)uDIHNN0Il;d)'eYt71U<ULsMNhLG%T9+p
%NrrZAoM/(K7ER#l#spWJYD[?U\i+i]ePkM8%U[<KDkO;^2K"89"Uudm9$PL)(mNfZkd%Ai)ME,[al8$F69CDEbY`47$WPhOOVbm9
%</'d0;@`Z,[""U3`(F"fEXoY2ZBAJp`>#0<28D9\m27%ag<HnlA6=G+Y-ljl73T#Orj#L3*2QSlTc=8B3k%"BO&E&%=2J!CBF8dO
%QP.dulWX@8=])^J5_H/n8r#a4gs(ZLaGV=Fm&6sqje,)b&>KB1JUBBCE^>^B$0t=V]YO`<P+Pg%7iLS@V:5$i@u"LB77HiT'"4TF
%9barP\*jK".Hu,LX@N_Nd@k-#jON!g;L0T*@V%MsLtaH`'dAu"5(':gD%sA.epcC3;Ng-5L?@+3Jn.Th5]RF]e!Li8DIPsB^)ZcU
%/c=XfZHe"/O(6)0`FFK&!:j"NWc;LD1r8JbjAH6QK&s(bZcnQE[lc5V_!.)KOXtl?N!j<5PH7qqL.)iA=DiaEjCuK@[2+ak@3-sS
%M58k$0Pa$,:Dt4R9tJms#<,'LWhZ-c,DL^;iX__1rpB(M9p_:s5/!Cu$<ZkQ^tC/e%AF[;K.dI>**E;Er>(\=)d^Im;69o6+_t-5
%$>4MY66Dp(iEE*;#;aDbV91:8kjFd4!t(+,6=u.iD-XF:EY@"=;'?m&g+E&"H)luZfm=VgD.O]u6T?[d6aIb<!)A3?b3LT(aXX"5
%0.l)'Kh#J&Ap0Qu/@qhrbr.,#E.lCB$U\HfTSY<,+Y8Uk#!]7EmcLTf^@92_ZJ:T7B%9n`C:7Qu1N"iJo)nQ_G[Ff=Ue,ju47Ek<
%27$.HpBBHB%B3c,<.;1?W`D%4YjaMhGs8#qH0fm*>V\pVD>B:5NheU8?.E!#2Cs0o/IZ@<^A$cO-KVN$:ae;Y8K9%@)gl9VUbum2
%/u"rm/A%pIbr.,)WoM7n+\g*hhrEa[;2T56LGX0"]t*F.[VE6Zd5,ZK8C<R`S9=Xh-KVN$(@*\1+!hl]IJJt.d";l0Q/>hi<EhB9
%huiA\4<N"I4SCp%/fCM<[X:VU8(*lL=1,WmL.0Fu]hAm=R^T4(VZa$"nqL5*O\8\8eLj/8JW[mo#ukbq3lVPf/!d:-O]+.k":d(X
%YHYud;#)TbY*i8t((uuG@cH--W\9f><E2K6D`!;n=\CD0Co[g^eO>VW)B@JZ!?/k&iBC%bhPg+Brq\B!JjH]Mo9>$1;;l_FY%rW=
%+4aY!f-Vr-l`G3q9eaC8gF",OXlN#t;3u_D2We]3=+s8Yb`YduCZ.1.UdK\;+SfBTQ4tuT)AO=XX;!(a_.N7to+CdId$8A=:t\n4
%0P'.Z.<0=61Sqqol<mdA<LIAI?7&*L[Z[ZNPih#a7OMk\Nae5)Qp??*%MSJ]:t9fnCE;RB,dqbU5^?3g^bD/+Y].du&2e&sgSBSf
%33JdV@@b6[)HH%B&:mWoR;GM==B`,=ULF\r6Iru@:t7fTcA/0c"$#4B$:DfM=C=SbQ4Q0S<%e*3'S72NM,4!e(6)0XMn?>N_(VaM
%[<CXuLW.Ah-"8WF1[,nB7Adc7\<>66Et%XX&i^SsrV:ImZn<h)9N=sBZj8VuGnbo$mn/.<(`"g!_@hF#b`TckI:4i/aT8$k>_9r[
%Q>KN:/Bh9/bEKrcC6ME#8)Pe<g0\W,!T>9=(EI1F0_f/1>?C:%Viqp\q<@%ABm5EUlm!HTi\p4JK`S9<4j4Plb(jT>FNt`4Jk3hK
%g'1Xl^1@$JX+6qKmSb>sZmSn:(@q(Lh&a^)QH55aCVE8sAWb.7_W):)4duSg?0QdB#>'pBmN)g);jQO;p^Vk%P^pUgn0ff/o&6Gl
%N,FuGb$])u"g()g#'!/tkjnt(-]5dF9X30&!O*TQbRp/sUjj'5ARN,6(\T-qdOlM52Pesb?9C^0d<I%UMb"1\IQBat$O<m,jeTFH
%&0:S#5ccmOOh[TZR>E\`<sShJ:=!%E!O@V/l.uSqX=a5Z_EI+HG)Apj="MQ:S<V&p-C)UMjS`BngjH#8\+um48tg/-*UfiB#_N+9
%D8^l0HFdLkq[<FYV2Zd^"t[EeZoTRE+#\dL<9ON<Ls*F/'js[*#O2CaT>3`kTNDd%kUVg(B3>`_p7iS^)ZmJX).2T^9=\&.JW3Jf
%OV8-$fIm*SE]JCL<B81d7&Psea-PQe$Nd\j3kGpEUoHRPEK*Oup@tFGBksg$G:@\r7p!3@&P64GP+Y;*g_GW=e5`9Jd?;Rk/T?G2
%:U1lH"f>3Z&H$th=g$3KI0n)V29*MQ4G<:XetcI_60Q=<`P9#>[biS+i\<cZMlH+G)c)#9I<Ya%@3<-_`T=U"]jq:BJRV<H2\@(r
%[d`-@?PnG@n:$YYN$ojO..e:U9aZ:f3$K9ac*T5u:9nWN.]A%WS73Fb@IV$QK9Mdg0#q_]j"O;'$?ZeV#LYQT6ek>lf%=3_fP5s.
%<%%:u^&c/=nOh.H$fqE&Z!:Gi\I=U_kc,rB'<H0^#<Pui6`b]EE%jgk:#fjQSV:dcU!U:-aKl+YSnumbeQ+0<-"@mA@>J*.K@?<"
%Q]l/gj7!V$KS34&MKa^B)rKN!iQC61jI0!a`A'GPlT[5LJ_s&\,K>GE_8"25'nAEik_p9$%P$G&nse#T-epsjD(Md;Lh81k0a"`P
%:*QhVK9t-iU1,'h@@.gJE-cTh>$>cY*$/Qm&Ep!KdS5XL'ADaof%d4qJc^A#Z>SR:Zn,c"U9V?>6!aZi%Kk2`DBgR_bAEVo\M+00
%2<3YYRm@&*%ec/e)[j1c_,g6j2JD<Z>)hC%ZHh4_$Njdh)k>]RF=gPJ*f#N<(0K6.G:_4Mpc$u7l#r?>e!`r^eR2aGpDb"XEH),9
%W[-lfb>n'-r;Z,sBj2OedP1TJT'MjFi(Q$A^pKo'e/_)3NId1QKE,.%b9Y(EE%j2Tc-2UIiVDkZ/Q0(3)^`\Nadi7`F.X=KXgM-.
%9r4"1W&#_.Ul[bE)Eu@=^hf,9kEcJ_",^r1LRQJ=D@H=rBCIVI^bq&('O-@/(`Y4k[.OM2$AVR*RN95^G7co%SMp1na8Ou;.u!Fd
%NU33(A$Ck!d/\#QjX1ic%c#d8hVAjEe9OhY_@aQD(ucKb%bU9Bj#E$R$fceZU5#,]JSkmakLd[LFl:`iTNN'b;B1;kB&QmA^d6q,
%C-f0NGkaIc##l!OHV),)q!f77oQHWl&6mJfd3f/'M>(FhnA+Roo>;hI2l(kl*SAFo!+u-tED!.%0\GgMgQsjg"8s&ThP9Gr@"(c1
%j/QCk)C[iXY]jUH^kVTT\cE%iK.6!.NoK$0C`a+UegUaiG@@l2(Z$htX:h#fitrd_^EO1CBhFecT%`+Q(7dne9,Ta49EVC0&46de
%M,WV2G.&G@3\(Fp7=$a$$qU[\cGT^U9MNYpdMs6u2$]2(U.;+D4><=FjE[7QMi:#<(BR!AANL7gii'hODP]lK*8h)0]PpA'f#P;\
%WE#I&TE($OIuKr;i`RB(isNh`oXb5WF]VK"<J*04DRiFHfNmRNorr6jEbGEjUW9N+A+KRVU&!,7"Ql$s8q8e94LQ\Mj@YD)H]+DQ
%s+<S`8Msg<PH[_!09BRQ\papn7RT]jrh'Y>!hBFD#XK,3$U.!Xfb"DEmGuma0VDZZHm&DD)#lXoZ9Z'<OM".)iK6F+o)-5_+G:hV
%KT=2X3p$jc0Vnn0)M&RB)qnf%;NN4oM+C^\3r>T7b!t`Yf@+9MUh5-sCLOC9[pPN7dRsKd0@<K?a@j1&-plo:`e=)/3-nB,Kp>qI
%M)=U+9a?l0bLua5'SEPNl_??pqVV@@E-u".[Gd-.&KWqY=8G0ePAgdd"3E4;5`nPP)BTQKTmVal5:,c!cI.YnjRm`?nUCm7Ko0p\
%bd(/;T\nE.kIr(oOUF3A=Oa,=_V>KD9b@%<Q)3RJOb?qN?lUQBF"?4/,/`$+&;\@n=ZAcbfmB-khl38RU?>3\5qt`Bn[4;^;iI-/
%#T75Ks!<j^_B;ZT&f?`8$lACVU4e-3dj098dj?g!^oRSSq^4(>"uCSGGaN)k0PN!\[u+@?l;%i2JDJ+4r1X<8*O1GVg45:K;8A``
%GJ[9BSE)Ud@7/)6O=?NZ@(+pKdqCj-7H#OHM$5Hl\@Sm]7f.9%1j8,%AfeL(gLtfjOsY3=7YSZcY^PTA58j)N/,N-)=162R'&7f'
%6XBhr7+mt5(j(.O/jUB&L9k*WVF5kt4I8iKpg`ZoRc*]fDF4%(,<Y(dE;(=P"&f\g`rg2hYf:9"6&5"\#n.1MB;G<8l;"o@R]5H(
%L?,Q.G6AO@*7=1p\Il]Zh6::D;dq:Kn]6Jh;E\JuUm*lNNh7Z6Hi*#FBR"Z]%d-CuU[+<XaAMRBYD[Dm0ENJJ1a-H_F3Oq;.$"-h
%?T-<Hdo2+6M'V[RNNU5Zn10kX;`!Qe6![QR30%RO8m5_+Ghl1u5VQk/P"utC<G54@`B76("9<=>7Cc+]`Y,Hjm,GrPPfV@oS6d_b
%2o.cZJg*6V\<YJ.*3Lk&+t!Tl&t"6e3t?L.#'[_s=;8\kMV\LsVXBhC.Fj_5e#R"U*]f>10bs4:'PKid:aV(QM_a=Sq/.Ea^QM?m
%Sh370MD/PcpY\kL?H[gNK+]Eq.8dAADNjXS]pPphl"J8?$6*;DP3I_q\79]oj7[PnG*(6eH$g1K]F<`tM@O4X@<WZj_J'5844.^t
%-9fk.ijeeZL;rF2^&``r6*.cY9eRrCN(h06"geRhMr7<;Nk*&Ca8X^\BBKC9<HlbJ.Gfo`A1]PP#t2p;AegmSC?5d1^.4"RH"*,V
%"t`Dra[aAuc.TH[l0o=MF6ql!APM,kW"]TQs"V)#?Z5,dkq2(AMO@VhfL(4_Tm$[pHP$oXnbbqE_@m#'g!TqZ#A0"*Brn#l*A,o\
%NpA1Z(1.K7JN%L=QNBX/ksSp[A+VADJC2N42YgE[ZkE:pe0p#7!BbchaEK?-@]#1=fY]4:W*%DX1`ZI]\ods7EWJip@Kn^=Qsm*p
%Ih;kE6j7Oe))Wi+;4I$9)s,5#q+p*I/@U%n@.Z(KSfbe_em9q#]R*ICesT.8ZMrtgm3YN&_PU[h#VM)-m0K9X0TDH<AE*8e/UV.h
%\r0A"i78b3;e\6Z(FV/dAY`gc%8k)I?78c^q#h&<@H`QjDB-NZGG1/kU(OHh3Yp#*Uf7VXF:.0?,WbCglr$jKlnj<0T>`A?QUa%X
%KOG#kBN@TWn&I1NFA=3B4Q9ifP[rIDW[&`d&ge-1o)?"iL%kjX.@,K;JK>a%lc574#`TWL.Jt7W]a0DqI8e*Vk''EpI7:hH6#6,d
%'.bmQZC3q8R$ESbLcuYL[D3;G!DCK"G0kUFo-M:uUc+;7c5"i*5X1n\:E$n#.E0Y9L!CBKA!VS3&^c"o5oBq^(48eMoHm',iZQUQ
%ZNOnZ0cuDo(;K;)eX76dL+YtsI2>?:C('hJk!OCN+X*gZdC#DB)j@sSqAHs"SR3:+1nTF><ZW#^:qUgQ9q"1N)<7oJ`3W-+G!@pZ
%PY\6&@>FmkX[mJ_[10h$B[Z4rDrS\uY^h:<dUt[9*I#nYg<HtNfu7IDOMVo[PTBDT'aILWLmQcLX]E+,ac:WHW\hlD`J!u"6nY]t
%JTSeuJaTHJUXJrN/HSeZYPFBi-oRT;!/@*AgjgaAH-#1tC[>5PK3f7+_4&*d,XX!aVG5IVN"ajs.Jf7Eni!$&LQ<`-(dNs`9Y`'L
%,]X=0_AI6$[C7c:e2k2=UpJf@V9rttKBu4_:`Wb'TgMSjYCNaTq$JlA-B0EA,o']ZA>dZ&4$P0r0Gd*n4sjh,A*[=FE%D5r6tI5D
%DnjOVF:(?l,\KL+[#)+C-H[bi,Q0b>UarV55F!s_nLp:Emokjn'6=T$R:e;fV]?!c($@O".+jS)XgKrH:oiMA1<e4'rfK(AD.q5,
%#]RpfmXQq%#T-A*niZ1fOrZ_Io;aQ@EY12`"t=#RT>79CLeu$&OW]NKHitKlC7QI>JQ?@7^LS@kN/^VPL??"XqZFDFW-^/QR)tD3
%1&&-HLM'!l$qq,0K:"jZ8=oo.Z@&c$AmNa?mbr[2l7R(h=W8I\6B6Aiq2MJp2s<qC$u=;b@nbP`4;Nu78\G;n7+,L"VH4FFJufU2
%2TW]K@A\,H"0VkQ["O<g7&LIoP\#j`arqT^/t<VL-h`8s$T8@*fd33I5/D"nUU=Z,#Kg_MJp)l%,\a]B'Fn!e)4AJi#.&GGI"i9/
%a:d>7:OlopeMMOG8j5F1`t-HO29UftE(m'#+Gs%CG"2L0MNQ`Prg)_KXlVd46Nn92`WcB@S6,%Yb`Y(61k5t#EWcpF'#%Y*Gqhu6
%AaKHBibRa?W_a0b'(Um`]`@-)cAX4XVgNgY*'S-Pch*12g(jPAaA*b$O?pF)1-phn1S;N'/-gH>?=5&m9]'RtQhhYBUqjQlBX[7Z
%"%J;p,D@+4(b?+"kgM=M16LN?$(."4hrODscVk&V3]!,dh8094M:DVOTL$/"M*kF!YLn-nb+0p:>DE8hL)k]Q)DMVWs-"CCPUnH?
%NA$&M^>hQLdn<X,IFT@Jh7^M\X)Cjap$JqU9:$!Gjrbfej,rBT0KdMKAn'o33-Jn-'QJXLLoEB,Gq00aI)3tKr4F_TToClJ!o4^!
%"#gagK/fK>dPWQ:Qn`hnB">GQLP<]\ZX`L?>@bV5Gk6%Sj]2gK`a#:hCB0L>O*=4>F>ksAb(YmF@c_)A(GASX??V_Un$-maQA9C*
%3,f!b,f:30W"2?]Dfqk^YcH8M.PFClSX[?\:X-I9_'ho=Xu*nJXsi=dFA&8e#:?$)_05P?p^A2o19LK,n9TQM_`-&oB.]&U4treZ
%/m0)Sla7&OaO3=]baVG(Lr,'ZS0k:m.(nlI8EIc4G3O$d#p7*:G7,&LVb)GOI);QjRnqML0fr#Xr-`@&GRNQ-*Jeq$cXrBnV+71$
%K<\omRkU2r9<p,Mr\6Vb3b1Mga8]U2*.]sPM#Q"5#i9?eeD#VN2EnRt3,)-t)Z6uRXB5m,;8QH\f(l>I7Ro><'LMn3ZnEi6@."#n
%ip:8f!6$LGBF#BBeF'nYco6TE8tq!0`Z@b%Vie%M!PGV=@7Rq]GrGaX(f::X#9Pee-Q2R$TXD$aRdroJ?b-AE;,`'#-Z<i)>2ke0
%))-W>7dElIG!`Egh7&'W)>QR,dV_`a&\cbFeaY\S^8,ob@;I0/V]fpCWh!5+U2r*EJ3Oil/\X+Mq@R<CTI2>,(rIF6moYhL[V2*t
%,jDE6gCONNh]I!m7a_76r(4/k?<gSKcl:DjcN^@rN*cS'jG7]]""<H.Qu\=Y[!Z"OUnb;[Nhr!tUL#3pBdo5&=3"#Zh1!MX$%TjJ
%!badmTZKk$;n/*ECSnp;'D^2i)A.Z0,^]oTTf=NcNJ]>=W?SQ#!>E]-+/\3qAis[MUCB#4D#<a[3;9_^Y!I!2DO5"l"MhkuB@)%q
%6'Hb\,<-TM;'&5+m]%%d.L.^'SrA;Ia#OeCHAV6=Rg>XOLiOo()g8)NI2Z-X(Y=b-.>Wn1;OG]a-grm3%P5jBG6jRUc'/_U6_NQW
%11k8W^?]h$"<5:Cis6kOhB2iG+%ORC<)7]^L,VX;L`DfhU/]KN)ZmVLNDkgbZi3JqnKMI=UNd451F5mN>9"D.2,P>9HXs80]F$IF
%5RQR.@OC1E[hR4:nB)'@31\^D3.M*-@[LAc5W.PRN?$#=brT_P"]^DRlO&Wkq#O>V!Y=?-,.(>`>pp+.3_(9Ibm(sk"9C=rCu/hZ
%X\g(>c2QiCqZ##t*;:@'H%&aQ8mp\?hE_dE;N1&e\NcHD(!"P:k[I;B0(=;4")%^Y$biVH,O+2IJ2>>iL0_]*8HH'2[5'.<QNH%O
%NT.p<ES*,Y]1`Xod4Z3RoB_FQI'Yge(dS/H#9,Lg:MU@Ker%m'Uqct#,/:FLqogd:e9*:J]6$';0L?@F7_&orH)("$l3ND\Lnb5o
%k0]Sb?<F*P5eUqk!#ATaK*HtQ)\&Z%MM&;C\@GSU'SHn?fVQ!]>/`Mp`G?F`BXdSb&qeT;1k(.i;j?+=4`[o#n#tZC%HS2D*gU9M
%>SR"M`=Y<g&Lt>u";k0^8Sq:EYo&6T>eS>G=*.$T9@RosQck3ejX:*:T4J_T0bR;V8>?n65`#CLM=DN%46W%<:`!6mSsfB(TUaVO
%,o&,8nLLR_(2q)@3McNY[tQ7_o3$VUkZ3Si2)'[#pjRVHnY"&<HsP_0YKXgClg#TnD`\seZ2#7iQcRDiG;ii?2MT9QgGo75;%MS7
%,Cll<ht&\VeR$Dp_0d9oHTO;c\)_=u;?WR$:'r9"!fK)$TDWkSVn)k-RDPAC@OHX5NUaVFH%4K\Ocf;tWILP'r",A8-r-<o0/usR
%hK/`sRBDg+nt?8InO!Y/Ip#O>!Z%Z;pQQ=^iH]V7bD7kAD9Co+R,+3;`>/0>5tn@4n-=bcC*7Nc@cYn2PF-b3_3\.t"@lQ(4m@FG
%hQ(#8]6+&+0c])&R\;Ff6@tes\f6J#"p8MO!nN>kB@)]*SdhkWL/a9q0l3q-8/3JH$<!c05a?%*)$m0-a&862NQk-3c7&9cGMG)Q
%g"p[B#=,,,;bCVJ_[SJ:Cs(VU[RI,CAn0ARhm?Nl!9F[t2Ks<)bWJ)o"Z.4>7A(!8.t16JT2I0r-DTR&iU>`R/>L!*_&",k(>?lZ
%-*jBMTF*5j^TuNhK>qRg74\iXJ[$ml>o%%e)M&,[cCM;J*q(i..>i7+6Q+,"R1Y.f\E)Nkg1'e!NM,H"n:rWQpfl#HraF,FmLAHp
%O[g_tVPb:?HHh\rZIOj!Pu?cGMEhg`hseWYe4K?>0:sGJJhXn>Cj:HfPkrE>TP,f1?]e/Km"5(7M,/ntprqW?-Sb>ZHu7r==NR?G
%5`lBY5`Z83!E$g0,K?ec1.d5t(k[n:66]h)Y$4ij0(D^OJ@9M17AaXh,T.+B<9,F0a+.+rEl_dZYDHc/S@i5k+'5_3*bsQ:'kS2P
%98GQ06'mES*a-uP*l]X1*!6Ntr]Q^T/M!UV&mh;!d>Slo0LQ[d'*YW:^ZB;%T;J2i;j2@pX"37)Oclm)B>G@VeXFG<s.rftVBno(
%^_^V08S(S]"CLYh@(,&L4_]'h+7X[o-n/Vf'K,tu;99m[a+-=T7uHR_#dr<lZ2U<A_GK`F8#"(Y>TA&uQJ43mlQOjeE4s2QpX+T/
%:JT2;`b&0Pa'a:RdUjl)qdYbPPbl71L-UeKI5`OOFnnb>0qS8H9H'(?7-`_#&sm_^rPs/h1W-hi)&sum8ITtPeQn>kKo^;fRl#,&
%ME&baf4-5"V<^tk1S[H$0;#hb>F]AGE(h39[mig1fAGD/d!Xks+q@HXf+7>3B2)bPI$P;^U7f\DIWV782!3R),dW@q_.Z-Vm1b;8
%.=PNf_f2WkeM/5C(dSVFH"^bMK$&b:s60gS'?hI0NNQ6jVV@k;Beap/B$$Aoqn95:&NWm3K2fKp-msnAO4u7.qe=f'F:,VBMfi&8
%2CPF0_%?-Q@gQX8Mt.foKiYT&ko3th:=R?=M_c7^\sgr&!H+PT(MZW&?I&Hm7l#'[g<jcRD"2"q-'t&0$jTl5.#OVI@p^s&k-<L.
%`[M^`DR0!i&VrT]8=L;H;ikh9)"U;\W(=#9kXG6?ZQ8?%o\rLL2Y/"oje"KNfGcphbZ-In_R/<4+uf)F^ZSfPO4iV-PE*#B(k3R;
%31_sR]WjGF^mKs\`<2l="tJ"Sk,7u3/B;GFe?[ht*e2*.%HnJ_]c?1:cmQPKYo'65O6?0!kf!?gM^c@obO/c5^`k,s(/Gr.X=ANS
%;S$1l2iO;i1:AfE+5[c.,(.?LA'r]/n<Mg1BC6OfgT>Ut1/c?N;t+En<1Tag^PGLAmb)m[U2sH%T@D2VV6fUKOG\%''^>AUjmksl
%s1%WAd5Yi``k*uZrb?ch+7GoT;!<)/6)ESb_\;b5A!A`U7R<]tI,u5?/\1pmn\T$7a2e='W+=ROJW3/l3T3WR:tnW03`P4Z\P\s+
%3qbi+0Bo/hNSi($+G/t!#@JnX*"FY$`4ff1Hpk4jQ2&(G^DfS?J2epG%hO_K.LPh#aZPqkAFYu\MDCj4c1()M=jGKX^$$MK^k=j=
%R'Imtf;IC[mu7WuDU0"=0^eh_Nu-KaLcd)0g[#&`oAcX#pKtXGl*66<MpGbED>C/jYlqjL^5W8/raUe8^O-t<9Y``t:/TLoGt!"h
%Dgi*1r9K[e%0Pjr-=MStb=oGq[86BhLu.hr`9.4IFon#<(!;"l"Sg"h<Mllnki\*^7r7@#1F,c5>c#p:PS+pHWmok>S-@me]3J<5
%ZDT6\NDFA`o-@-ea5l?&Q*i31/dbsPPU:`O1uaGePQ`42Hm]hRlal8L;4lp>d?M`&3.I/\2cLP1N>aslHA$6_'I'.j7uAi\"3j0s
%!4\?JYV?<T#DL"j;[Ftr)"/f!$>5\j:gto1aG2o($,<-,mV8A@$Zh@JiLcc8o:1>IMW;q@m-+_ulC3t,6a*,o[,-X(6Up^fHs(f<
%/W.@fq0/BM-"gUt(5IZ$*G^,@=ju-HrW^$YS`m8$Y%<>#0.c8)(;cul"9.JrG=lG'?cZWP[>M@$hNJX3p(@!)5Ce=Ra/)0l1?B=D
%)>sjh4i5G1-G.#&>.)O<!io&IhK],NAN=*7(gUttY-uICU]lH,d7N]^VR+G,d`(R\g1>DjT_*Pf_i"N74Z,aOr`LH[ET5uAN/LpA
%Uq3Y>R#NP>Qd,;`DOAVcB2OLFQA_gm\lI%FalQ%D$&b--Dq=^a6%ilh/fGbkN)s?7[9bTl90Z#rCD5oEH^:<->^Ri.qYc$Z0F/1p
%(Dp/-f17WG'OH@2A8Y;'ru5#Wp?Mqs]SBpClrEt=K(#*(#Src.SmJDPc9XM6*buR:j,c#^EK4nc'N/Cpg'<4=[UN!CYFR[g_0Ut`
%.t'!u4Ygr@s7RJF0NYt'*tCY3[7W;ZV&7`"bNuTAUrYEjh&OeWRP=&m:t\!%g9m`&i.D=k<?q5Acio+5KJAbURK,DV)dh"AnE#0L
%4]-6Ma<j8dkJcp7pihg5WQ<\b]j!dqk`5G@0"'u=>`"k]J"mdIV<Sf#?RhPm#_>6M.F-t,XX^1[<@W0n7VP89)MqPsG-s:EDr.LR
%_i>asKYuOS5hQRE<PGWYmlV?SZ?E4.6U]"hZ[4)]9d`jQ]d/A);K0&'ibD%#XqhZa$q5!*8V#kW^(T:=93mG@X*.IU8k0^CY(kD\
%>^hNPr36DWKRZ/9ZPNflM-n7Nisn(3j[Y_$3@$UF'I[QF-YOe.,%Au!3U-&;3*BoU"M/S4dT6:5kBO`4,P/r"[\kh$R'/5c,SJdD
%PBeCeaJqj"N/*H#TT^Qm"QO]26+h#9A:r>MXj5?C4o-GQFG*W4d&RrrUG[ctQ$'<-#l9f8'#63LF]S'O3HA-""LFD6l'kFLs'\bC
%T^thaA,P*R*At3rl"Q.:IV)lrYb-pOX7[Jq'2&KME0`J*ga:F94<_Q/Z^:i?de53O!SGc5N[Oq[K[#Kg>r'(/0CPVrEu0'^K(!<4
%;/eKnIkFnE6B+4paRof4eg(P94![XIfa7e7(UkM`!aS80>Kt\Alo<@R^/9L[m1boGo7+VeK(*_T@YW[X4c%4Z%^PsjZ!T/33lgM:
%`'9$TfrZ#409^'uTjh]?jlg0s>ZFhm#s-3sJ74M$$Ouc'LHli7ou'3]Y3ZaF5P@a2q_7\Fl82pi)+UGN:r5b2]MX]WQ\:NlCoO@Q
%B%'Gs7O03ebaAF%Z;+b)4eW;&afp)=e_[?6f/k>#^nb-;=t2.-_>*"R"67S$P]b!4F1*N+j8<hC59S6RMqc3:@"`J8nBb/1SeP1<
%ebs>eaUIBhL1`7_U'`^7<hjJc7D)l?HsMlo3:eRP>&h5\eoZmE2/I[!`?`1T1o?GP[%)0Tp6qtU@H2-<8!r4>%%eW&doLnli'0YA
%7<X[DSBQJhcDpF'O3bD.SR/?QJAElk3]O+EiKp0dH?N'@')o>g^4:\t5PPY.!G.T1<gB\uMuH<4Bt[G0DY?]KH\]l&S]a3_q!2+s
%h/:%m3^7=9>g[u8`)>jqn+AT;dB^,8-ngPoLA_<nN3Atr<uEL#dH3@PNK]drls`5s@S,[8\W+e5fI?3/)^A?N@8&qdcTAAn-\^-P
%ohMF<K/23dQ#q[6VY&/2Zdh6XFo'@+kt/)3l8P'tPfdldJKfteq\RW$"=t]VCp\hK5_+BWg8f.k&"\`W&,7Y:%r%%#QM?LiJQ0EX
%#26EQ^U!U-R1#JV,$61L],,ropB>Ttrcud5MYMZ2"+M?j_gTKK;"0P75PXEFm+pg;KA(bHhS8es)7SXGGeE3bTM$T7MJsF]^/X\'
%OSC:;iJL;6q3r`dM&G:A8(l;.8X8:[2CS15.5d9n:qK+$,&A]GKCBWU<B*YIS'UZXs7rRh-_9ZI*Vp.$OW\%@knsmGL&4aOFHtaQ
%=dc*D(F6K;C'0d$g=f-3eL>JM#."cOjN:jdeU#!\#jUnWm8CIM>.4ad"U^#5<gqcX[kHruZ.gcfrrq,r&gII82#RF;ef1O3:8r]h
%K;P(X.'qeL[!D":'5G*XRADoCW%V9/=Y<RB&h#T`=1pPcB#[MiDbtAB??+,7K3n;Z3PCTO5MFG1Y4/9o=Q4pMI7dR[oQf2>WRa0]
%/XKkbF$X#/cnRYd[;P0sU,A;pV<O7b[[5ollMS!;k*Q&/qX;\So><p63hc*@?mTT&1/=^mZ.a'sQ%-[sQ`,VAQq]8m]SWW:J3*#r
%C,R\`0`7'%(rIkM^&"@tPA[Ssmqub<qrn!K-"Z6;S\K]'r,2uBD[V$;(1_EkhlCttQim.7786gtea-R1e79C7p]d7K_GVc(,SA&r
%1dCD[5cP?E46un&I._JlOFas]?Lt*)9#6u?BYAK>4_t#.3O\lio=3Co#/9TaqMfe?3nUAi!!Qm0piT8a7puR#?&KeKR_;1s1FP.O
%hmQ`05D#S4Y6q[HkC*E%D5Z-/5V#4'4Namk]#("rZaK4HX#WnQs.<]Ic[cXfRn*/.6*o#C*=71ibr]U)T%#iSk5P`N:]JskhKQrg
%o:r(0F+>%CaXEa4O6(]RHp"!DNp;CrhZ;&_P?.;5MAe3dT?j(E\_hdPS$cI5]^n7]Hdj-B@<_ZE158_7QF2M]]$ZrloY`+o7XS/U
%UPL.BGSd!GT,u`M7P'D"&5.L1T,EYOqQ>3Xau'*q8U\@Es*&@@/!Kk+[iRLZT>ZL<8cmnP_.7`a&t,?`#0SrC*9N;$(]XL/T;AIY
%romLAOk7hn-91bjDar;+1*'s#&h3C<:rrZI_iI@fn.,^S;^@(l/k#_hh5RU`>8&nb#L?sbSIXk1Hp[<eLVf*'#64-Q'XmL5UpShC
%r\;QWCVB.]C%%jHf_o;86QREG.l\7thl>kLkOli*IFp8$T*kSPFPc%IS#q)l&J!M8?Cksi#ORG@pD$Mej2%ANs4:!8]e1/\K@3'[
%\CilgDiO"P[>mm-c/.pFhJr,iW9M@aErQHBGkr$;aDRJDE:V;$i[PqURX?.nm^t'Vlnm0%/"L0?1/"+_%mKF`2;B\kKc61.S)$te
%i.nL@dDqt;O#hSen$V^:K3:)?r)@I'!sSFkGDaql("6mjqkH#lS*`8"h0uiCT5-#D)D0[[8CU%VLU#FqT==-9nt1-Gat`%tQt9(_
%h<WQ-mEK\qPbj;j,/sjj8oH2C=B1$rNFDPkD-h4mn/K?`#Qfo_*fj\.FTf\U2/Bi!q*2gp0H'Y8Z%i<NWbdX2pNA:a!kiPCe&?-2
%(e9FTV5:*JnXa5's!<meZUaQ#f)/_Tj8UV]_#Ns$s"ppGIhAjp<R:^8oC(Z+`N4uI$U=[+inX0*ME*H4^,E+A404\Q60Tnb`Z,@'
%DJs*NN'7F;?+c`cR;UIQS0%1;'>W6h(O#rCopm+Ms#1ACrDrNG</_pKW;W@Sm[qV^^TT`blVF5Vs5)?hs4[-U:rY4,kR,K-U+CpB
%Egk6E\+f>_\15,R9P%]&l),e-Jt@RG^J;NYEII9\*:&C0RHAWon!t5aJXO8,]7>!0D`O.n0J>+YfS%%qU*k7&)uX+'J&a"%=R\E1
%M]GoM_[dn0hJ8[Q[rXGiEEeQ>4_pY%M9>eL3=AVY42>V9KfMu&qKh<Y#ZJK#hL2<YDSdISH0cMU@Gl4qG3]$TZZcUag?a3s6TB>^
%Da[q%_p:R71reJ\&!YsUAUT-1A/7QCn4+MmDq9.nN=BGb:BfkQo/NSp]:7@!DKh38'W'/?>o+oe>,3LWZ]c3_Cpjk[ng:f4juEc*
%R_3%s]sVi-.uS>8.=N=@BVjOhZUnYl[6Nu&q,G=1JciKe:1@/E&XAXElkHUM*2TW/l-3dL9fAT9ps]'oBO^Y9#3P6\$-b=/L5,V"
%.`8aI9nGr)3NK)-^2h7[5MYOPOfHjlI?g+upL@LI3^2b\Boqhl8HN<&P$V./Y="3b",D8&Qtp^5^.b1KAV-d5&\=je,o0F6EqAA>
%"PY(=<j=6,D;J'`iO3hR@#jl>'4hlU[U=j<:'bL,[W#IQrXFiU6"A&N6WBEQ3GQZqTh)u0)1(fk7>2AsWiRq7"2g7%n*;eX4JOLA
%ejTiH6?S:H)h[oQiW%lX(l)7(&i$6hAL_I(H;+,pJ9$fFV5.mn0pYoh[>*BJKRHt/6<dX5IRbZNT:RUq1'k]e19!"JS7g1^73(83
%;]M.GgTl?VL[tXU,%e,G&#1D]ojf3`FfmGnfS?"o]l2r4XX'3WTbuBe&T:4:_*AlsTFmXW+!6hnigSaQG:h8$@U&qtY<\8JR'%ME
%N6B`!;dWG#oT0,Jc8Zf^r0.8[^;Z(/BJDj'Bq8$9bZ_FdbI#[,"lYe'S$$hXF%\".Ah-9rQ8*t&*Q;2\F\M(dnE[T85Ltc'bM_4[
%PiQZ^US(^QTqmM?F\GF,8Aeqm0!s]3F\ct#B]!@EjGW&^dcB&unKm6gO_JDC_k/Y]5L(%*,'77$6K,_C,j0E<&r#:JBR]^m,=)rO
%,9jr?f^MCgl^KQ1+.%O*A"%0!LIGJ*@.#jT<IP`ZMT#(lSN&jF'^mu6ihl[/T`'B\6psn44K\.E"JcMRV"TG"W.?p@O-jsOfS\Q!
%&T1Trq$mUrYH(\Q25VRcq?K-'2WT.QG$]@,]<#YUY^BSP$MI=`W<t=<"XXMpe[14QV2:QP<W5H:2?ca]Gou4:W^$jDPXgueXT_Y:
%,U!`@#bQd+n@]N):$9UX_.MIjHL.IOb=n1]O??q*8o)q<>[Y!ufjeJCMIJm!6:d4p3>j-3pU2n5M#q(.`5a)I6p_m4'9,TR(]MM;
%<_A%8d,kV<W8kh7e=&,!qa$<4`",+n=\<+X,cVktM33VbV9p\#1!q"ZhgEVdYu(hR$raB=FdBA$>lnSa3Kn*Ijf<tq"($NK%+dVH
%!VL+pHs"EEVO`YpULh:RS0F,MB7Xro,VsAjE.S1hm;-gCPYmCmD)%*VZ$:%$;ZgG@D)?CpKSVEor<C<!ARZN0)fgEnKf6;hE]u!^
%`Y!1t,:2:O\qgUs19s6pX1JiZ0s_pk">l@$(PA2_OJkc^YQ83\W!C^Z$rsV\MJ3Nb9I7dt0=[5_dn]`R";f1^J7/L$Q\8<OBu)o/
%,BKbo'6HA!kl?F(,;h3_J4RX)p2boj30&foQGF#!r!N$ldn3g,*6gmQgVil!:6+HN;8GfKE=D^LfJ+S#Zsuqu[%_-=J9j]gDRdQ%
%^5+eWCR-ZULdCnik8\hD_+*8ST\2E0GE,>r^@8t2diEg7lfO`H\W<@?],a!J=a\a\m\!9pBfDeE$8Zp$<lh,>\7-,l[G1*#9Bb35
%[kDSK/B\LJmFEopc-@DeMr%=[2'F`-&-$nk[.^285,Qc[=@aukOdu\S%JF7'eVoJjI>oqC&X#mu=o\4lTaq+lC`4`l+s@/*!@YdQ
%e,n!MA4.A5Vj;S?!Ei2T.^T/#Kb%/lN@[Zam,#fS--UUj#O;Y?+._4i9:K8`@1E6UX]jG.W5IA?Ja,'=[MEZ$o7NPod@+3mTo0C+
%eG4Rt;3(ZGcBe&D:jnR&SEM(99dQmoicC`fC1oi?i?,dJ8PG=a+S^0;["t5O&h-#>7++7B2+YM<7&cABVBFl#(hkiYihRph#U1K>
%@0DIUi[;u\`PTLgi=5hV9j<pTUk@<M\H>bV)cTorV+[VnYr3&K*:"kAp-2>5;,"P&Z?,ebDOpp%G7UfKOq//gpeFOXrO@T3A4f3W
%Q4]:jb`+MW%4#.haR2S."I:[BZRK$8'`XX?JY^Z2\ENGNS1^u^.,igZau"/WC4i0"`6MNg"=c=<@P>9of*s"7RLp"p=sV%'TPVl%
%BnpLr4l4>P0t&KH"d:Op=5cukIYqgnj0Ku;L87o1Hq6OT."",i8T\_Mq&Y*q6`_\rG_JO*a,[[*[4Lf<kW0&$=PfthAn369ZTH^m
%)j^<4Y*Sci]@@u;?%_rUc-Ma6(n;57rU]YSiNpKgN]I/c^gEN$U6mAES,3/6c5sClC$nj!I7/.&![FHP](_D;RbOdYTNY<0GAiNh
%GB*7nHo(btIF1(Cs-rG=i'WdU&.uT&+R.<P(S(T95.+A%eN*#(>,lp']rAIWjO.h6:+c[G??LUEi.p0>H@0aQgh^VkA8/13mD2X=
%Mr;"2M-jf_.EoRlPacjkH-bGK@;^drXL9A:>.8Kkf'Ef[o`;a$ZfD.W;Q\lX-bu4LgX!HdbmC#/96:+oCNlGe@XTro[15HCnJT]>
%R&^2+B"h1s6+P!,X*mN_eec3!DZ2HkCQR_#S%I58J,I":lRrJt5@N7&lg9V30Ri4].#>q/5"T#$QX'<(6<0r<C!M=,G.2JF4Ic^P
%^?EEE0u8KCk7@hKAsjpkb[,A[N+Ol`7)S$AP:4-c.:P>9Aj\upP:=ea1M0eSs#;0,SLN@kI<N&LAUb,?a*BQqqLe4h&&A2D;A-[p
%YN&J6b#$`GZW$/HZ#=#85MCA]]=)b[k`6g9^Ae5(]T3qSs(g1L$d>$Oi3P$/&&PIc[?-_Ml-Gcpo]H`?V-.C5-M[,Q9H5f<qErJ$
%7+,=$\Na8QGfOBM\[dkf`mfAugVe@XF9eI=Cc@CZc[.5t@V;.hBVce?JKW7Jf=gB*RT5:jrGG="^Vi*j`dBB]E)?!D2[?!ZTS'#S
%<L\gf7P"EKj?L,a[B\-HS^f*-V8CH;>4(J%d`"5%`W)F_#FG#j8f;k[LDCi88[2`Y++c=%h$<=b^H^K>>fhK8[/O_[m%(MD#$F:1
%=X;^?SKD=@;ObiV91]rSh;2tV6;[N6Qlot6S3Fd,f&3@W]?4:eebC:7$A1B#]'.TXaNN6nc_/]M`j:bjZRa6\W:NC#41^[*eh76`
%h<*Zb@lEL]=Ss6r_cE\_^,Tr3e^"Jaf=s;gi@=kpR1>\!G.fW*a#u!Q6d0N;q?HoU/:7!tY7D4$SS>68nK25CQ`k#!qt+WE/6;P$
%bd,i;\%BC6HV`sUTLO.<5LX^%eGLKP4kFU]o'"Zn1S'^%OJ1Y6Y9n;0<Vp\i'4tWsrUkZj)mcLi=kOn:OjLn'\rUb&^Y=D1=3c]L
%EG&@1s!dQ6eKQ5L]`ViLi#D\H7s16siU7d]d7Nps%&jUagf`t#PlBa!)Hd%'NuqgNB?`a@YWf"8LV]eD4IGGi/tco*Q6)8C+JZ6-
%QKl0"6+>]4/2[KO8/RVjXH3sa>,ujrYP7eh_\'_!;754r*hj>E<A;LAA<e_i8m)E8:tN[3BqnDsg7,e(:9TMrWIdAG]Vq/j*+MR+
%%e<qbek/^j/$;j[Q`9aWnG]74H2Nq&42A89(PC.UYBt7QN!=+iBsW:eg*KbBmAA<LZeoV,";]F=``l9@5%qfhRhSgX,lP"@d!Z./
%BH<E8q/T_t[_h\-+[<^YSAURD)>'c-j0Ko"=YUp4('Sdk3V7c=QM-gJ)O/e`>D)c<X5+\=^Kqnm3BBK,g\&k^7K'`!g?G2alf6_q
%9BYthTXfO;m%RbrNRhN8Wj78UoD7DO<LcpDnKP&ahAm$BlKsn(^XeJCn@VcpF7G(o]'Wh<>q9-Ub/L$C/]`a>LJa21UML#54gnRc
%AuSQD62EC'*WUMAL4T,>q\&YjMi0XU]sQVn*A;Ohk7P9FQ"@aS:+KNf([\Y<Lf_hB\rYdMVjeqV[N5-dcK[SW:AYV``qmFS3FeLU
%Fr-2g$\b@G%`8&7#]#@52t?!tdQtQPmkcZ7@&)O=#L^P0Q[ch(3JIk4`t2lcjkQ%KRTASgL"`.e8jf'!?F0U/4oftIG8p35ZFrF:
%(pBiKV74eZYuN<=%DS*YN*VKUc;cnQ%,#\UZ+Z.KV):ZWIMX)OUn'Pd1*c6$)f)Piq/47(*pl2J/lh4s;rj/7\4\GZU12/BoOYd?
%g,d-2>NlCc`^l84X`I33I5iM1-4Zo[LT__PRr2KY>SA$:NH'%0F`:5oH[CsV%cKXm^u!&H;7Cu+o_=lU[eR$L/.@dR"mBNg;77"Z
%mSb3l?FMtNh*8o@qf'B<S^tQq04@uJWQXfE+>rrL.^8L'1=\#&gT:Ye5g4ku[AqK8qX:QA9f"mb=_M4Sao[%_lBK)_KAlphUFo-q
%DgJ6pap[5(9%ERd=^G,Zne1Re[:2A=kXsCDf?MMLl*6T*lB_RK;-n+aP-5h!)(*3LUROYV6VDsg%%#6lR]R&1EWS6rYOk#9-8!uK
%'f/HWY#nPMD3+5=<n&?%3"c2NRF2kC9pFKsh3fDU]'"R'b*oCrlH)oJO;NdC`Cn5CM(:fmTC:t:>WekXhKcd8Ra.\p;Uk&U5gpVO
%^MJt'I^.%-G8h5Fc\(!4WHG-Ub-+bMWu*'^Zf:kif,/At-k%Je1Z/S)TKj#(dq7R)'W,kN>kcE<[=39_piERjDYJof\PR\K@q]*U
%Xa`=Oom`NVHNR6=EcGI9^@o2%U$@nS7,)O%5sa=DSmSl%"nOFH98[Xi4&fZ`TTReeK2r:8p3Jo`V(`/-&;M4H;0MbZO6NLr\[_:B
%HVaq<V4B,8@R;MAP3Zs\YIQ\M;@k7//fJ'E@/mTVIK8[3l(.(VlSUDtFV?.NRrODD?L;)\=C3g'n8`-`@fE[Rh1MiT;7@8'js%0'
%45J\H.()*HLNNEq%%hV0Si.*`(MA:jrh5tn$<[FoELK6@1h*C;C&;\ki7T\!4>tgP\La5D9<[!@WYQ!mT`\'l(Z4jf;X9u?ZSuFI
%Q(Xk6>57))g)a4O/H:i975r'ZcJGp2N#$m1m,#F-Q$bT4\b7lHL)At!Z_NK&?Q!K]D$HeA[\`Sr^5K1a#>;7(LX#88dk7T`+W<\A
%a3EJ:2N%\rZCguGG58@f<53)WLpjY72niQKm`G^ib:.#K&'qhBc$!an;4N[cPf#rcC/8.k/SBO*Yitn.YM;GN<c0jWZ<\K;AMUsk
%T^/.H3mj9Oh$ZVb,&LK+l/ao@GZ]b9ed`)fdA>Fp/hM9&>])+54Da^qa.6%[bA"W^^dS<#D3IS80rf;\K(]+/CN*<=^SECslAb>Q
%NYHE=HQ^cuQt-o%HIIV,75O?@_PlFIOgJVVpC>B>l=&tpbJjN.O+=uV)-faM(gDrp`>J8VUuU>eN9.^"12F_`Vi:*Bq!>BCm%DgA
%qQ?QE]WHc#SPg4=COiC%IHR!tIiR9S=kMEKeAFQOM1\7)U'6/DZ?#1/UPC%k0+cG;>tG:o?@NkcWT4*FEj2<*L+u'[S70W<3+Nj^
%'JJs6n[o.N@uf%;d)]iJSWA/Q_VrRK-sdbd33HVYkXE5mW]Y"Ee+W?0B2Cd.TD+AWUW,`rnU;?u1ghX.91Yjc"pTr'HM5R;'BCB,
%s)hZ9NUS8m'ugtOSr&Fm6-$qG?iN*%jTYGc@7m#^kk9e?]bn4b<6j5FrM^e/XR(B">mq151<uP+j6Y*+C-TiojuLnH":@0>^iS.-
%QR<-nONAcQ-r1QMKe$/E[>SAOUpT#p[LPQLK`5/G(1jZjcN0_gT[?Gqi^K.l8VT0^/7B6h=Gfig0=>nZ_\t$3;'EPN\FbeoO?cX`
%9-4a?/CnahgWch-9++LYB3a`7h&(<1NtuJPqGU5uKa+Z&IXjLWHM"OShGXan(V<WVoeLDHDVWIhMQ8PA;#fMtS!t>BdFuENi7M>c
%#?;0!NTlD,dladSgu!3;$]8?TP!X$5+NN'3V)6DT:[3_[?F)kUELeo?$CI,"Vfr0b/06B<iiDIt1rU/$FO(oT<"^\.T8!@rEHmTb
%[&j@B:Hboj094cTPqi5qcLE/q%OthkYF1S]F;e'q"I6!23nY,?P[]t7B&N7]Xj4%klN=@m2kFsU<`E7K5I\&p]Hj;0m@q6@UF:S@
%B9KBS![BNI`n;\8#d)BQ-]!$Vgc#sTEe4B`khJtDe,!.P^!l<g27&HI%p-icXR$jN5((-c:%W;hO37:2b]#?_:8.2!P%[auZ(7`/
%;`q7-13RZJ1Eq(>I5-,@i0t\u3:NKm`lD8h5A7=$]$kN*)Ug[qjZsRUV5L#5!rL^<ec4D0\dOOQ`m;L4Ne;<?H'[#-C7VQuZJQo7
%h%+)AAReoe("Xh80aI'3i9bPYB0FeVIrmZ&8C5bk8ouUK[aoP";nX>Z:E:FX-ubFLPDcc":;)o5$B,XCGpfB-f97aa?Y@.*3dV2\
%bNht2'4]RB?Y'c/Df`,`;K!BA4e2qYL3$&VO5B2m<bmI2D)f-*5=_k-N["Vhi;>]97-86dB"uiN,q9qDOCRc\"X_qF1u"BeY1Y6E
%1g=Uh]lQdnf>DEH:p1!j?pBAB]EW/&#8d=OoWqZcSeCoKQX2OrIl)]\W#de)#9?*CrFTb,lt2poV6[9NDQSEf?H"X#`<TRMSZp:8
%pQ/fCQo![;J&;0h6#k\\T:M8HBXo`gs"9Y<jjI2-7QrGl%jjJV!ObX6-s&.n@>EUSs1qfuh^e#=D%BgcfA.DpXkk/E`[MY`+^T7#
%R\q8_1%)77I,]f2f]]`gMr*r[CZUmm(@nI!#HsU%Y?K18B%T-akLg2<>UGYa()/gYhIj8rktUhX'UmmNWq-"\RFmu0)1KIu1KT"X
%h<+6(d7]5+H\j%L?t\#A953rT#2N^gi6o2I&CnrD-VuiNJogpSR0:G\Hd)JZ;*+IXcX97PQmX`*<^5bTcW7!?:Mf6/\'o2aoX\\[
%Z!q4EidQSp_.d,4`Ut!Yll>ArMM\YmkS<,@4jsU"m`]J+&6u\d.,H&sBs+7JC`UAD>">]oc50iSk];a=7:4U2#gT=A3I@.UX?'T@
%9_L5!-;^(74KMUVj95#lUB+5r6fk!<Hf5NT`lbV#Ka:^l_O)uVUW0?i_3&<6k%s#EdkN_Up0A816a`g4RgosW[]oLNCA55pVi3d1
%C&^soq@"@Ndcbfal2sjjR[Lf*lTWXj+W]fa5d);Es60/O[kI:9:TV'QRE'bcc0D.G%MPo*,6*O<NZi6W^@O(.0tSiu@.7?3>5I[^
%<C^"b?Zg_9on+S4;ftYTlOO514RO8TT(Ak:6+Q$W?]MH34+:#:g7TaD&pVq'1.<p:jVls5&T>ZikHomKPfL?iL84/13n\fD;RPVA
%>hN?9g.HGrL4)Ur"l>1[5/6c.Ic^8$gWT7K$]ii?kDRm@hWEM5^#RDG`uEVGk&.B1lK/!SoCC;?\UJJijlV2nn\]_.mr(Erm9MR8
%`k$Pdg_=aU4c9*DcaDeekf2oYDrnU3.gtP=ec$5m"Pp.3DdVi+;ND(5j$tc2='+DDhHK7EK1;tJ^3r,lfCn1,d%RRYgq7:WD@UER
%5?-[PM[PfVmWQ@N[5U(5IpfEdCt.G`YH+;M[pMK][A2sU_:[=Vf_!8!HL^EOAUgi[C3$Ld\U,E!=&(\<XPW90cfT!N2_R)O2@kkA
%)oC4H-]j+kUCXPF[Ct:CF76&R10?WCDaa[OT5N0t@f+@6b/;u;\KMf3J*j`*hn&=CesG+AiRYF%@e0=aAT.*bLBm@HIWtnLUn?i4
%)s[t3@W(QYrj]U=\Z'Jk=._'lRU9@4rGlDMH#`SpX2igfQ5bh[.K4),Y9.VRE7Z:;WnUkG`i"0ch]<k?gG^52?L5qO^Sku;h>2^:
%\?idEpd@D,B)0u4eOl`ZqeZ92e)_m&pATNag84e2Wq736@fH"kaI6qp*qs"Bk3VK4IBB6]H`a]P3\7R]H@KgPTil6eSMQkTYM2!;
%f="__^Kt8<288W`gNmM85HnqZhr\!H*PT-5&$CDTFrtgD_NZ+/]@V%*hO3!X70c]_TR(q)/33i\FgrHK&(dH)QKg!02Qk<>m9qpX
%5Q"!Q:_Dn<3r!8:VEa2bCok-R/$IQsE;?nqohXA3r)IV8"i#oV+$<Y4OL9kapK^.in#n8aIX^u0X_'J#B^^4Hqei'+ol2mC&,?dT
%h#1M0eVjg3Y>o?[$/Jti5)d`jo=7`OYC3"G*A'GMZ<j`l^/6`m041M:2rD9L4C>/We;j6+?WOph\9AA;<9%?[5;GR_R_uW#+3"/Y
%CAat"I&$E2ouFJkB="smFE[8#A*rK_!$"2tAF8en2t&HRqf;D+npL?&PE":e_^CB`O)*SR8-4G8nr*=!YNfJ>8e4Tn?X;M1r)23t
%4Lc6!g^nK.9_cSOe%=b3g4LF<Hju;;YJ365Gq;1^4KLsjmoL7O_9/[@N>g0bh1bZ>2uRT<]o'l?(Y:;EPL%.1rWV6eB+q$)nb-SV
%j'tAsZSI$Er+T[/kXi;tXmEffGAd>e_BUL=`*DZ+c&K8<kBGKPbjO`lr-!?1VcVLU^NPIem&_?RTru9#3kGQZ]7+D[pgh'VQQ%T%
%/,$)m4hM7dO4pcENW6;p^:8-DNa%hA[/"5A\uG$\4e)aho,t/8[spO]2dRsPPhZ,d*l6uAQ]^'^T8o)\?t\NF:4%8]VVfPl#Fh>>
%omT(^Qri<]A%eaVeLWn67D,NL*kbaM?>E3+cL4du%h?pcmEVbMAcLi9%;=eDI+H+/qEjqEgpjb*hc4i\:2WG,B=C/(cF%WKE#\I_
%$QF9o98CI5",7-4^MMc^r/`\Jp:$)YP5SUoT5MB8X-F(S%Si.a^+`og2t(.1T5N^6#.[!"TQ\t:pMRB_rQQHtiNt/O=?H1`D>#&Y
%V!F#h0=Mq8G4.3dSG3gZFF0d01q#[<`M7(2ICWPd,eq'_mbFiA](YBq[`Vq^:BpPP5.8Xeb21*sf)!5^qA`3#onV7bX_W::f;4G!
%#MU3P;!J@D)ATQr`%9.tHp.M!h*&@*&<4Z8LN7h)d>"`n7900Jg1!K%bcR`6Ma)%E0CR';iEc0YJ'eMbL+4qQcGT7/o$^lEQ*j+p
%&+W?jkJsp`X6rdM-?#6^iG/-rUUmhMs8&P>2(F46XP[<_\H2bNj*8t$(q0-+^Bd="na6.)i+q`9NE*NlWp:(gi<2jUN4R-/lUt(U
%d<K;=_dgk[cBH.[d[qI#.XPF0XH&l-L9n')C"/L8Sa])8B%TU;6T%;BogU6@L`5/AmlYe"Jm%8mTcQUIV>Uh6E=KTcX9NbF[(a6q
%Pg<DV7g>Y?UPPU$c`+i-bot1#=0K!2_b41Iqe=ds??(d]"D/[D)bpFs_[*0f+b<boir)VY"P4u)o6`IR6itjPrL)Vj=uX@RKCRkk
%>9&+W4`fGlI^.#^njmF*8FoO/n0-OFq:LL,nr5u'*l;Ofahi+n+R\aW]RE*?PECBJAIQ3(jLg(**4JE?/l:?4!L73GE/=5,SM,?c
%^85_e'eQ(:_!>*)Omm@pG5(Oi:Mrb[p<4lsE4=$"d1C"*:(Wm\@@@XChMe,JN:Ja`c+;"/8c0]D],<-?\m\9ZC),k-PnYO`If-%t
%WdoV*k^mZuT/.!a`m6.!;EG3GdU7Ffq.ah%pO9eqEBQV<pK$p2;ckDJduSEDl[84d\l%5911.gZg>1EVGj!ceb07K*j2F(j=YY#u
%.Vh:^7G1imGMLglB=tK%Y]qDEcAKJ\4tmjCojb>6gUXZ!G1_02IUbOoI?[OL0#-6!W5R'-]k=(j!Yb(RrS_Xgl`74,cY]i25O0@S
%]"WN@\R7fpf;n:^]jb<_qf&b4q#7Z?6UmcukM@jS.bK^]@cl@Xg&Efah,%U\*ZWe#GLq$H2JUl6D6'qR;iP/-AZlR^0VV@do?.C5
%:+WEN.&9pk]p"fQ]r/%UP5:^4<mQ0*qM\-#celL)gShL`;Hi]phl?fi6nPU^+*>8U7?CBG\Vmfa#50g@e#09<J$O.I;0V>BT)WgB
%h`Eq^rP\#`X(*@Y%AAZK)R^SV*PBmDr+<Rgq#rB**Ns9</qT(]%s"uZ]#cLe\*F:Hb2$7-f3='"485)JodZ^$dJMX]WjrR<Ep%tO
%5EZO9DgUa[0GbQ]d*3D3-5[0F*'2m<DFJ^g\\Ge&lLr&`k4@<hl-1R=g+QJtJW5]X^$^4.2Adp48'>-8ma54=h_JR_='KGfn(-pB
%.%br,D0NpWECGn;3Pf$oe<\rRH3bU!TVG09HM72h/'tsEg!bk3SS7oB_)X3S7@A)!U&DA=4^@u>QHiZUPcej`'"I`0B'&i6ohdT\
%W((7TAY4rfAi:aRYVts!X/*p7(:.osfqX88J%#_WFW(K#kD0/QDc`9tr;$e;JWjl;?fE.'EDYLkp,3FGDlg%tn&a+Hf2B&Q(N(e;
%]0CK_S(1%+[uU5NAeui^EpjU^%mmeoGBU%9]7t4Cp&<3AHa5J.B]XZqgRd&Mh>$BTh<Q$GSVp;7ApTd(N@20>rOD]5B6?`$q=X)W
%YRW=XmCa^\F!"_<<kQXsnQpEVX4D_%"S..NQePkoq/X1Jl$.Z+rRIB-IKOBr2W$-8l>Fg/fkfX45E6egIp'\JW16qAi4T)uqIm)"
%HiVSoDUf6Vk2$Zs&/Tj_Vi)(G<f9%"CouW'R(SC\O]^DYd*:cLI^E4(gq3IJEgK0JP$us.Fo13UG;23HUh*8<<nld3?,#?>fAF9^
%EcGuqh/F;d^>$n/)?[J$mB=jn2+P3mJo2@M5?<8<I<B$R?n/hhAH,;>BgXJWk5e3B")c7S"cqWkB%jasqLqbb_LLg:Q,TIMU,Qfp
%B)\AmY+Z`@ETbrE5q'TV+"d^P+R9"']!Aq4s*jp13?R1_cXCV5^Y*aKbTcu9]A$OT;FeE*QobqRU@[]1(O,;Bf<5[L%dlc#H1+dN
%j4;X7JlURIm5mW6ilT$q`d7$4!`E=[Y<D<g=BIb5FE"m=n+G,pb'raQDT.&a^-gT^&i;1&$Q-3*\(Y%[00fVR^W'/5lNd<rmuA:b
%&nicLd*VZfHaV+*=-%)lT'VC#ik=K"VXbST/bX,=5f7*lj7QWk_-0l]TJj>e+(*O?]8)<FpRZds%HJP4Qhb3fZf^&f%^s(GAT)i7
%aR-r8D=,aDS,!:7JaU[@aHh07(V-o3YdAV7f8boQ%k;=5D$R9UEaa'1@C\@'kmS;H696Zo2rB'&dnj4b03qdK2<5K5Ubk,H1e`/m
%QYNVjIIZCYR*?0cTut3L+nL[/DP!-dK;H'?Tu-!(!AtPSG@`rn4-f"'et9#r=3guVd?2E%_O]6=%ki."WPraP\TR5"c2k?>r3j1G
%Y.\&r9[nNg+M5$T>1NKGVo@[S#b<@)p##%]4-eVH7nZ9;\jh@>khblG3X%h\e3ih>F7%Z7/!6moDJ[?P:OtFP?[tMa%tSWcYI1.#
%(NKpVe`t<:[I`,7o@$d^CssTA][$`^Q[cN1%3L=Ihl*&K1AC;MQ,(+Zp$d'GjhZ3Of\(;NrjHh92AiMPf28WcG%r)%g-P@WZZ>Un
%hRIalo\E=m/s;_U^KD4'chd8-+2?(N[WgtMAUV=&e(nLF:7Ik+:L7+pNckLMF8[,^rmU/co*9ST\eF5koY8$^Cul=t,r1=a?3-b1
%F77U3'liHf=&7\[J=R[p#AR7Okc\8"gN`5L%!LFr[FHo@)pL^Q[kB5Q_>/)TkA]>4hUB#GoB,mTQ/`r8mJ[cA1YR/a\`/KY/q,k,
%Go!eP5.J"E^ULN<lcMP?o)AK2mE+C`dms/ia)[P\jGUQLA`qm%pQ`FMr<oO=R26GZXjMA9WpS,fVqJ'sQ+cnV;WW1MS?+k*^B7%b
%pG!_cgU@R#7i-ud@_;1"2Nel/gT)k!:\R_sD;B]/QlEdkh+U%_WUHRSrIhUTP<?_JK3MR3I(Q$!b4Cs\2Cc>pq]@>7C\`M+b)/)$
%,@T\2m:1;#cAe;&ckrN^\8Q7i5>W;7Pn1nSCCcb+YUR8/A-19hgAnCe%;TXPj7IE]p7$'X@$(p@-f*\D]Yq2qh/'PNG44#Bg/2E%
%e;L)_pIFarrNr:@IFtRdgh8gRI;&S*IC,KAF-XH6j!HX6nn+\W>D()TosMi*cD/!Y2HD^SrE6Sq<9c,UJc%W\cS$3?+25<65AdUR
%Sp]0l)fsgO+tT6bcHtBr_s&Q:h")hj*%ro[3t(qR<HnHq+0>)NCKk"]DP3iRXu0:0qk`lCma<UJ[CD7.PL,lrV4+#lkc9N"C9-mE
%lLFg36[&Hj*-YTL&bNJNVmt1-j9nBuQ9gRWj_RQ\k^"OX'XnGWe?s*KAFbJeBj\'g0-r]YVj2I5/rUArMm*rYIR-!f(.W'set9ZK
%VJ-3X2J^R`nmWTdY^M]a)IMpj;<H%@[E$U[dkPm]PlpmZ!9M]:/5%pjf(J1ZUL.cfQa*#b5p("3Yh#2O!I;lD>$QDE![]^"[Rn`a
%.1Nrc@U%nhHWbh0:aTRWXgL>obHT[/5:-$^g*8::%tA"?Yk,<n'P6G(b5U]GjkAbjlb<Q2&2d-^0;&.l%Yn3MZbtMU=h7EPq`3U%
%9CHatcfT-d@S"ko&0ht^V`)\5A=a\ZkK[;Ds67qZ7dZqU:.IfF!`'kepi7f$^\@tlA(oB@$4DZ#j5\tGjnFhf@1A8N2XXRgIjl#o
%mEM+>G@(>G]8`+uF`D^&?BN<p6&/]rG(4qNMEqX=:g%L6g\/U6,T"0OT_dDAi.=J^Q//lt4f6qSHhO/I?e[Vh0rR7,RmT[^T8:6a
%H%cT)>d'BUe)QN9Da/QTnT"&,EF\ZbF!'+!^H71^p78V"F)1dSlJbB5g$L>,DSAj=hh/#/:rp__^=B6*:S-Igm?*>O4IaJQ'_=./
%q:>!T*]E^`ncG)XI+bIbXIe<rg:uhe9b?q)QnKZ>XYn\pVmX.=V1r8Qlco+37pG;Is3G)84]#AV2E"U25omI#q%klZ2Z;TM\E54$
%BLN\P)kG,MeD\ef;a"Dm=`g`_W6+)M2G1s+4J8Ls/s(e$Za$ldGcq=Kc1@-a_UnbP%aBMfoEtX'?d]uM&&-gZ%G[J,l0@Z$mIc/D
%eS@ueT&ku3_UlrI`VUEM]DK*]n><a#rVZK-UWm.1Spr6TKRl0DK`,_<=S7;\JmQ!-*KOGIerFW4]EQCO;@U\=@W&D)[oHci06[nm
%Qr2]SF's^:fNfU5pY&J$>5hco='pt;b\V07gO#,&^Y$'hp:+$_l@,*J=3!9B2Hg7S`V\sTa_HFQoDQplo(d3h-ZAH!3=2?'i:_KW
%ig8PckE",AWYQX/DgYf7Fg'/#f#mu<(\[jfY9UkTGse4>r85!nS%+rHDr]Vh<k;Z794QJ%FV(5Sa2#:`GOI\t^Nu?p^ShNnCuQ&j
%R^G1)E!`HZSk\LSlh98VHK/Dl&3\h[*UN-Z>IaMOCIce,Q(7S1J!sYKrb_0,9oG&T.1U9I\6c7<\s;DI5!X!VbuL'lpJc!BCL>RT
%*.O'O41]DU'*n?<elmV25P]H*6Z[s!BY#.l2Rh$(E2iE9>NmYJ*k.0Sro1,"jncC(lI&8eY^Rf[IbfYH5/R5(<O(,dp?qYNr8#AZ
%>'+8Z6]Pf-D=+J+A)rTYgVG3t/T2!hruU5%IDmnX)C6`nW:qRME`am$2`@)n?N'W\du3pmFl%":L([i.PDs!_@a$T._(9)M$dM$]
%]PKR1PTSG!]g)#BAFC0aNsUVI-6G\QEP6GW0,<J/EG#B0XqstBrNY'=DKR?7p?/&9M>rFj+8i=l\n"b;s/;_*\:*l<:NKt$^[2NM
%3Pq0'^$P90X&cf5.TG=@Ld".bQh_'Z?U+Q)Pq)R42h1c'dh`utjW+<]i;iXKr9H*8q@'Sm8g5`J/\V#mPn&:uO1RXVA5,sr7r-G"
%rX#dAdI1rO*T7M[OT"ZUJ^ct&_)*dKq<.7NZ;r<+P3")ePj?"&lSskLqu@X4,).2=8W:$Q2h4j>age^F)XKJY+5?RCqP%p(0DG!m
%ArH72>@FW7%$sCnA;Vrh/+N'VOtsiq;@-nLr%L0'YVlF_qbEq<-X,f`U/>J>.uT%aEDdPb:gdhe,X>JOWcDX8/1nk]3E7aHSL.n_
%)[d3UNc^MM)F+7tV(*FR,1)X0NT*j;Tsm"4JK',QJ1.JABd++OPS4ApJVkoiAO&ml>-rgp-qR$/l>e/S8$0o?TW/.&?&omf768DF
%,(bZlBhCXk'*UaWO--<*,#"#UR"2#(El]0Ybl\iWLg0q:dD()U!2eJ9A&')cXc,[t8WpB=N$.Ii"mq</ZbafgLbU?O#-#GW_J&ot
%%K)he_U(OZ\4U`Z$^&fqB]q.T&N;?UUN(9_S!54@"$frrSa)A1/IuJk-frEO5dGnD<#0J=QBR\;8#i?nQ(act)keS9(bdEQS>7P\
%.I:(I_r-Wf4b-?;CSP@0"1;Re(gY_0M?(O8E[;.k8r2Fc7Cp`PM3[1%,e1PiAt9ds-DhbQ=qO0<6ue/dR'M]/@XrW&;DJTcFoaba
%Ch"VWBbZtaAYN/"R\g,(WGjRKr*O2PJPmV!g<ODc]7rMd4qlVpF_"t(_H9taPJF=e3e`"_DmlHN_I.'iW$P0"#',lKeZOS0,V?&"
%J,r'(XbFlWNb?V]&MObFg^HLsL?K&U"`A2DeljZC)(%[PK8!fC;6]W1W?rO^`lQ"rI<X@De$oh@4q4CSX'KG>W@Z)p8AhD.f)Qjq
%)BB>aea`UD8gTE;q\O7h59_841ZI3K/'U6IM`].B(!rLHBK^E%'$$g_q',;g-%S0q.d7K?Joh8,Ih=\+$FnFiW)!H6OWQ)JGEs%F
%$qq1Hil2%#"VAHdclEbRU/J5m'Dgh%?R(CMJSl1C)uL"h5#P>aG&MuUjN8U5a$:?kC+M2aX_hmRCTP2t9j(*`JXdXiMK!dT?rLcN
%#tE2?@:>Zek,AYtnsX=/]O?X+'ej@?91"8%@4Cf_r/_o6%G1R?k#"Nd7\V"N@pU6Z.\8<%LCt8eL`%IV4;e6R8._KA-*U%.g)un:
%/hmAmL]N9(JNf&?oEYQd^c$-C!M9KG&WRTNMSdn1L59&!,XBASA4QhbLX6BKL?h,A=:=mHZ<2Z/2?ed^<k^@pCYXqBNTgk53`IX3
%OVesR9#it=#Rq%>TLHej%g/#^"H8S]rU4A(CQ\bZ.KE;bE4lZnO>'T_Q2o)RLdFuS!bg4/joc)]8$q7W^.O+=%Y,>PLW?*dJh"Y4
%1h[g0kXQiE"$jefKXlV%:K3"D@.c*j<ZsaW)hgWZ0aWLZJ2X6gQ2i8?4A[;ZR)i#'mtSdr$<Pp=YU$5F0ER>EL.P=\$74INCn]K2
%6U1rG"A8b?QAOaD!G6lfT^$(p!;p/#4cgdU7Qd54K$kbuN_aW[!Z2WS1!&(%Rl6]o/dPI@=Ns*^e.7G"Q*`Fl,=1i$#`M"d71a84
%Nec"TA0;.W3)Gj=7O0g'R4;;Y$eR8X6%H"7710ab`.igIkqN4(+m)ZFbi!D;5Z@s'>)>Nr"D(JqCm*p2@B577Tp5W151W=`!"H+\
%BEs&Md.Jq$%F%tP^b$hY,%r$`+@\eqMod@O,**RB5]@X!!Afidc[c^<d#2W87C4[%k]tB/,n<]^q#aGtgn[J[&J#Q[Ll_c4C*"(f
%RG=LS;;a&1TE4IU>,+uY#n9i6e8\<MAO6J?a7Xu78R,O(-D7K-Ud@q\R+.D<Q4t`-2G2a9GUl(p0V:2c0:&\Wi6Z1LM(olIGQEDL
%MUc1#=Xd,OUoc*i"RH0Gi:%s?NA<?A:)*81B$?\KFN-T*_*m.a-U@+:QAH;C&g0s-qOm4I.K`%22"=_9.r:iF>E]g^N<2iko?:XL
%Jj'RrUh"IrCSmI`a.R$KAd(_rYje<\_No0^$4GmR@>T5-@"0m[J[%OO"-rhd'PWp`j2\s>!<T>?3&!"8@Yc@?@-)8L@j"cb%9.&K
%FdTs9!A$JA7p%JN!YGd]`O%O`4"+nOg5][P=VJ5/@UMCRTK45-\"KPUfT?spJFF*P(J?URBPEk`a$=U#g\8L*YRkIoRTN+6qEN1@
%WRN8L+Md#^R)mndlOiaZ(c\rZ5d6/;@M'e$/M.Yr.C9LU$s/WfcV79aLLlKsQcB[m!Z4oE(lKWGJ99!H`ENM'TSCP,"O^j$Th1"Z
%0h$BjVN-QC/#0%_CB]j5K"W8HRXqE7.$0_<bCM*5Zt35EHS%ZeQf*@)b4Q<]\:p&R$\ah"]7=OMaqd;PD!Hi1"po%#8#c\->iR/(
%Bl=>&d8V6X:14V\^m#!lAlK8UHGC_UDlBlS?naINU^H045QH36m8JZT,Io!(I3TUecn\9#A:5(nl;4Gc20cJu@S)KO5W^0j:8&\:
%\ORKHJe`uL2U%\2%jolI$qOK_;BSlse1s04dbn/[SRtcs,)t<2dQjh;jFM%Zo*f+sP@=S=Acq2"<ub&S`u/J=&41>5W$8U7&Dm_]
%6uRXn?-"Q5eOCAWfnKu<)WuYD5l>4"j:5%(jB[A+):emJ+F'*#9$cN#Q:hu0di-s<#iT6k%g'mCfc%3/"=[KImj'+5g]%^ND+b3)
%8=2X,hlt,18Wm2]'Z;JO=DS-S7"PW4&l8oX:kT+6KWP@r%gboGQGARp9)B,L+q>eB.g0%KN^TVk5pq=P!t0o%p'DiANF?A6+R,$3
%-'85"(3)(NFoeTPaC:fEC&eFA=(.m:6U7J+=OAJ*j&-)5G%+)[-km@Y*Z1h?!(#%3aA@I0XTefj=qqa0JUdG9M6C).NnEp(Fcs%]
%!q[WF/3!]fM-6K$;L&hs.Bp>oOP/5,L57d=B*84@8I,qrYnEFc5Z0o\,YBXcO9Nehl(I;p60lRR-ebj\@$#M7FBU)g:;f'S5[4m^
%MBr@U`uuL3^p)mXR#W+%a.e4*VMZM$A`X*#'p87p+>@Z6#>5Z&+9r"g+T&S-GXAkE5dX:Bm9#9e8MUjaH"c)eSC,DnEEjmu^eA?s
%J7F2aE';-$nh:3@W=!GWL*!thOg]4s8_`:6;dugD9kU0Q/;jt?"E6PW7QNlOBLIYBV18S$o/U4<\5Nh=fu4m*HDk`#kT^+:AgO3A
%$5NXX9l`W8!@+6<Ei&8SZI"&PY$*OS;PS:=mL,*aMO2NfJI8)Rad>>11]d+jKNgg4<J.bLPdlt_Jkr+o72q9BU6cug-7-b&1?8G1
%C*;P%6g"UTe0Rp"e?fKM'sn\6p-np1;+t#QjV:J90XW<-;<8IqoEbe+Ort$]%0Als=Y.ZI5_tUD#oN/pQNmd`$S7&"Vi6?I*FbNA
%?82pH0N>32qQse%1_I)!Ae-q]Ql6BL#Co@[p,E9E&=ieu@Y,(U8)\<A@n/:"%RmN[M=*Pc=GW*YL5-9i#K:/kc4>N";`B7J:;VgA
%TQqU\DfP%cmR'V^H1)Y^T*;C@N*)adQat#U?^'V)EW:7FXtdoQY$CW"r@r@H4.,7&Y]T6h=qL67q8Lf23%r's=-%k1Bp$%q&J.3d
%`[G^@B[lT+rW`9Zi_J@#q$O'k-A&p?,DC1d'T/>oj,1NLBBo_@^s;,CF"N]XeXq?&Hf;[2U/YXC^-<bQU&Q2kGQkC*4AGr:^<2!,
%6%:lB)XQhsr?NT(r?Y=go,r/(UnI[c7-),`!c/.r!\L$-p)\b7D!L)M09cRcnI#1@78LFiFrUYN)0?jk7[4]E80)D2@g=RcRK<[(
%WjO1OTS1`A_,:^LKVDphB#KG[^Hg%1ECg_?lubf'=[WT?RKA$0'_[:3QFf[#:h*DU;4o2(*'t\sYW5f[oYj-&Sr'6E3@u.@%Y3)k
%s*uho(Q)&aBeBPNAc`P0$t:':GBg%$hI)!,N.=R=`*n3pP`5f3OYEIQfODp[W-ngr</S8t5p%-X!RF1I@*B6$A-TkUSY@hS`F1Jm
%9Ept6IrCK>m*Af;WudZ`W[m9tQ7*abL14U2JNtM9&!b'mkXdIDhc:002G*Bh8]Ngoa'_d!P!Q&U!*TVRdm;RjhNmFHK%3+@@/!2m
%9VVd7%7sC-OXZu]R.)e,Tic@U:rGJ>iJ%hC3?Q,b*;QZ?Gq;dPo0`[360DuV4\B+DTJqDh%I1XP!=_4&M^@=B.ht(DKmPQ%VunA[
%=1P2j5EH?\$d'UMN&3.`pd'Ht_\R6Lk5%!:HpAX`OEgO&q>scH9G;YoVb%*r1HE_\Ut;7p@e2A.hk3C<,:K7_`BGsd+Y=%C3ZEdl
%il#&&$:RuhC*MlC]]UjBjOVD5>pc$SJL(,4kbpb/[YjZGZ\*e5dmS1>W,5a,@H,oPfYf(/^7/)4!$#.+3htIHaoRB2S;kmFNQS_c
%5Wt<o/t:q;!"q$?kYM>YQ9haL71l'p5Qf^[N/EBU'F3cE^7Q$[&?TA0Dfj@SJdaNVa`]4)a1B:#rLH6Y8)ol(X;INoOZn@RDLobD
%d"XEa@a.RbHd%E^>S//+UC8'M4Dg)U)&,O]%3\OM#<&MgM#;02Jj;E>lC^r`5lq*^aH3O(71R.k&NVM/%>oiNJa/ap?A",,#/P?a
%F@2os&erM4a;@<:UOuJVI4tZ%))*Gd8EPWA"Lhp[V0DtGi^"OUbXKD93^]jo0rj@E!u%!A'NAs.,H,"?&=ESBB?i7&"b]99H>3Xb
%U@Bd%MDU+HaO"-e3d=[6A-Qg]#XOA?UJFe""iIZP)O_4D1<-D,i@mM@`1G-i1p.)i'P=1aX=?q;)OQ@*^B"s>!qqp,DbVEr#`am>
%c)&^:?sJ51mIr1^nh<>]T8m&gfS\aU6^j#Z?VHRNKcpH]'i/0S`Z&lX15Hh9!k+.@`NW=i\eRsDCkLB%=V0a-F?#uIRRA>NL=4sR
%$I.q)c=$l$6Uf4E@b<P![SGP/?;.,EN?b5\&#9jB0[,'?Blfuf%D"f`8&rWF3J?1DMXC,1R.ji19*EBe`N\/2'/TK=jO5U\8h3#c
%7NiDQ7qc6:RkPE?5F%3E2Kqj?@?6F*7c0fs1URWX*k@NEX"OUU!BZ<uXPaa?j&!THF$Qo?3FZuj/Al"ol-rraB]V73Zn-UONQ,9p
%j;8MX5/7q6'(M9FO<:gPN#9-Y3-Ua/N1!<^]2Q]U5U:D>8tXid+M(+E:umcn]^<f1M5/Fr1T!8AEj@.dKr9O1;2kStG[sJq*uT`:
%:[!ITqC!0'+m<?'V];;FWXsas"UZdq(+VWaTL@c'R[#(P@)WEIPY&c%?q!SGOU/=i-qkq,&tP'V@H%oZD85tiYDa501-$j*947UY
%jA:Z"d%l4Q!J(:?F]H7%2^MQSoF?]tK'*@C`OKDXY#knEF5.%2XT\MH1'em_cjZ)1=9nrqWT`OJCflrik[XjQ;l)B#L3BbD9F=K)
%3bpH:3iYP9)3KK!D36de5%Q&b'$4`<!^Td!S#2sh3+eh,+?Y9O^#gmL*SWUJ,<0cH%p:KT+F+6`*2;_-6r5Fi357ZH8a&t'*9)u<
%XcY@e(.'2Z,6E"2hY%G27RH*gRY0]%_+HI2fnghlEWGZdJBajA1B)2#Z[tWd_a#4D:_ZPJ,a#ub!!Wo=>J^B>P\_EH5ji*PK>tgU
%Fdb??:ZnSlW8Y:Y7WPEe+lF5u_#]`F9"*r3OK:-t.2q;4?ZE_^bha68$-Ws9Jj7ZODhof@eqAYnN%cCo+lQr$'P+9lLV%+^/tS9e
%)*[R(bDZ]U"L1[)JNMbD]e'r056-cF@k?S1\05kT!-Bn$7%r$KL-Z=q9.aodW5EAEABPlQ;DS*g1`$51,ip'&20<_2j$q(t^p#ok
%n"[KX_Di&g_mTT!`":RD=pMhOOuh?"/$F:Z!,5joi6B/Ikp[ATNPPl;M*]IAB!fqr;VcnP7uUZ'a)KcQ!as]%6O+O3/'QJ3^*LcR
%oIH6k#f;J_cbO&`,UN%>i?/oiHuoea+`nW_2Q%"BKb+g;!&8`TSc;DSg).F=a$HC16?-]@9I"!j)2(bm0o3pS5_P4s9FudF'*&&]
%dZoYklQJ0N)!Qo4)o<ib=:*!@7GF5\.3=AXZ%71(P'@&FC*7t_'qJ2@8ZUem`&D0QN4`7&Z)ifo_kg:I&+Q1D3^Vt<"c*;AKIi_3
%dP?WB%<St>Q-'(5qbg7dB_H'u#Ze8<Si#,n=:W1'#U>WAL:klJ3s\k48OBQd?OX?+e.I^1`D.U#ka;+.M'].d^kD1[f^abh,JlXa
%.9[r6-ums57SF90942!Qjdeic!7D@=ES@(IP'm1"bQ9"'5UXI%/I)lF6oCQr3Muk9_7:(Q7raD&7S^cXK5D.=LZ4:_!D?&F\Xs0N
%medSPc8[3V)cE]#OUnQE+7r2'.S?O=i;abq5B6/CCYQ.[LV6pO5HI@kBcYh(P!$RrOcX0c-%oe"AD,F>+gE.6`_-5YqKJq(2<GbA
%*00cZ%7oj9AfptLQWEME[BJh$%-`0gO6kNAogP33.j<34Ta=fOSalEQ7fnuS2O)#ZC7BbKI_%0n"j.`j`\NgsQJcu=[cL'9QU*-%
%YEBT-V:&eCet'$kQ9.sGQ`BE3$<=4`m^4`9D+iO5\q$nR=]&oJ$]9bt)S>LP<0moHrFHT>-Bpjtmfrl/L?.gH[Kqd)q9<[jIBOs5
%0<`jpdOP(&m$8'64g/c[Z=?JiV?.e"J^e8/KED>NFt-g+M;@17f8.IY\"jD'!Irh3N[=JZ,Ut%2QT6FH$/k=ajhEa1F^63n/k[%9
%<;^=YXRI^"!Q6&m&3!Hn3U:&a@5+6`!KJ=sf^<OX1QGMk>$hP;jP6UK7HH;>[,ps=dq?XrVtgO`3T?tj&7NJniWLBG;+F0T_8Z'E
%^ro(r8?ZD%6V)Wn>l1PcN$*iX+fO]dJ[WuT1WK8faJp_<_8Kb]*".Nne;%DFeGRlR_6R73[/)lN,DDR;_.t1iaMdM\loI(P?cO22
%K?N[f`q_JWZRNoFYl02rhfY@(K:(I7r<^hX+%j<tCW5ocZ:Z:nn@0MXB:MYuQ/(XV@7k?EmIt1BG:HWSPSlm-Z_qUc1[!P%emb1p
%NMp0Y11!#TV5Ii(<QAcaFreR)RG6rc+;#69R4UGDGY9#8c8!i/Z;X*IRfV]?D?52F!4nQr]W*Fb0(jiF3,ien<F$8smmiT_5b_t6
%:7?Yf.33hq.+1"0^p6hLYQ>V(OhtbfF>A)JP\h95OF/O%&R.E$g4H$RraenfHab9q)$1]0W;EkQ1Q&LJfEr6>r0%=kTs'=%3DBli
%2UTkZ3#Si@UH[oTVA3OR->B3?,$a!m24lc6LgFXR.5*3O89)UaKd'sXc3k60@"f#t8kRB(p#NMS+=%D@+J7A%pcHsdJ,OPg^5uo#
%$W9*X_LG==4d]+D=+C$9s5Nmiq<a7CjgTa>n,DNXr#`t/+8%ku['FS![]=H>AIT>c)%ei#Wm$#aQ"q_j+..9Ma7]IiOPkUZnPB4A
%TeI#Cj:plmJ@?Cg5[2sG,Og!l/js4PG`+qPU`H-L%OogJ)*cr$]<h\Wmd\pU_J^#G&i/I\&19Ks%Jt=(k]lM=p&!QhgE5t^[?%e,
%n99WJs4R!N0@eW$nNFBBfD$r:)e_b"%5)E[4c,b;F\,F_1A.fa*DHtAp)YE9*h!t@dZ+^q3e-VQ*MV_r=jltpp[.CpGkp4:gJR`*
%aqjJZV8]To(2i&c:HG6Q/F>t[1:+l465K>1?2IAej=Nt*IiS2l!X`&$qk6[D%#n/MpP%4#f(356hs5:JhtrE,/ai@^q7t=iZ0t(@
%2f:!((M?CXM2D]mpXJ;K0o*B;*NhgXTV2?!<1ZN\n+,^=Bi?MU]H*)'$)7=-(4"JB8KJZPLX(q7h4jMO[rfCCICoFq0AlYO3st/R
%HMVDn.M;"9<X!)=;TsiR2I`!D[4"etnZIW]TTk#3e9sD+:!Vp*`-6&of5r+Pa.7+qo<^(5H8jYo^&71t^5NJs:O<Cfh`:YSF`d!s
%!5et=>>e.KG6qk/+X_Vm&9@H0G`iO>;U4#s`=1&T>4ee*)[VQh0!)j<VPi1>UAML1FMHa^]DWU#httm)715TnF,'Jq?id:<kaZ$%
%[M4J*Op2e)o;GHJG)cOkO`O.rs1;%Qj).+N!K)=gG)79Ks++-0020Z)*4NOKpN'-0hX@u/qM7(;qfk1,a2U1?)Y\7%O>W(%7kSL#
%cl"Wj2rJChMU#;:V=Q`T0#.Cqh.:-&io(k$M]S=Tg#2sJBb/VZahHR[3iD,+mMFZf]0G?;HQR/riS7m9D^%G61uAgL01aNW[^dS$
%S=s_(5D]r;T$$EW_Bp\KH+0sQ'L/kkC6\ufM:VKBc#Ap<\C3#jSp1Y;S)&;CmsffHcZ^'IN_suK6uD$bIAG&UDX$9$,F3uH#QXg0
%cJU-$`-l(X&)lW@!/bgS/H[SUEgZa/>=?[:,-c9\(S^8"T]gO->B2t#QE>Ac[lV7]j\m7>#N4B4a'XT')*\PPW2u[t;S7R4:e\;`
%]q;$s2dO;G/BWCIbDVV>GDsf[nP+pV!RD.C&XiN6LZFhd>I\!WhsC>qf5H)M*J(,j1`!eL_hA1VieMt^%E>i`+XR\$*T*RbngmBp
%C3'Z=Z5Vo^E;Dm'*KRVl;e<XoYoX]n'RJo>gYJV$Z%m;3hJp$t&[,R=43f=1To#[*&=Ju!$L,!QcuTP]-g"!NN'9Wp)(lm+Q8VaU
%*-VJh4k=Q7;_<;H,t22)^+d1QiOIVo\fZ8krI3qsr"X.ap@3;7T$FA7f/eVspn;2?0\X"43%Z(9ES#%=i^TL:+ZeNRQ5Y'hg^XUO
%3QKU\>%CPsnV]!d#^MUJ@GgJeSPsT&rIW)Wma$.RhT+AJGWr/\75bIsDNRMC+8S]@6-p6&@c@Ph:VbRH8[<0`:RuT#>#7bT^7@25
%dbX(R/c*uNNQcA^(XCp^p2mVe31m`llcnkpXLJ6+Oe6R0-NE_Db;(ST4):aPJsAQ"Wt^5+?damh+"b0JH'^Wb:=2>OGnM6193LJ#
%RK(=p:n7j#lZhh1n[D@eXSY%XTF_-JhsD2MO$0<9rRTfmO*LKSa4i=.G1l]C/8tQDhN[,j[hKAi_K[^G,3??uM9]2Y;O$Gij)j&d
%AWFhVS0MRl_c:5Q^YK\YW7l7'/UEkR>In/1^>8dIfC+.#*JJR$Tp3eD?4bunTjKJnE(a'bk+[ZINiqdG/F"_*5`4rj+p4[N>'HIn
%p>]+s<pQc)iSPPM2Z<R@/NKGC9D?Wb2qkJ5r*_fQXtjbe)f,G1lQS%hQhd.C*O2I13YXVF[5n[%:QZ9ULL@'Tm'm^R*<Mm2pEQ$G
%$!3Bg*>bkS]l/+NoZ0D(?L,>SIehU!I(]FOEs"T(Put^AHHeRm.F![j0ME/=(rOQY7=NKc!%iFU1WQ'%!g?KbpbX`?4Z"%Zc/0=D
%#(A`([JoQ-nA!Q/gc)b#q;pXC#)(F&h1@0u;\urd)2]?m8"&?8/S1M9X>rlN=TAHbVj$A.[Hg&75(DCfX2+[]Ud^o%&]V$"$Wlis
%^>0sDTDBho],`h7n,N6X5Mn`!Pb??Jm8+N\E!$hF'=JV3SRN'[f&s-j&u6f7!$BX0)8HM)*-Wo)Ab*lOQft,o;)I7G&Fb1(*:DS;
%U@YpNFM6SGg\h^;?i,(0#3SH:rd*gXa!NQ%7[P6!;X=[C*%oQ@cI"(%?Zf"=D1c65EB=;o&99acaJ+H%7_sc<_X<N'ICi_U1c;aa
%^#4=Nr>Dfrqfk10c[.2.Y0!pT>d%hXQ=B52k.hj$"Q3E>k?MeM$+nVokM7+In.Yc(:T4dl'96jc@h-PMDUJ!m;s60Pn$_-Rr5PAt
%W7F\[L?W)lq1n:m#Lb%nMYd+FEa9g$:r.TO)Ao#uof]+J.lcrt*ToI)]0uEG=Nfb0h%p-M9riEomLUDb4f!PAqel9U?GH4(FpuY:
%Fo4+QEor-`21tDbQ=d]S?L$,f*J3l?QYbrS3,V[r_?LMH(`\GTRZjE^m_5n-JL_2:DKgo^8\(\`jmLmZ+7SitO14$H[$T_;8d,ih
%r^4HAXQ%m\I/1O['?99tT[>4"cH`F6oMaIGF`uWDJ(p#?c,(/$U&Kd-D-$N#h]@s@)2E=Kb^H8bb0M1'o.>&i_9.f,TS>cVaUc50
%#-4Se&;1Gn;h0qlHGfM'WkZps3(,09.J);>X%@]bq*[gL9C+G)2QY*m0IZG)f-+<n4@K([mTZf[s8%_9G9;9OS)]PNDR.a,9dTDT
%OogWp#@Kt'@F?Sd7/JQS&\tHo"8BK*q1dn1j.T,apT1O85;"4rg3p0tml_-ZpNiV3(AkdP5Oe4:Z_)CKW`TW878S"Z($if!7.@LY
%W-kNplG9PU,'8^"J@o".LU8O`H/>]]MW&rc7A!bZfC<1=/jqkE')?^[k^;eMh(O$1DL][Lp\m#7YX'/J#@cTk<fKAGJ:hcpML+Q@
%;M@Z5;R,hY`!SA@SB_^7>RGM7`(^AqT@J$gHT2NI&qME)N+aPALWL&$NX07V[q-]M7X*Fr/@h`rQbjWM\L*4n^;CJXCVf[7e.()5
%ZFOTJY[g0Nel2_E$Q!-QbmRB[>I@HU&];P\/uLQO<J0!PEjl&1L=]A8R$rValLepM`p_T%s7eZIUe9tQo%UqYMuWX7J,B!?jkCmW
%l(@sskN>).pcnf;^]$`.r'Hu*g;F7iRC%=+['K06!Ue"[@)u/h@Re)a9'6mX&7Qt^b;<R&VLC.=WJ!qX%S2HTLI_SX(phEOeDO@_
%5<r2jn@Y-bi&fpERF)@t'^@>M1W_#+W<LT8<,j[HJL$mj%5O>:nj7N<9/70:Z>s"i(h^D?C5B,lb*;T#N<r7:-'q^VA[3_`RP+c;
%lPieiKukMAN`&]56H#6UhjF'm&G<nA/jg0as&QN_(^#N;O69tpn]\U5EpPKOeRZ1S:-HPq"jm`(U(kE\-'sYb_IRfY>5X$j;@@N<
%g3$6A.#A"CX?pK](S\m@KMNh0'V8KY2WCs*23D/8&4KX=5r=J"[;p8h*/5d*+_>5,3G0R0'_j00>d2et^ZD)q?W$'QN@FWt7]"Nj
%Fpa?u`%ps\*J]5BihrlTdDh3qHQ<jf4<[9X_DPog3Q`UnZiXVXL*G'_EIh/j`*ff2=)taM>Sa&u9>:&dQ(0s$K*L6!%e<L58Utt\
%o+#6g)1IMAbF>+fI[??c/U>(uqTi.S?^*Po`h?6s?`m'HL[8U<2KJ%g%YDc4^BkB<Np;T'OeP*LXn#D@.fb_*6d[8!Z"0"d]cZP6
%^l%t/_\WM63jEZ)?!nlN=oss(M1N4X#Cu_[V8AcP@^q4qZ/,S8'rUsV8=@_bF::>+1:B3/)//7`O`qh(VW+a<oS$$)k-uF,#ngh*
%c_X1F9#h=6<$.qCa(NmB?J+.>8a#Jb:1D5,'Lgi:J6C-?"eO"JDOX95JI(+f9.)S%GI6a0&R3hU):E8oD>_RQ$4KhrCN<$k'I0b#
%pQ@k=Z8dXG.!r9%*h%qh/*5#rHM:EX^Ac@g]oJq!-SL,OAnkZ7n=d&YVa8;/U9u4IN(Y@?m<GFmaM1H$0:WiU\1UJI'joR`J,;\2
%Z$&D`L\0olL.ZmM"cqhPYd[8IW.&Zm2nSPSD3i[ij,_"r"+5BAo!p`oXJ3bi[InMDU@5kjVj41@e<U.X+E/GkUi%;cTJWjb<#bub
%Z/2jPG\)\57nk3R1\r/_GD:q>fKW@V)5RUP;)G,kVJ,[R0-uA\c`(rG>OF6piJ0,FSaBTnZ4YD3d61j94&g]:=@ISWgBkbtL/U]h
%D@ap,a_US9pOdPtI@Iu\fr)mRihUC5O-GA&V;\XnNj45RbKkfG<?f&HWl]d"!#YVgAV_X\h(/#0YGePa\1j$_QkGR-6_Zn$B&TuA
%+&]FS0;:;%(';[MMd2`i.P/df.,&Mm-nSpQ6J--:ZjRR,M>El53lAh(Yn0B.#6?+BOU1sEE$;0bZrE>?Hl84m8A[aVXB&t-gd"7W
%*\'<"DOf;rF;S`D+97=\(k!u!=sj/NP-/33_kuo783+OQpEAh\]XQ&,SpJ'*Bcl(eZm-E6c=Ed_f8.I5G4lDYQgFV:qDI#=`7u"T
%krW#4I=`_G/9"[@1?HQ>N\)8L^-N`r9Cu;W_iT:+"Dq?'cUgl<S9b%SH1Bd+V^u]Zhd`Rsd?Nt0OS]*+&9U]c`^L.,Mu=F,,fh#M
%Bf*EVA!!mFUh5s#ISN2tbDOb_/pAtrJ(E!U)uYPdqE64@&hS<>ct;k4<+l97qQA9ob,P(I&&-C&G3kS?e%D&X&gC>]ELq\npX]0b
%rGXeL8IluO_/,jNkAlfM2r&_KXth"Fr^8Sfqk!_qZ4>"-6qs@@^`hP<7j5!'RarDqW%mH3gJY7,HB`(\*o!JQ/p,@YEBA!R"t&2n
%Z2[hKZg;54N\glJIOMYD,4R87]10OcC"D-ge3Z7l_I4B&GI-g<>IDp/HI=*caMS_jbAlM&ns*`9$&gq6-fN<\]pmHZF8oj7]NIik
%?&:4-p<CI'^B<>/Q.HK<DXric_=W93NFPIDaZX.;1])DYhl"S<r3bF_!=h%=TXPW=0FAtd&>:QqYGuOjQgV/+^o$M:B/m>U;X^aD
%Llo_CFru]@Uq@c*0@C@AHBb:e,!9HMF65?sd<hJo9ULReQ[LPm:sO\N:)sKiG0dRoTA2;I\/1["a),,PO6^Tp(uPn`<"tYWjhtSb
%AOeE$3Qt_Crtm<B6aF;KmN"Pl3lb#N!bda.89(:;m"dcK1`P9EbKG?lpO;*,Bs4TGb</a&6\d1KmThs8Jlgd.M=h(a>tIhmi+9G]
%hCbO0di*J]3^9446%)oRYEnF2Q&\0a]U='e:fQ$#505(K\)=_&'<3ljApt?`5]<@n5\B9s[M4Y5'kXaS"jVRP4+kt+MN)>8,jQt:
%6?9`!\PD<?`6QFm7r<jS2O:lkUGF#aUsmqFOeURE<?mVXPpi2ts/*%GaI*Rd>!.Pg&^C((rblnCIo1,KI_c'RY_?3+k[ZI2(DdZ@
%7$iHRj8t;mMFM[P$k74]h$9fqOtuJuJZ3Jug**8,804&bE*sEOF6'''VN>0C5&JCX;T!,;'e_)$OaP%k$7kn^@2NcRW6b"Dd&D>@
%'"hCaX1?V2M7XpP*p4F^d+nYGQ?ng9H;K0g2%dGENc],UO[J6)b<IUqE_h_M*?m`"ET\W:@1-T"qf[3(`qk.c-(i>Xq=W<Ma#C)H
%]mf=GR<cQ1n8^IrC<r:jj<)^r.csU")l3/fegjLlp(a(!.g^atA#/-?VA/%=]ag/H\oSD0X+@^pH+-&RomE\`*gH>8la$Bif"GD)
%e:W@@.\4$Ik`#rC1=ue8U&fSg=#oo&P^Q1.ojtdRBi,Bf*l]@*`+F,S]9h?G:@W/&UNL"Z:Y^*)6Z`gk/\O%Yp;D6g\9.!6git2#
%NYgIehOh&jp\MQf?V9Q\'$J9;_#MGV.8qqUm,Y@G-/=*!`JrO\OY[50-h_s3!f#b2G,L/Bol$0R.[,&4cMTE[F"Qt0X;BY.hOh&k
%p[Z"in,:L<U:8K(U/iXJLrA=f10*O-;hdRe1n1FA$oNr7+Hu"O3-2R=<QHAKPVXl5oH:%G*1k<IEQJSpV'i@gG[<e0$uXJY!BWhC
%5(>rA:4k,m6#nR?Xk9%oC4J>O(1-:SK'(L/o=;UhiEJiYn39+qgI-,!\/1M7IRklAGY22&FXfl*/Fjrs5TMU*kD$="m/?%mH0T&-
%O;Ym;N1eg`RE"ns!g[b9?/:afm7Nn?%@&`>b_60sC9,fT1hA@>]8VK=HO/ABEm;BK`%htc%.h%rUd/0i.E1rkiX8S%TNDaPO/Y-J
%_B<56eP??EfOgE=<]VVl66s%##%$@<LdbE3`4/!R70bolWV$+)KJc2t.#Lb(Q[L>pEu.)6p`r6;WY_qc;aOA286T-M"e)[l5b#=J
%44UTqBhhBD2!$Rm*/$kreOn"84Br^86K=fQ@_@=)>_(7f,=suUb#Sbp>LKt3e7<U[1/!Z50Ia$ODqo9tAhBYp-g74Zq+^auH[gt=
%RSA"aSp2-u&A7/dMSa_^/*+LLDoTKKUWB"7P42*.E:/XsTb<n)*kcuKh(t[=c_RHjduMY8][rKWrZnfD9/J5:i$%stO;m5HBGo--
%n7G#*l`0VfAfHIHqI/b>1PpE!RR>j-4%>(P@.MP#3;'4]-V%ph$M"N]c-g,S[?XW5/r@&9'dt71=k(VO#*d1/$_119&>\JN(<'\8
%*jBT!;G^(57p'3O$SoRFOEI4p!<I*Y#]Y>3U>Mr@iQg$?LAu)Or(Hrq=H?u`i\7nUR4d^56V+RSLRS$dhsd/.O/K"00`_?<!#)+5
%F4Pao9&bu2G3[m)>MhHEXM/*[@1k7m''fB81K!KqBD"/[4a6O:B*f2N`?'Q7/Huh3[&lS\&P5"^K-hm/K)O!O%+O`39DkKIphPDZ
%U*;fm'eBk6oB*mX_Y5g=VLi^h,eEN2C468UdG14T8$4%K0M[EhaXc\tWV"S.i.38XQ?CKl9M>gh!]o4p957-RI3"b8Pnq1^l##$Z
%a:+e>;0b',-sJTrcjKZ5C?)2&b\jMm+;\=2[sU7rPi.SgH?(0E(nGh'85mQEU$;PNSH&<NSbL;8Xb9^[Jdl^U]9[:A`@(jA8,p$]
%ga/-(.WFKCK/aElVA8i\&3i,hrNj=,;/f6&hKbr,_jkX$]q)uELq+We['qYp\M$ShmUI2_8*9$j?,AY^:T%[1<IB>PUd\F_I)hT,
%o4Di2,quPQar5INA$LFZ`n;phD0`'5%&\aJ<;_N+Kq/*9OYZ+\fYBRdLNoW&&(lo5PFsnrRLX(FYBU-R(3"#iA=-1!*2&Qk8(.*D
%H>hgU+cV55WO[PD@Zflt-N-rjK(EZ*7FSDqd,gu)Fr%hf-,<(4i70$r'%kI@l&[#3`HYR*S]PS_"1AMT]dOdanG7onbXZ$gX?LR`
%5bQ/?.3.kr2'At<Fatm0WNV;\aetA:)7$Y(b_=eG0lnVX5g]q*:\[ofq-Z&d>3:jf@cuh)?UUGJ=B-;e'k&j?=q)bQ>\$h`,n,nh
%fNAH'h%%TdokT&LGP+0*:<ThAUKs*tUfH+jbrSJ]$m+-(YBD=I,*d#RWFOIGX5H4<Uc>2!B`=_?0V:UO!M\h9=%GmkHV'Eg0Hf?]
%_'rrV0hdMPTBKi+C_pSbF9"[s>KiTQ+\/e(kc$op>Qq:q%OH)&aFur0U;=?9A<`HIeosqI=]WoN.8b@DUib*2H'#k:I6[ED.P;j"
%5ZBuT#t+[25oj?;(\(F6#Nb=:TZ,+9`XiGE]\^C<1^AqX"thp[$X(9m9,s6D72Q>f9&+?TR0;Ghd0]pW0W1dg.(%Z0m_Opdm1'[m
%RO%8djsrBl.KqM?EKQ_i^'a"sRh#bPU"QOTHKcRa!;r*=G!^Z9)Q#!o/tAri<X8-&m1tB1lG6,814R.u(#:3lD8OpW'Q8@N0Cic&
%8(J:Vb5rC[3CLED6Q96(OH0R_14d9l>#$-O;RO*NC`tIn$&#ju;"PM1^5d%phu*-@=GX^+:E.s[*fML\)3-]CAZcT)!Rf,/m$X.`
%"DNT]TLQNl?]aO0d!H.[Ha!/q@^1WqB[`agBN*32a)/;%!Af')Igp`A0i](<>[jh5jt7R:o"V?.h<YEAUgF=cA.W+UIs=]Z>ghF'
%:f6rEm2.TmfGrUh9jnP2oY.K/ZfQ0cS.a`e]q5Xg+Mc$uoqXk0nH!=*$CgJY;D_VaD83;!,EaCdnD%c%WkJ?k_F)-\r"^609tg$:
%ZohO<DSsOjn3Cm(R@R[uYe`&oCE=<Qq]VqXj')kQH\Fh?dY9]Es3O0HXHM2Co_,WJIfGm7H5Y"`(@9XmIlBGBe+h;aqW"5Z@-)).
%U_AqSq.$Llkb7+ULtQd='8Ur=@[&P3c4>>dIB3l#SLEIKFU`KiZMkrll[SAe@fL?7Z.E:UoHHs'U!N:"?ul&PlU/uUnR_5QhCbc0
%'6=#Yc==],?N;8#Q9n".O<V,%BV`%EojOC8JE$0`X/dG6V^5T(1Q*Si$`XrXDb5Q%A]aW2a\+Mr!K5KNCskZW]BVZ"&0aOgc!-s/
%VAD*Ea-`5Zi$+I?"."r&2V),ApA!,6\gFRshMi!\%Q&>_jC;,mYl[;00C7;C&A=HlDcgW9nZb%p9@s@.;7RGYbOgk#K;+:MKA<#k
%=jPW7FE_[ck,dat*KlI(;B4M@\o=Sjn@IEaS?qMU0gpp>6rFI\Or=(h!EB(aDE:Z;Fl7(KZ"5^^H5=olga:be_$T`?_pDF*3+?Q:
%1`KE\#XLm)%Lc#RY.&^Tf)b:op]e66/$dL,>T>l7:MItQZ:CrC@X>P?M!MjBX^4<0]Rap"lsYUsSF?M^/Y]'EZ;8N.hAbTgB0G,>
%\$,:hDsV<XGt)&rN'&7TX:_jm2'7XcE<RZVf>o,XbtqEi/Etg8XOg<2jI_<%?b<#^if2HtJ$G)8*/Ys8nFHbB^Xl(\)u'rP;I9$m
%%gtHP/ZNI7RrN`rFJk$[iHbS$Nl-f0g)_)[f1?uZ@<hb62e#&aH^F>0eQgHkEla1;NuS.G4\/dqC9GQR@[h2:H1la',%Y_A/T>'a
%eb^#S+Hmf*Nj;&jTr&!"eAG^3XCpdQN(^RTjGAoV&mUflEl3'qF*#(?!#<-^7X)6.p,VqcAK?hc,`I']n0lek4ld]D5-6^['EE]V
%89^a@=mIXOSXdT\4>(HkhOC"\\&/Egb'Z#?^T(QDh_GBh1=3i7&<WVfQBtG:R_8Vm,AI%u7m5Enl,%/XHEM'!F[,/kp!aZdd6m>q
%@["idc#?T1@!\;\-fWC0]h[lhVZ4n%H+TO%/]K`Mp?gR_[g?AbbF:ZfG5dPBJLuHb-V(A^h:/76cL'ZJKV(`_rPr^PXjqq@Zbg/X
%nas+f.AMfG9/a\\nm=is(d3$0T^;sU4hfT!c."flS)QdI85cde^.LUPg.f03c#>[g-$s;3Tn>lZ:Pa>)EI_UdU`7WZ11<N"\*dDU
%'@2=@_^4^ne7cZ7#O#8[NG%Uf%?lQpA&Stoj:P?,6mC9f+s$o[%dMMB]V=Z2?Xr8l!7odXU+jKnA9rF'K*>m!^$MJ@miljR!7LA&
%K"1AP8I2LkEc9goc'o3&6olFGXgE0?^TN^>]7oj7%f\K!ji=\aM(sZ/bdMJCWOTuRD=;/8]A_):<2*P,d;L$3FDNKVMh(kkT\E_Z
%PKsE^^T:@XEI>28d_%Iph@KOWl>28V8$t`^bmqj\d67-<`R.q#m"QNc,tX6?HfoKK#)eG9:Cf0u$=:0;&uAP!ht.J&gqb#9p<FiK
%Jo89Rl[P\cpI1#=p]X0u,87*CQ^nM%otD?f@8@)LT8&0\F,Gju$X77b7Jid!MgBSY&]UH!";!uQT`@GX9uNqHW0\kJ<M7?;ae"a(
%k)bCM8;S2[Co3`=6^29FD]):9<IBdR#U?Tm(&lMkZbJUe17QEY3(?"sIQU9:e3K8QRb%_$akBuGKNmN1BrU.*Nbq_C4E#D!r)?1B
%Qdd):EOR?jch"+OI>ScL/`575h4Loip@>>X5J]C$8&f<@I\O.=a0W.p;/#;jm*,d2%\p[Nj?r"<ChbJrWscu5h0n2I&G`:e`=T^0
%,+8K"]=AXHI&oaXQ9Lon]>%b0lfCc(s)?UA*lOM=0B71JOeA&/>,?rRK4n'L/VsSf.?*kuICf8=qqoFRSO2=LNr*@VG/rY6SXMNE
%CL;=8ORMo6NB^c6eHp.Th5I+HnLQ97UN#%D@aRI'8"C\2JR>YFBYH.CZ@gGlh',)6^V-JceD@oB;BXnHV?La.q:51Mk@^XfmEKj(
%rWKb($W@$MX$rE878W8+0Tug(@'QNQ/6Gjp2GudLjheMu/b"k@=jU[6:f'esHo`2H!$/?86k"#X6)T)^mdG>>3r[$S?,<A2Lje$'
%iW=ndPf"D$"]_!YUf9H!fOng:*^pk7r0M@"IG*BT3S7GGb=HEHjC>Z'n#!CR9(.[cR?9a"&1K);-)a?"9CIcH4YeeCkEuNbFt^s3
%M.pO3ZT6'7m,jR"AbA0eipM>%=fi^%$eHM)oN%'RkrbaKEe;b)-a/DlR$#)5(r;lX?(ZT-"`:+nB?dCEp.RCM2,Pc1I4a,*r7EX/
%!8L4.*cQ^/p#2?DPARL(!XoMb+!^!@;-(]O@m[\?D0<D.,6pZZCIA`_au6HWDL/?hObpWS'F_gW4,<BhVO-mQ=ij2`$f(4`Q(187
%@u;0oUq"()j=]?J=,UWYIM:PcUnFTZ\!8`bNIPG9F_+B>>hOmA;[_t-JhjH.(dHfXlek9oO1B^CgoM)*?6V>tokJlsh-GaNA#Ree
%HO,t]]Qt#&b0e.J+$5^KCN<lIYIP]uG!)iO%<[9f()cSCdCJi2NUs\=:3tbVGG7X2l0C"[#O?haXqd5u/%a04!e*\?(88)\BPn@"
%7jS1dR%bTd->0*%q.8]laQ(@roa\j3@sZX&(o#a9mN*j&PuN/\JlpRqgQ;UETl7%\K[g=LI&NBA3SY&,H>]iI$%\sc:;0NT1f-LO
%4^.."1fpr*EEV3MRMEJnD;L6$Y6pBf"/F^,&p&#"GYo5a[++Ss;Am=@2^3N`JZ.t.&"er.%*UEtO+7j?OHJpn]3;BH<ZX[qdCg(-
%9(#Y,a3iG\7?i]IkRlk$LL*eK4<s>5Qjk2fn5tpj:ddJTLh7=iOLd[a(bK%@#.1Ye2g8.?m[Ef0:qm85n37g4bAP2:H3Dcf(`]qQ
%Iu;5fZ`=:Fpps=\[RZ-q4mS2Nl[@ie)#?HQAN8C9k@%=%)f+M2V0^+f+oYt/XR].X,POBRNE+Z'XP>btNMK+-XEDpiXLSH_.LnC:
%XDDV-;QFT!0/0@hQE:UJ]>=Eupl,8FGWW]Dm?"fQ`u'aBd9;aL.+R[\`hO(#4+^lUo\=^;e:g*OF)e$sOHW]t',m=!g=uI@oVid0
%5CquY)[_!)CAjPig`M.34`"^>_"oM;O!?N7+40@Yo3IY#-Bf]6<a0j?kSIRFAl,#MH]ml;Xd,2/.X_cKqPA_9(sG'N$m!$i,h!B2
%'6B-oa.J[H>ape"ITm;`/Yc9r;Ok<:PDXT"]Xon"ILS$Iff&\a1S@DdUt>ds@7JQHe[u[1;#gt-V7j0S"i*7f'9![n5>uqg]J-:2
%3\ThMJ'Yq&Rm$VK.fZ-7@mBtbqYQo_H2S9Rk3r?Aa++$erq[_OJ%+?3s8'M.mGCiqk`GdF:20KHbtkt^JHQnFD\^]]s7Ah]ifF-1
%ci<+9O2(_J49+Vrs1a']je)S+\,YP/0Do1lrUHNXGms`3](2$\D<&*TrMT\b%tB@!rPeg1n%Sais7cQmLO]6*htRuEIf$VScen`"
%^\d>8s49J_Hi1iir%ifkFQ)Vm]JMkP\*lHI5G4uqR6cg>AX6-^kSLa[D2#PM/H?\[WF70*Q_6UE.e81+Z)R<#6J]Oh(AN&`"s>CH
%Q9$Hh.Xp+]aH*DV8m/o_7cJJBBgb0`4@Bco'\T6b'+u@"QRJmF&:Y%`9*Y[.rO=^;/;bOH,WIM"&>u]%[e2/sbajU)(>#E:QWfr6
%?5Vlp&FkE%&,JJ'qN,7IPY1r`@h>+<?A]p/W"G#*0R0N`9RK*aWr'MR=$a6$NdaMIf?4k--Y3(5.B2%i3[YO4X8:Uf-sIiB(u5=6
%amaB!Y>3_Po]s$Z@6k:s8_]6LMto`Ihs..GMZF[EC\eC,/17GboRR2H"sSC1!FMT7b0*qA\VH;;9=KB76&<[&J+[S>nJZN#&t=8)
%hTK8Lj$KHIE1.Pa<DDs8#:f`u,j<U8:r4K4Q+t5'&138K"aI*UC*d?@"#%?2%2l&PJg089L,P_BJh>6RqNKl^+gL]fedY5\X$o5?
%d^iTgi1q2,J*8`a8pDkc5U7kQapVkona53GU,>k^$,[;l\?ERVNf4<5ES?YV#nlS+LtlBa;"S"*!?e*[-le`W6=[>e&N<Ghq6I3]
%J]TqgO!qjN!7d`'G$_3]1Q/$p4,eiLTaFr0A`$Y5Wc0.g9>ng9QrPtObhILMmgF5b6(<+b=-Fn+==+;618o)m!EU/*%`pRc\.]eC
%@<Y^M>4HeZJVN]"=@n0'K2ONiYff*\&W@PdoWAESTT($_AbNijROMJt!'rpg*tjlS?n,oIQ3=Tb0B@Mu^_^n'aib=7-&&GXS[5=;
%h5I`R!rZAqJE]EdZ%,dP3^U#-L62_G%(7*#=Tps0[pR,1bV]f<`64#fEL45QR^od0<`[JHC`M`elK'p.eR`uRY!:VjW$a0!7eiN(
%Q^VrjrnS,+%iAJ&bH[_TD,F<Fe.e3m8h+^J\B[<TmV7C^FY!i8TA%eR(2:tXM/5\W?G.<D>>S_)dR!pCZ0d:P@(71XQ*NHLJ>=TN
%cD?'/5)F8bbU<YE$K=_mg9RAW&:4`F[OXuX3(667dUhQ+;Ua!(,\AO)>gBG,5t4LZ@DO-gXY8>uYPh:*D5l#&%.DjE%HoV@%)%DA
%k8(=P/0YGTJ-?OF_B'Jc9#^=?D;<jBT/`+g^>)TVk&G3NU_O$NbUZ>qXtYAPhU15BHk-a`.dVHfINb017XfDXBj+pHOu6uA0),%O
%$C*-)[DZhM$ED,$ZpYHpXe7*g@1F0[j;h3Adio,0*;&b^Pq#`PlU_G_Rdqb-0a9D7X7Z1-=%$?n*QKE,Q5+7O#dJ2F3VAOl'6bWK
%<g:%J:oRkKEhR4t)ZL3q/Q<fsg("au6`QESjc0-N2i$52`EY';+E5$#Vcj%CGtY1b%Bqt_VMaq@0e4,g>k(<R[4jA?=_\8$^kY@6
%>bi)bE/H=L3r&Omd+=\G%\+frcrAX*@KZRg>AD^S.gW;2XC!c4>m7#SMu*MB\5lNS/sJ6="1(Fc]FlF0bD,k,<Fgqh$=+YBWCS<k
%,)a=FY$bR)Uf2rW""rms&:G@8G.:f/+SSSackW%j%sns^P:m,nA4=!pS?\I4bL3<p_i"s30M_U`Os*Dd4Br+WSbiSRd$61"Ne]P@
%,m,-BOB19#``)9qPh$<Ej#TMYEQ,e\"O9VmI\I>*QOP5sW9Q-c>*qKaNeMnlP'`jN,)W/2$Fm6*>J8+Q@45.4?pIUGJ9`7umYrD]
%U(T(gYtfgc_,//t4*'/&k^`e:"4M.>Tn[_o9H53p9n4Xj<e6K%O?OnD&CF5]jqkn>ffois^q$fVB>0)!,,ju&RGjilgG<=.!<"@(
%MdGODB,G@@XZ-_h60[io2D`8m0uljD#T:b[6[\lUGGK-iAg.g;$+&r$?2/VCnGGAC>j=A$Z-mF5.clET7!Z@[5OtOV>h#JK7NsQD
%*Z03uQdiuD(`AY7d/9^VhW"68@j9VC57QAQO"9q?k/;AZ_.F*0#1f)[FX0HmF9\:lBh;Yn(`AJt4,GS'QVU#<.dTM+DpUpk$9`D)
%paR8\mE_.gAapT^CA;J@^5AjR4/G5B:$tl*2po^4@\;'Cil_?tEc"5S/$3TQCI'm'6_ij6kjiMnDl5k;f9.7^7qF!jZiRr$4AZ)&
%fY:hKM@)<dMfp7Q)'(Prpuue-fnA7_FO65S@sbBd-],8rN#:%d<;8XL2Llk]>+N5W/+,Z8Kh/8%AlYX&M'P3tAeQ@Y9ut;N[T+'I
%Vb"$%3-AYR6/V>Jr/_D]1HsAbB<";YEf@>\#qp!oGS=Sbp9,(J$N_32Gml;*&=['nq-+j'S0)\Qi'bT_\<N&0ASi,AcB[3laU471
%<A3SZpECl!no@;5/A(n9#Ip68#g/7cnm`>C8`Y?dS_'jo-q(.lk-E@LK<*9&&UUjf*fu1;;f=1"%Bbu(`#NXs0<0FVr7%B0`!q8o
%Y0>6\7ljdRNhs'kNa9p2(K=`<Y"h""R'NsuXS`535ZLE3P,QAP3%']IJrbs0-:Do9$I4H;"V$GFUce?d>)-usSduD8jQnCR3L_7(
%LgO-nRT5&*-,FWE;[IaQ!oOSj*6G<BGR7nec,l4'p`2&Rr*<Qi7=74J!u3@":#O0sA7Gf79N7s-m.0e+`E2UK+okSMhQV#dd5Dhj
%Zu92r'"4i1""M5hbQ<\1L/o9E;TBn-m'EVo!Ru-k%HB=ZX#ts\(+=kj`5j(N3t?/<h"1aV&a]Y,eH!5R)tT:&Y[$mXmFaS$o,@UZ
%ANCB\mISMTf1X0ArS,@%Jq_2+KQe[r!<`'5>TJZ*MHM\%$f_BM$UunB1W4\!F`?oWD;%Oq4Z$KcVDZfN#h$Kk9SK_fgh`o*%&Bs_
%TV@<CkaTJU!?RU[I"K.dR%5K)!Rf'E2U2o1_teV+4':"R<FWA@_osDVU'I@e4-\.TKa%!SXH13i+56*kSgnDk22FoD=`63jmL-3[
%2gX_u)[#k;)ias<W43:d)]+;e9I62W@\YCm,<Y?C)`Qumd&GmE(*r"Ab)Jj`BE_1]Ld"uKi5Ga3[2dL$PH*gigg(?L<3Bng>WAB9
%m46p"lN)&_QI,$G_<e0e8D(/k8'Agi]6b)XUo<8/$L5U'TGRS8U.h:g>hIFf#WpBn+$?6tG@r3lB6X95U`c%tOCWpDp%c1\QTb[j
%Z1u2AcL9Z\>A]Kh2HZmk,diPdmL"7>Y1GtY6`p!*A`s3U%(ih[6lr&Q:j%hXP/E(b\SKuYaqBjK1!2b2?CI"ZEeuL2&[];B7mDYU
%M&C*R*\RiTE/4M1"KbXdo5!67r.<a]++gU3!?_6$0hSgGP!dk:%Xn;k:OP+f;SFU2g$<4![1U`/+1Y&7Jq4i(R=L)^dWpQR&73)0
%.M?%+<I9pQm>VsI&.ll+<d>2gLIE%##jDA-TpC1nKK['mTd.;ThBXr1Sur\7PK"kaKkR>M8VAPUIOu>$CBYs?=(=,j_:88fJXA@j
%>,b>];E6"pqAh"^Sh:ZY,&c?o-%3qAYGlf:U;C`[=c7`cUA-NrS;cIeV]scaT`#4D0?5lnH1oTh0S]Lr2RD]Ipds7/?n+E<l9cXH
%QPUL0OWr=Wb;emWI`4=-c4g]M!R)W##)"ZH=>9f]K^-1OnK"RlRq2mZ<Sum_[9AnNG"gj[?'\BlS7ht.7Za/E+TdpOC3+M;,"p!u
%%l%;(h^i;+:"sVo(ailSa6/\+f^S8N^PQ/qZ$^j2T[#lmQ5qP6mN9pHa%L$S&ka&R;ZW,9&IjKbn_1ba?2b!Rb0,aBE9'ANA;:3l
%l%so26r4j8r_48O#ut#]W"i!6$SU>1a_J1C]&F!_jO.F>#Jg-p;1i+pb6YXZF-=9Um[LHm*/j.:cP3'>@OOHkcB/%Vla/ctmDli@
%r36X?<.+kNc;OrS)tj/\NuQI9(3(p\J)IqJ]n9PZZ<.uV-k(a2TWqeU9Kj,uItP(f&9/NVW"F4*LF[h"c!4P7XC1]D7I19iK\]'.
%1tt9W+R;@@Y7O!m-SgI0YCe84OBe?7NJJ&%\ia2B2))a=I1;mM(XP2Q,DesN\p-Qd_fEOMB(r%[0#(gq6_;u%)j.:Sc:&5M?=*bh
%\B.-HN+pqW!H<m]&S^DP"%olGi%Q<>!<60FZ9soUp?/rr'\8^p8Q=lgL&c3KnjPtLdeTT2)E=n\C1V2l9=C!MOYfspb/!cSfHKI(
%/_Tc3?7p18JF%e@W+$AniaFq](1s"g+amQlaUKa<q7hqnT&gkui8\3oJl?K!)HpM1a=r/jnMKkNbS-"(S9Zh+]OGB'6CZPHWLBFa
%[8Ro(QmD<X@.t2!>u7RE;8c(7?+0\6Bl7mg=%7=PL_\/iI5BPl6fV(BqN&F)&31[96*D)9G,dB['ETU0FD9$U>fW,\9*d<KYg>k5
%>63"#Qr.<$4&,-,"AT[n.$JLLRf^D3Z<\,OK+*Q-":31]9XuQReeC(lJ6cYsL]iDlJt+$A_cma!'GAgUe@(k#idmA-W-Cf?I35Sj
%.PeJ;JFh%=OX1+m.?`2U8]?')A*mi]__Yb^%Dd\"83uKM1"nK6mm<HgAkT@8+pFefZ:[T-(%rBn[W<_1S]-Kk%cm)Z:M+&")&>C3
%PEtWY6adedb;p^MdN/)`khd/<.74B(q7@o^b,6<DNAh.4e4%?%$b0=Cesi)\,f0(SN\/q,W$c1QS9=qW2(0\&U)in&Pa-oD\[d5@
%9=kNm(8s`k1,O]UDl`#nCJ=5)ea[^TE!uTI,3iIQ_O/FS=ecpjo>J";(%\S!YX!7)E1V^+'NnH;"?WqMMom<uPRb_,6XH>(*'uT7
%Xtu9^\4X#CpJCS^3X.F5QZaoRdg=r)oml"TQU81m[d0"]a<0]7WG9d[(uOc8eI8Z:2`[g_W[?q.\]MZE1!0-3Pq#t"U[;3PC;1J4
%mF]NWFU'?R73H$:=nF(V9WL4Na%UN:^4hY1%RO>$7=D/")e.oAM+EL*]o66oT'VOf3JC4CYjRV?]oLsh/9FNZq;5t-l%EZ+nt?1I
%H]m;B7U;*_-E.DSs1li%"l0DIVC&-PS<j_U6Z<:J^dCGX.i%g1]-A+6&?8#=XL=Z+cc@Cu8/faiXMpFp\h'gH8HCdO&d$2M_eVfa
%,#qds4IFf7V_4orp5bso@f0>[lm-<O[ZHU*!?M@mH@>IdFi.;0*<>6($*oA\fA]+s"?%J<e$K-`IGsLCP\:dYa-aK)Vke(^OR-7D
%-YMROAU5))+8C4Oao`JH_jhd>.p%;-8F]U-J>%&f*KcKf%KIAZS[K2[L]eqR1ntW+\UKkmf69,*L[\Ma1"a&Gr8A28FTY$6R*Gp<
%MMlb&(chf)B0_]:6qPr_J%FFra<VFK>GVLjK4)(j;%D)Z^qFiVY@)fpB@IV7(jp#lY"\`s6eFqc,Q1ga/&@f8<,$-Ja?<8U:Ja#W
%JU'X%T`nY2YVN_Xa[:<JQA?oCW=H.D@5m4UXHG@1,_0$;N,%>t5`&Srad=tJO;8V81N8^l,XJiE98a-8?$D'V8ir0r9Q12T_E!oA
%7Cn=#\!CP34/NX<1,c_,,.9kc$W@U<Yo7l2YG5T/h^4&MBeX)X=Z-9cIbK*g#abFbDR?4/&0]5f`?YW2(5Tfj2M>ZS)0+qB,mrn6
%je/NiH,*3+4^kE.7CX:p9B#G&m"ipS#'pPX:%8A9Y'td-=cIP_6n_r:3G(cdnJEdFPZ8f*TuulAW?%[C-J;d./rX[0IQJ<F%B7U)
%X@1TZ!.G8UDqM$p61-!DXi$lFMBJr_1(,dT*NC_9;F>uI3O%okYAIc,(fKiEY6T#=MoM)>!Y6ea!Do<M<V\pOc1G+Dr).fn/eNa*
%Ab?T\1cbu4Koj$3qb0sS;cU9!#YW*H(_0U3",MKXIjel)'c=q6!Bjajo;tY"R=7R3WjmjKWKk7dkpo,-X366Zq/XSMmGchc+scr_
%9t`<L*pK^T'FGqd32E5"'NK&QB7l3R5paV%XO9/+YIG6I(O(\@kXgj;.?^XC==g7QdP$e$\WJXVN/[QP0gVHY)CRFf&NP6$J>-DX
%Hn;C:npa0kb`%5\Bf*.J4g/r5TLHbY%uHd/eVm[rQ/tWo.6)0nK%9Y$m![r^<)Wd(_-L/])"q)-ILO`SDf[Y`,r4ifVfqM:QuYad
%<]7&=6IFJ`9G.G?H:#!=.!.*^5?;G;O>N(+_S5%'WF6s?@i)M8lN3&SP,1kDYsj1qgE\l#8!mI(RZa'F;'7%SLn^2d'fn]IrQo(H
%,EM!3#lcA9Ckgh>V]`_`Q,aRkqt_J'cYNXf=hIAjT:8h(Kf!LMpe;B0<>']UN1ljRa.#4*G]j]$qG=cW"`;K8,?`WR)[@Ssh3#m`
%5kC>5?=/%eKLN]h.uU!T*t_d#UFV%,K&4P.Z3p\fE.Tcc9H5;$$3Xt>*`'B*ZRm)IGW-!s"N,R63XH5!8QT%!dM?A0#sg.XR-t;u
%Y=WF\cEG]dK#ehr:fSi5Oj].)OeD2%_(3[=D$33SWm,Ra,nm^q(01E<VQgXk"'2.MrRi*YAlD!*9je>QLudW(-p.0T#ZO`2+oH4G
%Or?J!/6VbSE-2`#U2'L!mSuPDKt,3]eRgSZ`G3cDAKI#@-b;5D@X9TbHK]37[li#e(ki?A>SJL&Lf23W+D"6s&.bj)i]1-3KNM8r
%0c=^q8=dR>,'4#)*PtYNST@!an_%!J0b%^@bZo'Yg]4W&X"OdoLXCu;`+$Q$VCd=upcsq_0QAh7/@(1n;fLG+R9(0Q!cZ.fAp+td
%r#.9e<"Mn`5WCEJXE_;@[k;n)1Y@<,LCh#c.VU+-ON_D4pmn40FCe>39H;GZ2^b!GNE.p(7"T8-7#\o4!&(#gis=C$%-LiN*\Zk\
%#HJd0Ai#M&g+Pc&[fQ4)I;9aq?]]ekKP5(GESuR"RMWV="SLLCk&045?o=H<bmM+f#;Y9=,dh>UBn@jc04kH]<\<,Oi/!5ab5re"
%)ugI7o9s(GX13chHeSYa!hr%]&XL"!W!C/p_?6-u.Ocnt70:VPD\01g>g[Jn1\%I/.>+>iUduMTGhE(R$^&9G[m0d07A.LCfHQc6
%r.iPUfW;o"@YN?=Le1Hg)@3U9cMY82F^(Jui2bKn3Yo]i_&uJV>)an8R+eIfC=M>U"i$V"%)_4AfS*N@0uAbYH'9T>Zls6"G8\@*
%q@BHHZZ.HkOdJU/KVbSV![l5^Z+;PBUWdd"WGdoa14LV6kXtOa_5Nor?28pc-c/V:7lFa`E&&1+U`(RX43V7MQVKDp(T#f=rDL8n
%..e+1-3YJm"BNu&"uqXN&9pDf$@tV;atR@G?jX:+if,"c1]Gor&Xij<.`5-oWAlILd(:#:2)HJ,.GFoU8M*c^7S*W7=m53,k5ah$
%9lB;n-Gf!k1G],U(<g5u<Jd"VQiUkPKG_6ui?f>hDW$LU'"lAH_m#Lc/G5"&W1s4l[M#\Xpt4ZK78+(rP]nEbnjj>#Z*5#i(?56K
%&Mrpo=GC,7]Y<*D<rQQVNUGp/)P!hD%SCiK99G-%'r>o%cd!NZY/2>\PU"e]Mid,H"U$c5kP#R?AXIcZ48,I$Yo??cX9Y/EiPo,R
%$sAh",GI;h5,-4>E[[CSZ8>dBmOg;4=GaXL'dcqYY;.UCY&i8iErRmWUS\bh0V%8odsUGc[0nA8Q"5>bU!=i!oV-R3`P]2tl%dJO
%<]K(=B-du1Gqlq)jq0m&UgU!7BK+MT]Uk#+-I@kq]rct@1\uVp\i'Z`Ph[t2YT'eOc7F4oi'*ke%cXHBr!!:+iXg]5p5n=.4:hhX
%]0%QOU00N<RZN"e*.l!Lp4];A1To-T$+D[U##BW>RQ'P-cQcpQ8M+XJ6Lj34)iF\P?=#NeeiMd)#bba7,_)Z6bR8JuGD`R#rV#nN
%+EnsV2J*df=Hp]=Aa*lI\OEZ;K"$Zdb,CsJasig\gJ[9a'G-p[.Uf$'DL[\(5/B[%@\R-P4$?%65@*K65"'!RTZF)lptJ]@OM_!O
%_^$ubjMV>c6[35>App3Q."@kiIZOhOM!U>#g4U;>`c`4,^qcn`b?*Yi?RI;98EqCK`C%jciB.%#OAY_m9J54u8\Y@2ce+BfJLrU1
%#DI2PH/6tG*VVgk*q5N25#QP0XG0@_[<8G[/5.k?Hj_A8*R>l`_N>J+>Jl%(;qMdhRlOV>AO^c,bB\q:?g<tS!D6K,=&iqR=@M`T
%';2-\VSt[KT*jjh7Zp+\$o9$rY<37JY>Rm[*LK4LU<eNnclJ/T*LM6fNKV'UQLkka8k9d-XN7^iM&.()!\3-cX(Ii'+2NZYS<a^@
%i7p`QJJ],mI+VK:JJX)$f5I(_7MLTT*?S2EQhbrr<_kZk=u;^%/"@or%!&#u$%s2H5*,oSU1_IKT^,e*lj"UY.'E]?R&_']cC%bU
%dDR*cU:V_%3%N?\ft"I>4`WPnM5m<f8;sn[bo[=WSHhP0phq2RmSnQ@=Hh^:NT_K^+<s'uaOl[Z-O%1r$WRa6]!Ju%)@a9-^9T(=
%Fd-nI3<L\AM_ktu"99#77OCm1gC?2&.+W7`561[^K=<"e<q&GjbfJguE(9NQ?V@Y$*-Q1=)o+:2IL'=C9//8f$n<Y;;^iiA,)AJb
%@&lU`R$cRsdkXt0Q#RW(r.5\ZXZ1PpZiL:+Xk=7gjP9tS50bo_[6?1["gTt8(b6m02\4MFZUgO1kI(Yd!-En/juiAsQZ[N6YcCm;
%iB]MB$RrWa[/CPM74odE'r<3&7Uai)Qk*Fb`)e:lC:BG,S:R8-oW+uYifI,*Z)bu#rDU:JPcCAd__R[%,oi5f7QH@I-UHtp>;e+H
%?J1H1%,PC.0YW-ITgAm;']7m.%\]2f+NS?l!?mkJRkA7dUaW%eXBZ;K.e%Ws"[mk,'KgiCi2B[:`2[5CR\H`OB>Z_R%\[hQO;Q#`
%q9X37),ZW__$Y3).3,7B2D9r'ML5N71:##k#7XE&%Oa&%`_M>"!$F6=PGW9LN)/WWYNnmSNk1$5A!pd'.NQVWaq,>ZBK53m4gK6j
%EEAtd%J7.<)Z]O2aQ,BS=*Kkn@@t=D2bTRL!]3?^h'Q)1"hCbR=S<SoEjhDXPBB'6h5Y]I#['IUL$`Q`^DfjnG_c-1!A[kV!8eBs
%?1^[Fr.#*#33,Bu$@[kV&h?XqBdQ@ZR`\_bf7VS-"^Jqs(hh^`bs)?n=PgIsE5G+k2,]tLG9M0SFf9knR_4d5(C`^nr")[:"`g^(
%GCH<r*cJI>hu,a9%iDGK>c&$3%\UYJCd9tB=@PM#2.LH[@T<2#*f?jN#:qZJOB49'#uZMbi=(W8WOTdcj,_Im"k4JK=j3OE&/.ts
%(#aqc(t)d/&HUn%H,leZPa-b-fbd-iB0*Uk"UEa&TKp<;gsHJ`O/XPW(+:MoNee.;)uPe.lp&si+pULB/u%Vba&KF+X$VZdc4W+(
%6@:h11gt/C@W,V"c+WrSBa#\I1<^0TbZZd?[c@fAo.NIqpDH7l^k]^6I4tm3-^eHTbX35JIZ%of5R>U)0kH?Hh\P`e9Tdcn\V4om
%R`]bSO_YJcU9d?5rPi@bW$6C;=sX?2c/iN2Vm2*K-oDfsV%?p57JeR'$4mW6%P'Wc\i^6C!tJo,BXG9]Jh79(,`+>AR)88?>e)k^
%O3.[g?q2#QnKJ]R[-f$A.)e&qEjj=R5ag*9HDAZ"Y?'B]$55mPC3!L`R,GVL6LSdUG9uC(=BV"Z/cl&[^@[N0B-?<05`4C59>AB$
%An\"r#$"&6LhUHu+EdL!+!iNZN=&KLE%`o`;p;'tP`$bNE?F!f[!3F@gjJOrTS6\[Rq3!)!(2b0kF@R54r$)#Y7R@`=Fit1]!)96
%#7Cq&c-u)s2M]!EB%[E[<Ut2Kp9:l+f996^!M!$T&'@FU?i458,j?qgUUI&<"BEZe)m%;apuKb1D\\(/I:!\:3CG3.J[ns">\-DN
%IJ*Y2_5<&tOUB<i*.Ks3W%]3oKnW+YRe6<sSHBep6[=%C!%-?8q=!5to!dF9oMpHlr0jMdF"VD/[3+*3:L;j=a7$]sLn%`?%lk/B
%<hmC=.+S2NYP*tQqo23VmnLQ:]3g!X[m#0JMg6Dm@O?noenLo+m8&/Z2br^tX8C0irq.U9_2dqZARt/J>No5:MO2"I5Q4eM?ZEUm
%l*%ZlA^$h(8i:5"*@6/*RerDV=;N)4@[hT_6Xb$N"#gs61Q%t^!JO^SF_?m=Nr_k@TS'M",0Ou-j9SaJ@d:]X])sU.NPSCYCYbDC
%>Z;3Y&dp$>!]DV[-sKhL*R#o-q(,D)JV"*ZCRs%jMV+$lJB#P92UPV><Ndil.L)st)qe(n[t2RDl3>:9-U!WI4J3:9P_B9?BZLZA
%cGcIaWJAsm2b:a%`%dn]U9:R>5X6bNTToSI5[n9<#GJ:#eK_YBo!9d8#fgY8;HZI3Mo.f3Xe'#k/FuuTkU@l([8\SJ(1@SK;iH*O
%ZZprLr?k&1\r5E]_K0YG/S4;@3FFjR7;[`Cho%S56q#p&:)0@C#i\Fm;?!V==^.4I]_qG?s36nD`bW>DFPhOt)rfWbkIR,Nh/V\V
%P.ToP2=BIs\\m2ic$%E8phmBW#0daJGK?9c?j?)+#0j,/7JUY?Y:..A!cIdQAd%DaE4D&9Y<n;k3W7u<</kF7OoD@%iRdti@s.e=
%FnfPap\UQ!O&t:H_tOi(Hl7GsIbih94O^KU/!=7pCJ!S\C?l-1$rEMJJihOXZ<kjM4#L9l=8D3ZTWhuE]4=1I(nPLL#l6fY!h'Md
%6,ri\7je@DZ?Y;Y79;QcoRAopiBkpLg\i\a?mBVgm%QB=9:DZ,ePW/=5EPq$S/Orfj2HZ`_T&T(.DUd0K,OQ)"^"AR8d"cGHo"f*
%PAVFVga1Mu07kDlNZJ7)khUb*WlIM27TQI^#__u"0FG$X0.O-ApV\c&J1=F,B7-?ZY@%r4U@dE-+Gs%?(%tH9$Ie0_*fE`#m!g^R
%Z7(Cf-,mo7+TcYdhbCC4TbIlN>o7f!(Z9AEN_tMYb7kC`E.]"5b`QV%0b+p/jQ(%d\p]YOf7Hm.(]1M4L!_>:,Z/Quau^Aq_!`XT
%,+K?Pd7iX;Rh[OX\9Ju=jN!$.#.k2@pXgr*VG!4&;i!:&`(/<-('6d(!)cc-"\q=O!P$\F)30$"Nk/;(3.TLJ=c1)T[;3u/a`N@(
%&>\;/Y!N</#k]751mIO9nDL6Ectm]]/s=,(BQ=_,Mguugp=(O-e]P/=.Z#;@P6nqtN@<O+f+WdVLb*-$r/j\"M!`,X*<msA$LALa
%HtTQ<f>pc7+#/3Z!G5;N&:8sp[OflL9=KK'MUgCqX^H9-Y_^/%_nW&m(FU4oCKI0L"J<bA.$_D@of:L>4=DL1i#>Oc2Z0G1_$^N>
%p>RP)4fjeU;`TG%%c6aZ\Br2fi#uP,&p618)'d4X1$N(*$"oEKSE*D5_Z_?jSqYLIVNOC?CejS5&0B&\+pSmkkF)uN%D-%=Ss!)t
%7&Va_)(aj+6M2$-M"+E%b'aG;_G:d&8n.@iNj\&UC+4,2*&a&,A6MhfL4I7"ScPHU$pJWMJVAfaWhBfLM9X'RYL+*(,B3k^5#`.Y
%^:gOes6s4?=mIPG?=#8]X\j&ZYYu\;D'C%<!3J:"d;LL]#+IOE*Fe.>O0d%cWaH&8`al>&:*Ll,;<KF9Sh$YV,!WBU$'J2re;&s&
%'8[I1O`TS`_Y+tM-k4nF]?G2T$(eF7=o5^Te3F)>;^(OQ<k3<$Wc<biD8d(fW/QWZmh3TF8oP+_Wf'5LUrb0>0_[!?f\f*f<iR`-
%X6(SAFSQTZO9NQkQ`6RcR<+NgGh1t#2pf0dLd2$X3DoTM8l3H\F#dd4!ap"0n[Cq&Z@BqBO:Y/bNe2<ZL&rZ\s%Ytn""i3=^Q?oS
%%8Sne#YC'"-I!eo\?&q7M@TC4m-Ur,Cree/_/s+N(Aa?"5@g*>eY+m$P$aYLfI^-X]7*cF%>I8N_/`1GJf%eOhKs>fl;4/nQQQT0
%@3^Rl0Qo"8b/R.ZO*-n:(nj*-;im:FdTi0<*'3_[--$36Lho^*g/Y#hNFJ.3AKe!ARl,VY$kq(O=oG(?AaaWJ+;S^;#q3#hlE792
%;oE.UO:daG_apo'-[&M@!Qr>7G$tCalg'F)"8q,bEId&%0_n9g)K.5]W3FQLmjl+,,^mmSK^,p;o<q#4:UfU(TWW2F!Nd]&4f#6i
%JuDb&K1JgE%ghfQMtZu_(32h7<\2l,5o#2@$S'h[N;q2kY3)?oMm3@6"Ip*d&7Y-Woc%A;NQZ_!>t7`DaLV^(`p0J=L8.[WgH$f-
%fk**7;AK^&BL'W]b#V&0BumoKVNo3s<"b_i$jh^AWl)\^5U,Le(pQJ_AodTH8)>5T)jDdoFWK3&gfp8@^4Af!.0?Zu0Z-7M(Do/K
%'u$t-KLM.C-l&^)P^07&Ppf_j@knNOWOcZAU9&kR^Zb[77WYU_&W\3B$kA22-05JD*7b<-"pAu)ARE`RcZb/l(BtGJqfYsECPgt*
%k308?dn*T'^TlW;b`Lh@l=qK%,$Geg':d:8NkqN[UA.t8!)TteTX$0aFsEZ8Fn#Sd!flD@?37)RiUTFA^:FY?\\i&;*EH&I3]jeb
%ZOg+MH#rd;1/"e=\B1O<o-!I_U"VNHN=hRf[<Z>(Utn_s,as32Ia)o"8nO%%]GnNa*'&YL.e;`g&.?AuqAdQ8dui[.Y=J`ZaFW_^
%8_DC\mbp(1iA$gi%YdM8RH#Y_'Lfn28AI=0C`l!O1UIUGAOmNt%nZSJaph9\afKP"c9QXL,\rUYbVG/WE2>JqJt0)A,4a\6cD8Ie
%i[O7&^0A6$.4)'gDl1%CMAsrPjLRb8R/o\`7=5s^Z"HgQY4=&SIp$=MTABjeQ!pK-MeHK0W(SCRZO155*dMc$08:5:,*<\EntcG4
%LY@"7']:VV>TUsgYcrOdX5`'B8K1]hldAVG*/q-Y-942$fT[UNq%SCp.-4>+"_='i"GpI5;Y/K)8=`6aahkApG5]"EVi.sk&?5MY
%F]?n&Bu#G',a\^'8=utMDOk1#,h(i%SN;Ji0XYAIX.2-RQY)uc\i1^4STj+fn+3T^b(O6%P;RT@b9H8l=k@CdSq#Il<=)iMAO8'[
%2njnV;.q:Z!t^:s(1\@u<>*=9,$(Lf]sauQM6j45=D*H"3Sp^LcaQO:j/ud9AdT25Rf%WGJ?5ArpI#)"9l_#jJS3E.f[EHgWH$r$
%HOL5b8aU$pfgoF@TpuE&ofZO,"_HuO$]CNR5de>s<E\c>RK7FE:eoqK<Rh?VU?O`/-cW<E(+c5u+Il"lUi#\*cpnB#(ZrYJe#he8
%jG_LUL#Kf]d`*K;`Aa,I^+cbT='7ADjK0&JjQW*PCjmI:0J(l'#`<Q!E@Scq.P\I<O.E0ul2,/:'Y-?I-'2c&+0o"$ZOIO,/?#R6
%KK(b4fc/]"16O1b-7m9O,L?eQUM(0=79to<0UOQLREf8TO6r`k*.c(nXP#`g:>'?]*k%OkqVfMC?I6ON(KJF7P9_C]Y5VspBd?8<
%^KAV1Y2:D6@&C#a%Q"I2ZYq-b]>,WXZ8/D@e@(cYe[pH#Pe\tna:8pj!O.0)R(o\8!IZGEXsTKh,V-uZ6?FE0gfIC7lJ=r9ErIc)
%Yd]^+>:Mmd:>fgFcoNF;48MZii=trFl?>XE>LhSs/-5\2=qu8@muekON,)-&!u6f.RoCV8_%`V`gY@2Q4HAWATR<m(`TYWgi2R\A
%Q,S\-^=@uC`lC(HdD[8*Ws`7U^K*o0R8uJUJBo'U'3dC],aeZ!U'<1n:F'k_Z9"XHXl`m.-tOa\8KEiOVhhKAj^ViWKnlfe,T?X'
%Kk_)_8f>F!aIP/_>FUiUQjSrj^i!`laKZ,ETIKs(5r>IFi#DTWjB?sEX]hMfMA%5Ea+3kFZp"Mk&@p!n!$e!arp=/*O2@AcJj$!p
%=Cu#/.Ca0Y1n0IhenQVT)s1_J<&0C6@@3q9pVkD[KQK^HkW9`/ii$BH82A*tXbk2dQIsD("H0]:_"\X<ikg]gOGI']n#ePX/[$4f
%+UMYtT5N."OBS`C7)%A!YS]g*YYD8/bf-<1D(>[b@hD`Wl]RtO*nf)"4=FE,gW$`bp1dZJ'(`r*$:3YMBpNZQ/!4ma!oN1r4Goe&
%j[:Y!aKAV(RG$X%]rL_NGC'6NRU;`UXp/jEDt.6EhS1CH1ub><eYb#d$IOfePpCrYXE%iS,KuccUC\:R8_!ge^jlA\NUOXaJmpY)
%6a_#&q*B9.OQS)F$UgV4!Yg2*ONC@r:q>lu/mj'+bnF$1NtZ.o%:V;1KV6S.YCkiZp]^]tEnPC*.>o['<Ce>%EZ$8NMS+Z4(>2Z\
%8gf1,/PNQt:c\phjefH.p'd'2%s8OXlU=QNZ9U@1W2gD,8B!gbmU_Ido@_2j_`erD["#$iVg"5."S\l^HDqq'9;1!8P-73Wij:@R
%nnDDaM<-?-0X&T'_]T\;'Ke;!21X)iE$3.cYM:@WM4BJeJ.mM:&pSC3j'[@h:Da_mPB4:Z`Sb.H[FO)pGLH7E;r^Zks08e;;()i>
%AL)"egFl)IH*OTT0sredVnR`_GY^4BB?UkM!q\659``S`Ua@)sN[ZE&MObDC%_3C)+(bm0NQN<WU>`aipM:oMBN!"2l6+#88I;pe
%E7cm9p-:NGMf_)0Fpgh@X,6[A!C^`0&P'`(&hQUpTY#c0-COX=)BaX14t6Qu=<3`1ZAR%?a@0tpHl@Xl?l+Pdkoj^H_HA(V_<Hb1
%_H8DY(VmnhUPA`M<s""VHh>?t/&:AG&='rQP=;Ht,BH&[:KC=WTn5NX1[r8D2$K^:GH&26kTO4AQ'6k8`G"EhoUqcs6nX!>,[#Um
%PH6"-5f.mS=C0;QnB[=SR7WVOr`s`n$Urc/f@3N+r'i3EW&k+i9c%PiY,q>-`X=j?8<'K<@:Gn7jdMRcm#A9PM4%hIW\tu7UM\UB
%%+/f(q0RD]o7T1oL-9RCJ-l]q)aj*?`)?\YC!3BHLa\Tc'6fE%6"Mbt<(X7/"pQU#fo\a(/T;H*?TA<(;Sg+\[rq6nMbb\*Lmf?&
%U+&d9>C]$'p^(+-R5:2GQoU"9`kM\>RdNqqT+tK@ig3$1)KpJf1"hiP@ETZ0QAETj[h+V$RLNgK*=^_"kQ&J!9%o@>YK5j8P#N2_
%"jPb1=@NRE?lY&;:<<*k3?`-]JJ+d'g"Qq%AV4&dXY:E=Ob<[&#W.BM`,d[lm0;-qGkAW@.jou4>SfgL8&f:eObMcM76^up.$r'E
%RrSQaTU^fjN5#f#21re">!XNgKgYk=.-8W%L=]Aoo?1"Qg;DOcrp"n:p(/IB-h't_raV6nV_KU(ab_>Q5b:fN?I2*4$s:5@r[Ns9
%2C8n$XkDAWBX0:*MGBfLi2>5fZ^Mgq(J!"+aeUtgp4,2[6Gb^-nZ@q*&#^NRIu=YYr4C*haiL9NLZujC&=t5+aJo=OCqTri#=oO6
%J[XcPhbEbIUU."SDl-]'q""d0I20%Gi'Wp6\6.H&iNl>]<jloRD$^OHB5bs9?LLdQSsV(AZ;:`K(^[5+i7Ubg.EC*U@e_E`YmMb=
%D#hB)=JtGNQjG,<@r#[<SC[/UQ+>Ce2[dlY@\J)>kI-"G';Z>pQ.G^SNB2HPbu2m9,eahGY4KT+jdm5j./@g55+\S\.Pm]aeet9T
%Z>K9ogrGTH8EG>Vl[23'`i-okJ6%A[cKs1/Np"8coKEd'_=mh>??'HZYs5rpC"GtQdlFDimobn1e,<EAU7)UXTG??=]A*lr]O=qD
%/CET[Z_+52LOQirQg=k5nqp]'8r6cq_Kom2!^IbT\dk&\n7>/b?n!7CQ8\KAc-gWdfook8)3n*o4%3969W@?Q&bB7uGZb["4''lE
%E@<duQ<(>,Gh>3ED_/Mg$F8r(KSAT\Kkr?`7E$TD:JuA:<QWOM0TqL\Q9_XFs+\98)P0;5P_O\!(J+;JArIA.5m-a8R-8)9JqfeX
%A'?$`:mQsYO&L;[rt\'=,<na(qm,(AUo'taO#XoP(6UJ]4:@c>&+CEQ[?8Y0XoOP.Ff.-bA?`;F6O#hpk&8^4)=`N\O'Uh9gq<b.
%PiRA,;E&pV_H(5'<'>2f$tZ+bQ?+g$hOP'dT'bk0D4ri,=!9HEZ`re.#nX-)k$1u(-ou2r&u*5Eo&u0sLq7LrO<s1>X[79](nD0F
%Fg;F/0ZK#)J1uY1f>r,`=!rQ@8q>X)_S:fg@^a"Q.J!TcI'rKh&k5jsW>_6=1O;8WRPQ+B0Zdi%GS3ImDiff&[l_]lSXLl_gin&k
%B(d+@*+b#UI4IK,Uks2be@2O$5D!F!V?B*JGMr`4E\eDfp:H2rQ3hl1<>UZ+'%T"S)EXS':JdNHOjqW>#%=oYcP@`+8]V0YTn.$3
%_Z:`'5Tm*(Ln$'VmI>M\e1/F1Oa.)&<*NNfP%Ec?KBK@3;hrL@1KSbNO#nF-j__P_!uiMXU7(s4LX`:thpI*IiNPhDUjKGa9Bk+W
%CfglNUacLSff;^YE)Vd0Z0`76c*3AH^,GDd/R.c9kAae+,"TLCF#0?5FiFPGk%q=.L<MpH2l>j"8=iaNiKXfY%#aJ_`)ZSdUC&9u
%_"OV;Eg_UEJf)gm5R;qD&ktcu\2L6:dDG\2:qht;)uO`P/6YTm!qW*NE>frlkWb`49jrNN]2mmm0-`b#06/Xc,u&L_ANl1e1b?d9
%O"Defn[bA8Rqfu=>EjRp_3-39@BjE'g8X5<V9Tnc_%4FEV'kZIEhl,\Se92QY`^jI0p?G5OL]<6?(b@/M/O1TH!LSV12\VQO_G4.
%%5C-UL^3u5`B"S8Me-KV%*jmuN.\<X+Tl2[L1UXP4AOY/VFG.4>d[Xh7q[rgYY%J\F%?<gYtRF:D=3Pkj$Rg.7THtKdV@u5lE9-V
%3A%Ru'fW<k-bDnVQ/'gpLsE$*[Nk%BIicbHft[_cJO)Wl-I3E5-Z'hk/M7Ca`SA6M`["tSLTJPHP7"j)dNh>\h/Q$fBhrb*#-TBT
%;2[q<Yu)KFLd?D:_QG0H18l`D//"TL)>lB.O*bUKc@so7!"Y$Kar<G5!f/2)$hoO7C:Wi-/;*H+kaWCD3=D%f`7Y-b-9J3DN$".g
%S_59M?:ODCiVL3Rm@t'kBmYbJ<dS',_QILH+-(mfSTb14M%F3`La)gugu)g<\m8M=%^XD)eW(W&9OF?fjHG\MkTK+8,/M=%7joU7
%O/oEo)Q7DTGo>3!7\)Lq!14^WKE8*@blKM'D$:5%f:Vo5YQ9sTdL%W@&):--!WiNa&21C,$R(^ne/S*JlYm&dN\\C<OK_A',ZG\k
%^hSN]9<KY\g.lG1P.JtI'+B)s6F^25U;?6.+mNf9Mu4GCSIj7H2-Fl/@6Pqi%SRkIh:c7Qnn!OUf5o.MTR7U`WJB5EnpF.3oKa`6
%.?*+PUEMIhc/l*!ZJ+1,Zu)W57uqDMqUppU-nNVbWt8!E3^4m4FhQN!V'TE#UP<6*3&hp[H?aQ+%7:ONjSi/jE6aDG!uFAi=<nh?
%hfXt?=IOC;M22%+<^NUlHF"3MFKndMEOL6CHsK>mLL4t6<a3c*#1o0DeeD7h6\nDVMf..7)3B/pUc+`V)QV#B8aq"K$\qr0,#1<1
%VN%O*?r4N%aP2";=]TGuU;-UPLQF5]8;+ofb2u:D<iOmj%S$<l\snC@Hq9K`F*9O#F?f:Ed(VP1h$,lM,,QIMIR[a)mc;k\3"&7Z
%\=cG0hO;r+,uS8aRYE8aH&&>[G61WR+&<=1"(H^sf>]QgY,2p6s&d,:i/ICfa6EkqIA.D%!Jq+KRF,*JDMFHEMoWj:OOR!k=+$Uf
%^7Eq$P"(UR.n#"G*qg1-e!4_]Tp?5N"WZ:3D#kt$Ko643@pAdU3Uia#q/bKO6?f[DjHiht5ZL\1fcNVlR2Xl[kX4T6<WXs9kb'8D
%XMc5h<UU11!X\BT_8m?d81hqi1"lp5PPKBj2>^fSEU%f0'1(glJ-dqc!10G6ltqn.RsY\#=QlU0=Okr5UXCRL2fe4/qe9CD6898u
%ecO=84nU1<Ts7SA)("VN%m&bIk98T'>IQ?:qSto+0At%UUrCP3HV4F,NUmV&@N5))ruYE.;IeQj&-rnDc89q69D67r<,HoKC+XS1
%GS.WM](]T2>:'AD$<X+FW__o/*%^$GBl"P@jA<1*$6PBNDo8h?eN,EqISs.6SWs)kI\FBM5q@q"5sq!D"QVoj(.E"#e3.s]AJ"qs
%#<2tc#EW$p.@_N3854WS#Em\7+Q(4`VMAGd%D#n5OZMOYDP,"4N2dLY.[TL!""R%jDih59Krh\El.s7%A%0!MF3`Xk993$s31mg^
%IRs7fFS0=kMBr.eriJX_5';2=]6Wek'/o#"]N`F>-MY-bCm!fH6G)TsB0`82oa7/;CHrMrhZ*#DlTi=.s'=BsljMnOX2dsDEX%O6
%^gF^3ib!-+OM5R6HM03:2Y<WWY#orbhRuf[>I(l9C+%]bflXV<6"9<>XDK\8SZ(2P)QF9]I.BIJ!-%;#.6&hn0*"/5QcDS*P<;UX
%rL`qN,P2Pq?[-Ag8ei^>%#NpRUo9/L<3V#.SR_p.Zm\?$Hu$d@P%,HtL'e>K)L)UUq#Oo6-?C@oi97-_"4Y1rhiK;o,)1"C)k.Vp
%8tr\L=Fp9i$BX8OlL66\W=dZ'/GV<=;%sSKN?6ho-+JToQgkc[KtC4Cj;s-dGV:K`n$ffo+]T[0&a,'QgcUV4E7FCK_M!(8TFddh
%%'\5Vo`]jm'ZMYh"IjsJ3nlbB>XhL8$u=;peiYq]`D5ccZI2=r[c01-hM3Ra!%Ei&e#sY-Z;52^^(Coe"L0HhE2\"d'*XTbopIK!
%D3M/[r=K94E=;)/S:MuBI[SbL@A^^Y<WPSK^,7uK&U$X"?/";8r=\WO_jb/8Ub44b;i$Um%pI`'MUed&m]M1s-_W-VQV%HSkG$1R
%B(;UH<!_XJEE+pE$222;?W\1R*;rE(i:TtCY653E7ei6Hg`JD-*hbEmQ3ZA^e!t52ITO_*FfkORh/bpI_?$tW7Hqc``k6[G5Ui8)
%o,=EaKbE&rLL!CKcYFm2jP^rXQl"sagAJN'fYOfg>5$dOCg.uEn7:JR=e.u-PG4T+\SbMNEcWl[0WOQdK*!h0mk#N"@/O]gD7nG+
%&740cGubuO]iZ6jVnU&1RTXSGje1pD>K&MD&SHaIKdfW0]$NZ!XL:Hk)Xus()'CooQcPNp#:_:31$rknSlX7N,:@.I!P<KQ++94k
%aH@CNR#]9e_X>);0MJO<A4)XEK!>Y9Km66[e3%9XmG/F2iCTa-!+Z?nW4!n182X.;/jG#W)<T9"b/9GF?e\g\+j_Gu,j`C4*KDlN
%?3cg.Z7#NN+X<tN&B]QF"a_,p"<t_'l*GWGd<SM)W%)TQ6UJi#5g8VtL/J.8!t4a3U%j.8h:QO@C`sh'A>9U(W?TOf\)gpDkhO\$
%E4>PeF!K*:e$lPBZ.KbPL(rEeTt#<j%QCZ6HM<Fkjbo4sCt=N"1lBKL7G:fc"aF/^(P;!3HLI*^Fok=Xc@XJ0aLr!?)b^HgZ19$[
%",>;gDPHZA]O=rRB[IchdcO@/+US&CS*;UL,nhsTdB]o5:][:CDT#*7:_02d)GY6@nWs@TlIq$Rr2F[YB0igSHD-F4?o9"k/&m'3
%=0CbFFNDR$iPFfF-9ek:Z5#'n&c/LPg_0p_G@0=L(=qeAp#Do1>5:0LK1ra9j[Q\$Af]OoX_sh?kYFd<i2d+KZ0F;D?0-K&F5lrp
%3?4;K*UB@JLZ24>2Vj(j9P/elQ=jS5o+82@aI/3"A2#9OQO=*"Npmk\mT4m+g`4nbWtK\/GT>r+s8@G]>fRL)p[-iN/%8WKioLPT
%cfFgFBEpkL4<am?#B!;p0SGQ-qE4IWX""[5O>\\h.ZjU@<][9"NgqA&gCP4,Z\j"hlq,[\]='GXe9"2Gh>jV]PLMu\or]q0T0hUE
%k%%J'E%XK<OXWdPN2PkF<*2),S/;VMKAk%ubn-YjEu-!;eE.F>a1"B_)S>_e7*p(jaK6g]/5^sDb(n<kPtmZW%.Cl)PCS0+f6qQM
%Da0[XWfWGl,*M*iI5ha%h:DnnmVjq284[%rqWFY=.Z<U':f)<j6SD9P!6J$4_+);-VSk0>*%7_&(Chj$8-fu>iH,mbBITu$&7RE9
%)mF5uRirBVcpWm/V_JYiKJGDH<+!FClnl[WmQ,L0.K[m()Rf-K(EjD/.u:?uWobk.8'N4cJh)Y<+__.U8W0JIM<,Wr9c@ukb2upl
%C/ageVAa5>GDb\qZd)qS=^8g<"bVWn9+rIb_SWA4\nflg0*$=&:*.NIbj]],%KkAr)C8QCOt?SJ#jX#kqN$O]%ZcKZeKFj4#oR4V
%5]hN(%b:'%ocifZ==l@2i653g:7MpgO/mS+\k8e*,jgC[oa&f,gq/3reAWo]P18a=$Shd,K;oK`;WBJ%[4?e!F]`MK'\i,YZU`%*
%LX2`1)=*nk&OsPC,ag%"lC8.ehXMaX/Da6W^ljW!`+]9YadT8/Z8ehTKENQ!_CQ8Cam:*i:W%D[PF5E1)cXnQ7+E7-)>U[KFcoi=
%T?)g1,[`12'$j=RdNrJ2iXp$s<]=nHaloF/.VKZNm.q$,IQ1O72BkSMPE%1O.W3C(MY-jYS3M4)T1h$8&Jb"^?QX9G6=4o60Hcl_
%;+.8@nCqW5)Qc8f'a:ECr(ta1II@_07#_>$4usf=rImo`_>u-A+;?KI2_cDB[h,PnKdAN58OAYU`A\_Q3d=2SSg*r/<u[mM,42I<
%UQ9U@mmSZ4(TA)qVg__rog/9]4Lcu0Ck2AVW=ZV@1n%.b:g^)p%e6K&]M-L@1*7PLdcr8%&P3@;dctWt7GTZRZBqa-eXW*F''[cm
%WIkQqfR_aX"F1PrU':JcW?-X-=6[aIkUI;YNpeNgL!3DD?RRd(=9&hp!V`64.sjNRl\C&o';_#Egj!a,,s]/i:c3tDbU*hI,M3Z0
%3lE.Z&B^6[R^)!`ILr?Y@DiX)D717/$JqMS(]i]YTD32eW$m:&#mPItQmu>:Qea-tlXOlb%gJ#O4Dk4mi2_5T0VeJ=A4emt)Su&4
%K%FF[8c$.(nt=Jsag.]1.kj'#g^)D>qGn67<K?_khtJKFiP54X2Bg2KE'V><6YbtCKS,O9W2)i;`.noZbZBus-7%,0aQPl>*0c5@
%P_r9pe8SG%5se,C!<80pW+?(EWYl^(&XB(`+[>We6;tX_3@gLsMh/eb`#&de974RsR>+??P/3-S$S_DH,QqdA/K%4]^U):pf,%j"
%>R6M2%V+k@4t%!$IPKrM&TkX@PO-X<:I9,O4ho.:"p9\6A79'j"+?8%`\)DlJLoXg9?<S[E31M8j#Q6'Tm.uPYUlY[P3@HJWAZW%
%.0``'a=\n4h*P/.OJ7hYBN<Pi/r?sR72nq6DrHIjqs$5[Y^h;&!:qH5%j>ZE5(pT3_$/da!&le4hWsamh-uZG,Q.fA@B!oV,p-1Y
%$\KpHo0SL1iE,;C$GZ)!6M?\OPd7KGU_J8()uU<Xp%nSql<,bG<"3o>ZbZ_-,#]W9*t/E?L"/*#PRQ5AA<;+,QYl7(.`hjqQs;%[
%%#PU<eJnnn?$H<I1;?>=2oqkC'7D@ri%,QY>pW^0L+eaO_i.N\"2BMU17[Je`Qgl%E=Ods7aqJ^1`9:B^5@UPS*cT#pKHKLIBOH<
%0*,=3!S48tZbi:uX=fOm8"_aEm+u8H6bs[hL.a;kj=T=$0n24?_@M2peaeA<2n-"*IQan9:-3GMo<Z#51^e4g@8B*3>f1L)a:'=V
%]rH'8"RJmD,]_[]q+rPHY2hpriai&pEW%W;!rbtqYTQ8a1DLP2s+Y9!r00--#a;[5_>YKJP]IB`#glfE&gR#)"i5R$j3r-]WZ%DB
%CZ84/cf1&GdPAXsP8Jrj,q<^\3(/nq*^PlV-ErE-#<b39`(oGhA/?uj9U/KPn2P^Hde9k?Skpa=IRqOtHk_U7(0k<%$Sku&/B>[a
%J]:`jE(nA@Gq)gU>O[1>,.pK:LM%L(p#pa_'R.*B\F3hkBBL7CM'Nb^EPN`+A-%k:m2+9ESB"k):aA@b<om)JYoDKfh27?:XBUP\
%3DoVe#*ml/8jKEoYQU=0"kgdo^</FfQDrRBbKKQ@/=gBaql&X:%5=-+.:c]0@pq=Fg3olm39h[_8qh$=_Be#W2?fNM+`$;;D2"0J
%?I`b34sd39`rN.R/@tBQ8'Zs.;i@3[bLqN9C#j#4,'l%Bju']TOo"m8:cY7ZR`l:TA38,u,]L#B[#5I;_-;)QON;D8qC30hFW\.b
%S=glK,pT4(Y8b:ViC4Wh=\VgJ['/6iY^2.#)!P`8TE(Tm82O+`Eum`'(cW\21P)-jQh48]]TfM[VrtZ;N)pEf,!s?h>XTd#fS+up
%Bg=<GG80Ojc%dWG?J<1tq;`Z#Z5#fYE,8uh+p*[R'D>'CN<Z!-*L_N0"!KMfFtCndD7i08=2[7b);J^FUI&=FVoX3sPQskjdH!u8
%,K5oRJ8'gX6?.0)K@Ao`MWLOh7*<]mY]C2AW2`'-jS;mh6Q[7iY5V+"Y]e[gH6SB<m^iWJ2!N?uN$6go!39ue&saPcC0'mJ\*PqX
%+!/K!*@T?-VEqL1#2I]7'LMUtTP`p_V;/qb1aOFVBX3>-2A+!YJm8j4f*B.p+DVc:85"TaCA(9ub$E+#_DEW`,n<A=(W^6+;QMT2
%8k'X:*,',YUB1_:H7k+4eFAK]aQBcm-,-HrcN*=b%2j\rk>(AY:\$&IkghDH!gLuOSVVlq2hA_sUO^j8Z;/P:k;d+-<(1?aoVu4;
%Q:%\W&4CeZlsRV`B@0^&FM7H\0*CYslL3]@3@ah>BZ&/Md6oq;0$fN5']U"%l"`I.A;Zi==>V.A&UWW5dU*ANde#t17]7YUNZ5_]
%j>FMKoe`#>0?2Us(c<Qg6,Dk0)UK<W9<p*8XW,b<j=Y\C9/K1`!G.sOL?LGkD-9LM&g\RGbHAtZ,)hkUC`5XXaMA$g6j+SLaUa/1
%R5I<qe6$k-@$U'$[\"Jd.DGs[4pG>00sq:4qfk&Z.r\^OU0,\i"1QtJcB;18n=e@/?k7$/3)uuaNDfl<lld)\'_%X4"\`pKE%Fns
%F3#Wi^_;Vba\H83&!sX:i`4-bfcH%QA&hB^AeYKuCVf=$YD1W)#RO"0!R4)uet+f+KI*%\]$4Sm5YE.b7W?a!,?Xnp)jm!.UhaSs
%(^V9.3$>L%o"s]ZPEPVs-c&brO,Ufop=.ir"t=[cKYaUiLSKN50C7KG9q.J;/];fNX7[kHr`G_C\4BlB&!nJ'XU1\*9Vb(oa[-"E
%d,J`M2W5E0d&BaRNm^_H.jSUIE=C%B1VuPu5?4l%LLlG%FQ%a%UTUGpS'I7PEg06joF>/=aJTf8-s2l2A,\[&@"Q*q=8-a[+.U$W
%qLj96@/f[A4StY`oKn&pR/Yf@rO)Cr$eZE."f(7V"u5\nmUdb5ZbcYdm5`t@2VjIn!?A(Q;gAO;0dB1+q"Z&d4$aXT4,SAQU=9]m
%4KNc?l*L*u1TJDj_cJ/Sf_fC^A:D)@T&hLr,g@kAK\[[7+G6"g)9G6KL'b^&"Jj[hWk3BSs7F\,fH:FK1aTFL)N5*-%NM<FN.BI;
%JK4"T>nJGb&cT,"fT&\[',6V`UBqb@$:DH?a)a;O?P^O"!\B;sA(&@rqlg]f\2DqhPs8N98209SB:P2e7PHP%V32I,647Y8k4PHu
%PCA_lY_e$t9c_jq1GWtU`3fk7YgPro$+gPCDs4q_f<NHbQR(:ZKUr('RM6W(0;AkXrU1)-*q_oCbHP0)h\)Rr7l\UI:+j>l%,LT!
%72hP0d8&rR4JW0VCjMCYTugufMdF:M0Fi8)DGILq#c75??;M*V9Us^6bKRP%C!SDD,0p+$H3[BLOsN$?X'"/@LdMeu$Z"-E0G_SB
%l,h/KBNZ`-/0U1=;j,<Ed98aJ.2"C88IJK\fWet6;Gf(5Tb^V,oX$fer7h8/gpc\)Na12L)pghAMZ>hpACd<:4P@mf&7>SHP+[AT
%15$\$0lXR;aDqO^qlFe:@W@OBAbBb!IVJ-iLPm]!lS<8$0ukh;dp6QVq;sGl*d85gclH!EK_fniE)]GLfn0BBQNAPVB-RUY^XZoE
%S)W(_YYAc7OgH>e%PY9mXSVUS&YP4Xea]l/Or)I^gi1d_2\GnVFL,Z!LMhXSjS5)X5FsA)^-UU,N1Y]\a_Rh_c>3-%coskK^rnd0
%N&B+C>oXQ6+h5(-E_`o-W"pZO^*Jg_35$1Qa2/\\IAPECMrc#A;3qNJbNErjJ*3l"0>UCRfb)`bf\PY2_gX*@H3mSW`'>G6Jlr$Z
%(2Bbk940pkMpO`Bmicn$-f^4&R`_/\h-"'GL:.a63HAku%Epjs#*gp*(MsFiFU&p"8^b83\m,+cdUBNY124\n,+V]<$puS6rjLY.
%^][0E\%9d144FCr=@f0)U?3Ag#XE^C6tLst+amkV'i$1(3.,4'HO:m[=GV'K;7b,)"J.,pC_fk*A[YM^<AAauW;H0W7jPHV`9seA
%O8nrm2QK;'&Vj(n#p**2lbi7kp`U_k+!Ge%gs49EhbebL]M8a]mhgfR,?MThd;hZOSTSVaIY6#hEh(ECL37PU+!`>2S-UkV^@Pp4
%pggW)B&e0d,5g#@c<N6!U]l?4Tl$.NV`(J>^d6[*ZFRI/F,bc"Sa/5<TkJ]X0no^,1Pg+f-R4(#<g!V'75C_2QR(V8lKEA@X@TPN
%aKd>s8V;Q*P&a/;Ch3"_-)n2+cZAcGAb92.VBX9d5^qI5[,4Z9#[;->L7"06;TRJtDH9&2+AO;iKa1E[N,_+29aaoD7&0Na@`C5e
%k)EV/oKP1r^tc6M/]kd':io#T-Cg`P$Z[XdcPhD70fEHU0WR5W*VViDH(9OL=]jXLdT%kSa>7UBAaecp9d(,g7kgVe,s_UOjK_@a
%X:LY6/^8e]##2PnK8^HVaqUtn8Y\<86/i?uJippjWQFc]I<YH43F*Fe^.'_Y1*m,/\j@L\fda5mi\k_`D)p@pn32N-Ko+]g>e[ZJ
%Wa[6*ceAK#9I9Vl]AnO..Snk$F\cFBkX*YM(a3NfhAmo!E,t0,8L3nFY;0WIE;/k$`9;qK&F8qsH@kGB^b"6ZfQ'PVH)tUo(c+QI
%Us3.$Jr5"8-/VENbI=madNiI,=7>b.\m(KKDJs6LS$r.!@Ei>&[@huGg),t2.:bX!A%Y1[GH?._@C/0s4b2[e[#;6X`lolH(Mt3-
%bY.Q+B)n@>2`Zi/K6/N*8KK0N)=B8pdno-m6rG)XbV]s\NiX'm+2kED41i2?EEF3cN_je?rOp\@f0k*k%W79=_J4UgMj:9bIH5$u
%U^ZiMZ*9+;jj_q;/C1fb8/7GsJjU-N,cO`W.MV3A1FnPipGa8#YeWVd;D!f<e*8bpW_I;fl24q`DcWA_oq4&Z9FiApMLdf@&OB)u
%P0]GCj`.WdVc(HVJE41ljFO'\r+dj86@EL4R;&tf0a7:,]$p<E]"+i-KY3p@I4P6q$HFaU4<9BiY(1Cf]d8#EPG@d2ar+-,AP"[&
%&"pc_n4sQ\PAO:&/uHhOakTBH4],C9Y2<?h7QToUhl;_S0'AXnh+I;BQ_0;7Oc)XUXNEUR@dN^`6aW_]6G:qG[+A/t]42RfW4I9h
%^,%!)q@N"1P`>qj#nb/S\-*BP8J?V'H>`nmp[5SWj9'3#"P&Dh1rY2q.73A/geCHXkh<M?an>&"Tu#Ph2rEDLm,Rs!SJoT:c.P&6
%`b#G\qJ`0]?9Fa6*?,n1ZK'R@@>H)8_TZ>YN]"UrQ2hW-9+`IrNBgJ+4("-k4I,Unl+ELo>quo)<>/>q#R_-N/g1$"AF6<(_"@P6
%T5t:u-)GOCSS7BrhCdLOUllE:r0M4<12(.$kc9q8U57fR;.1^b;gBB+\&/J<#<HsZjBeY&93DAa8%\KI)SAXDD827X(WY6)mH*:(
%GWP&eR'9]n*BfmD2'=e+[BVs%jUEWk(1^K$(ajV,kf_*aN,1[-45NDf.Q%4\$rtg,h3!&no(?=+1IWd9+>#'V;R:,`_o`?J!`kH)
%/#g&/FpECseDt68)gCSu7Qb-YfO@qT`6.XS6%M61Omf*FTW2s5>J^YC0IE!Sq"Us;)b>HinWPNK#*47PLl=BRBP&&TS)KT>?JE3+
%q:*M`]c0'F6+Z>jelL@r155YjRuWVLrk@Gt1U+;`@>d9.DHgkD=#sUQa#\m\;0i[hInMVKlD^Vf."Dgr[Q8hM7]Hg*<b:>P8C_k(
%60CUZq_DjRQUiH'@5_#.gJN-GpfIZOd\J,i=RE%60qK$::gIq(8jIKK:@$VVjs0c8;U<*N_m7YSA;R<\?;UV4!Dh?aD3J3V4jWnN
%D3GV65\(1\B"#tR=JM2h6I2"4]mV#ZVpTG.4GCdI)uK,oCOok/:XEZ.#)H77b/G<*CZ;&OPB7GiN'=T0R.S8HJiQ+<4:g2Z/BB'<
%lIg#9K$jAe<%#P0mj"HBPVT1CQ"CH)U^2jbd*%_\]9113B8W5':D2e'1n7]peDY9\(\.g.CLVf>pf;WlOQDs;:^G#W\6G/:Kjf]S
%)):O-^WN<#SFtMVM6Ns^;0;pi#an*aoC&(-="RIiX&Re!OEpQUBKh_=\B=-7f2hkS>XNjrgh-,U:dEuL\tcC\LK79a%A-S!@*nS)
%c:-^NO"S^-],jN&\Y):'U1n-lgCsq:m>esibaSsRZP0/idce0U#;E4@$mJ2p#bJ6CO>UuHNi!]\/B"8ED$*&qlF;&)Y@@Ei3=Q,'
%hH\$#`pHbM-SLJMA?ok"TkGQj2-#d)$<Qko.p=lGSV^ZE,>8,rm+2Id:'ZB(4:]niHCD!PceJC1!f<+(=]MDu_66C--:sZUAQFPZ
%]Nn/$%$?u(F;p/c8qs8]WeV+%mBATj\VE-qC%Z:d@CKZ:PO+m+Bk&WG;S=g\#%o-Z?7NeZF=BgMCsiB!6huao%V9/f+Q<SM4=HbN
%%#s^lK/6E6o47HP9R?%'P#1\NXpS'hM4tEl%59)\ciRSbJ$ON2g\"+''N>iDS/lR!I\nEFUS:AYHS\T7r,2FK.T@)sEYDPfB9IO2
%YT+pOR8>_t%T*!jq0>h-DLU/RQS]'JPPk8#)Q=5*@$&<7"Vj`0lWC`BFcgMQS1)$;C@]9@78%ii*6[sW%RgVK<O-iMc4jlu5k@Gk
%Q:8mtUsN],MVU;X<$k#uUSZL+ilPf[2Is:!RuV'll$@"Y`KK"m74d/U<MS[X(;.jRdu=,`<GgdYL`AYo&]is+1aB+2[uo6:JB0Sp
%'fHcfj))k_`"SP"9X49UbZ<B5d@(1`F>3N1Db&@q/n&F[7;A!$<&!!M;]7Ir]("-?2F-FZmKY/IWCeoP\J73/'hm].>76)+bCZj?
%GM7L2AC2GZk1WE])/^(8iDHG%oTu&@n4>I;.N=IJ&jb?7<tM8\+=&#P,glc[Ej[<<";uR)_5l44Nbt1Am&:P.\p[#GE*)2ko=I\X
%,o2_]KQ5-L4Xf'@3`H[2=(O]@*bdGtP&<aY&VusC5i?$;=n"0f=K757c)Hf>TTUZqMC0pqZ0YHL3l]A:9s*=k#'[+2qaFrU_uJ>?
%?!u0WLOO=!L/<..D\:5I%/(k3.QTYHp$;C=UuA88\l2bTXubs9JYE.BIal<hed(E6X7O%Uhj):p9\3[/59Q5BUo$7>?/s='YZg:n
%c0n-()jetG:FXIGORIRb^g0^IoB8J?\*G0KGIg)+J0&%XQ6?e*6h0N6Fq$2?&K:s!on"2QV:>;jJ]Pd80WI\S)AG&9X--r0*gODu
%PS=/@T)fMpl:n^<VD5m2`$g/+T]!\]bUjAu(^ct5l1q5!g@#6-_*EU?=#k1N.#E[L*LC<74n<f*GID)Q"*qDq4+[E!6pcMl,&ZFr
%:qS#dV[?XoPLGU`,-6EsUMhO2PR9IZSWCfjV>RYR/+Wa\H*";tgR+LM!n3r[B"RJ.:7lHQ)+C4g=R3?sbd2LFV?BTHLsGlCZ<)k`
%WmiRZ,1O>BX;+o/#J^uP"fkFX#B[RG_-0UbDao,>BpY<H(Dp*;q$Ha+lMs#IB1g&aGo1GaGs8_P95/-gKuqB>&JW1r]FOO/]RXt9
%CeBs\/*I-f<iSR-3@;6=C.H9(Sk1l6L"#a3+f-g&1j;o<^'`-!hRkR$;iJ&@B`eJeT#e?S%A53_Ld!ob=+1"llAf"B`A`F=2[H#$
%OS5iWfgOJM1o=EA$^#X+[e^$%XF,;^o)S(<hbiC'%_mJj0"W$$B[3r^l\3E$=o?QH"WJ9Ub&7@Ug!sdBh[[6Km]\hdM%^RX2,np"
%j*f\:Ckm-n.i/)dg5Fe_\1@eK"b:&JDhd8rnF!+(@O4GOS4%=^WJ84l_YeVhXH&^h/WC0W\m'/56u]okA[HA(k^YXROq>43-qSG*
%6<_oW#J?PBP<X,,_;>g@71JeSdX<Wg"D`(<hsm(bh4YAXACs[YE]O>QUPg>b(7-Vj7-#W0=5g4/>KfDQT%;^9bhTC[H)ME**d=+1
%<Fkq_X%)/,LSWPNA-*e`A]H/eObh@7!!F`E%o#,sqHtC@r%b4.37=]te3pC04&8f'^RNc?o;JP]19'a0ps?*,+&n*d6^[X:^dno&
%as.q6'#qi-K,MOp("q;P*Uu'R\OUG";1^\n4Ej-B9LGI^YgM5ZjrL/,;lDk_bkas5m[d9,JBRRM[o"f/?).iUP4W_A\I:L,r^=:'
%$,pnA:bR*>ZCj6%QY[8f(\DS"Z&LhSq'KX+jWl)5>@2'53[s#-:l(mT%jT,_Wi1>n(@,4<KR%n9=(q)G!GYJ(8k#TtTMgP3SWt5r
%auQ>^8PjS\8$l8hhN;d`,7A5\9bN8`?-)>2#__:`1%2j,Fc*%oeM&:T-kCS?>1`[(2ESTUFM8o0AXiRIFkQDKC>lE!`s\Tp$r,7i
%.4Fp6.+S"-,Yq&&NW]UJq'V_P=F7Z=:'amU%+6hS'3]$CB;VKo,:/Vo#fe?2ER_KDfAD43L'uC374bt>W/b<36OlP+knhc]+1]>/
%714[p&b@n-<jQNVQOV3T+U"u`DA8d\Slj)M))ITUjse6^jtb%C@BUs0#\7j^dJa\*_1WFI^kj?&SRMuR$A6\.7K]XlZ#iVV_P0go
%c<OHtM1of@.P3(4C_BbO&TW[<+DsLk3pU.#]GU$;5t&#g9Nh#Ybto,Z+qQ*CON82:W^q"Xg10^-+N\tC!@jV<brfG[SH#&EBYg0V
%XL:IedohkhNDNK9O_2u1"u&E+,oMn8I<&9V$D_d!BVb<=&j]R;5@>FrN*$:XW\N33^_&s#[pa:f9^S'h.f^s7ie18KlikJdJSi3u
%+#d]/D8'Tn'epJ^nn&8ZTi#iId'<f]'@!WHSnCjnd<5l9i)%>=Lc8"&^QaCP*2T_RoPj&g396OtR9H%B8:$^ie5.Afj8(XZ83cMX
%g[W1$2jVH0\GL/()#tI$>#j%dS+knt_URf57l#3.=(/ikU6'J`VU4AbGs)'<WFe1fj'7Cc':bZSLWgY<"!FH16R;f]3cma.#N.Vs
%^QY69Ua_CiFIg%9m.U<)hnBYZTfL;j<hRoSXu0M]hag5X1@g5u>7-=,"QP&h8m\M1W/,D@7<,2j]]_\c2^f&elj=o]$c/"'hsJSR
%(k)Nob)=r\6GBuB8pKX-+:$Whj;+(4Ia]e!<+!A_95@AsN)?dce9PV58iXtap&Vb;4[Dp'6<.V5!&BMD+L?e<.)*ggD30`VlAEO]
%JL#OBMo-[m*D"4<buRY!]oe,u2'a9N/Oen9:j)Xs>7[I-2erL\9k&>'9nmrgmFYDsh+a`^68`&$QdtUq`V87P,(im9$*oXCb5c`n
%VEGs?k:/7JcmmHZZ`+g"[b9PTA,`-8P7oJL9`"iKs17@qgP\A%Ueb'GTH77=.V"kN(_#eXM+50s^'(q:VHNs5nOk^i:E/438Ufsp
%gLPR>.JWunUJ$ba_>sf?h$eVtLsY-o@LkBGd%h@D.>a:**pk2+!<HJphn//p10"_&CEQ2X(TO@thl1'/-8H@pbB1K`rZd>^`6Y+K
%D)hU3)O6L'/po.8D(<^t,kW^6bG#WW,A!B/Oj/.b!O<PfUm>:-o0e*"1Q"@hb;<GFnO$\cW?7jjCSiP,8q!%3d*l)6=#H=@MI#`b
%U=>Z[]6fJX%pnkAdq`8pP_<:bpq\EJ>+?g3*D@K*!+d<YD1srYRX#gLV2)^rg/T/W6tJ\g(g)o`h1;Yl=`tLDC=WuKD[?7^OKhAW
%GsZ0nC"@PD=s8CG>;H*b</LjAFstqj6X8D6.Ys"H0-dfS'Od:Yh43(0#.oRJgoPH58?%07#W*.re`N]+;CKO-%s7jcZk#rXUAudI
%UE];NpTi'R56-I'P3c22EFa7`V^'>&."8e-IF<`V9W3]rJ,O3P)GV4b>1.(neTaD9/lT^XW#";B6)[.^mO2>^5[PHhAM.Dd3[fSo
%23iaP1e+'C8H*HL.o2EMnGca-h\DO'KkfT1C!,Zq_0\j+l5M1cRmgo[VSg#q92R:8/oVD%S=:)\)>J_O)>;PpF*rd38-UP@:0Em@
%d")hoA^FsshR^kZ,0>-VO_r!p$P^O1q[j(`9bTH6%!9t=U\"4WPnM5$(^q03go*kAYc9iL77/>QZL@&)(6m@'e8=(I$:6k-]p[%O
%[C?%rmrJ$Jf<2[Q6e;;$qC0Cen^Br7)rEuqH?i_=6RbB,)G6,X.k2<Qef[c8%:X3[<Sc$_&Pks$;+4H2fC,^HUa;?\i;MmSdXs8r
%099A-dbN=DH[cI29GC1ZQQ(<mbKFJWQT$ibSndN>/,FEXpZA+:7acHGm%m(H*Bi7&3RJT96V\Xb?Qh#Vh)^c&Jas;$8B2ml1Hcjl
%E!9c=Qf`Jc?UbKnUsK<D(gRj%"Te8[W4S[fEWPstEI:W;EaV.r,(`nT@Xme/a%])(9DU[9j0QdgU`FE76cM*0eT($9`\Fh`iY;#s
%jo[a0W#H>df[t1g/$rWiJHi*]E1SoPUi<#_=V"&Y,Ws"<>gr8hKog9TrcXW(4#!3*;^/4Y1E3GRn+n(9O6_4]'?Ll@+$s9$0Y*Vk
%58Ck!a]^c;aQ!:ERF:+Vp#7W3"$^fD)XStH!VE_%HlWZ_&T^1Bl8I7E+?qW13X0>\ZN&1]l73AkaIOnQS8*h?S;0l70",\k7+q0Q
%e[karHu<I-C00bCS`0[AA,n@s/Ik1>)EM]F+.6-"b><UW4pQ,<R1HhGTl/7j<oV;t`GN1@-U)'u]\4D#f#aI#F(=[o=@KFEP>/%n
%6gIJ1`?Mq!gHIF_DCiUCHh#ss]GdFZ/+q1?\hg!sbcFV,Yp`Ui^93^7C\Pp\6U^/rLqN2GHXP@4#+5qb/'l81^/GUs6,Bm(OuaD$
%L9B,XU'SHUJ4uAJ5q[YaKNbYm<i@XG5]&(G;b^/3^e_QmM$q9XL=/RHF6Q)q0Y^D]Q\/,!c%?c6V-S\tJa-IO;j,K;*o?rtq2su$
%.i%(VPlrVMR#ZB]fgSWk6mk946qT?W<aGYZM1EjM"\1Z^<4V!!Na\?PTAXY?Cs3:u,$p04>?X"bViF"RAKk[l;=ps$&m_0KNq3BV
%$u<2k`'?E=Z#`sAh206iDA]iMfSQ@0)]/J5a>U+\;c)GCYE5E\I"*dDgY;]&j3t^>ZL)#8BcYur&:_b&WOEYao@bi^Cp!W>jn(o%
%qUK>mZ0fgpTRU-ZD^W_BSe.2YqX3suf"6@rbH@/oX)WH$qq[Vl2[7R`*f3FWIS"])aU+G__c.D5.4>6Ia2->>/InUgF1I"`;7J)2
%5_?Tjk_))s=r2aA]ufR0h)a"QX"(Nha%IC`bTSMq01(a)5HPFOqM%Oi"2Tq*d/dJqGk`H1/Nn80HU[3("a"-Pb^mIVWGOEU5@>uB
%9ckGY1c?)&"jIqmi"Vo!>_,Fqga-Pf4==./K^UZ:`n"?/cKC+II`^p@W(Z$,J>)HbF+mq"J3*Fj;2-if$&FC#PubMp0,%HB]qWBk
%:dHC;'M@\fN3a>l!^N;TD4K,:aEFI<eI5+)CXJd6qS4FerF?\*hfVuTPVgUVZ@Z:$2Goe0#0DUQW3Q&aM03UqhjajV(+$.b<u7($
%4s^p].[pp`T=VP*_SQm<o,9>5edkT"0UOZGO/eu7(G(Oo:!5kge79MRJ[Ij3MX>u&F70;0gKSb!j7[0%6bp\5^7+5WR.7ZZrlqG#
%meC2?FkMi(?VdF$O`GsG:QO^`mZ8B[ah;cW`X?kXe_E3.?<od>hP#9TdZ)$+`[c2p>5?)AF7Ic8]0VTO2;J47C2+,/M2;P]H6=tu
%P(1)\c?&DjPUQa[(Ha<8%#2kpKXH\0ot-4gm@X[S)4\g9,$a"k'@E6Mitk:F9(s@GDr6<G@P`c?+N4dmI#=](30R"30N)/YHC*Y]
%APd+*Jj>ta[b87r/Mi4\PGQ+8dJq,sL%S9WjB<Q"W&J(NQG_`rhP.,RP/lE:UDOpp#iZM0?D9J0+=8=%V^gEgFd?%O(7/ZLO_=lR
%VZjMpUea6m/+1Pt((9F;0R$eC*7Ca&DAIY._PF%W?DNMrTlpLYDqEP!EJYL5ItqtAiZIVW_J3t#TgiSA_n>b(UK,7cb!h:dp4^h\
%5HYpOqhV*8/,D\>&8<Fd1h5YS)@ouEjc0u`8<8Hsn<Xe\Slur2,oQ9-7r'ID]]7E1M139FO&qk8d1Psn$e1M)?Mj7#5KH'M3Y:Y-
%`"t?HHIuZ=o8i[:TI:).A&ECU`NpR_[nPS12At)hkl`-"*,BL-InF/.`Y-Z!EBFC8!!bu.njE`BJ34pBJJ:-=I<(N"#4<j9A(8<F
%';EQUcWs-g;F4'6jA236<e(CN(+tRS.UGOV51O-e;JT.CiEarVeGtJ73'l>XVc6\8Lob3EO?SjSnHtrDlqn9&0(0F@AqI?t)u3&+
%B>)CU78lq^+ZdaCY$REE,.4'&e8fE$NZALNiUfi*+<Y"jDGLM4L/AgY;lmUk>f&soZHZJY]F9HA2O.Ei%IOQippRhFERC)/i^b_+
%FJL0610Rkiabo7>E('KU/2"aP*Henr[Ke$togO"^<__@<hfAsLGFQ.U`6AI:TMDX7@UtK249X_Hnk1<lB6]ZJPSJsMAp%_VSe5>K
%385QRDdSQ\*qq1/+B=/f.%Dn0BWso:UPs3A5)N*L0J*gVYIeAu>K_^3+s+3D-maK(6</RaKXecZ=4d9=AP+?LLO[l:1$s78Kb&I&
%2Ni2;#'foie'[&U4=;sY'Df3@;,$1:IYsj5qTtNXk0na1Y'7B4pZ6PoW8`P-7.S6Nd*T6!ncTSeH[eI-@=<SpRP.Y&5,1i?H)KO9
%f"5eh'npA4`MHjIDHm!]e."\eCT;Is;s?YE*u7B0@RQfRmiQ4;T$^8&X5a[sDX[IGl9soOda??N\G70fZ8s7#H?qZ?_)uF?\n!0@
%!Mqcr-fE]?*jD90k?dUh3tl2%gc3O?DOD\2V9?tDTQ_:C5'%_\ee*@\6Cg!'_f#-T4Q'qpb,C;hC9h=)"m[04W*p(-%p@%fkqJDA
%bmK9Gi-\_0/IhC*@B&q2qccYi&i9r1[A'kAk/u;B0CWNj*?_teES<dK$7)`e(5!+#.,fL=,H]nj%72kqnHlII7X"KG@?O+b#YS2?
%h[]u$^A$)Hh.6#);/]Ar6i5o8FXA'0F/?5/>J/jQ`TSS4Fd3$.>'-\4!L9J("@bE;qRW'P/1TW/:XF5<`]CQ/HZZs=[CPI#$N?lm
%"]qFcd#'qQ>DqZdHoo>_iB,2eXh1RtdE6W';W2k%`.Ok/IM]RNOm]pSgk^a8\k@cDr-VZmOP8W2X6#5D,F30!"U[Z8T]/O8oa#+2
%<QR>O3togp"q&Zqe%k3BUA4p,<>Oj/lFNY$hKO7fU`;,:[hH>1Z1IA'ghl_cBH?+J;Co&+!%HG*$YkCCKIV7>1VpLjDXP.53p,@#
%R\I_O$=(+Y8(@%^dS_ui)m>=3H)RHY,Y2L^"`q5t_?k/]3.VlgecN/TO%"22cIXFFiQ%`n2h"?.pYQ^s,.i`-\n.e$Yr]r_nX+X!
%_Wd!/LY%]rk]5X'TJ9FgGLHS`HqHPE'Ar;!4&0,e1:1KS`ETfU((op+ARgEA:V'+FPX3:b]!XjlJ.hE#'ZP'X0sf`1=on(,V6BR!
%iSLqch/I-J/(V#b;Df7^f]TBEJisu(BXX)YBu@X@pMRm&h71S&K<S(6!t:kLo'e>rqI[eIJZeIs7YSa,o\>dMG]QpXBYuNlM'f40
%^0J9Srr*s%[/h.3nTFAli;.';??d?.OSh-MY)a;\2<O`/lc9]\>-<u&7FdLGcj!P'ppJV_m_KH&-9V>-'=<SY\MWR]>5IR]k""%9
%n0EGI<rKQ_f`Hti,0'BDZ./B$%1P/%?%JC+@3=peSehYSM=kAMlb\7nY"7;e]1<[/W;J,.G="9NUeuC4\<&FXSf,T9(2/!]J^+H@
%\!sR@o=g:???f\$mo$i>G`;W:;AYqN6_Xs_4V8+S%6EV':-i/Vc_Dic(sgZGjAh>q6?HBr<(0Fc=BMlh%h.,%0G.0:cJ)':-2FqZ
%%DCfV2='3s2!lOBESbSaoMka/@KH%8OM*_n(0]*/@dP[53/5`@*>d"fR(']?X6_h\:2/68O66XR(STT0KR3iAM2mIAkVg#%?Mgiq
%&b;d]S8GV)*6,lk!qYch!M+RTTPMmLG&,G"\M&Ad"I-?eq@<(EkJ8P,V<<6ZdW*"Qc-*]aloKKb(;nTV6Edf.@s>k`Ksj.!@R)p=
%fq[cFXSt:"_b/'4ga=1)-4#Tj/WTuWVoJ1T7P,+9c(V[7WC/Qtkk#+XpI<u&UXb[TIQr<AUGoCNrHdGM&(f+<ldKY$hgM+]n0)H1
%DP5nQ_RcT:I1pY%[D.]-8Z[Y1/b54`53-?2DEYT,nhn.jm;_T`L7#$#4uU+bOligX=EKA85$X1!8XoC><<_=F7X!l7N,oX&m6tWI
%(K"3`"-f3g%Oe*nl3[\dq:I>P1dKb-L#B\8:fK<*m`k855\WUbc"INIRcHlNH"6;^M[-dUc_2@07_kD9X<5)l9l%e8E9`4u$jmFG
%#mK`ap?1R['fE)8EW@S=i']AdC#q/>Em\0^qm^M2gQ2>!O1Pqp-;]]\f3id]Cbh^?hb<JsTnhKaQ!_fQ*Zpa.>rNl"EVjb5?9dlL
%U_^^**jTnGV5GEErP'3,lbA%iiRET4b#[$&KGi&0!qaiJmUsnK-8O<$2AhsfqK;pGm.klk6pb>U(`khVaIb">m;BIR[t>#!`Tm$F
%LF4HQI"@U1k-AjV.A*BZ'jJS]`_ls@ORg_CE$Sk+JVkNCcu0G:PEPQX].AN#oss=$E/q1Yg5%q`a^t'T!`]qB?HlPX3rec9*hRkm
%)gh6gBjCd^a?7X:KM+j*.uMXn+T-7UYYt'mLb>b(\4-a*(k?;K!3p!AjeK36!1Cc97/(&ME85;^:KpUno#h>.S>S?=\/Opl7nY2I
%0\U446kPfU0/q:R#NeAhW%E5+o\[DY>Rn_XR@t^H(Mro/';&hK-MY$$W'*?Z&tgsKe`flVo`ibLBs2_$@)=()0BN-/HSg?HfIag[
%2!Y?.s*hWH4Z])*)Oi-IB0:;K]^Zrhn4mnCTVk<(45?U'4;a)aeXDFV2Do1i_eEnU)>/VbTa5D?'U4V>oCX?--MB9Hk6ma*]3OqA
%aX&E>)$hm-T'M,k*EC>lj*<eDibW@dift,@IN[[4D*jq[#ko+e"*!k<EWVBZL"/GB;7mLGac/+qL8s`\:t^JuEXAN3_u,[p_FVIV
%rOse>=G\n>Ob$-lmT25FSpJ#JepsP-L'BAL&Y6&kn7h&VcJBU_kp*)X=st>S+B"I<PpMgfZTJ)O2@F)c:D5*J"[DKV6stK3`U['5
%:m=fO]8/$@h3=jk:f2+PS)V'KU:N=)\>'Htoj`pQ9d4.VZK*o:oE^5K6@j@3mMUhq;PR:.EENoOO,/Hr6af*.md>r72Zr_q,`dPe
%V^Y"i26Q/t$!gRGGjJGVlP"BR_fMRe?h>CF-fK'#Hh9/YQBp@#V`W*]^.1DWngXN8&W#<)M^8s3#p7JtD<A$QT$:(G#&EERo%4uH
%U3^=sS0_=BGeC9aC,)2]o1fUp;#/[E.k4<=T2mJ'o4:3]>8ijIW+45q;Nb+=lm[iRQ%cJ!GSa3$R'e4h9n^?`3eJjW8<jUb7BFAq
%Xq'+Gc/27O7n](bK2/1\,i?cImMN^sj-?m2Ms-&00s#p3W(PLlP,Na.kt1ei1`;l034l6ll18/h+?P8c;a/-,E%JDr.rn&]UcuL_
%dmA8OGRkFrGdkgNS97Ygp9&>lSelH)ZBd8E?D)mJ\.nn3OBTI5IWC94L9UN`BJBnV@$+JsAIDE:&[Q`i87PW[q9uE=+H@R!bTIB)
%qj&JQ!o;.Fk/cSmGP=[POJAB,%.*8J]M)4TJch"#/edgA101YbQgIF@4IBWj8._E7]@LDf%6X&jb;EUm`s?/m84tWp%$'EWZ?g8g
%l>]_RT_LjUZ8gpj*;^Xf<CiQ.H/)6Tpnc7l89Xmc'ZUsp;ipZ`JV(t`bcePNdnau/%!j!Js6g;].9;:,VoF`aC[;r4&]9ZSKL-VJ
%:R3DCTlZ9-8gS_!WZ'Gr#;rn8WZ!*M+5?nDMt%@@'KJXe3;jE3V$I8Q>tb`,D7Q2b-`Y&KloR*AYkf4fioU;71R$rL[`u?C6@Pl#
%6C78K\Zkfr,so$Ro6nHI<,@&3mcsjtIi0A'K1VOcW*LJmF>l:A\TW$ed;.=m,dd5%>B!lXj#V%`j$njiGRs<Xh];#;\skno!YDc0
%NfQ#hGl!k"5@FL2(ZGTHl#YYJqPN^s">*efTDrXajbagFI&^4^pY[BPIH^tRGD!&U879[7FQ#DMHcPL`aNrsd%s7F2G2*Rk<f%GZ
%s1;%c]@uTU*Z#m$0lM8]h`LZ94rS\oEtA:Ipe*K2:HSIAA.gL(Zg(?P/ouH%T'jtFLqZAT[S3_o1DL8K'Q0os(m&hKpMFfZL<r;L
%o1[%+nV*_B)Bn75m%[AYVBT)hrjE<'.>.`\#t$)f**[%2lo0#Gs*@ab5&IMLo-$F>+1G1n;N(kgYOC-X[T?$.5An6R8uUF6?6O*Z
%*+*EQ]*]LCh->04PXXud6djYYd(@#g8duaV2WVC3`@DU+Q;<F'8JB".n"!uCA$+`g0FT=pZX'$OU\r\%mr:E9]0oJ&`oKB\UBJMd
%Wu\jG[S.\!,U*1DZj5-(oc8)Q*6cQ%Gkq;$lJ:UXY$:N\gFg2/0+4aGr/>?_&[G>@l[9!!8n?;"-4H>;*[4R@m/%,!),Puc-^oXN
%KoXoa39m'[k=u;C2HDf=FhP"KB4`-mS'_#e"W\%7DDtq_k'\>\^$s's<4;kH>G]UZr6_,qm?K=&%;EOA']:1F`!-Uj[F*8')P8*%
%R`Onk/u=@M3merU?f'4hL>M#kVKVqAT*q#B<l`GpA3Q6OSr'm$VSToJ6omH3iO-!#0i0c3G?fC*fY#u3>t7k:b8X%bJJf"WG3.0Q
%Wge>Hp*NPF'cNc*[Q:HQ0M)/rO0!Jng1rng\*N8!cq3t9qU*B`)i^u5kZ]VZ2P0`mNC.*'m7(tZkADPeksesgFQ9mcoi9<Mf%FO=
%*mseoDZr>pNDZQ9-I=`67ZAEl0tQ&.C@ud?W0*n#PLi'@af],F.g'hr0ih=ep/7G18deA$^(!:T3<2^Y4%agtT<IJ'qgEt*E-B/o
%GMW#ZV>kHtdNACUUO>)Jmrb=7Ds&&e,^6Sr`9`i?=kR\"qTg<ZlIm9WI/P2FcOaQq%l(:fXR\kbPOu0hKET]q#)[GmWlPX*q*uu<
%/!je!Bk^"$-CjY)<LY_$Ie'H81rPuoXf?h"[1VhQ.Ku"cJ?X2np[XD=IGN$dObX"<&k8p:SplQU6B*<S")%HmLllLEU(Aib\A@W+
%fg1d22O4!`M]j5jZ\I8DYHQ9`Soj!%aAH?&g+Co&QX5Yg=%:R=6#=5*'kBUm)8OD2o58MDClC<tV[hor/`)(1Ui@PgOMjaX,s]V!
%_A*r_+4.$A>_@`NFeNmuKB8f;_BRpCF>@V/FBQ;A3o#+IiP?BuO7_;O':,UEMH+u3pUWE#S'nF?,n?9^L2AP!7Bb?Ek?3MR[2UeM
%kD$b-S-,/:/!!S"glYD)7%.(n82+GoHeS1-Keb*Y&k/EaK/e!BKS&35]NO;e5/\l[Kr1Y8f*gojJH6CqlY@aQ']X?cgNe;FD6h^s
%+&\4`_(rJj"&_4bYGL6#<&PSj4F`fT.>0XTl6\i`W"l,[L\s2:U*7^/)KHb;1IN"=g_hL@!2qC.LMj<F4<;2ep[N/>.NMh5$8Z5X
%GgW\_e?1o.gN?U\VmiEC(dIM/Z++qG_bj^iJ#T6N^<*-;lYS^Q]J@i!lH4BZa7cc+Xcn8mf(OF$YXosIR8O9scFj=NPOuB@Z/T&T
%`j'+SQ"%b)RP8*,R;LlJ2h_Qs@NX9+/,C#b=+g\3FRWFO2kf9BL>LH!B;*NW""L5c6S5$u%<HEVDo_K$07XrdEL5YcY=k[)0IYAW
%R]=XO,:?5Ijk<l(gLZLP/tK]<e(\2T9)Z8AnCiTOHZYi!GJN'6_KZOt\oHe-aG5f6)!?.<?FUoFWle.&-Z^>IQN`dN\pN'%DqjIp
%(<U7.Ub6<4kgZHN9CF)c]tRa-]JTkEDP2,'*pA"-j)u*IFOeRNp1o[%'UNDi-dG$Qg`IkBa>_VCMYCTZDlaWUBLcq-S"8=m_!@#1
%B,03(%l\+?SM>/QRZGp\E*RWDdk=A2j0U'OCWF[,F'4CUk0'39=kIWD^\`0EZC5*ch1p0AbPHTl`NRJ`6X.N@?b"cP0&+UCm_%mV
%GIuF;HfK%JgYg=_H.c0AmnkYNTM6\pSLKKt(am0c<e6PC4_/mfSo\.-C$XcJM.gug"!04C0)!0$VRW!7r8lHu\Jd5)K4d%9eM=_@
%T.Yj6++(E:DToPIH"YUq@L(anMg&dpNW".1;Qo6L@l:!AlY^P!M\5nI):=5II5T,"VRniqY;ZC)8`5dW_qi`"ErNQg<'6gEl.6QZ
%D3e1?HX)loRhba=]2#OT_G>@(S%[lpa16"\O7UpZpTU-Xm]n-&e=+S;H/2jmgPBckm$iG%h>k&f$9.[sV5kZH*N8E)bga7.3`gCd
%;mY^t?elW/\&R.&<HhsM?&ceCff5N=hUn>7j7I=L:8_BAA*[HIl>bR.mau)9Dhm9P2&BiH&!V.W<WTKTZHV(Q)!6>S7.TJn7>E'g
%5Y52,6k>lEN7hgC$^:&1MR;?t9P7'"%EM/pTXZE!UKglaZE,Bi,Z#NuL:K3B.?6",WG<m8UZuVH\*N:iG,Aj<lmb_M>fS\^lL7B0
%#X(ARIn<7mf.]rdD@9dUP?&r_k.rRahWC'RDPA,#gO?,M@Mc(62(%#ciR;qu-'UgS"3X.tFI%tt)cK$M+EFS.X*QG1)cK->UJ7U=
%@otEUL:u%4(q@!0mT#!/YjLR8S@<bXZ%A"-0ABu8R@nusd9A=_3`W*#]5sAtOFjON-Bcc?N^Bgc9%Q%\F_gf^?*cJn7G'_,bH`N1
%?D%=NTa_f)Fa4>703F"0Grp`!8)jX7lEJ-*r5MF]=(<U2`X_(8AL<BE_&FSB:H-0AJ/sf2Do]Gj[a%i]"0DYMKD$aZ[J1([5tfZj
%<55L,k(%Ki<1a:sG$P:$e8qoklgpsjki0E'#<.JY"2>$1[p_EHctr?n1<J<SeR%lVS#'/J0GF*5U5X%.MRcblXn!>rN33s%^kspq
%@E;I`Pn>Y]b$0P1IN)PN-<\V`j1)\3(fZ#igW+j-b<aT/ZnX/j0m^P<$Tr1tN+Ei0H\4K$1`:Je/dR,ri+"9K5<3G5m@=bD$^2P-
%F/])GF]hfW.Eb<a$<&JFFCCeST!@c)d)cidkZl8jgW]n?3Ku*G,=Fu2%\,.N[6H7M83-b6.Ll932$o$M6"rhAh*&mqd&V&ND$]<A
%d"5)p2h^FM<cpNB)1ePCW$7?^QJaIBb7=0Sh3Yj9]oT\k.siAHCHo)uR9ac@mgm@n4`TThG[g+Pn0$YMq_.=7Iba;jb:Z]?QSTNb
%<Ia-9jF%U9B-+m>hH0FM6r31JM([U>*jS,U*A@BcYJf:QTHHu<Bb)sh/H`p`n5"/Urr[89o&'lbC2dQ9M3qfem3Y&lF&C`,EEh.&
%!#iW>H3dUa/9XH2C2Orl+)Xde-KQ`O4OC#rhU0'GMn2Nl4gS6'Pb^tjL!8!:k_K.PB)5)ZRrl+%5h<6">.7Hm8>nXfas\;T7E26R
%jOai>S-'c5[4&G;037l0+TW^s(,?4@$&QG_$@Em8-#!71Wg#<4IT-td$+4MPi_MZ2i-=PY5SM?Y"o@#;gh>4`_)!;0IY`ldOSdl=
%&JC0SUW?T"7e]<M%3?.o1ruuBkM,bM/P]aMbS&KA%)cO%mp.J(S![j1E[DM*HW&IVE&='.ZB>M$C@!GjAeVXU#Spf("!hVf,%np1
%"m_M,Ri"Ltq>cf!e-cs(V%3h_+NgW0(A`.r'X:%U@AL`h6GMlop(GlI_->qjg\2HRqi\h'>SettSH]O[)IK4^6^,Z_d@2TVRdQ;C
%WIX@k_e)36:f/!RW4d\<NXs6RO(K3IB4r(@a`ju`l4\8@`Qjf3gnNa+$oZAXZ;4<3n_7nF]Wc16R'p^Lqh88XLZp/K/tm"&Jc(+W
%s1EMHTqTTsG)n887-6pIq5I0:oa]UI^1Jh\g0)`TKJHXJVeabTLJ)")/'=mXk6K&M;IR&eg2,iT;cMupo[FnJ[_?>d6mY@Kp3ha4
%9uk+DX!bJBGM_6n*5?uO.Ps$*q?e;lFF>^=j>E9*'^N,4[n;\UN3:c!Tr=+MHB53\=,G3$MN59:>l=Gs/jIb4]3jF^jlNc!`3D4U
%Ofnq[._OtM_l5m(\J[tIcRf0V<(.K6m5sKH'aob8_kRJL298q-&.bbaf.'>LhuO3ilH%RDR?FXGVM`P'&o^Ki""8XB?OMPuP1Bs7
%CX#n`ab?nH8<NruH#-Xb9\?(u\/1`RjD3<(_V#TN4/5q+TJr!dD&o-4hHoLc1I*E<S?s/q`kcaKm*8:?^u?D)\e]D)TsW$>`&Bq+
%"4)\RFIB722u0hgH]2dCP$Kb$c*W"1nS<"WRFtaKe@_Nh43t]U;?dTPkXj>u+FbGkFlhN?>AbZi$YB1gmRbcmXbFo[Hs%C<@OlNW
%5"lc9^6b[9)+#dsS'f5lX]jmDRH>m%o#i_8)93:BomV<kPouk5'@Ko-aN7F?`ipr/9W##lA6"Mjb_:LJQ2%J@JmhXpUqcIC[9AjA
%e!?#2LKV/EE0uoTK@c]7=I%CR(PdHAQ+1_5ca5,%kWlW2P^%eC;MIaLMS?%8e"jod1!SqS?(MgqXc?ggQF<i8%\&VL@JZ^"Rh?Me
%"`Z7G$X^0(`MDQNb1pSg<md5#eub/qbYgNm+F96ZBVn3)UhFj%(+%<I<eD%Z@Sr?,TYre5g("mN&e1./f/+nlW/e0`LHu6&Zg;4!
%!c>XD`LnIq]BYnqK+bk1o6rDBnQa4H:4!VE6JD$>-_e_Pb`g#;`7kbXU)j%Gd0B't[A+BoRAYg+Gr&\(81nplZ'ABCnjF:OnT,!c
%B.br#^0eFlnBRQ7aE6=1R<B7<]4-kWNscINo"<cZ/^I_LdD1Ii4C7(1I35r3nGe-!N$7#\>i`'$j5=3@)r]"0SrdY?jBYN"@F=p`
%$Sie"^="W4EP[TdOc/S;1Db='AeWi*4YJp(@G^DJY4"S<(E#k:]Q0//mWL0&)("aboV7Lh2[Wc8BA@7h7R-L@)bE.dCGuIL\R2qq
%cq?<X$^Y`NGItTSqbP4#::Y*(S[c`S4h/ScWqn4^3DhL"`'pP/Fljlh-bOD\-[PB5-SFu;&NANghliCG^\LEMn8"'Xh*<>?npKJM
%M`gmui$-MHHiMd876^SDqEb*7(E(.$Sh<X,$$;maE*Fb>^!jnlW.cQ)P!*lnqEG@!!:&6t3/"-hLU+'FcK'fQ6s<Y,&uXJJ`I1-K
%WKo%4U4.Se'H/m!kU-qcfd2PRK;1Jd2";QB<BOB(*m+PlNIqsFQ*HP>\_2t=i!e*\L?g&U52"0?;`#f'.M15!(hB$VL<1W^18&o"
%?-8.LB->$^H;KneQ$'AYp@1jWW/O5$?C/'j_qj0rWW&lnr`S_Y#MWm8OXcS=R$rV##;8\GVq>hJ1Hra:$(;/=.a7g>1\GE#5")5F
%+K`AXO&`]LH:"u50Fc&r"!q#VQDcEfB?up=h`+2;r&TS>[/Bi?rqnEuqn'W>qtK"HrBL5B=24_42ua3:T7Vsn4Ho2_p<B60cen]p
%msjqQhu)_GroIM"^]3oGs7hB,r<h0Uff/pC=8lk1B2Cf)!o#]CG=W$u16:?r@E=JW?`5-g>!]!W+<4p7Y1?D+'uX"4!*E"eQS)*S
%,0]W,XR\(6$D*5i^ui`6)ms3<6V!'$hm..GGR05.#V,)gPh3DC8UD.0b"m,[_`7QDK*G4$AIP9F=aL'-fod]:5T,]$ICI=QRK5>L
%f@/Z#JDX(Qdo:>^lX`u-BgQ-<hp!-hS]_Kb1AUkb=R8J15YX2V.f.5r6@=r-TI7[#V,2/\^!=7uhMkDS2iE_ApFcp)Rt=AB7m"ek
%?B\NcMSX'>Y]rZcNN>LHTg?k#Rf7:M7-]D1n.JX4XK<!R%PDPdbt<CedeR)QCN&&T`/oTaU&s40-ps7$C7HpZ)>kAW$]aPA27rsp
%7,6$>o_<OK]&29qqr!t;PKS]+Z`UqoSaP_PiB<q-U15_%KBGq<:7:9@s3!Bt+g!+;08$>^p`WW$q@ghMCl+d6#QLL<S&K"O`*O4Y
%S#,J_k*b9!1qt'_.hL</986@l6;G?kc3n0WK(KkF$fSd5l#aP\3rM%An`?-&QY$2>Hgo5uc^<Nd/^q"IhPHS3%G$RRQhB_@NEI9<
%UA34f`sSb7j][A>d?LHLDdJ@ebQ9);MQAYc>fQi#.&83dkN2k`)G;4k1ZM;#6Q=#!-l\0mP>MjR8[I,_+jl)&,KM`dDp=tH:2!#+
%DqBY3_ogL#HS-oj\G\FPM\I>BJl/#s1jK>cGop.FHFXNRBkkm>_(7,^AIkC-FG6+<V%S,W>Zb8[D_CEMs&%NLjCA!XF:,7P[<jFt
%mU0#pa,cE@N2Z8XM<rCufj*3<\I_L^"7Yf#$*cRl:IQ+^@$mh;ANd&(,!id7J81`qhU]47P@q4]BKu6XZk&)Er1e.)$-Z8%RsV^6
%3b?ue\h`9+lbFm1Sdt2>&E-%][BR2YA)UlscKb'K9'[:)Y_GN:0mH[r8g>gHiFo*I=K+P#p#SK!56XH-*)M`([#62HqN[fXF['D6
%6(.2!k@M2tEFE7K5Rp6t!QU=Z!uWls9&I9g)NHQ%,>b6V>eN"bB's5f5AhkJgQK=YX;C92.Qa4Y:olNKqZ<DtEY@GfjHp1U_8^qE
%2Lq<G=hbA6+bq6^If2#_SpW5sl8Y@$/lUebFK_%7MfMr9APsiKQO?OS>&X/jY3YCpOd_pS@SrEP(#iG>s#,W%[XG#[fG6HXV%&]`
%U[p+Or4).kPJcf9406*irI2=^s+!nr*lY=ZjWkOkPuA&7B@'S.E^*<H$l;U%PWl/fR,7J@+%T[*-78Lm8m0GP\Q=inKYBRt#_&_X
%pLUn:7`Q^5HQCK0bQFDQ475"6i;0=3g\:`WF6[4/b,@r&I%<NJY`BHR!#911nEmGd+BU!B't6#H5]B$n*(r!%Nsi5Qos!:h,(:kf
%33hfO`QPAK&hW:m2B_p>[V]>p]YM27j[FYSL[K1uXRIpF?9/\b\%_QEdak_tTqRf:*#BZEk^-$34S%9_<TNpr+0qWp\IT"[p7\Wn
%qJb6WqP%?_c<XVk6opd<$)7>K-9a]]PWR"?E3=5Y_3#&\?q&Qo__f8#J0p0#M9ekEchca/_#"!ln;Z;;hY3oUB0TW_lb6;9HN3hu
%IeZR]`a+\`lS?$hQFDR#(0(C$5,$+MK(ZJAfJq'<+.[fT(5F./lGH=e,@p.%,Esh:IXjGq,F*%B<GXpbrFU\lO[?iRlk6re6ap`*
%lrKXN9--ii`7j3&#U6T!Ts+Wu+.8sk<3?R&=1,fe&.YjQA31'j%@BC3Vb*&F#:Pj$geVQLe6R?kGb;+5qOAX"6%JSaf_4!NK\0Zd
%7r(:o#du\mHV@=2/rc;sdS0YbKS!qa]d*)<mgPXhM?X8UmnX$4+_Rfh:P!h';X!HBcd,<CW4fFG;C4W*X+NM"e0*AK0d_QJb4S_A
%a7,eQ+g!C%ZaN[5i!Y9*Q+R&&<A??2.5=nc'')t0#q/&A?L3S6,I9XhJu$Yb6<YQSZ@eQe*BdRt3.Q81AarPM`]s)@<XRIM_0SY/
%Q(Zf&3:%4;K))9>%NW&;?FtfXO7#;F;e.96F10;Dd"^Q'ossO+%6L.0O*#n=LT/IC]TC[Ts6WUHZAnBW_cSWq?()d3bR:"UU-6[`
%!rXY"IQ)j"5C*GqmRGRX=,`fmm0J"WkdE,mTj%!jg;3nS4Sn8b3%j:UCOM.*X=KXbp\9WRlgY^*fAfB)?2S87?/T'4fLZZ=ge9#Q
%1]9*Hm9%r-R5c@64VOWW$R=<jZrhfciHtLTKo\HO3'Rmc(o-^cEf.,WO+DZrnW2FM+=e?0TH(7BG?*hs"As<UM.2(8<$\=iFDGe1
%%$,F+Lbd/o"auJ'0/OFQ$6GsD`@.4;HSr`]ps=`QY%eT4`0L)/"iFguBae!uhJrlVa)QB]bM,3uqqu<DVim1\PN]4F(b#;l'7IL+
%p(-%kgD?(cBsr;s]0:RA<7_C]Ms.$F;V+bGk1=gg/@jMphR)CV+)!^]W>ms]=Z/8n95%9ZmfQk9Qm(<+5om*M6qcV!c<L&6qcqT+
%-c#>4&#a<em,Er/>,BhSW]^ofaTa\N/H0AB\ltWGmn"k0FtUBHVg*%0Pj6lrfpDM;SN=Dg=A<;Dh8fuAHYlt[Jp-q@`c%>9i?f./
%5ZoFViaN5P\]4'o#jb81RZl=Pn9gT-'qX1#_@>ZRSuZ%c\QXe-h[a#qNF0[R*pWOWp_k""cq+5u[Bcf#W2:AJlt.KYD/"_$"U]th
%FrhX,BgAL3$5;]7/[+`gE\M>a](NoAi6u1s'J0n_,EG&?c7)/hH<*8npE;mW&,%B_?$d*V@7WTUN0&+=2:M_0-`\lt6CBt!7;"jr
%=ZBR_FBjXump":&6pEdB-<9h?;\UL0M4en%BX;dg+kP/*Veei92;F3aem+WYFQ?qU-'T$R`@!4-j@&Qs;4RcM,gZRs@.^ZK=LB1u
%1]Ma4TL#iLXV-`D![,Wrn<`X/-_#_[%g-iigb^Yb`B6hZR.g&S\u.9EHQYr^/?i<$)`l<_>+ms`X&!\fU4H9K2CS/>Wan[@;rsmp
%Y.#R1K:g^-BQ:R&-\sm1j2-nI'Nj-)`_:(6n$J0G-0b#IFC)Hu\'*HQcJf`gs6ACM/W?fPFje+F)UD/>0TsT#8N2d^@5bsd=?Gq^
%n([EW_b%nm`O\+pR-^5:::^U4T"1MhD9LbT$f&DZj7`HO%@NR124[erh#\)$)WLg7Fj_kd?Cc2ZmL*YTh/c:u.-PWu9k87l9l.Dk
%N`utUgY,Y_PO<,=]^C#qEOY7lra\d8jjo?RDXBhPes8M,mqqI0`C[Q2iGd3cI:t"a"BO."d>,UAFQu6)M9^N/r(3eMe9+D+qJJ5F
%qR')0V)=$l%ci0'%^n@]&D"/!CN7cc%m6NLY>.,8nbEbu-f+X\%k$0BHLlI?T.ZZ4E:'a]:;,ojRnr[o?ZJ3l0$*L()3'3d8I)8D
%4$2[<pPft:*R\B6lD2%@M]Zufjin_CZq=K"r^1@/O;#6*%u=oX[_W6M+Y\(6d2,&VcNi&V7pefu$lLlG_ZNfD]o&+Ja$Zji9\I=j
%G>3=J]'"d:&Z)?k5+1M+d/!5-/H$7tb(;cg9`-&&BBQc+.1.stm`'3)YDUop"SkO<!M"!Q\L],L5C+k2#_IX\6]L?ro;C$7aXg]6
%IR;WZmLE7&mtNNAl%8+!H$:@RH7M;G4Ld)0mSgE'!Yf'FW<#ftS`8I!Jf'GiF:`BBfE'<."*;!Q.E=!GQ:EQ:!I%2XiO;ca!;*Y^
%URKU43#gIhTgaPP@c0hLl"85'#G6O`2)(8_k^i!uI(pdpWm2.rO^Wjs%g4uOc1TnIUCQ&d$Mp!_7jrEt-,I%K1Si.[O1qN3bb.`D
%Y9H^X9Ka.%5`+:Q@^P7\Hp/fa1pSEAS76/q=C>o/b1%X&=dEq@l\.Qo>n)6#9K07<R8j>>R7[\EhX'qEG)I#D]'c9gW<$^uV"]OQ
%9/M9W"6_ab^&7P.k;q*pT*NCkl0>#F#F-lc<n,l98W*$'iqVf*m3)dI+-!%eb<o]'-'B#$4fZiBP>),uN74UK\]?bCa^N"^;'6tR
%mHe@MPs"@U6aJ8`Q*jaH,+o&Rhm@pFikjQ+b&BJrf$q_u7[X`.4J<+6"PlcV>?8#3S!!K[SEWoD+9`j7F76.&%[Kc]M72jR?Pr^a
%k]8C?@t6J^i9.%S[cL@aK3>mt?e!I'%!_(*@7b'2%&8tT^cQN;ihPl.?D!f\=WnFk&;u526QtEn\3IL<![<7_0#=>L.A9-p`C<(j
%g\)t;je&k2<%%E(&ooE'AVCqp>_`?6D&d7l9np;T.P5UDl4,IDbWr=Wlj/E&oUl:(NToU/g6l"bAOL,d`N>(W3Z9+($$[-7F`Mf"
%\LLA@mR-)BiH'(U!IE&\.&_Z>Lg_m#,!aK#QH*AL*J:DEAp/<n,s7th=p^;/&HG83acMq@e1pGag-l#S+!-^+j2HT@9g`W&"gr7K
%Un$cYhUK9k1$CJ/Tt5*NAXQ3\iSBRg#YI*g=#d@^Gr3H1H[XM('&&3NNGfB5N;bCl23`]VEXXI.D3?Tr2S[&AWd4M#p?"^lCGt/q
%<7W9.R'VM#eS9q`.)#S9fLN-JpN8QHi&'"[Ed??c$OoOtiY]\l8T<!2<Wj2rU(*ct(Z!H/B49[Af8[$ek.*fZBT=QP0CHpm8NOUt
%X-V1PL87E@epA'r#&U>N]"@jdSub;?#HL*>7o%@\L>T,=lnY.jgh@)DjQ:m2QFb<eW6=Ms+]P<.fHA^S`m!jWR<%kCT]8\gf/CA-
%<!^>R[Vu"m[AIB+P%DYU`1HO69=$bW[`MGf`k1T+1S2'YU['r*I1CnnPaD;-IS#\[2h@872mNSNj^gq8=@,@_,+R1*6H(Uq0J9Zc
%_q;M&[4Nd980r3T7F[P@mE&j-d2bm.WU*C06*&F(A<e_jgsGstPoH'pNDC(EZ_FtTY-"1(lKL+$30`fuZkr0<FG9gZYR;7e=R"GH
%I0g5.1%7%aJ^+$r1i&LmlU<.^C-PQ\'!3G_n)2_kIf+FPq=,2Co&D7eA34AB!rC\SU$)c<MmJ@O*gkjs#k:1Xe6;V<<F0,*3/Ch`
%lc3(ofAfk\`3JXu(!!JtO$@eN9SX*75S5iuRoA8!C#%MQ`Q.?G*?qPr"n*9GZo8A6buU5t<Wjl*"4G7p\<rJ@Y:q?k9p?J#%jsma
%i9dHc_m9g_!n;YLPTS7>%ZmoSj,PdG+ZOtPoS^ndkjbDY7@n;@WFIOa*AD$0f)\`<O6>Vrir[ol:[s+dL1.JI49T)ElZ)4[j,[.:
%.0jr08tB0Ob+M*MK%4UEA3O)pYWr^>`Onsl$_QUb&LgE/R]\$Ca&eeL*^BWLAeV])@[&#<Sel/432T6aHItbe"-Mc0]Vj54?-up1
%>:'3s-TM^9k>lMcp+.$U(;_gE06?i,2j%1(C.WtkWc#_8!5iA4U"j.*C;_MjcJ6qUIXHh]m,+ZWk,R7E[l&A?En@&)D*cr=I8?ca
%RZ"-YWM/-Mc]9/d4c^>iaG9m^X=JuUVb>@,Hh_U4m9XmsBZu@2Zt47rMsbX$><j=Wrq=^rP4Q_#XJ!Up[t=P,;RBfJd+J#MmZY)c
%,h_%C&*0GX8gSSmm(&/eKO&m](*>ct=S,C]j)U[1H%LX5>>m\/gpqnVGF`V<"kPu0FlT8mG1O>8#=tY+d=!2uZ2G@AD[Q.%i/JUA
%0?5.2=;HP@-SqG)%2VUf.=5B'SKLBME2C2eg)p@/&+-gj6J<cGK$jt;[CUY'b+6WFF6!GnU)daCkK?3>+Pg%7p8@C>e_qmK7Pqkt
%*@$i8*X=ugEIg5/PV.6mO>XTQ[<C`7HMkC!<^#fNMU=rBL6s&*WHbVQkWIN>G;F3jVJnPB*(1c>4p3>kG+pg2'j]h>o2>SI4*Z.,
%mpPK)@Rl#mJ1Be?p%hcfm33Cam1ZeehGW0:/nCiN+Lm;Ir%*o4n?_o!c_Ht,$(]ucZ);p5^=R7Oh"CVCP^t>H^[`p\a=Vg5$d-.I
%Aj]?][bNht`a8-Z*#\b?Gj0)tN=C/bc,Yl3Ig'&hmgCr\(rZO-$\s_G;r7PoiUcj7%\IIN'_Ak]NA;K2q6`lI^%CjT[ccPFLNB!Q
%d`M=SK"bqeoZhl%TM2=r6#f.!>I7:CX4]/47MMl^YUY8NZ@X]f9cf=p]LtLINs"gYc[mnF-PN:IHp"1''JgnPd0R^>4uVmTJ=-D"
%)k>&d(^RtaFD#9#ALI9_a+=u@R_5`WEPsc]i('*U%H0=if]''pGjcqEYD/F%0&-#SVh)PC&aV!Ub\PqF%O-QXcO(Ln0ledU@Y(3(
%;b'qb*O)@#"e?HAMuEdPUPL9ZDf\2p\dqrSaOq3NJ_6U\c;s:7;k6jC')1T9q0CWdDda4n>6O5iSV<KA.)R!UVEfl6XTMu[BGLZO
%S!e)D3uC_H/:%e(h;q&XQ4kS;n([*DA6iKZqj9+\m8^S$K(itt_\*8uS8Tp@!7:='L*-uBfTGtEe)p6M*S^S%<>GeVV-kBgauU6M
%DTOY8<2^`Aa/k&\.RK7Ja4tWI&@7H0%dB;nIp5\Gop:Qa*S30HZ]eB:-WHQTbpH)"Sg9!Wf&*Aq@^Mrt5&ZjhNcT@NF.""R\rh[I
%UYe6B;M2#"F%#\@<(*4j"Jr4=eS,^!"u9!U]fK]`ifJ_dCC@$JTrQfN,8p,D<nu&p"mL)h;n7Q!nFGB$P\u&e-4HLO]L7E@C.II[
%q,8qcc]R!TQa>r/"^+k7=o'S$EMi=Y@(d1R1a##-<59@kGt9@IS5S\bUb8I0B%7$XRh-dIgkat^&Ooh,Ep,-NL>$X?iTX]KHA]f%
%bBC#/R>LJO']^$MNLj-Ui$?mVR-3EEFF5[6l08gR[gp6]3Wsqg\(Do2!:ZJ$bT;/#Nn9#IB0k(.%<_/:\:hh45bu?jl<mDl1]u$"
%PZq78M\UPs+g#Rp$MJ,TG(>_q\3LF[E'X`bE4MN"M9BB>l=/MLkq^'j_aqW]pKF6OTaNnb\(ki7_t@R_[pALD;A])sS4)T5!nhsa
%N%d1h,B&fDM/VIp2qtKh>rKgI=BrX-12QH0LdO:lLeDe*b$me:2E=IoKsb%8ADV3T%fYAf%\DX"\%tO=Hg+oi0'sVAneU8/f=-/e
%D=P0&<fYGfUrQZ:Y"ODG=9_V7!ee8$G25Ja>l.:W_R8]'5[:qh?n/<b2_J@H:3Tp(L#KI`SXFH[Xs76?gi\6NGO@MdCY/B*2fJSB
%@Omc-_Ta]*U#@]**h6Ksb&_9ASa-MTZ/JYjb>$o9?bc_Y5LlDU2QY4D=/S@+6eeF$5DaaQQTf)?2sAM5I=JhIG/1MTmecUYj)7--
%+8V"mJN(sEIA%8SrPfT2L`41Z0,9t+#]8fk[Vo5ab1Y1on+"(UmA5=Ce6_g0#")>T`I_.c[klhG'ip^]1B[S"e=V#ZQ$(<j0o+U5
%5h.1t,f,(9%\l'Tqe(09iZ6tXh*"H!<PU\6`VpB/h!s0#ie"h8)EuNW1Rb."roK(_qhX,O!`ReG2k2fAjHpqPJNWSId2qXo=af"s
%D*O-Nol^t53\H%0b@_)QKJ/-uc$+;\_!L'!?VY"X\E3\`Ojh?Y,2495%\P(>*o!0Jbmp%"`-X6(.0u-Cip\*5m""lc9pp7LL"HXA
%O&5IC*!h-=<=YB">X$-0XNq!eX6j&Qrl`oIG.Y%\0a>.00$pa7-JE[:Q)f2\*=jttM19fl*2g+t"*n7C]ajuIN`kr7"<n(m__^uu
%91@>=_PJ"1UDhS_YucS=NXtc?QI-m<D>npNTAq*H.JnQ*OoKZaiT@an$+Liq2oFi7hB!a5Y64AWH=$pQ@iaW?3kV$!3GYcRlZE8X
%1/D8To64@D?>'6(ddXPs4?d+j?C.NJFin8%]3XW,<lECZkLFY/nTC85=c>#7p:9.[(&ftq?I1\:Das#'895BQ%"D$MRsB%F9WrO*
%n`fCfS]>ZH7HKp*2ljf,q08EqO0R3IS^Ftph5jkb/)9<'iTmLh!pAQhZN=L3m,N7504Ei4?h6"sp[3nT'?(?h"jfc`$ZK;*-Woe;
%pD$@XoNXj-L"VYhIr6XT?-]@$f?a&37\c+eQ\Q^-os20lA),CB&+FE>f27$J7Ed6/)DcNo_0TDCgG.oYWR-Ykhab)Gj6+,"R5H%k
%5g-Ard'_]Qe6Yu\c>?"BVcGg?fjPS/"'"A5K.jqQYM<Ed6Nn(kAoFp72j`a%CGGYJVCn13$;Z1=*J#r'ojN]PT0pm?KV#P4Pgak:
%(<ggCRH'jidBoQQLL8EH%"9C;o;H5#EC0Onm\o`BMlWTa7E?Rt@#1]'^6."6AaDDY]ihc"(D+:Cm40XpYoqob*pVhXIe\'f6!)F!
%_3httKh_M;-R#08.2%HVOf,%4%?gcF@8GXJldnSaEP#3*qhs>1nn3ICo=t((j_t.p2uidB=24e.Dh%;8-h-a-ri<g2p&FmUYQ"OE
%YCHGU5P_p@qUP>TroR:sq$fa[If5>RJ,8<rIf&G\qV=C6p=J4"e,T6!rsJroRQpTCci<jVrKj/Tao;G]SapO~>
%AI9_PrivateDataEnd
