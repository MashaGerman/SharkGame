%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: YouFailed.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Daniel
%%CreationDate: 5/22/2017
%%BoundingBox: 0 0 439 430
%%HiResBoundingBox: 0 0 438.3985 429.7544
%%CropBox: 0 0 438.3985 429.7544
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">YouFailed</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2017-05-22T17:28:04+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-05-22T17:28:05+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-05-22T17:28:05+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqtlljij&#xA;eWVxHFGCzuxAVVAqSSegGKgPMdQ/5yK/L+3uJLezS+1R0JAa0gBVj02Mrxmle9MoOoiHPh2blPcE&#xA;ql/5yHupWI03yffXA7NPJ6A+8Ryj8crOri5Uexpnr9iBm/Ov8zZyRZ+V7S3B6G4mL0270eInfwys&#xA;60ORHsI9b+wISb8yfzquT8H6Ksq/yRu1K/65m6ZA65yIdhDr9/6kLJ5l/Oe4H73zPDAOvCC2hoCP&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:AD7643EA023FE711860BF351378AC283</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:AD7643EA023FE711860BF351378AC283</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:c077f9d0-3e7c-4fd6-8334-d6a39a777361</stRef:instanceID>
            <stRef:documentID>xmp.did:8ACF4BEDC83EE711B776D525864049CD</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:52793BD7478DE311B8EFE231608A569F</stEvt:instanceID>
                  <stEvt:when>2014-02-04T03:55:44+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9a9d8186-f7e5-2841-93c0-3f761fcf5a16</stEvt:instanceID>
                  <stEvt:when>2014-04-22T12:20:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3C711F08A53DE711A0BF9955A1B623D4</stEvt:instanceID>
                  <stEvt:when>2017-05-20T23:41:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:42A60208C53EE711880B9C849F66AC23</stEvt:instanceID>
                  <stEvt:when>2017-05-22T10:25:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:88CF4BEDC83EE711B776D525864049CD</stEvt:instanceID>
                  <stEvt:when>2017-05-22T10:30:35+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:89CF4BEDC83EE711B776D525864049CD</stEvt:instanceID>
                  <stEvt:when>2017-05-22T11:08:14+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8ACF4BEDC83EE711B776D525864049CD</stEvt:instanceID>
                  <stEvt:when>2017-05-22T11:09:15+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AD7643EA023FE711860BF351378AC283</stEvt:instanceID>
                  <stEvt:when>2017-05-22T17:28:05+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>440.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Standard-Farbfeldgruppe</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Weiß</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Schwarz</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Rot</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Gelb</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Grün</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blau</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -429.754 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 429.754 li
438.398 429.754 li
438.398 0 li
cp
clp
[1 0 0 1 0 0 ]ct
419.299 44.2983 mo
296.6 37.1714 174.895 36.5581 52.1836 42.4722 cv
54.9297 45.6851 61.3789 54.1362 61.3789 54.1362 cv
51.4395 64.9673 li
56.8223 76.0659 li
43.4326 79.7651 li
42.0801 93.6304 li
28.3467 91.0894 li
21.3076 103.738 li
21.3076 103.738 12.8525 97.0698 8.60645 94.7603 cv
8.8291 97.8667 9.0459 100.972 9.25684 104.079 cv
14.7939 205.767 13.833 307.457 6.37598 409.144 cv
5.80371 416.857 11.5791 423.529 19.3076 423.982 cv
152.641 431.681 285.975 431.677 419.307 423.974 cv
427.035 423.521 432.813 416.849 432.238 409.136 cv
423.678 292.47 423.674 175.802 432.23 59.1353 cv
432.803 51.4233 427.025 44.7505 419.299 44.2983 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.478431 .164706 .129412 rgb
f
428.535 59.1353 mo
428.951 53.6392 424.813 48.8589 419.307 48.5327 cv
299.184 41.478 179.059 40.8022 58.9355 46.4585 cv
66.9756 53.9683 li
55.8105 64.397 li
61.3555 78.6353 li
46.7607 83.1665 li
45.5791 98.4019 li
30.4619 96.1753 li
22.7881 109.388 li
12.9482 102.707 li
18.7139 204.849 17.7588 306.994 10.0811 409.136 cv
9.66504 414.632 13.8037 419.412 19.3076 419.738 cv
152.641 427.57 285.975 427.57 419.307 419.738 cv
424.811 419.412 428.951 414.632 428.535 409.136 cv
419.766 292.47 419.766 175.802 428.535 59.1353 cv
cp
.929412 .929412 .929412 rgb
f
57.3945 68.4644 mo
61.5264 65.3169 66.0146 62.5767 70.8887 60.3521 cv
102.814 45.7847 142.608 47.3765 176.968 46.0776 cv
215.924 44.605 255.867 45.3823 294.372 49.9468 cv
323.754 53.4312 353.11 56.9761 381.726 64.5796 cv
398.551 69.0503 412.342 77.6323 420.182 93.231 cv
422.249 97.3442 424.001 101.582 425.501 105.916 cv
426.36 90.3218 427.363 74.728 428.535 59.1353 cv
428.951 53.6392 424.813 48.8589 419.307 48.5327 cv
299.184 41.478 179.059 40.8022 58.9355 46.4585 cv
66.9756 53.9683 li
55.8105 64.397 li
57.3945 68.4644 li
cp
.819608 .819608 .819608 rgb
f
19.3076 419.738 mo
22.9102 419.95 26.5127 420.132 30.1152 420.333 cv
30.6162 413.677 30.9619 407.22 31.2627 401.17 cv
32.71 372 32.7813 342.291 32.8145 313.092 cv
32.8574 275.447 22.1709 238.933 19.166 201.735 cv
16.9072 173.763 15.5176 147.968 23.7793 120.775 cv
26.292 112.504 29.6113 104.325 33.8125 96.6694 cv
30.4619 96.1753 li
22.7881 109.388 li
12.9482 102.707 li
18.7139 204.849 17.7588 306.994 10.0811 409.136 cv
9.66504 414.632 13.8037 419.412 19.3076 419.738 cv
cp
f
423.906 328.829 mo
419.694 349.94 414.261 370.767 408.12 391.568 cv
405.218 401.399 402.19 411.144 399.092 420.851 cv
405.83 420.496 412.568 420.133 419.307 419.738 cv
424.811 419.412 428.951 414.632 428.535 409.136 cv
426.522 382.367 424.995 355.598 423.906 328.829 cv
cp
f
24.6357 113.389 mo
24.6357 113.398 24.6299 113.408 24.6123 113.414 cv
22.2627 112.702 20.0479 111.464 17.6699 110.75 cv
20.0986 112.801 22.7393 114.6 25.5371 116.109 cv
27.335 112.556 28.7559 108.792 29.6699 104.916 cv
27.7041 107.547 26.0146 110.38 24.6279 113.366 cv
24.6338 113.373 24.6348 113.378 24.6357 113.389 cv
cp
1 1 1 rgb
f
49.3066 101.212 mo
48.8887 100.947 41.9766 101.521 40.6699 101.75 cv
44.1025 102.748 47.6709 103.296 51.2461 103.375 cv
51.2197 100.552 50.8574 97.7378 50.1699 94.9995 cv
49.7207 97.0513 49.7158 99.1772 49.3066 101.212 cv
cp
f
65.7744 81.7026 mo
65.4541 82.5815 59.2148 83.6821 58.5029 83.9155 cv
61.7598 83.9038 65.0166 83.6401 68.2314 83.1284 cv
66.585 77.8335 64.459 72.6733 61.7529 67.8315 cv
62.5176 71.9985 63.0664 78.3315 65.7744 81.7026 cv
cp
f
75.4932 55.1909 mo
73.1084 53.2153 70.4785 51.5542 67.6699 50.2495 cv
68.1514 50.8687 72.1133 54.3999 72.04 54.9487 cv
72.0391 54.9565 72.0361 54.9614 72.0332 54.9653 cv
72.0264 54.9712 72.0176 54.9741 72.0088 54.9741 cv
72.0146 54.9771 72.0186 54.9819 72.0186 54.9878 cv
70.0322 56.2983 68.1807 57.812 66.5029 59.4995 cv
69.6768 58.4663 72.7002 57.0181 75.4932 55.1909 cv
cp
f
61.0557 414.318 mo
65.7275 408.875 68.3594 406.886 67.5869 401.166 cv
66.3369 391.916 56.2676 399 50.9297 390.167 cv
45.9072 381.857 59.2988 380.822 61.6855 375.824 cv
64.3818 370.175 55.5166 361.949 50.0508 363.8 cv
49.9697 363.994 49.96 364.191 50.0215 364.394 cv
48.6689 365.761 48.9355 368.669 46.8535 369.701 cv
45.5088 370.365 43.2578 369.638 42.0029 369.166 cv
37.8965 367.621 37.2705 364.535 38.6699 360.667 cv
42.7129 349.505 61.8135 349.791 51.0938 335.595 cv
47.2686 330.527 42.2451 327.988 35.9346 328.4 cv
28.96 328.855 23.7344 331.818 23.6689 338.89 cv
23.6182 344.455 25.6318 353.007 19.083 355.439 cv
17.3057 356.099 15.3828 356.173 13.4648 355.806 cv
12.5361 373.583 11.417 391.359 10.0811 409.136 cv
9.66504 414.632 13.8037 419.412 19.3076 419.738 cv
33.4619 420.57 47.6162 421.292 61.7705 421.949 cv
59.5508 419.507 58.791 416.957 61.0557 414.318 cv
cp
1 .717647 .388235 rgb
f
422.896 300.201 mo
420.461 298.056 417.832 296.63 413.662 296.066 cv
408.498 295.367 405.043 296.027 403.086 299.166 cv
401.229 302.148 400.334 307.632 406.352 310.484 cv
413.457 313.849 412.598 319.972 407.326 325.359 cv
404.463 328.287 398.77 327.232 394.904 327.833 cv
391.891 328.3 388.211 329.292 385.939 331.324 cv
381.09 335.662 379.357 343.146 384.986 347.425 cv
387.396 349.257 392.795 349.636 395.215 348.748 cv
398.906 347.39 405.84 340.855 410.938 348.099 cv
412.717 350.626 413.615 353.173 413.336 356.408 cv
412.668 364.171 405.52 364.951 399.338 367.49 cv
392.563 370.273 390.506 380.484 394.762 386.416 cv
399.287 392.716 407.5 387.953 412.412 391.726 cv
416.945 395.208 414.666 398.736 411.912 402.505 cv
407.283 408.845 415.506 411.552 420.961 413.837 cv
422.77 414.595 424.689 415.224 426.664 415.71 cv
428 413.88 428.721 411.58 428.535 409.136 cv
425.805 372.824 423.928 336.511 422.896 300.201 cv
cp
f
384.553 357.625 mo
384.135 359.873 385.9 362.085 388.498 362.568 cv
391.094 363.05 393.537 361.619 393.955 359.373 cv
394.371 357.126 392.605 354.914 390.01 354.431 cv
387.412 353.949 384.969 355.378 384.553 357.625 cv
cp
f
399.398 280.681 mo
398.561 285.199 401.152 289.468 405.191 290.22 cv
409.23 290.97 413.186 287.916 414.025 283.4 cv
414.863 278.884 412.271 274.613 408.23 273.863 cv
404.193 273.113 400.238 276.166 399.398 280.681 cv
cp
f
376.166 134.575 mo
370.072 122.451 359.354 115.782 346.277 112.307 cv
324.038 106.398 301.222 103.642 278.387 100.935 cv
248.461 97.3862 217.417 96.7827 187.141 97.9272 cv
160.437 98.937 129.509 97.6997 104.696 109.021 cv
85.5723 117.749 73.9834 136.558 68.083 155.982 cv
61.6621 177.117 62.7412 197.165 64.4971 218.904 cv
66.833 247.814 75.1387 276.193 75.1055 305.451 cv
75.0791 328.143 75.0234 351.233 73.8984 373.905 cv
73.1709 388.563 72.1152 406.279 68.0518 422.248 cv
161.562 426.402 255.071 426.695 348.58 423.145 cv
354.919 404.327 361.142 385.582 366.792 366.442 cv
373.755 342.851 379.553 319.218 382.93 294.918 cv
385.243 278.264 384.138 260.314 384.301 243.521 cv
384.642 208.276 392.316 166.71 376.166 134.575 cv
cp
.94902 .94902 .94902 rgb
f
24.2666 313.992 mo
23.6396 317.371 25.958 320.636 29.4502 321.285 cv
32.9404 321.933 36.2783 319.72 36.9072 316.341 cv
37.5342 312.962 35.2148 309.695 31.7236 309.046 cv
28.2334 308.398 24.8945 310.613 24.2666 313.992 cv
cp
1 .717647 .388235 rgb
f
379.307 311.136 mo
379.307 316.636 374.807 321.136 369.307 321.136 cv
69.3076 321.136 li
63.8086 321.136 59.3086 316.636 59.3086 311.136 cv
59.3086 241.135 li
59.3086 235.635 63.8086 231.135 69.3076 231.135 cv
369.307 231.135 li
374.807 231.135 379.307 235.635 379.307 241.135 cv
379.307 311.136 li
cp
1 1 1 rgb
f
89.2217 252.809 mo
89.5308 248.964 li
101.457 248.964 li
101.821 252.809 li
97.9209 252.809 li
97.9209 269.365 li
93.3188 269.365 li
93.3188 252.809 li
89.2217 252.809 li
cp
.478431 .164706 .129412 rgb
f
103.585 248.964 mo
108.16 248.964 li
108.16 269.365 li
103.585 269.365 li
103.585 248.964 li
cp
f
118.063 268.383 mo
114.92 259.572 li
114.92 269.365 li
110.487 269.365 li
110.487 248.964 li
115.173 248.964 li
118.063 258.14 li
120.925 248.964 li
125.611 248.964 li
125.611 269.365 li
121.178 269.365 li
121.178 259.572 li
118.063 268.383 li
cp
f
127.852 269.365 mo
127.852 248.964 li
137.055 248.964 li
137.055 252.809 li
132.341 252.809 li
132.341 257.271 li
136.831 257.271 li
136.831 260.919 li
132.341 260.919 li
132.341 265.38 li
137.055 265.38 li
137.055 269.365 li
127.852 269.365 li
cp
f
89.7832 279.632 mo
99.2959 279.632 li
99.2959 283.476 li
94.2446 283.476 li
94.2446 287.938 li
99.0713 287.938 li
99.0713 291.585 li
94.2446 291.585 li
94.2446 300.033 li
89.7832 300.033 li
89.7832 279.632 li
cp
f
101.201 279.632 mo
105.775 279.632 li
105.775 300.033 li
101.201 300.033 li
101.201 279.632 li
cp
f
108.944 294.644 mo
110.319 297.03 114.247 298.041 114.696 295.542 cv
114.865 294.449 114.444 293.326 113.49 292.652 cv
111.609 291.361 108.944 291.53 107.934 288.696 cv
107.232 286.732 107.597 284.066 108.13 282.916 cv
109.14 280.642 111.301 278.958 114.836 279.099 cv
115.734 279.126 117.25 279.519 118.12 280.25 cv
117.474 285.497 li
116.745 283.953 115.707 283.504 114.78 283.476 cv
113.181 283.476 112.199 284.515 112.086 286.058 cv
111.974 287.517 112.676 288.247 113.995 288.808 cv
116.773 289.958 118.821 290.66 119.214 294.308 cv
119.354 295.767 119.018 297.338 118.372 298.32 cv
117.306 299.949 115.342 300.425 113.574 300.425 cv
111.862 300.425 109.786 299.919 108.663 299.162 cv
108.944 294.644 li
cp
f
120.81 279.632 mo
125.355 279.632 li
125.355 287.798 li
129.06 287.798 li
129.06 279.632 li
133.605 279.632 li
133.605 300.033 li
129.06 300.033 li
129.06 291.446 li
125.355 291.446 li
125.355 300.033 li
120.81 300.033 li
120.81 279.632 li
cp
f
141.317 300.033 mo
141.317 279.632 li
150.521 279.632 li
150.521 283.476 li
145.807 283.476 li
145.807 287.938 li
150.296 287.938 li
150.296 291.585 li
145.807 291.585 li
145.807 296.047 li
150.521 296.047 li
150.521 300.033 li
141.317 300.033 li
cp
f
158.655 283.504 mo
157.533 292.456 li
160.535 292.456 li
159.357 283.504 li
158.655 283.504 li
cp
156.972 296.16 mo
156.551 300.033 li
151.78 300.033 li
155.4 279.632 li
162.528 279.632 li
166.147 300.033 li
161.518 300.033 li
161.041 296.16 li
156.972 296.16 li
cp
f
165.217 283.476 mo
165.526 279.632 li
177.452 279.632 li
177.817 283.476 li
173.917 283.476 li
173.917 300.033 li
169.314 300.033 li
169.314 283.476 li
165.217 283.476 li
cp
f
179.497 300.033 mo
179.497 279.632 li
188.701 279.632 li
188.701 283.476 li
183.987 283.476 li
183.987 287.938 li
188.477 287.938 li
188.477 291.585 li
183.987 291.585 li
183.987 296.047 li
188.701 296.047 li
188.701 300.033 li
179.497 300.033 li
cp
f
190.522 300.033 mo
190.522 279.632 li
194.31 279.632 li
198.604 289.65 li
198.604 279.632 li
202.925 279.632 li
202.925 300.033 li
199.333 300.033 li
194.899 290.042 li
194.899 300.033 li
190.522 300.033 li
cp
f
304.141 248.964 mo
315.674 248.964 li
315.674 251.967 li
309.416 269.365 li
304.562 269.365 li
310.65 253.23 li
310.65 252.809 li
304.141 252.809 li
304.141 248.964 li
cp
f
316.008 267.373 mo
316.008 265.998 317.102 264.875 318.449 264.875 cv
319.824 264.875 320.946 265.998 320.946 267.373 cv
320.946 268.748 319.824 269.842 318.449 269.842 cv
317.102 269.842 316.008 268.748 316.008 267.373 cv
cp
316.008 257.355 mo
316.008 255.98 317.102 254.886 318.449 254.886 cv
319.824 254.886 320.946 255.98 320.946 257.355 cv
320.946 258.73 319.824 259.853 318.449 259.853 cv
317.102 259.853 316.008 258.73 316.008 257.355 cv
cp
f
321.702 250.873 mo
323.302 249.386 325.547 248.375 328.269 248.404 cv
334.049 248.46 335.34 252.641 333.965 257.664 cv
333.15 260.667 331.242 263.136 329.363 265.38 cv
334.189 265.38 li
334.189 269.365 li
322.797 269.365 li
322.797 266.195 li
324.059 265.072 325.294 263.894 326.305 262.575 cv
327.314 261.255 328.998 259.207 329.672 257.075 cv
330.316 254.998 330.121 252.248 327.174 252.585 cv
325.658 252.753 324.48 253.904 324.088 255.306 cv
321.702 250.873 li
cp
f
342.042 248.431 mo
344.091 248.431 346.447 249.273 347.262 251.49 cv
348.244 254.184 347.514 257.552 344.904 258.673 cv
347.009 259.263 348.104 261.48 348.104 263.669 cv
348.104 265.464 347.627 266.98 346.7 267.962 cv
345.438 269.281 343.417 269.73 341.369 269.758 cv
339.348 269.758 337.244 269.197 335.841 268.13 cv
336.543 263.921 li
337.412 265.184 339.039 266.054 340.611 266.054 cv
342.211 266.054 343.558 265.296 343.502 263.472 cv
343.417 261.2 342.042 260.75 339.741 260.75 cv
337.693 260.75 li
337.693 257.383 li
338.787 257.383 li
340.667 257.383 343.193 256.906 343.249 254.548 cv
343.277 253.034 342.295 252.361 340.863 252.361 cv
339.433 252.361 337.833 253.203 336.991 254.184 cv
336.149 249.835 li
337.861 248.825 339.966 248.431 342.042 248.431 cv
cp
f
314.24 279.632 mo
318.422 279.632 li
318.422 300.033 li
313.764 300.033 li
313.764 283.476 li
311.743 283.476 li
314.24 279.632 li
cp
f
319.963 281.541 mo
321.563 280.052 323.807 279.042 326.529 279.071 cv
332.31 279.126 333.601 283.308 332.226 288.332 cv
331.412 291.333 329.504 293.802 327.623 296.047 cv
332.45 296.047 li
332.45 300.033 li
321.057 300.033 li
321.057 296.861 li
322.32 295.739 323.555 294.56 324.564 293.242 cv
325.575 291.923 327.259 289.875 327.932 287.742 cv
328.578 285.666 328.381 282.916 325.435 283.251 cv
323.92 283.419 322.74 284.571 322.348 285.974 cv
319.963 281.541 li
cp
f
343.361 285.609 mo
343.39 284.177 342.632 282.943 341.033 282.943 cv
339.489 282.943 338.703 284.207 338.731 285.637 cv
338.76 286.732 339.518 288.078 341.033 288.078 cv
342.604 288.078 343.334 286.675 343.361 285.609 cv
cp
343.586 293.943 mo
343.643 291.754 342.408 290.884 341.033 290.884 cv
339.714 290.884 338.479 291.754 338.507 293.943 cv
338.592 295.739 339.602 296.75 341.033 296.75 cv
342.52 296.75 343.529 295.739 343.586 293.943 cv
cp
334.242 295.794 mo
333.85 293.298 334.354 290.408 336.936 289.453 cv
335.195 288.471 334.747 286.759 334.775 284.851 cv
334.859 281.148 337.272 279.071 341.033 279.099 cv
344.849 279.071 347.262 281.148 347.346 284.851 cv
347.375 286.759 347.037 288.471 345.242 289.453 cv
347.852 290.408 348.271 293.298 347.879 295.794 cv
347.43 298.938 344.625 300.425 341.033 300.425 cv
337.496 300.425 334.691 298.938 334.242 295.794 cv
cp
f
328.632 332.211 mo
308.232 332.211 291.639 348.806 291.639 369.205 cv
291.639 389.605 308.232 406.201 328.632 406.201 cv
349.03 406.201 365.625 389.605 365.625 369.205 cv
365.625 348.806 349.03 332.211 328.632 332.211 cv
328.632 332.211 li
cp
.819608 .819608 .819608 rgb
f
328.889 327.074 mo
308.49 327.074 291.895 343.669 291.895 364.068 cv
291.895 384.466 308.49 401.061 328.889 401.061 cv
349.288 401.061 365.883 384.466 365.883 364.068 cv
365.883 343.669 349.288 327.074 328.889 327.074 cv
328.889 327.074 li
cp
.478431 .164706 .129412 rgb
f
361.772 363.04 mo
361.772 381.202 347.049 395.923 328.889 395.923 cv
310.729 395.923 296.006 381.202 296.006 363.04 cv
296.006 344.878 310.729 330.155 328.889 330.155 cv
347.049 330.155 361.772 344.878 361.772 363.04 cv
cp
.94902 .6 .0784314 rgb
f
361.772 360.342 mo
361.772 377.155 347.049 390.787 328.889 390.787 cv
310.729 390.787 296.006 377.155 296.006 360.342 cv
296.006 343.527 310.729 329.897 328.889 329.897 cv
347.049 329.897 361.772 343.527 361.772 360.342 cv
cp
.956863 .729412 .168627 rgb
f
328.889 336.061 mo
345.924 336.061 358.539 358.074 358.539 358.074 cv
360.226 361.016 361.68 362.505 361.772 361.381 cv
361.772 361.381 361.772 361.381 361.772 360.342 cv
361.772 343.527 347.049 329.897 328.889 329.897 cv
310.729 329.897 296.006 343.527 296.006 360.342 cv
296.006 361.381 296.006 361.381 296.006 361.381 cv
296.098 362.505 297.551 361.016 299.238 358.074 cv
299.238 358.074 311.852 336.061 328.889 336.061 cv
cp
1 .823529 .25098 rgb
f
347.385 366.548 mo
347.385 365.983 346.922 365.521 346.357 365.521 cv
340.191 365.521 li
339.627 365.521 339.164 365.983 339.164 366.548 cv
339.164 372.714 li
339.164 373.279 339.627 373.741 340.191 373.741 cv
346.357 373.741 li
346.922 373.741 347.385 373.279 347.385 372.714 cv
347.385 366.548 li
cp
332.999 366.548 mo
332.999 365.983 332.537 365.521 331.971 365.521 cv
325.805 365.521 li
325.24 365.521 324.777 365.983 324.777 366.548 cv
324.777 372.714 li
324.777 373.279 325.24 373.741 325.805 373.741 cv
331.971 373.741 li
332.537 373.741 332.999 373.279 332.999 372.714 cv
332.999 366.548 li
cp
318.611 366.548 mo
318.611 365.983 318.148 365.521 317.585 365.521 cv
311.42 365.521 li
310.854 365.521 310.391 365.983 310.391 366.548 cv
310.391 372.714 li
310.391 373.279 310.854 373.741 311.42 373.741 cv
317.585 373.741 li
318.148 373.741 318.611 373.279 318.611 372.714 cv
318.611 366.548 li
cp
347.385 350.107 mo
347.385 349.542 346.922 349.08 346.357 349.08 cv
340.191 349.08 li
339.627 349.08 339.164 349.542 339.164 350.107 cv
339.164 356.272 li
339.164 356.837 339.627 357.3 340.191 357.3 cv
346.357 357.3 li
346.922 357.3 347.385 356.837 347.385 356.272 cv
347.385 350.107 li
cp
332.999 350.107 mo
332.999 349.542 332.537 349.08 331.971 349.08 cv
325.805 349.08 li
325.24 349.08 324.777 349.542 324.777 350.107 cv
324.777 356.272 li
324.777 356.837 325.24 357.3 325.805 357.3 cv
331.971 357.3 li
332.537 357.3 332.999 356.837 332.999 356.272 cv
332.999 350.107 li
cp
318.611 350.107 mo
318.611 349.542 318.148 349.08 317.585 349.08 cv
311.42 349.08 li
310.854 349.08 310.391 349.542 310.391 350.107 cv
310.391 356.272 li
310.391 356.837 310.854 357.3 311.42 357.3 cv
317.585 357.3 li
318.148 357.3 318.611 356.837 318.611 356.272 cv
318.611 350.107 li
cp
1 1 1 rgb
f
317.585 363.464 mo
311.42 363.464 li
309.719 363.464 308.335 364.849 308.335 366.548 cv
308.335 372.714 li
308.335 374.415 309.719 375.797 311.42 375.797 cv
317.585 375.797 li
319.285 375.797 320.668 374.415 320.668 372.714 cv
320.668 366.548 li
320.668 364.849 319.285 363.464 317.585 363.464 cv
317.585 363.464 li
cp
331.971 363.464 mo
325.805 363.464 li
324.105 363.464 322.723 364.849 322.723 366.548 cv
322.723 372.714 li
322.723 374.415 324.105 375.797 325.805 375.797 cv
331.971 375.797 li
333.671 375.797 335.054 374.415 335.054 372.714 cv
335.054 366.548 li
335.054 364.849 333.671 363.464 331.971 363.464 cv
331.971 363.464 li
cp
346.357 363.464 mo
340.191 363.464 li
338.491 363.464 337.109 364.849 337.109 366.548 cv
337.109 372.714 li
337.109 374.415 338.491 375.797 340.191 375.797 cv
346.357 375.797 li
348.057 375.797 349.439 374.415 349.439 372.714 cv
349.439 366.548 li
349.439 364.849 348.057 363.464 346.357 363.464 cv
346.357 363.464 li
cp
317.585 347.024 mo
311.42 347.024 li
309.719 347.024 308.335 348.407 308.335 350.107 cv
308.335 356.272 li
308.335 357.972 309.719 359.355 311.42 359.355 cv
317.585 359.355 li
319.285 359.355 320.668 357.972 320.668 356.272 cv
320.668 350.107 li
320.668 348.407 319.285 347.024 317.585 347.024 cv
317.585 347.024 li
cp
331.971 347.024 mo
325.805 347.024 li
324.105 347.024 322.723 348.407 322.723 350.107 cv
322.723 356.272 li
322.723 357.972 324.105 359.355 325.805 359.355 cv
331.971 359.355 li
333.671 359.355 335.054 357.972 335.054 356.272 cv
335.054 350.107 li
335.054 348.407 333.671 347.024 331.971 347.024 cv
331.971 347.024 li
cp
346.357 347.024 mo
340.191 347.024 li
338.491 347.024 337.109 348.407 337.109 350.107 cv
337.109 356.272 li
337.109 357.972 338.491 359.355 340.191 359.355 cv
346.357 359.355 li
348.057 359.355 349.439 357.972 349.439 356.272 cv
349.439 350.107 li
349.439 348.407 348.057 347.024 346.357 347.024 cv
346.357 347.024 li
cp
317.585 365.521 mo
318.148 365.521 318.611 365.983 318.611 366.548 cv
318.611 372.714 li
318.611 373.279 318.148 373.741 317.585 373.741 cv
311.42 373.741 li
310.854 373.741 310.391 373.279 310.391 372.714 cv
310.391 366.548 li
310.391 365.983 310.854 365.521 311.42 365.521 cv
317.585 365.521 li
317.585 365.521 li
cp
331.971 365.521 mo
332.537 365.521 332.999 365.983 332.999 366.548 cv
332.999 372.714 li
332.999 373.279 332.537 373.741 331.971 373.741 cv
325.805 373.741 li
325.24 373.741 324.777 373.279 324.777 372.714 cv
324.777 366.548 li
324.777 365.983 325.24 365.521 325.805 365.521 cv
331.971 365.521 li
331.971 365.521 li
cp
346.357 365.521 mo
346.922 365.521 347.385 365.983 347.385 366.548 cv
347.385 372.714 li
347.385 373.279 346.922 373.741 346.357 373.741 cv
340.191 373.741 li
339.627 373.741 339.164 373.279 339.164 372.714 cv
339.164 366.548 li
339.164 365.983 339.627 365.521 340.191 365.521 cv
346.357 365.521 li
346.357 365.521 li
cp
317.585 349.08 mo
318.148 349.08 318.611 349.542 318.611 350.107 cv
318.611 356.272 li
318.611 356.837 318.148 357.3 317.585 357.3 cv
311.42 357.3 li
310.854 357.3 310.391 356.837 310.391 356.272 cv
310.391 350.107 li
310.391 349.542 310.854 349.08 311.42 349.08 cv
317.585 349.08 li
317.585 349.08 li
cp
331.971 349.08 mo
332.537 349.08 332.999 349.542 332.999 350.107 cv
332.999 356.272 li
332.999 356.837 332.537 357.3 331.971 357.3 cv
325.805 357.3 li
325.24 357.3 324.777 356.837 324.777 356.272 cv
324.777 350.107 li
324.777 349.542 325.24 349.08 325.805 349.08 cv
331.971 349.08 li
331.971 349.08 li
cp
346.357 349.08 mo
346.922 349.08 347.385 349.542 347.385 350.107 cv
347.385 356.272 li
347.385 356.837 346.922 357.3 346.357 357.3 cv
340.191 357.3 li
339.627 357.3 339.164 356.837 339.164 356.272 cv
339.164 350.107 li
339.164 349.542 339.627 349.08 340.191 349.08 cv
346.357 349.08 li
346.357 349.08 li
cp
.94902 .6 .0784314 rgb
f
37.4277 305.103 mo
36.8984 306.062 36.4238 307.023 36.0527 307.949 cv
35.2734 310.119 36.5195 311.66 38.6426 312.109 cv
41.5156 312.607 44.7119 311.882 47.0654 310.099 cv
47.6104 311.517 49.0391 312.103 50.75 311.818 cv
53.9395 311.164 56.959 308.951 58.3555 305.968 cv
70.4131 304.472 78.335 299.292 78.3447 292.357 cv
78.333 284.844 69.0479 279.39 55.2754 278.445 cv
54.6738 277.839 53.9619 277.207 53.1484 276.564 cv
49.9219 274.033 45.1729 271.251 39.5996 269.41 cv
36.6875 268.47 33.8262 267.892 31.1602 268.031 cv
31.1094 268.033 li
31.0781 268.035 li
30.5391 268.087 30.1426 268.697 30.1914 269.386 cv
30.3652 271.863 30.8652 273.939 31.1992 275.74 cv
31.5469 277.537 31.75 279.074 31.6191 280.244 cv
31.5938 280.466 31.5488 280.662 31.5059 280.857 cv
26.8955 282.064 22.8691 283.633 19.9219 285.431 cv
19.3281 285.792 18.1797 286.773 17.6299 287.378 cv
17.3115 287.156 16.9961 286.947 16.6973 286.763 cv
16.6465 286.732 16.5967 286.703 16.5449 286.669 cv
16.5078 290.509 16.4463 294.347 16.3906 298.187 cv
16.6055 298.035 16.7949 297.898 16.9219 297.792 cv
17.1533 297.619 17.3809 297.439 17.6064 297.257 cv
18.2559 298.117 19.0742 298.83 20.0195 299.335 cv
22.5566 300.65 28.6777 303.455 37.4277 305.103 cv
cp
.819608 .819608 .819608 rgb
f
49.8574 296.832 mo
49.25 301.955 47.7881 305.476 50.3887 305.783 cv
52.9863 306.095 58.6621 303.076 59.2695 297.955 cv
59.877 292.833 58.2656 288.429 55.668 288.121 cv
53.0703 287.812 50.4648 291.712 49.8574 296.832 cv
cp
.65098 .427451 .109804 rgb
f
58.3008 290.369 mo
58.0117 290.509 58.5703 292.912 58.5938 293.175 cv
58.7598 295.066 58.7285 297.257 58.0742 299.066 cv
57.4668 300.746 56.2402 302.136 54.793 303.15 cv
53.791 303.851 51.498 305.265 50.2031 304.607 cv
49.8398 304.652 50.7813 296.48 50.8965 295.677 cv
51.1133 294.169 51.498 292.687 52.1055 291.291 cv
52.2012 291.07 53.2168 289.443 53.0176 289.22 cv
52.8672 288.947 51.9004 289.935 51.832 290.011 cv
50.7988 291.123 50.0938 292.537 49.627 293.97 cv
48.627 296.935 47.8447 300.755 47.8213 303.888 cv
47.8877 306.193 49.6094 307.173 51.75 306.818 cv
55.623 306.023 59.2539 302.929 60.0195 298.949 cv
60.3535 297.064 60.2559 294.99 59.7676 293.142 cv
59.7266 292.974 58.7148 290.044 58.3008 290.369 cv
58.0059 290.511 58.5234 290.195 58.3008 290.369 cv
cp
.478431 .164706 .129412 rgb
f
16.6523 283.466 mo
12.5 280.908 8.40625 278.455 3.63281 275.97 cv
2.22119 275.24 1.59814 275.548 2.27393 276.666 cv
2.45361 276.656 8.13672 284.373 8.10547 287.355 cv
8.13672 290.335 2.45361 298.054 2.27393 298.042 cv
1.59814 299.162 2.22119 299.468 3.63281 298.742 cv
3.89844 298.734 14.0117 293.414 16.6523 291.246 cv
19.873 288.808 21.7461 286.587 16.6523 283.466 cv
cp
.8 .52549 .133333 rgb
f
2.42627 273.574 mo
1.51611 273.574 .723145 274.017 .303223 274.759 cv
-.0307617 275.353 -.257324 276.345 .562988 277.701 cv
.668457 277.876 .80127 278.033 .949707 278.166 cv
2.16846 279.564 6.125 285.619 6.10547 287.333 cv
6.125 289.091 2.17236 295.146 .95166 296.542 cv
.80127 296.675 .668457 296.832 .562988 297.009 cv
-.257324 298.367 -.0307617 299.357 .303223 299.949 cv
.723145 300.691 1.51611 301.134 2.42627 301.134 cv
3.05078 301.134 3.74414 300.933 4.54688 300.521 cv
4.53125 300.486 li
7.50391 299.277 16.3281 294.099 17.9219 292.792 cv
19.9785 291.236 21.9219 289.419 21.8047 286.998 cv
21.6797 284.484 19.4004 282.806 17.6973 281.763 cv
13.1445 278.957 9.16797 276.595 4.55664 274.195 cv
3.74609 273.775 3.05078 273.574 2.42627 273.574 cv
2.42627 273.574 li
cp
2.42627 275.574 mo
2.70508 275.574 3.11719 275.701 3.63281 275.97 cv
8.40625 278.455 12.5 280.908 16.6523 283.466 cv
21.7461 286.587 19.873 288.808 16.6523 291.246 cv
14.0117 293.414 3.89844 298.734 3.63281 298.742 cv
3.11719 299.007 2.70703 299.134 2.42627 299.134 cv
1.93994 299.134 1.84619 298.751 2.27393 298.042 cv
2.27393 298.042 li
2.46338 298.042 8.13672 290.333 8.10547 287.355 cv
8.13672 284.373 2.46143 276.666 2.27393 276.666 cv
2.27393 276.666 li
1.84619 275.958 1.93994 275.574 2.42627 275.574 cv
2.42627 275.574 li
cp
.478431 .164706 .129412 rgb
f
3.48438 278.232 mo
3.48633 278.236 3.48828 278.236 3.48828 278.238 cv
7.41797 280.353 15.7949 283.748 16.6523 283.466 cv
12.5 280.908 8.40625 278.455 3.63281 275.97 cv
2.22119 275.24 1.59814 275.548 2.27393 276.666 cv
2.27393 276.667 2.79297 277.289 3.48438 278.232 cv
cp
.960784 .913725 .470588 rgb
f
44.915 275.689 mo
34.875 276.689 26.5957 279.312 21.9629 282.138 cv
21.5957 282.33 20.2539 283.501 20.0371 283.802 cv
20.0371 283.802 li
18.0625 286.601 18.8789 290.919 21.9629 292.572 cv
26.7773 295.066 34.8789 298.011 44.915 299.019 cv
61.8691 300.896 77.333 295.849 77.3447 287.355 cv
77.333 278.857 61.8691 273.814 44.915 275.689 cv
cp
.960784 .772549 .164706 rgb
f
51.9297 273.298 mo
49.543 273.298 47.1084 273.433 44.6943 273.701 cv
35.168 274.65 26.2734 277.166 20.9219 280.431 cv
20.9219 280.431 li
20.2324 280.849 18.7969 282.101 18.4141 282.634 cv
17.0859 284.517 16.6445 286.919 17.1934 289.242 cv
17.7188 291.457 19.1133 293.314 21.0195 294.335 cv
24.127 295.945 32.6055 299.792 44.7158 301.009 cv
47.1104 301.275 49.5449 301.41 51.9336 301.41 cv
68.0615 301.41 79.332 295.632 79.3438 287.357 cv
79.332 279.078 68.0596 273.298 51.9297 273.298 cv
51.9297 273.298 li
cp
51.9297 275.298 mo
65.9072 275.298 77.335 280.052 77.3447 287.355 cv
77.335 294.656 65.9111 299.41 51.9336 299.41 cv
49.6504 299.41 47.2959 299.283 44.915 299.019 cv
34.8789 298.011 26.7773 295.066 21.9629 292.572 cv
18.8789 290.919 18.0625 286.601 20.0371 283.802 cv
20.2539 283.501 21.5957 282.33 21.9629 282.138 cv
26.5957 279.312 34.875 276.689 44.915 275.689 cv
47.2959 275.423 49.6465 275.298 51.9297 275.298 cv
51.9297 275.298 li
cp
.478431 .164706 .129412 rgb
f
77.3447 287.355 mo
77.3447 280.248 66.126 275.318 52.3223 275.359 cv
52.3223 275.359 52.3223 275.359 52.3203 275.359 cv
53.8672 276.347 54.9316 277.328 55.2383 278.13 cv
66.5947 279.248 75.1006 284.011 75.0166 290.103 cv
75.001 291.33 74.583 292.5 73.8916 293.599 cv
73.8916 293.599 73.8936 293.599 73.8955 293.599 cv
76.0732 291.792 77.3447 289.65 77.3447 287.355 cv
cp
.960784 .913725 .470588 rgb
f
21.9629 282.138 mo
21.5957 282.33 20.2539 283.501 20.0371 283.802 cv
19.5664 284.47 19.2617 285.23 19.1016 286.015 cv
22.3828 283.564 28.1836 280.951 31.2852 279.451 cv
31.9688 279.119 32.5352 278.515 32.9883 277.812 cv
28.3867 279.023 24.5781 280.542 21.9629 282.138 cv
cp
f
66.8506 285.894 mo
66.8506 290.103 63.4414 293.513 59.2305 293.513 cv
55.0254 293.513 51.6152 290.103 51.6152 285.894 cv
51.6152 281.687 55.0254 278.277 59.2305 278.277 cv
63.4414 278.277 66.8506 281.687 66.8506 285.894 cv
cp
.8 .52549 .133333 rgb
f
66.542 284.984 mo
66.542 288.507 63.6895 291.361 60.166 291.361 cv
56.6465 291.361 53.793 288.507 53.793 284.984 cv
53.793 281.464 56.6465 278.613 60.166 278.613 cv
63.6895 278.613 66.542 281.464 66.542 284.984 cv
cp
1 1 1 rgb
f
63.1426 284.984 mo
63.1426 286.628 61.8105 287.96 60.166 287.96 cv
58.5254 287.96 57.1934 286.628 57.1934 284.984 cv
57.1934 283.343 58.5254 282.011 60.166 282.011 cv
61.8105 282.011 63.1426 283.343 63.1426 284.984 cv
cp
0 0 0 rgb
f
64.2314 282.757 mo
64.2314 283.886 63.3184 284.8 62.1895 284.8 cv
61.0605 284.8 60.1465 283.886 60.1465 282.757 cv
60.1465 281.628 61.0605 280.716 62.1895 280.716 cv
63.3184 280.716 64.2314 281.628 64.2314 282.757 cv
cp
1 1 1 rgb
f
41.5215 297.121 mo
39.0879 301.669 36.4414 304.416 38.752 305.65 cv
41.0566 306.888 47.4443 306.146 49.877 301.599 cv
52.3105 297.052 52.416 292.365 50.1094 291.128 cv
47.8037 289.894 43.9561 292.576 41.5215 297.121 cv
cp
.8 .52549 .133333 rgb
f
51.7402 294.183 mo
51.4199 294.208 51.0645 296.648 50.9902 296.902 cv
50.4551 298.724 49.627 300.753 48.3584 302.199 cv
47.1807 303.541 45.5322 304.388 43.8135 304.804 cv
42.625 305.091 39.9746 305.572 39.0078 304.488 cv
38.6543 304.396 42.5098 297.13 42.9102 296.425 cv
43.6631 295.101 44.5615 293.861 45.6377 292.781 cv
45.8057 292.611 47.3447 291.466 47.2412 291.187 cv
47.2002 290.876 45.9404 291.445 45.8486 291.49 cv
44.4814 292.148 43.3096 293.208 42.3516 294.373 cv
40.3379 296.769 38.2178 300.041 37.0527 302.949 cv
36.2734 305.119 37.5195 306.66 39.6426 307.109 cv
43.54 307.783 48.0479 306.226 50.2129 302.798 cv
51.2109 301.166 51.875 299.199 52.0957 297.3 cv
52.1172 297.128 52.2441 294.031 51.7402 294.183 cv
51.4141 294.208 52.0117 294.101 51.7402 294.183 cv
cp
.478431 .164706 .129412 rgb
f
31.3809 278.49 mo
31.2891 278.546 31.2188 278.593 31.1445 278.638 cv
35.5957 277.289 40.7969 276.421 46.4111 276.279 cv
50.6797 276.171 54.7422 276.494 58.4375 277.142 cv
57.1719 273.087 41.2266 264.064 32.1953 264.326 cv
32.4668 270.085 35.416 275.884 31.3809 278.49 cv
cp
.8 .52549 .133333 rgb
f
53.7695 276.539 mo
55.375 276.687 56.9414 276.88 58.4375 277.142 cv
57.3281 273.595 44.9854 266.244 35.8652 264.634 cv
34.5625 264.406 33.3242 264.291 32.1953 264.326 cv
32.2383 265.244 32.3535 266.16 32.4941 267.068 cv
39.5098 267.841 49.0918 272.642 53.7695 276.539 cv
cp
.960784 .913725 .470588 rgb
f
57.7148 275.138 mo
56.9844 274.078 55.7617 272.837 54.1484 271.564 cv
50.9219 269.033 46.1729 266.251 40.5996 264.41 cv
37.6875 263.47 34.8262 262.892 32.1602 263.031 cv
32.1094 263.033 li
32.0781 263.035 li
31.5391 263.087 31.1426 263.697 31.1914 264.386 cv
31.3652 266.863 31.8652 268.939 32.1992 270.74 cv
32.5469 272.537 32.75 274.074 32.6191 275.244 cv
32.3438 277.593 30.9512 278.339 31.1445 278.638 cv
31.1914 278.757 31.5313 278.74 32.0898 278.376 cv
32.6289 278.025 33.4453 277.154 33.8027 275.615 cv
34.4727 272.853 33.6074 269.382 33.293 265.689 cv
35.3984 265.849 37.7051 266.384 40.0898 267.156 cv
45.4307 268.919 50.1445 271.332 53.418 273.322 cv
55.0547 274.322 56.332 275.244 57.1484 275.958 cv
57.9844 276.666 58.2891 277.197 58.4375 277.142 cv
58.5938 277.103 58.4688 276.187 57.7148 275.138 cv
cp
.478431 .164706 .129412 rgb
f
419.307 48.5327 mo
299.184 41.478 179.059 40.8022 58.9355 46.4585 cv
66.9756 53.9683 li
55.8105 64.397 li
61.3555 78.6353 li
54.1914 80.8589 li
47.8467 85.6636 li
79.3496 97.4556 li
81.4277 97.0308 li
89.4629 95.3862 103.946 91.8081 105.138 91.48 cv
108.64 90.5132 111.532 86.8423 110.312 82.3745 cv
110.309 82.3608 110.304 82.3442 110.298 82.3228 cv
147.892 78.0132 185.977 75.6284 223.563 75.2319 cv
227.352 75.1929 231.143 75.1724 234.936 75.1724 cv
270.418 75.1724 306.313 76.9292 341.689 80.396 cv
341.357 82.1538 341.678 84.0034 342.596 85.5435 cv
343.604 87.2358 345.279 88.4722 347.193 88.9351 cv
372.895 95.1538 399.295 98.9858 425.811 100.371 cv
426.336 91.2183 426.93 82.0659 427.564 72.9136 cv
425.074 69.5796 422.633 66.2339 420.295 62.8745 cv
422.834 60.064 425.295 57.2202 427.711 54.3628 cv
426.264 51.1147 423.113 48.7593 419.307 48.5327 cv
cp
.819608 .819608 .819608 rgb
f
66.0811 35.519 mo
51.8281 42.1802 li
69.8564 47.7192 li
62.3926 56.1304 li
72.8291 58.104 li
58.3359 66.5903 li
78.6875 70.2817 li
64.7373 80.8462 li
81.5449 87.1362 li
89.2646 85.5571 96.9434 83.7651 104.576 81.7476 cv
98.9316 62.1323 93.2559 42.5073 87.5752 22.8726 cv
76.7588 25.7271 65.8066 28.0347 54.7451 29.8296 cv
66.0811 35.519 li
cp
.941176 .32549 .32549 rgb
f
90.248 85.2612 mo
85.334 65.4546 80.4404 45.6343 75.6006 25.8003 cv
76.1885 25.6675 76.7744 25.521 77.3623 25.3853 cv
78.3359 25.1587 79.3096 24.9312 80.2813 24.6978 cv
82.25 24.2241 84.2148 23.7319 86.1758 23.2241 cv
86.6406 23.1021 87.1104 22.9956 87.5752 22.8726 cv
93.2559 42.5073 98.9316 62.1323 104.576 81.7476 cv
99.8184 83.0054 95.041 84.1724 90.248 85.2612 cv
cp
.858824 .152941 .152941 rgb
f
90.4473 17.8062 mo
86.5137 18.8452 li
75.9932 21.6196 65.0801 23.9331 54.0771 25.7163 cv
41.3691 27.7788 li
52.876 33.5532 li
56.5264 35.3862 li
50.0645 38.4058 li
40.2637 42.9858 li
50.6045 46.1616 li
62.4395 49.7983 li
59.2754 53.3667 li
54.4004 58.8608 li
61.1211 60.1304 li
56.2314 62.9946 li
46.5186 68.6812 li
57.5918 70.6899 li
68.6084 72.688 li
62.2217 77.5239 li
56.1855 82.0942 li
63.2764 84.7476 li
80.0859 91.0386 li
81.207 91.4585 li
82.3809 91.2183 li
90.2373 89.6108 104.513 86.0854 105.642 85.7749 cv
107.361 85.3003 109.337 83.3706 108.579 80.5952 cv
108.218 79.2671 97.1162 40.8589 91.5781 21.7144 cv
90.4473 17.8062 li
90.4473 17.8062 li
cp
87.5752 22.8726 mo
93.2559 42.5073 98.9316 62.1323 104.576 81.7476 cv
96.9434 83.7651 89.2646 85.5571 81.5449 87.1362 cv
64.7373 80.8462 li
78.6875 70.2817 li
58.3359 66.5903 li
72.8291 58.104 li
62.3926 56.1304 li
69.8564 47.7192 li
51.8281 42.1802 li
66.0811 35.519 li
54.7451 29.8296 li
65.8066 28.0347 76.7588 25.7271 87.5752 22.8726 cv
87.5752 22.8726 li
cp
.478431 .164706 .129412 rgb
f
434.232 29.4673 mo
410.227 28.7261 386.598 25.5347 363.508 19.9624 cv
358.244 39.7104 352.982 59.4497 347.754 79.1812 cv
375.408 85.8735 403.553 89.7104 432.201 90.6577 cv
423.871 80.6011 416.15 70.2983 409.1 59.8101 cv
418.256 50.0073 426.668 39.8706 434.232 29.4673 cv
cp
.941176 .32549 .32549 rgb
f
363.461 15.7944 mo
361.635 15.814 359.975 17.0435 359.482 18.8882 cv
354.352 38.1401 349.045 58.0444 343.727 78.1138 cv
343.439 79.1978 343.6 80.3501 344.174 81.313 cv
344.746 82.2769 345.684 82.9673 346.773 83.23 cv
374.633 89.9722 403.328 93.8716 432.063 94.8218 cv
432.125 94.8237 432.186 94.8237 432.246 94.8237 cv
433.814 94.8071 435.246 93.9097 435.941 92.4917 cv
436.664 91.02 436.455 89.2622 435.41 87.9995 cv
427.904 78.937 420.848 69.603 414.406 60.2085 cv
422.848 50.9956 430.641 41.4917 437.602 31.9165 cv
438.51 30.6675 438.652 29.019 437.973 27.6343 cv
437.295 26.2476 435.902 25.3501 434.361 25.3022 cv
410.797 24.5747 387.287 21.4155 364.486 15.9116 cv
364.143 15.8296 363.799 15.7915 363.461 15.7944 cv
363.461 15.7944 li
cp
363.508 19.9624 mo
386.598 25.5347 410.227 28.7261 434.232 29.4673 cv
426.668 39.8706 418.256 50.0073 409.1 59.8101 cv
416.15 70.2983 423.871 80.6011 432.201 90.6577 cv
403.553 89.7104 375.408 85.8735 347.754 79.1812 cv
352.982 59.4497 358.244 39.7104 363.508 19.9624 cv
363.508 19.9624 li
cp
.478431 .164706 .129412 rgb
f
362.152 82.3921 mo
366.646 62.4858 371.121 42.5679 375.541 22.6343 cv
374.951 22.5142 374.363 22.3804 373.773 22.2573 cv
372.793 22.0522 371.816 21.8452 370.84 21.6323 cv
368.859 21.1997 366.885 20.7495 364.914 20.2817 cv
364.447 20.1714 363.977 20.0747 363.508 19.9624 cv
358.244 39.7104 352.982 59.4497 347.754 79.1812 cv
352.539 80.3384 357.338 81.4048 362.152 82.3921 cv
cp
.858824 .152941 .152941 rgb
f
355.914 72.0854 mo
269.77 62.4526 182.344 63.1226 95.5117 74.3296 cv
93.2305 74.6245 91.1406 73.021 90.8418 70.7397 cv
88.5605 53.269 86.3066 35.7944 84.084 18.314 cv
83.7949 16.0327 85.4082 13.9351 87.6904 13.6401 cv
179.518 1.79248 272 1.09717 363.146 11.3237 cv
365.434 11.5796 367.061 13.647 366.785 15.9321 cv
364.672 33.4243 362.59 50.9214 360.539 68.4194 cv
360.27 70.7046 358.201 72.3413 355.914 72.0854 cv
cp
1 .482353 .411765 rgb
f
360.539 68.4194 mo
361.414 60.9526 362.316 53.4897 363.203 46.0249 cv
344.662 43.5874 326.484 36.4429 307.811 35.3403 cv
288.234 34.1831 268.393 39.7124 248.753 39.439 cv
229.148 39.1655 209.467 33.0864 189.833 33.6968 cv
170.238 34.3062 150.973 41.5962 131.384 43.0894 cv
116.796 44.2007 101.872 42.0972 87.1309 41.9438 cv
88.3662 51.5425 89.5889 61.144 90.8418 70.7397 cv
91.1406 73.021 93.2305 74.6245 95.5117 74.3296 cv
182.344 63.1226 269.77 62.4526 355.914 72.0854 cv
358.201 72.3413 360.27 70.7046 360.539 68.4194 cv
cp
.941176 .32549 .32549 rgb
f
222.918 .0629883 mo
222.962 4.229 li
222.915 .0629883 li
177.705 .540527 132.031 3.71826 87.1563 9.50928 cv
82.6055 10.0972 79.3721 14.2827 79.9512 18.8394 cv
82.166 36.2554 84.4395 53.8979 86.7109 71.2798 cv
87.2559 75.4575 90.8457 78.5747 95.0586 78.5308 cv
95.3867 78.5269 95.7197 78.5034 96.0469 78.4604 cv
138.232 73.0171 181.164 70.0288 223.648 69.5815 cv
267.537 69.1187 311.883 71.355 355.451 76.2261 cv
355.791 76.2642 356.133 76.2808 356.473 76.2769 cv
360.662 76.2339 364.188 73.064 364.676 68.9048 cv
366.719 51.4858 368.82 33.8315 370.922 16.4312 cv
371.189 14.2134 370.576 12.0269 369.189 10.2788 cv
367.807 8.53076 365.826 7.43311 363.611 7.18311 cv
317.1 1.96436 269.764 -.430176 222.918 .0629883 cv
222.918 .0629883 li
cp
222.954 4.22803 mo
269.859 3.73486 316.672 6.10889 363.146 11.3237 cv
365.434 11.5796 367.061 13.647 366.785 15.9321 cv
364.672 33.4243 362.59 50.9214 360.539 68.4194 cv
360.289 70.5308 358.504 72.0894 356.428 72.1108 cv
356.258 72.1128 356.088 72.105 355.914 72.0854 cv
312.063 67.1831 267.873 64.9487 223.604 65.4146 cv
180.908 65.8657 138.143 68.8276 95.5117 74.3296 cv
95.3457 74.3511 95.1797 74.3628 95.0156 74.3638 cv
92.9336 74.3862 91.1172 72.855 90.8418 70.7397 cv
88.5605 53.269 86.3066 35.7944 84.084 18.314 cv
83.7949 16.0327 85.4082 13.9351 87.6904 13.6401 cv
132.696 7.8335 177.868 4.70557 222.954 4.22803 cv
222.954 4.22803 li
cp
.478431 .164706 .129412 rgb
f
358.506 34.5903 mo
357.979 34.5903 359.533 19.978 359.363 16.937 cv
355.424 16.3511 327.965 12.1362 327.951 12.1958 cv
327.984 11.3071 357.102 14.3657 361.465 15.4556 cv
360.615 21.853 359.631 28.2358 358.506 34.5903 cv
358.506 34.5903 li
cp
1 .772549 .639216 rgb
f
113.901 15.6245 mo
106.277 17.2788 98.4629 18.4429 90.6729 18.7769 cv
90.8086 22.271 90.9014 25.7915 90.8555 29.2944 cv
89.9609 25.2827 89.2148 21.2378 88.6953 17.1597 cv
97.0449 16.0298 105.474 15.4487 113.901 15.6245 cv
113.901 15.6245 li
cp
f
261.311 9.35303 mo
234.75 9.81787 208.189 10.2222 181.627 10.5679 cv
187.717 5.29053 214.001 8.0835 221.438 7.96826 cv
234.777 7.72412 252.695 6.44482 261.311 9.35303 cv
261.311 9.35303 261.32 9.35303 261.311 9.35303 cv
cp
f
152.854 20.4976 mo
152.82 20.4976 152.786 20.498 152.752 20.499 cv
152.64 20.5015 152.529 20.5088 152.42 20.5205 cv
150 20.7524 147.565 20.998 145.184 21.2495 cv
143.45 21.4331 142.035 22.7173 141.686 24.4248 cv
141.65 24.5986 141.614 24.7725 141.579 24.9468 cv
141.501 24.7773 141.424 24.6084 141.347 24.4395 cv
140.69 23.0049 139.261 22.104 137.711 22.104 cv
137.558 22.104 137.402 22.1128 137.247 22.1309 cv
134.883 22.4058 132.449 22.7017 130.012 23.0093 cv
128.689 23.1763 127.537 23.9912 126.938 25.1831 cv
126.34 26.3745 126.375 27.7861 127.031 28.9468 cv
130.288 34.7046 133.535 40.5762 136.689 46.4106 cv
137.129 50.2217 li
137.658 54.7979 li
137.78 55.8516 138.315 56.814 139.147 57.4727 cv
139.857 58.0361 140.734 58.3384 141.632 58.3384 cv
141.785 58.3384 141.938 58.3296 142.091 58.312 cv
144.178 58.0708 146.267 57.8384 148.355 57.6162 cv
149.411 57.5039 150.378 56.9771 151.044 56.1514 cv
151.711 55.3262 152.022 54.2695 151.91 53.2144 cv
151.441 48.8247 li
151.016 44.8271 li
152.819 38.5049 154.707 32.1157 156.631 25.8203 cv
156.776 25.4063 156.855 24.9609 156.855 24.4976 cv
156.855 22.2974 155.081 20.5117 152.884 20.4976 cv
152.874 20.4976 152.864 20.4976 152.854 20.4976 cv
152.854 20.4976 li
cp
152.853 24.4976 mo
150.818 31.1504 148.852 37.811 146.956 44.4785 cv
147.281 47.5317 147.606 50.585 147.932 53.6387 cv
145.831 53.8623 143.731 54.0957 141.632 54.3384 cv
141.279 51.2881 140.927 48.2373 140.574 45.187 cv
137.287 39.0957 133.934 33.0254 130.513 26.9775 cv
132.911 26.6748 135.31 26.3833 137.709 26.104 cv
139.516 30.0503 141.3 34.0029 143.063 37.9619 cv
143.888 33.7158 144.735 29.4712 145.604 25.2275 cv
148.02 24.9722 150.436 24.729 152.853 24.4976 cv
152.853 24.4976 li
cp
152.853 24.4976 mo
152.858 24.4976 li
152.853 24.4976 li
cp
.478431 .164706 .129412 rgb
f
165.051 42.0317 mo
164.721 41.0688 164.393 39.6563 164.227 37.7593 cv
164.048 35.7314 164.176 34.3647 164.361 33.5234 cv
164.677 34.3286 165.022 35.6587 165.173 37.6826 cv
165.313 39.5781 165.22 41.0254 165.051 42.0317 cv
165.051 42.0317 li
cp
164.63 18.7593 mo
164.629 18.7593 li
164.153 18.7593 163.664 18.7803 163.175 18.8213 cv
159.106 19.1396 155.676 20.8232 153.277 23.688 cv
150.246 27.3066 148.919 32.7603 149.539 39.0435 cv
150.742 50.0225 156.44 56.5522 164.788 56.5522 cv
165.264 56.5522 165.754 56.5308 166.245 56.4883 cv
175.367 55.7915 180.574 48.1665 179.833 36.582 cv
179.193 25.5972 173.368 18.7593 164.63 18.7593 cv
164.63 18.7593 li
cp
165.373 47.4248 mo
165.417 47.4248 165.462 47.4243 165.508 47.4224 cv
169.08 46.9775 169.453 41.2969 169.162 37.3857 cv
168.875 33.5415 167.707 28.6284 164.051 28.6284 cv
164.028 28.6284 164.005 28.6284 163.982 28.6289 cv
160.27 29.1694 159.902 34.2461 160.242 38.1099 cv
160.581 41.9683 161.839 47.4248 165.373 47.4248 cv
165.373 47.4248 li
cp
164.629 22.7593 mo
172.432 22.7583 175.445 30.0405 175.841 36.8374 cv
176.302 44.0449 174.285 51.8755 165.92 52.5015 cv
165.532 52.5356 165.154 52.5522 164.788 52.5522 cv
157.23 52.5522 154.27 45.499 153.52 38.6504 cv
152.82 31.5605 154.828 23.4868 163.51 22.8071 cv
163.893 22.7749 164.267 22.7593 164.629 22.7593 cv
164.629 22.7593 li
cp
f
196.35 17.6167 mo
196.301 17.6167 196.251 17.6177 196.201 17.6196 cv
194.01 17.6997 191.818 17.79 189.628 17.8906 cv
188.502 17.9419 187.506 18.4546 186.813 19.2373 cv
186.097 18.5723 185.139 18.1694 184.096 18.1694 cv
184.024 18.1694 183.952 18.1714 183.88 18.1753 cv
181.69 18.292 179.501 18.4185 177.312 18.5547 cv
176.253 18.6201 175.264 19.104 174.562 19.8994 cv
173.859 20.6948 173.502 21.7363 173.568 22.7954 cv
174.209 33.1045 li
174.851 43.4141 li
175.321 50.8149 179.927 55.0566 187.487 55.0566 cv
187.846 55.0566 188.213 55.0474 188.588 55.0288 cv
196.818 54.6255 201.382 49.9199 201.106 42.1191 cv
200.72 31.6499 li
200.345 21.4697 li
200.266 19.312 198.491 17.6167 196.35 17.6167 cv
196.35 17.6167 li
cp
196.348 21.6167 mo
196.601 28.498 196.855 35.3794 197.108 42.2607 cv
197.314 48.0625 194.19 50.7495 188.388 51.0337 cv
188.082 51.0488 187.781 51.0566 187.487 51.0566 cv
182.304 51.0566 179.192 48.6484 178.843 43.1655 cv
178.415 36.2925 177.988 29.4199 177.56 22.5469 cv
179.737 22.4116 181.915 22.2856 184.093 22.1694 cv
184.454 28.9282 184.814 35.6875 185.175 42.4463 cv
185.312 44.2856 185.502 45.7559 187.821 45.7559 cv
187.919 45.7559 188.021 45.7534 188.126 45.748 cv
190.735 45.6211 190.785 44.0928 190.737 42.1709 cv
190.429 35.4092 190.12 28.6479 189.811 21.8862 cv
191.989 21.7866 194.168 21.6968 196.348 21.6167 cv
196.348 21.6167 li
cp
f
221.642 17.1147 mo
221.638 17.1147 221.634 17.1147 221.63 17.1147 cv
217.008 17.1279 212.321 17.1851 207.698 17.2842 cv
206.638 17.3071 205.629 17.75 204.896 18.5161 cv
204.162 19.2822 203.762 20.3086 203.785 21.3691 cv
204.396 49.8604 li
204.443 52.0396 206.225 53.7744 208.394 53.7744 cv
208.423 53.7744 208.452 53.7739 208.481 53.7734 cv
210.553 53.7295 212.625 53.6938 214.697 53.6675 cv
215.757 53.6543 216.77 53.2197 217.51 52.4604 cv
218.25 51.7007 218.659 50.6782 218.646 49.6172 cv
218.57 43.6382 li
218.547 41.8296 li
219.492 41.8228 220.437 41.8179 221.382 41.8149 cv
222.443 41.8115 223.459 41.3867 224.207 40.6338 cv
224.955 39.8813 225.373 38.8623 225.369 37.8013 cv
225.353 32.7065 li
225.35 31.6455 224.925 30.6289 224.172 29.8809 cv
224.117 29.8267 224.062 29.7744 224.005 29.7241 cv
225.009 28.9946 225.661 27.8101 225.657 26.4741 cv
225.642 21.1016 li
225.635 18.897 223.845 17.1147 221.642 17.1147 cv
221.642 17.1147 li
cp
221.642 21.1147 mo
221.647 22.9048 221.652 24.6948 221.657 26.4849 cv
219.222 26.4917 216.787 26.5107 214.352 26.5415 cv
214.378 28.6191 214.405 30.6963 214.431 32.7734 cv
216.738 32.7441 219.045 32.7261 221.353 32.7183 cv
221.357 34.417 221.363 36.1162 221.369 37.8149 cv
219.078 37.8223 216.787 37.8408 214.496 37.8701 cv
214.546 41.8027 214.596 45.7354 214.646 49.668 cv
212.563 49.6943 210.479 49.73 208.396 49.7744 cv
208.192 40.2773 207.988 30.7803 207.784 21.2832 cv
212.403 21.1841 217.022 21.1279 221.642 21.1147 cv
221.642 21.1147 li
cp
f
227.32 17.1206 mo
225.399 17.1206 223.749 18.4858 223.391 20.374 cv
221.589 29.8613 219.833 39.4658 218.172 48.9199 cv
217.968 50.0854 218.29 51.2822 219.052 52.1875 cv
219.812 53.0908 220.933 53.6118 222.112 53.6118 cv
222.115 53.6118 222.118 53.6118 222.122 53.6118 cv
223.782 53.6099 li
225.443 53.6099 227.105 53.6157 228.767 53.6279 cv
228.776 53.6279 228.787 53.6279 228.797 53.6279 cv
230.258 53.6279 231.553 52.8394 232.251 51.644 cv
232.926 52.8647 234.216 53.686 235.688 53.7104 cv
237.837 53.7461 239.986 53.792 242.136 53.8477 cv
242.17 53.8486 242.205 53.8491 242.239 53.8491 cv
243.385 53.8491 244.478 53.3579 245.238 52.4966 cv
246.021 51.6094 246.371 50.4204 246.194 49.2505 cv
244.754 39.7349 243.225 30.0918 241.65 20.5889 cv
241.335 18.6865 239.707 17.2798 237.779 17.2432 cv
234.328 17.1787 230.815 17.1372 227.34 17.1206 cv
227.333 17.1206 227.326 17.1206 227.32 17.1206 cv
227.32 17.1206 li
cp
234.535 39.106 mo
234.039 34.9302 233.533 30.7544 233.017 26.5791 cv
232.679 26.5752 232.34 26.5708 232.002 26.5674 cv
231.414 30.729 230.836 34.8921 230.267 39.0552 cv
231.689 39.0679 233.112 39.085 234.535 39.106 cv
234.535 39.106 li
cp
227.32 21.1206 mo
230.782 21.1372 234.243 21.1777 237.704 21.2427 cv
239.283 30.7734 240.795 40.3091 242.239 49.8491 cv
240.078 49.793 237.916 49.7471 235.754 49.7109 cv
235.562 47.9043 235.367 46.0977 235.171 44.2915 cv
233.257 44.2607 231.343 44.2383 229.428 44.2231 cv
229.216 46.0244 229.005 47.8262 228.796 49.6279 cv
227.125 49.6157 225.453 49.6099 223.782 49.6099 cv
223.226 49.6099 222.669 49.6104 222.112 49.6118 cv
223.781 40.1084 225.518 30.6113 227.32 21.1206 cv
227.32 21.1206 li
cp
f
245.341 17.4253 mo
243.186 17.4253 241.407 19.1401 241.345 21.3091 cv
240.518 49.7959 li
240.453 52.0039 242.191 53.8457 244.399 53.9102 cv
246.523 53.9717 248.646 54.0425 250.77 54.1235 cv
250.82 54.1255 250.871 54.1265 250.922 54.1265 cv
251.929 54.1265 252.899 53.7471 253.641 53.0605 cv
254.419 52.3394 254.879 51.3384 254.919 50.2783 cv
255.465 35.8989 li
256.001 21.8008 li
256.085 19.5933 254.363 17.7358 252.156 17.6519 cv
249.924 17.5669 247.691 17.4917 245.459 17.4268 cv
245.419 17.4258 245.38 17.4253 245.341 17.4253 cv
245.341 17.4253 li
cp
245.343 21.4253 mo
247.563 21.4897 249.784 21.5645 252.004 21.6489 cv
251.644 31.1411 251.282 40.6338 250.922 50.1265 cv
248.786 50.0449 246.651 49.9736 244.516 49.9116 cv
244.791 40.416 245.066 30.9209 245.343 21.4253 cv
245.343 21.4253 li
cp
f
255.393 17.7852 mo
254.393 17.7852 253.427 18.1597 252.688 18.8389 cv
251.905 19.5562 251.441 20.5552 251.396 21.6147 cv
250.184 50.0874 li
250.138 51.1475 250.516 52.1821 251.233 52.9634 cv
251.951 53.7446 252.95 54.209 254.01 54.2544 cv
258.361 54.439 262.763 54.667 267.093 54.9321 cv
267.176 54.937 267.259 54.9395 267.341 54.9395 cv
269.438 54.9395 271.199 53.3057 271.329 51.1836 cv
271.499 48.4043 li
271.668 45.6274 li
271.733 44.5684 271.375 43.5273 270.672 42.7329 cv
269.969 41.938 268.979 41.4556 267.92 41.3906 cv
266.904 41.3286 265.887 41.2686 264.872 41.2109 cv
265.255 33.7437 li
265.842 22.2935 li
265.955 20.0869 264.258 18.207 262.052 18.0938 cv
259.89 17.9829 257.726 17.8809 255.563 17.7886 cv
255.506 17.7861 255.449 17.7852 255.393 17.7852 cv
255.393 17.7852 li
cp
255.393 21.7852 mo
257.544 21.877 259.696 21.978 261.847 22.0884 cv
261.455 29.7222 261.064 37.356 260.673 44.9897 cv
263.008 45.1094 265.342 45.2407 267.676 45.3833 cv
267.563 47.2354 267.45 49.0874 267.337 50.9395 cv
262.953 50.6714 258.567 50.4443 254.18 50.2578 cv
254.584 40.7666 254.988 31.2759 255.393 21.7852 cv
255.393 21.7852 li
cp
f
271.805 18.666 mo
270.836 18.666 269.896 19.0176 269.165 19.6606 cv
268.368 20.3608 267.882 21.3491 267.813 22.4077 cv
266.893 36.627 li
265.973 50.8462 li
265.83 53.0508 267.501 54.9536 269.705 55.0962 cv
273.964 55.3716 278.269 55.6895 282.503 56.0405 cv
282.613 56.0498 282.724 56.0542 282.833 56.0542 cv
283.776 56.0542 284.693 55.7207 285.418 55.1064 cv
286.228 54.4209 286.731 53.4419 286.819 52.3848 cv
287.279 46.8374 li
287.367 45.7798 287.031 44.731 286.346 43.9214 cv
286.206 43.7573 286.055 43.6055 285.893 43.4668 cv
286.773 42.8047 287.378 41.7832 287.476 40.5981 cv
287.685 38.0576 li
287.894 35.5186 li
287.98 34.4614 287.645 33.4126 286.958 32.6035 cv
286.909 32.5449 286.858 32.4883 286.806 32.4331 cv
287.868 31.7925 288.618 30.668 288.729 29.3369 cv
289.155 24.1982 li
289.173 23.9834 li
289.354 21.7822 287.719 19.8501 285.517 19.6675 cv
281.066 19.2983 276.54 18.9644 272.063 18.6743 cv
271.977 18.6689 271.891 18.666 271.805 18.666 cv
271.805 18.666 li
cp
271.805 22.666 mo
276.268 22.9551 280.729 23.2842 285.187 23.6538 cv
285.039 25.4375 284.892 27.2217 284.743 29.0054 cv
282.477 28.8174 280.209 28.6401 277.94 28.4731 cv
277.788 30.5449 277.636 32.6167 277.483 34.689 cv
279.625 34.8462 281.767 35.0137 283.907 35.1899 cv
283.768 36.8833 283.629 38.5762 283.489 40.2695 cv
281.362 40.0942 279.236 39.9282 277.109 39.772 cv
276.956 41.8438 276.804 43.9155 276.651 45.9873 cv
278.866 46.1504 281.08 46.3237 283.293 46.5068 cv
283.14 48.356 282.986 50.2051 282.833 52.0542 cv
278.546 51.6987 274.256 51.3823 269.964 51.1045 cv
270.577 41.625 271.191 32.1455 271.805 22.666 cv
271.805 22.666 li
cp
f
292.669 19.8604 mo
291.959 19.8604 291.291 19.874 290.653 19.8872 cv
290.126 19.8984 289.622 19.9092 289.134 19.9092 cv
288.72 19.9092 288.366 19.9009 288.054 19.8833 cv
287.979 19.8794 287.904 19.8774 287.83 19.8774 cv
285.769 19.877 284.027 21.4551 283.848 23.5327 cv
281.393 51.9248 li
281.299 53.0103 281.652 54.0874 282.37 54.9063 cv
283.088 55.7256 284.109 56.2163 285.198 56.2656 cv
286.125 56.3071 287.032 56.3516 287.925 56.4321 cv
289.193 56.5474 290.497 56.7778 291.876 57.0225 cv
291.898 57.0259 291.959 57.0366 291.98 57.04 cv
293.453 57.2754 294.72 57.3901 295.854 57.3901 cv
300.821 57.3901 304.324 55.2095 306.879 50.5273 cv
309.469 45.8579 311.027 34.124 309.054 28.5562 cv
307.441 23.9658 303.028 20.7334 297.539 20.1318 cv
295.986 19.9478 294.428 19.8604 292.669 19.8604 cv
292.669 19.8604 li
cp
294.251 48.209 mo
295.476 48.209 296.528 47.751 297.041 46.9121 cv
298.6 44.1563 299.182 38.6211 299.295 35.9526 cv
299.519 31.2544 297.803 29.502 295.335 29.502 cv
294.815 29.502 294.264 29.5796 293.689 29.7231 cv
293.119 35.7197 292.549 41.7163 291.978 47.7134 cv
292.744 48.0493 293.527 48.209 294.251 48.209 cv
294.251 48.209 li
cp
292.669 23.8604 mo
293.975 23.8604 295.429 23.9097 297.104 24.1079 cv
300.648 24.4966 304.072 26.4438 305.283 29.8926 cv
306.783 34.1235 305.51 44.7495 303.367 48.6118 cv
301.41 52.1997 299.089 53.3901 295.854 53.3901 cv
294.865 53.3901 293.79 53.2788 292.612 53.0903 cv
291.137 52.8291 289.736 52.5801 288.286 52.4487 cv
287.307 52.3599 286.322 52.312 285.378 52.2695 cv
286.196 42.8057 287.015 33.3418 287.833 23.8774 cv
288.258 23.9009 288.689 23.9092 289.134 23.9092 cv
290.214 23.9092 291.368 23.8604 292.669 23.8604 cv
292.669 23.8604 li
cp
f
312.529 21.8003 mo
312.529 21.8003 li
307.851 21.8003 305.257 25.2612 305.081 28.7207 cv
304.741 32.6821 304.825 35.9189 304.899 38.7773 cv
304.967 41.3901 305.025 43.647 304.783 46.1187 cv
304.763 46.3374 304.759 46.5537 304.772 46.7661 cv
303.64 47.9116 302.875 49.4268 302.679 51.1323 cv
302.207 55.2144 305.136 58.939 309.206 59.4326 cv
309.503 59.4688 309.804 59.4868 310.102 59.4868 cv
313.86 59.4868 317.054 56.668 317.528 52.9302 cv
317.742 51.2471 317.381 49.5786 316.507 48.147 cv
316.563 47.9639 316.605 47.7749 316.635 47.5801 cv
317.015 45.0635 317.641 42.8027 318.304 40.4097 cv
319.069 37.6436 319.938 34.5083 320.559 30.5078 cv
320.898 28.4819 320.426 26.394 319.254 24.8262 cv
318.398 23.6821 316.751 22.2417 313.759 21.8765 cv
313.336 21.8257 312.925 21.8003 312.529 21.8003 cv
312.529 21.8003 li
cp
310.093 48.5488 mo
310.234 48.5488 310.377 48.5571 310.521 48.5747 cv
312.455 48.8086 313.797 50.5591 313.561 52.4258 cv
313.341 54.1567 311.842 55.4868 310.102 55.4868 cv
309.965 55.4868 309.826 55.4785 309.688 55.4619 cv
307.775 55.23 306.437 53.4585 306.652 51.5889 cv
306.852 49.8589 308.339 48.5488 310.093 48.5488 cv
310.093 48.5488 li
cp
312.529 25.8003 mo
312.762 25.8003 313.01 25.8154 313.274 25.8472 cv
316.776 26.2744 316.774 28.8901 316.606 29.8936 cv
315.486 37.1006 313.553 41.2046 312.68 46.9824 cv
311.375 46.8208 310.07 46.6631 308.765 46.5083 cv
309.318 40.8491 308.441 36.2471 309.073 28.981 cv
309.105 28.0391 309.676 25.8003 312.529 25.8003 cv
312.529 25.8003 li
cp
f
130.513 27.9775 mo
132.911 27.6748 135.31 27.3833 137.709 27.104 cv
139.516 31.0503 141.3 35.0029 143.063 38.9619 cv
143.888 34.7158 144.735 30.4712 145.604 26.2275 cv
148.02 25.9722 150.436 25.729 152.853 25.4976 cv
150.818 32.1504 148.852 38.811 146.956 45.4785 cv
147.281 48.5317 147.606 51.585 147.932 54.6387 cv
145.831 54.8623 143.731 55.0957 141.632 55.3384 cv
141.279 52.2881 140.927 49.2373 140.574 46.187 cv
137.287 40.0957 133.934 34.0254 130.513 27.9775 cv
cp
f
160.242 39.1099 mo
160.585 43.0171 161.871 48.563 165.508 48.4224 cv
169.08 47.9775 169.453 42.2969 169.162 38.3857 cv
168.874 34.5176 167.692 29.5669 163.982 29.6289 cv
160.27 30.1694 159.902 35.2461 160.242 39.1099 cv
cp
153.52 39.6504 mo
152.82 32.5605 154.828 24.4868 163.51 23.8071 cv
172.146 23.0811 175.427 30.7251 175.841 37.8374 cv
176.302 45.0449 174.285 52.8755 165.92 53.5015 cv
157.523 54.2363 154.306 46.8306 153.52 39.6504 cv
cp
f
178.843 44.1655 mo
178.415 37.2925 177.988 30.4199 177.56 23.5469 cv
179.737 23.4116 181.915 23.2856 184.093 23.1694 cv
184.454 29.9282 184.814 36.6875 185.175 43.4463 cv
185.318 45.3633 185.518 46.8794 188.126 46.748 cv
190.735 46.6211 190.785 45.0928 190.737 43.1709 cv
190.429 36.4092 190.12 29.6479 189.811 22.8862 cv
191.989 22.7866 194.168 22.6968 196.348 22.6167 cv
196.601 29.498 196.855 36.3794 197.108 43.2607 cv
197.314 49.0625 194.19 51.7495 188.388 52.0337 cv
182.666 52.3198 179.211 49.959 178.843 44.1655 cv
cp
f
207.784 22.2832 mo
212.403 22.1841 217.022 22.1279 221.642 22.1147 cv
221.647 23.9048 221.652 25.6948 221.657 27.4849 cv
219.222 27.4917 216.787 27.5107 214.352 27.5415 cv
214.378 29.6191 214.405 31.6963 214.431 33.7734 cv
216.738 33.7441 219.045 33.7261 221.353 33.7183 cv
221.357 35.417 221.363 37.1162 221.369 38.8149 cv
219.078 38.8223 216.787 38.8408 214.496 38.8701 cv
214.546 42.8027 214.596 46.7354 214.646 50.668 cv
212.563 50.6943 210.479 50.73 208.396 50.7744 cv
208.192 41.2773 207.988 31.7803 207.784 22.2832 cv
cp
f
232.002 27.5674 mo
231.414 31.729 230.836 35.8921 230.267 40.0552 cv
231.689 40.0679 233.112 40.085 234.535 40.106 cv
234.039 35.9302 233.533 31.7544 233.017 27.5791 cv
232.679 27.5752 232.34 27.5708 232.002 27.5674 cv
cp
229.428 45.2231 mo
229.216 47.0244 229.005 48.8262 228.796 50.6279 cv
226.568 50.6118 224.34 50.6064 222.112 50.6118 cv
223.781 41.1084 225.518 31.6113 227.32 22.1206 cv
230.782 22.1372 234.243 22.1777 237.704 22.2427 cv
239.283 31.7734 240.795 41.3091 242.239 50.8491 cv
240.078 50.793 237.916 50.7471 235.754 50.7109 cv
235.562 48.9043 235.367 47.0977 235.171 45.2915 cv
233.257 45.2607 231.343 45.2383 229.428 45.2231 cv
cp
f
245.343 22.4253 mo
247.563 22.4897 249.784 22.5645 252.004 22.6489 cv
251.644 32.1411 251.282 41.6338 250.922 51.1265 cv
248.786 51.0449 246.651 50.9736 244.516 50.9116 cv
244.791 41.416 245.066 31.9209 245.343 22.4253 cv
cp
f
254.18 51.2578 mo
254.584 41.7666 254.988 32.2759 255.393 22.7852 cv
257.544 22.877 259.696 22.978 261.847 23.0884 cv
261.455 30.7222 261.064 38.356 260.673 45.9897 cv
263.008 46.1094 265.342 46.2407 267.676 46.3833 cv
267.563 48.2354 267.45 50.0874 267.337 51.9395 cv
262.953 51.6714 258.567 51.4443 254.18 51.2578 cv
cp
f
269.964 52.1045 mo
270.577 42.625 271.191 33.1455 271.805 23.666 cv
276.268 23.9551 280.729 24.2842 285.187 24.6538 cv
285.039 26.4375 284.892 28.2217 284.743 30.0054 cv
282.477 29.8174 280.209 29.6401 277.94 29.4731 cv
277.788 31.5449 277.636 33.6167 277.483 35.689 cv
279.625 35.8462 281.767 36.0137 283.907 36.1899 cv
283.768 37.8833 283.629 39.5762 283.489 41.2695 cv
281.362 41.0942 279.236 40.9282 277.109 40.772 cv
276.956 42.8438 276.804 44.9155 276.651 46.9873 cv
278.866 47.1504 281.08 47.3237 283.293 47.5068 cv
283.14 49.356 282.986 51.2051 282.833 53.0542 cv
278.546 52.6987 274.256 52.3823 269.964 52.1045 cv
cp
f
297.041 47.9121 mo
298.6 45.1563 299.182 39.6211 299.295 36.9526 cv
299.565 31.2666 296.996 29.8955 293.689 30.7231 cv
293.119 36.7197 292.549 42.7163 291.978 48.7134 cv
294.042 49.6172 296.226 49.2471 297.041 47.9121 cv
cp
287.833 24.8774 mo
290.325 25.0151 293.074 24.6309 297.104 25.1079 cv
300.648 25.4966 304.072 27.4438 305.283 30.8926 cv
306.783 35.1235 305.51 45.7495 303.367 49.6118 cv
300.811 54.2983 297.636 54.8936 292.612 54.0903 cv
291.137 53.8291 289.736 53.5801 288.286 53.4487 cv
287.307 53.3599 286.322 53.312 285.378 53.2695 cv
286.196 43.8057 287.015 34.3418 287.833 24.8774 cv
cp
f
306.652 52.5889 mo
306.437 54.4585 307.775 56.23 309.688 56.4619 cv
311.599 56.6934 313.323 55.2925 313.561 53.4258 cv
313.797 51.5591 312.455 49.8086 310.521 49.5747 cv
308.587 49.3403 306.867 50.7197 306.652 52.5889 cv
cp
316.606 30.8936 mo
315.486 38.1006 313.553 42.2046 312.68 47.9824 cv
311.375 47.8208 310.07 47.6631 308.765 47.5083 cv
309.318 41.8491 308.441 37.2471 309.073 29.981 cv
309.108 28.9619 309.772 26.4263 313.274 26.8472 cv
316.776 27.2744 316.774 29.8901 316.606 30.8936 cv
cp
f
130.513 25.9775 mo
132.911 25.6748 135.31 25.3833 137.709 25.104 cv
139.516 29.0503 141.3 33.0029 143.063 36.9619 cv
143.888 32.7158 144.735 28.4712 145.604 24.2275 cv
148.02 23.9722 150.436 23.729 152.853 23.4976 cv
150.818 30.1504 148.852 36.811 146.956 43.4785 cv
147.281 46.5317 147.606 49.585 147.932 52.6387 cv
145.831 52.8623 143.731 53.0957 141.632 53.3384 cv
141.279 50.2881 140.927 47.2373 140.574 44.187 cv
137.287 38.0957 133.934 32.0254 130.513 25.9775 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 141.683 54.4868 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .6 .0784314 ]
/C1 [.94902 .6 .0784314 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .6 .0784314 ]
/C1 [1 .823529 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .823529 .25098 ]
/C1 [1 .823529 .25098 ]
/N 1 
>>
]
/Bounds [.5 .502994 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 141.683 54.4868 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o)Jais8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
RF9O3daHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRl
daHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRl
~>
<~'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
'L4oK5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
160.242 37.1099 mo
160.585 41.0171 161.871 46.563 165.508 46.4224 cv
169.08 45.9775 169.453 40.2969 169.162 36.3857 cv
168.874 32.5176 167.692 27.5669 163.982 27.6289 cv
160.27 28.1694 159.902 33.2461 160.242 37.1099 cv
cp
153.52 37.6504 mo
152.82 30.5605 154.828 22.4868 163.51 21.8071 cv
172.146 21.0811 175.427 28.7251 175.841 35.8374 cv
176.302 43.0449 174.285 50.8755 165.92 51.5015 cv
157.523 52.2363 154.306 44.8306 153.52 37.6504 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 164.647 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 164.647 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
178.843 42.1655 mo
178.415 35.2925 177.988 28.4199 177.56 21.5469 cv
179.737 21.4116 181.915 21.2856 184.093 21.1694 cv
184.454 27.9282 184.814 34.6875 185.175 41.4463 cv
185.318 43.3633 185.518 44.8794 188.126 44.748 cv
190.735 44.6211 190.785 43.0928 190.737 41.1709 cv
190.429 34.4092 190.12 27.6479 189.811 20.8862 cv
191.989 20.7866 194.168 20.6968 196.348 20.6167 cv
196.601 27.498 196.855 34.3794 197.108 41.2607 cv
197.314 47.0625 194.19 49.7495 188.388 50.0337 cv
182.666 50.3198 179.211 47.959 178.843 42.1655 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.372 34.372 -1.50245e-6 187.339 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.372 34.372 -1.50245e-6 187.339 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
207.784 20.2832 mo
212.403 20.1841 217.022 20.1279 221.642 20.1147 cv
221.647 21.9048 221.652 23.6948 221.657 25.4849 cv
219.222 25.4917 216.787 25.5107 214.352 25.5415 cv
214.378 27.6191 214.405 29.6963 214.431 31.7734 cv
216.738 31.7441 219.045 31.7261 221.353 31.7183 cv
221.357 33.417 221.363 35.1162 221.369 36.8149 cv
219.078 36.8223 216.787 36.8408 214.496 36.8701 cv
214.546 40.8027 214.596 44.7354 214.646 48.668 cv
212.563 48.6943 210.479 48.73 208.396 48.7744 cv
208.192 39.2773 207.988 29.7803 207.784 20.2832 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 214.721 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 214.721 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
232.002 25.5674 mo
231.414 29.729 230.836 33.8921 230.267 38.0552 cv
231.689 38.0679 233.112 38.085 234.535 38.106 cv
234.039 33.9302 233.533 29.7544 233.017 25.5791 cv
232.679 25.5752 232.34 25.5708 232.002 25.5674 cv
cp
229.428 43.2231 mo
229.216 45.0244 229.005 46.8262 228.796 48.6279 cv
226.568 48.6118 224.34 48.6064 222.112 48.6118 cv
223.781 39.1084 225.518 29.6113 227.32 20.1206 cv
230.782 20.1372 234.243 20.1777 237.704 20.2427 cv
239.283 29.7734 240.795 39.3091 242.239 48.8491 cv
240.078 48.793 237.916 48.7471 235.754 48.7109 cv
235.562 46.9043 235.367 45.0977 235.171 43.2915 cv
233.257 43.2607 231.343 43.2383 229.428 43.2231 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.3719 34.3719 -1.50245e-6 232.176 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.3719 34.3719 -1.50245e-6 232.176 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
245.343 20.4253 mo
247.563 20.4897 249.784 20.5645 252.004 20.6489 cv
251.644 30.1411 251.282 39.6338 250.922 49.1265 cv
248.786 49.0449 246.651 48.9736 244.516 48.9116 cv
244.791 39.416 245.066 29.9209 245.343 20.4253 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.3719 34.3719 -1.50245e-6 248.26 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.3719 34.3719 -1.50245e-6 248.26 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
254.18 49.2578 mo
254.584 39.7666 254.988 30.2759 255.393 20.7852 cv
257.544 20.877 259.696 20.978 261.847 21.0884 cv
261.455 28.7222 261.064 36.356 260.673 43.9897 cv
263.008 44.1094 265.342 44.2407 267.676 44.3833 cv
267.563 46.2354 267.45 48.0874 267.337 49.9395 cv
262.953 49.6714 258.567 49.4443 254.18 49.2578 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.372 34.372 -1.50245e-6 260.928 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.372 34.372 -1.50245e-6 260.928 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
269.964 50.1045 mo
270.577 40.625 271.191 31.1455 271.805 21.666 cv
276.268 21.9551 280.729 22.2842 285.187 22.6538 cv
285.039 24.4375 284.892 26.2217 284.743 28.0054 cv
282.477 27.8174 280.209 27.6401 277.94 27.4731 cv
277.788 29.5449 277.636 31.6167 277.483 33.689 cv
279.625 33.8462 281.767 34.0137 283.907 34.1899 cv
283.768 35.8833 283.629 37.5762 283.489 39.2695 cv
281.362 39.0942 279.236 38.9282 277.109 38.772 cv
276.956 40.8438 276.804 42.9155 276.651 44.9873 cv
278.866 45.1504 281.08 45.3237 283.293 45.5068 cv
283.14 47.356 282.986 49.2051 282.833 51.0542 cv
278.546 50.6987 274.256 50.3823 269.964 50.1045 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 277.575 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 277.575 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
297.041 45.9121 mo
298.6 43.1563 299.182 37.6211 299.295 34.9526 cv
299.565 29.2666 296.996 27.8955 293.689 28.7231 cv
293.119 34.7197 292.549 40.7163 291.978 46.7134 cv
294.042 47.6172 296.226 47.2471 297.041 45.9121 cv
cp
287.833 22.8774 mo
290.325 23.0151 293.074 22.6309 297.104 23.1079 cv
300.648 23.4966 304.072 25.4438 305.283 28.8926 cv
306.783 33.1235 305.51 43.7495 303.367 47.6118 cv
300.811 52.2983 297.636 52.8936 292.612 52.0903 cv
291.137 51.8291 289.736 51.5801 288.286 51.4487 cv
287.307 51.3599 286.322 51.312 285.378 51.2695 cv
286.196 41.8057 287.015 32.3418 287.833 22.8774 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 295.656 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.3721 34.3721 -1.50245e-6 295.656 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
306.652 50.5889 mo
306.437 52.4585 307.775 54.23 309.688 54.4619 cv
311.599 54.6934 313.323 53.2925 313.561 51.4258 cv
313.797 49.5591 312.455 47.8086 310.521 47.5747 cv
308.587 47.3403 306.867 48.7197 306.652 50.5889 cv
cp
316.606 28.8936 mo
315.486 36.1006 313.553 40.2046 312.68 45.9824 cv
311.375 45.8208 310.07 45.6631 308.765 45.5083 cv
309.318 39.8491 308.441 35.2471 309.073 27.981 cv
309.108 26.9619 309.772 24.4263 313.274 24.8472 cv
316.776 25.2744 316.774 27.8901 316.606 28.8936 cv
cp
level3{
gsave
clp
[-1.50245e-6 -34.3719 34.3719 -1.50245e-6 311.646 54.4868 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.50245e-6 -34.3719 34.3719 -1.50245e-6 311.646 54.4868 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
152.853 23.4976 mo
150.436 23.729 148.02 23.9722 145.604 24.2275 cv
144.735 28.4712 143.888 32.7158 143.063 36.9619 cv
141.3 33.0029 139.516 29.0503 137.709 25.104 cv
135.31 25.3833 132.911 25.6748 130.513 25.9775 cv
133.934 32.0254 137.287 38.0957 140.574 44.187 cv
140.927 47.2373 141.279 50.2881 141.632 53.3384 cv
143.731 53.0957 145.831 52.8623 147.932 52.6387 cv
147.606 49.585 147.281 46.5317 146.956 43.4785 cv
148.852 36.811 150.818 30.1504 152.853 23.4976 cv
152.853 23.4976 li
cp
152.853 23.4976 mo
152.858 23.4976 li
152.853 23.4976 li
cp
151.46 24.6372 mo
149.585 30.7974 147.749 37.0361 145.994 43.2051 cv
145.958 43.3281 145.948 43.457 145.961 43.5845 cv
146.478 48.4277 li
146.832 51.751 li
145.391 51.9063 143.951 52.0664 142.511 52.231 cv
142.091 48.6006 li
141.567 44.0723 li
141.553 43.9463 141.515 43.8237 141.454 43.7119 cv
138.407 38.0645 135.269 32.3765 132.117 26.7847 cv
133.794 26.5762 135.464 26.374 137.103 26.1816 cv
138.804 29.9043 140.5 33.6641 142.149 37.3687 cv
142.312 37.7324 142.671 37.9619 143.063 37.9619 cv
143.1 37.9619 143.138 37.96 143.176 37.9556 cv
143.61 37.9063 143.961 37.5811 144.044 37.1528 cv
144.824 33.144 145.628 29.1084 146.437 25.1455 cv
148.097 24.9717 149.778 24.8013 151.46 24.6372 cv
151.46 24.6372 li
cp
1 .823529 .25098 rgb
f
165.373 46.4248 mo
161.839 46.4248 160.581 40.9683 160.242 37.1099 cv
159.902 33.2461 160.27 28.1694 163.982 27.6289 cv
164.005 27.6284 164.028 27.6284 164.051 27.6284 cv
167.707 27.6284 168.875 32.5415 169.162 36.3857 cv
169.453 40.2969 169.08 45.9775 165.508 46.4224 cv
165.462 46.4243 165.417 46.4248 165.373 46.4248 cv
165.373 46.4248 li
cp
164.629 21.7593 mo
164.267 21.7593 163.893 21.7749 163.51 21.8071 cv
154.828 22.4868 152.82 30.5605 153.52 37.6504 cv
154.27 44.499 157.23 51.5522 164.788 51.5522 cv
165.154 51.5522 165.532 51.5356 165.92 51.5015 cv
174.285 50.8755 176.302 43.0449 175.841 35.8374 cv
175.445 29.0405 172.432 21.7583 164.629 21.7593 cv
164.629 21.7593 li
cp
165.373 47.4248 mo
165.431 47.4248 165.488 47.4238 165.546 47.4214 cv
165.575 47.4204 165.603 47.4185 165.631 47.4146 cv
169.002 46.9946 170.653 42.9478 170.159 36.3115 cv
169.694 30.0674 167.525 26.6284 164.051 26.6284 cv
163.965 26.6289 li
163.923 26.6299 163.88 26.6333 163.838 26.6392 cv
160.324 27.1509 158.692 30.9004 159.246 37.1973 cv
159.817 43.6973 162.051 47.4248 165.373 47.4248 cv
165.373 47.4248 li
cp
164.63 21.7593 mo
164.63 22.7593 li
164.63 22.7593 li
173.396 22.7593 174.663 32.814 174.843 35.9014 cv
175.109 40.0693 174.766 49.8369 165.833 50.5054 cv
165.479 50.5361 165.127 50.5522 164.788 50.5522 cv
157.088 50.5522 155.046 42.4004 154.515 37.5522 cv
154.232 34.6938 154.195 29.3794 157.11 25.8979 cv
158.648 24.061 160.828 23.02 163.594 22.8037 cv
163.944 22.7739 164.292 22.7593 164.629 22.7593 cv
164.63 21.7593 li
164.63 21.7593 li
cp
f
196.348 20.6167 mo
194.168 20.6968 191.989 20.7866 189.811 20.8862 cv
190.12 27.6479 190.429 34.4092 190.737 41.1709 cv
190.785 43.0928 190.735 44.6211 188.126 44.748 cv
188.021 44.7534 187.919 44.7559 187.821 44.7559 cv
185.502 44.7559 185.312 43.2856 185.175 41.4463 cv
184.814 34.6875 184.454 27.9282 184.093 21.1694 cv
181.915 21.2856 179.737 21.4116 177.56 21.5469 cv
177.988 28.4199 178.415 35.2925 178.843 42.1655 cv
179.192 47.6484 182.304 50.0566 187.487 50.0566 cv
187.781 50.0566 188.082 50.0488 188.388 50.0337 cv
194.19 49.7495 197.314 47.0625 197.108 41.2607 cv
196.855 34.3794 196.601 27.498 196.348 20.6167 cv
196.348 20.6167 li
cp
195.385 21.6533 mo
195.729 30.9756 li
196.109 41.2964 li
196.287 46.3076 193.818 48.7666 188.338 49.0352 cv
188.049 49.0493 187.765 49.0566 187.487 49.0566 cv
182.572 49.0566 180.143 46.8467 179.841 42.1035 cv
179.2 31.7939 li
178.62 22.4834 li
180.129 22.3916 181.638 22.3047 183.147 22.2222 cv
183.635 31.3613 li
184.178 41.5205 li
184.304 43.207 184.493 45.7559 187.821 45.7559 cv
187.936 45.7559 188.054 45.7529 188.175 45.7471 cv
191.846 45.5684 191.778 42.8003 191.736 41.1255 cv
191.269 30.8828 li
190.855 21.8403 li
192.365 21.7734 193.875 21.7109 195.385 21.6533 cv
195.385 21.6533 li
cp
f
221.642 20.1147 mo
217.022 20.1279 212.403 20.1841 207.784 20.2832 cv
207.988 29.7803 208.192 39.2773 208.396 48.7744 cv
210.479 48.73 212.563 48.6943 214.646 48.668 cv
214.596 44.7354 214.546 40.8027 214.496 36.8701 cv
216.787 36.8408 219.078 36.8223 221.369 36.8149 cv
221.363 35.1162 221.357 33.417 221.353 31.7183 cv
219.045 31.7261 216.738 31.7441 214.431 31.7734 cv
214.405 29.6963 214.378 27.6191 214.352 25.5415 cv
216.787 25.5107 219.222 25.4917 221.657 25.4849 cv
221.652 23.6948 221.647 21.9048 221.642 20.1147 cv
221.642 20.1147 li
cp
220.645 21.1182 mo
220.654 24.4883 li
218.565 24.4971 216.446 24.5151 214.339 24.5415 cv
214.074 24.5449 213.821 24.6533 213.636 24.8433 cv
213.451 25.0332 213.349 25.2891 213.352 25.5542 cv
213.431 31.7861 li
213.435 32.0513 213.543 32.3042 213.733 32.4893 cv
213.92 32.6719 214.17 32.7734 214.431 32.7734 cv
214.436 32.7734 214.439 32.7734 214.444 32.7734 cv
216.415 32.7485 218.385 32.7314 220.355 32.7222 cv
220.366 35.8188 li
218.405 35.8281 216.444 35.8452 214.483 35.8701 cv
213.931 35.8774 213.489 36.3306 213.496 36.8828 cv
213.57 42.7202 li
213.633 47.6816 li
212.214 47.7012 210.793 47.7256 209.374 47.7539 cv
208.806 21.2622 li
212.738 21.1831 216.711 21.1348 220.645 21.1182 cv
220.645 21.1182 li
cp
f
234.535 38.106 mo
233.112 38.085 231.689 38.0679 230.267 38.0552 cv
230.836 33.8921 231.414 29.729 232.002 25.5674 cv
232.34 25.5708 232.679 25.5752 233.017 25.5791 cv
233.533 29.7544 234.039 33.9302 234.535 38.106 cv
234.535 38.106 li
cp
227.32 20.1206 mo
225.518 29.6113 223.781 39.1084 222.112 48.6118 cv
222.669 48.6104 223.226 48.6099 223.783 48.6099 cv
225.454 48.6099 227.125 48.6157 228.796 48.6279 cv
229.005 46.8262 229.216 45.0244 229.428 43.2231 cv
231.343 43.2383 233.257 43.2607 235.171 43.2915 cv
235.367 45.0977 235.562 46.9043 235.754 48.7109 cv
237.916 48.7471 240.078 48.793 242.239 48.8491 cv
240.795 39.3091 239.283 29.7734 237.704 20.2427 cv
234.243 20.1777 230.782 20.1372 227.32 20.1206 cv
227.32 20.1206 li
cp
234.535 39.106 mo
234.818 39.106 235.088 38.9858 235.278 38.7754 cv
235.471 38.5615 235.563 38.2744 235.528 37.9878 cv
235.032 33.8105 234.525 29.6333 234.009 25.4565 cv
233.947 24.9595 233.528 24.585 233.028 24.5791 cv
232.695 24.5752 li
232.012 24.5674 li
232.009 24.5674 232.005 24.5674 232.002 24.5674 cv
231.504 24.5674 231.081 24.9336 231.012 25.4277 cv
230.424 29.5908 229.846 33.7554 229.275 37.9194 cv
229.237 38.2041 229.322 38.4922 229.51 38.7095 cv
229.698 38.9268 229.971 39.0527 230.258 39.0552 cv
231.679 39.0679 233.1 39.085 234.521 39.106 cv
234.525 39.106 234.53 39.106 234.535 39.106 cv
234.535 39.106 li
cp
228.147 21.125 mo
231.048 21.1421 233.969 21.1768 236.854 21.2275 cv
238.312 30.0488 239.729 38.9844 241.071 47.8193 cv
239.6 47.7837 238.127 47.7529 236.654 47.7266 cv
236.493 46.2119 236.33 44.6978 236.165 43.1836 cv
236.11 42.6821 235.691 42.2998 235.187 42.2915 cv
233.271 42.2607 231.354 42.2383 229.436 42.2231 cv
229.433 42.2231 229.431 42.2231 229.428 42.2231 cv
228.921 42.2231 228.494 42.6025 228.435 43.1064 cv
228.258 44.6113 228.081 46.1167 227.906 47.6221 cv
226.532 47.6138 225.157 47.6099 223.783 47.6099 cv
223.304 47.6104 li
224.851 38.8306 226.479 29.9302 228.147 21.125 cv
228.147 21.125 li
cp
f
245.343 20.4253 mo
245.066 29.9209 244.791 39.416 244.516 48.9116 cv
246.651 48.9736 248.786 49.0449 250.922 49.1265 cv
251.282 39.6338 251.644 30.1411 252.004 20.6489 cv
249.784 20.5645 247.563 20.4897 245.343 20.4253 cv
245.343 20.4253 li
cp
246.313 21.4546 mo
247.864 21.502 249.416 21.5537 250.967 21.6108 cv
250.469 34.71 li
249.961 48.0898 li
248.488 48.0356 247.017 47.9863 245.544 47.9419 cv
246.313 21.4546 li
246.313 21.4546 li
cp
f
255.393 20.7852 mo
254.988 30.2759 254.584 39.7666 254.18 49.2578 cv
258.567 49.4443 262.953 49.6714 267.337 49.9395 cv
267.45 48.0874 267.563 46.2354 267.676 44.3833 cv
265.342 44.2407 263.008 44.1094 260.673 43.9897 cv
261.064 36.356 261.455 28.7222 261.847 21.0884 cv
259.696 20.978 257.544 20.877 255.393 20.7852 cv
255.393 20.7852 li
cp
256.349 21.8276 mo
257.832 21.8926 259.314 21.9624 260.797 22.0366 cv
260.258 32.5459 li
259.674 43.9385 li
259.66 44.2036 259.753 44.4629 259.931 44.6597 cv
260.108 44.8564 260.356 44.9751 260.622 44.9883 cv
262.597 45.0898 264.608 45.2012 266.617 45.3213 cv
266.508 47.1006 li
266.399 48.8809 li
262.693 48.6597 258.942 48.4653 255.222 48.3018 cv
256.005 29.9077 li
256.349 21.8276 li
256.349 21.8276 li
cp
f
271.805 21.666 mo
271.191 31.1455 270.577 40.625 269.964 50.1045 cv
274.256 50.3823 278.546 50.6987 282.833 51.0542 cv
282.986 49.2051 283.14 47.356 283.293 45.5068 cv
281.08 45.3237 278.866 45.1504 276.651 44.9873 cv
276.804 42.9155 276.956 40.8438 277.109 38.772 cv
279.236 38.9282 281.362 39.0942 283.489 39.2695 cv
283.629 37.5762 283.768 35.8833 283.907 34.1899 cv
281.767 34.0137 279.625 33.8462 277.483 33.689 cv
277.636 31.6167 277.788 29.5449 277.94 27.4731 cv
280.209 27.6401 282.477 27.8174 284.743 28.0054 cv
284.892 26.2217 285.039 24.4375 285.187 22.6538 cv
280.729 22.2842 276.268 21.9551 271.805 21.666 cv
271.805 21.666 li
cp
272.738 22.729 mo
276.523 22.9795 280.34 23.2612 284.107 23.5684 cv
283.829 26.9268 li
281.892 26.769 279.953 26.6187 278.014 26.4761 cv
277.989 26.4741 277.965 26.4731 277.94 26.4731 cv
277.701 26.4731 277.47 26.5591 277.287 26.7163 cv
277.086 26.8892 276.963 27.1353 276.943 27.3999 cv
276.486 33.6157 li
276.467 33.8804 276.553 34.1416 276.727 34.3423 cv
276.899 34.543 277.146 34.667 277.41 34.6865 cv
279.217 34.8188 281.022 34.959 282.828 35.105 cv
282.701 36.6479 li
282.574 38.1914 li
280.777 38.0459 278.98 37.9067 277.183 37.7749 cv
277.158 37.7729 277.133 37.772 277.108 37.772 cv
276.59 37.772 276.151 38.1724 276.112 38.6982 cv
275.658 44.8511 li
275.654 44.9141 li
275.613 45.4648 276.027 45.9438 276.578 45.9844 cv
278.457 46.123 280.336 46.2686 282.214 46.4214 cv
281.919 49.9756 li
278.31 49.6816 274.654 49.4121 271.026 49.1719 cv
271.882 35.9497 li
272.738 22.729 li
272.738 22.729 li
cp
f
294.251 47.209 mo
293.527 47.209 292.744 47.0493 291.978 46.7134 cv
292.549 40.7163 293.119 34.7197 293.689 28.7231 cv
294.264 28.5796 294.815 28.502 295.335 28.502 cv
297.803 28.502 299.519 30.2544 299.295 34.9526 cv
299.182 37.6211 298.6 43.1563 297.041 45.9121 cv
296.528 46.751 295.476 47.209 294.251 47.209 cv
294.251 47.209 li
cp
292.669 22.8604 mo
291.368 22.8604 290.214 22.9092 289.134 22.9092 cv
288.689 22.9092 288.258 22.9009 287.833 22.8774 cv
287.015 32.3418 286.196 41.8057 285.378 51.2695 cv
286.322 51.312 287.307 51.3599 288.286 51.4487 cv
289.736 51.5801 291.137 51.8291 292.612 52.0903 cv
293.79 52.2788 294.865 52.3901 295.854 52.3901 cv
299.089 52.3901 301.41 51.1997 303.367 47.6118 cv
305.51 43.7495 306.783 33.1235 305.283 28.8926 cv
304.072 25.4438 300.648 23.4966 297.104 23.1079 cv
295.429 22.9097 293.975 22.8604 292.669 22.8604 cv
292.669 22.8604 li
cp
294.251 48.209 mo
295.854 48.209 297.215 47.5454 297.911 46.4043 cv
299.906 42.8774 300.26 35.7915 300.294 35 cv
300.429 32.167 299.892 30.0962 298.698 28.8442 cv
297.849 27.9536 296.717 27.502 295.335 27.502 cv
294.747 27.502 294.112 27.5864 293.446 27.7529 cv
293.035 27.856 292.734 28.2065 292.694 28.6284 cv
292.676 28.8193 li
290.982 46.6187 li
290.941 47.0483 291.181 47.4561 291.576 47.6294 cv
292.442 48.0088 293.367 48.209 294.251 48.209 cv
294.251 48.209 li
cp
292.669 23.8604 mo
294.227 23.8604 295.598 23.9365 296.994 24.1021 cv
299.783 24.4077 303.178 25.9141 304.341 29.2266 cv
305.771 33.2617 304.421 43.6499 302.489 47.1328 cv
300.818 50.1963 298.958 51.3901 295.854 51.3901 cv
294.987 51.3901 293.979 51.2959 292.748 51.0986 cv
291.261 50.8354 289.856 50.5869 288.377 50.4526 cv
287.737 50.395 287.094 50.354 286.464 50.3208 cv
288.748 23.9067 li
288.872 23.9087 289.001 23.9092 289.134 23.9092 cv
289.656 23.9092 290.194 23.8979 290.759 23.8862 cv
291.362 23.8735 291.996 23.8604 292.669 23.8604 cv
292.669 23.8604 li
cp
f
310.093 47.5488 mo
308.339 47.5488 306.852 48.8589 306.652 50.5889 cv
306.437 52.4585 307.775 54.23 309.688 54.4619 cv
309.826 54.4785 309.965 54.4868 310.102 54.4868 cv
311.842 54.4868 313.341 53.1567 313.561 51.4258 cv
313.797 49.5591 312.455 47.8086 310.521 47.5747 cv
310.377 47.5571 310.234 47.5488 310.093 47.5488 cv
310.093 47.5488 li
cp
312.529 24.8003 mo
309.676 24.8003 309.105 27.0391 309.073 27.981 cv
308.441 35.2471 309.318 39.8491 308.765 45.5083 cv
310.07 45.6631 311.375 45.8208 312.68 45.9824 cv
313.553 40.2046 315.486 36.1006 316.606 28.8936 cv
316.774 27.8901 316.776 25.2744 313.274 24.8472 cv
313.01 24.8154 312.762 24.8003 312.529 24.8003 cv
312.529 24.8003 li
cp
310.093 48.5488 mo
310.194 48.5488 310.298 48.5547 310.401 48.5674 cv
311.067 48.6479 311.66 48.9814 312.069 49.5068 cv
312.473 50.0234 312.649 50.6606 312.568 51.2998 cv
312.412 52.5264 311.329 53.4868 310.102 53.4868 cv
310.005 53.4868 309.906 53.481 309.808 53.4692 cv
308.459 53.3057 307.488 52.0649 307.646 50.7031 cv
307.787 49.4751 308.839 48.5488 310.093 48.5488 cv
310.093 48.5488 li
cp
312.529 25.8003 mo
312.529 25.8003 li
312.726 25.8003 312.937 25.814 313.153 25.8398 cv
314.148 25.9614 314.854 26.291 315.249 26.8193 cv
315.772 27.5205 315.665 28.458 315.618 28.7397 cv
315.041 32.4536 314.25 35.3115 313.484 38.0757 cv
312.862 40.3237 312.271 42.4619 311.848 44.8726 cv
311.18 44.7905 310.512 44.7095 309.843 44.6299 cv
310.017 42.229 309.959 39.9956 309.897 37.6479 cv
309.823 34.7666 309.746 31.7876 310.069 28.0674 cv
310.071 28.0503 310.072 28.0327 310.072 28.0156 cv
310.091 27.4956 310.32 25.8003 312.529 25.8003 cv
312.529 25.8003 li
cp
f
228.889 78.9478 mo
254.566 116.007 li
298.929 107.959 li
290.881 152.321 li
327.94 178 li
290.881 203.678 li
298.929 248.04 li
254.566 239.992 li
228.889 277.051 li
203.211 239.992 li
158.848 248.04 li
166.896 203.678 li
129.837 178 li
166.896 152.321 li
158.848 107.959 li
203.211 116.007 li
228.889 78.9478 li
cp
1 1 1 rgb
f
338.754 177.912 mo
338.748 177.904 338.746 177.891 338.74 177.881 cv
338.733 177.874 338.729 177.863 338.725 177.853 cv
332.261 164.64 317.169 149.916 296.552 138.977 cv
280.369 130.323 262.854 125.201 247.695 124.013 cv
237.809 118.699 231.166 108.569 221.771 102.26 cv
216.898 98.9819 211.484 96.3813 205.762 94.5386 cv
199.592 92.5503 192.541 90.9927 185.874 91.7183 cv
185.518 91.7563 185.164 91.8071 184.81 91.8687 cv
184.302 91.9595 183.658 92.1724 183.253 92.5366 cv
182.145 93.4565 182.344 94.7476 183.01 95.7788 cv
183.303 96.1938 183.675 96.5679 183.99 96.9683 cv
189.906 104.755 194.406 114.04 196.642 123.426 cv
197.707 127.892 198.35 132.469 198.232 137.075 cv
198.215 137.564 197.938 139.842 197.652 142.115 cv
195.877 143.807 194.156 145.568 192.508 147.405 cv
188.419 151.966 184.707 156.949 181.332 162.189 cv
177.825 167.632 174.362 172.667 169.073 176.695 cv
167.716 177.728 166.28 178.675 164.793 179.536 cv
164.59 179.446 164.388 179.358 164.171 179.256 cv
160.683 177.679 157.334 175.831 154.094 173.858 cv
152.846 173.193 150.766 173.266 150.443 175.011 cv
150.248 176.065 151.395 178.16 150.922 182.746 cv
150.906 182.899 150.79 183.46 150.676 184.113 cv
148.142 184.312 145.541 184.166 143.279 183.085 cv
140.568 181.785 138.613 179.42 136.825 177.125 cv
132.97 172.163 130.104 166.549 126.293 161.629 cv
122.414 156.617 117.792 152.629 112.513 149.453 cv
112.084 149.19 111.666 148.863 111.201 148.673 cv
109.5 147.858 108.369 149.312 108.292 151.019 cv
108.262 154.712 110.087 158.23 110.94 161.733 cv
111.939 165.864 112.387 170.151 112.451 174.43 cv
112.584 181.942 111.482 191.284 118.096 196.56 cv
118.354 196.753 118.612 196.949 118.853 197.158 cv
118.855 197.16 118.859 197.164 118.857 197.167 cv
118.857 197.17 118.855 197.171 118.855 197.174 cv
118.793 197.267 118.725 197.362 118.652 197.455 cv
114.643 202.635 114.848 209.851 115.752 215.771 cv
116.563 221.128 117.877 227.66 121.103 232.267 cv
122.387 234.417 125.393 234.62 127.109 232.75 cv
129.383 230.222 130.813 227.055 132.333 224.146 cv
135.393 218.275 138.386 212.089 142.998 207.103 cv
145.147 204.773 147.494 203.203 150.043 202.228 cv
150.24 202.551 150.405 202.81 150.449 202.895 cv
152.092 206.178 151.653 208.025 152.109 208.758 cv
152.867 209.968 154.76 209.477 155.681 208.647 cv
158.016 206.321 160.418 204.029 162.966 201.863 cv
163.137 201.715 163.297 201.58 163.457 201.447 cv
168.906 202.467 173.741 205.032 177.805 208.644 cv
182.034 212.397 185.055 216.861 189.746 220.07 cv
189.723 220.129 189.707 220.193 189.684 220.253 cv
188.041 225.055 185.723 229.099 182.996 233.084 cv
181.552 235.15 179.803 237.223 178.721 239.565 cv
178.641 239.75 178.553 239.935 178.479 240.27 cv
176.795 245.583 192.293 243.054 194.084 242.737 cv
199.643 241.475 205.035 239.142 209.699 235.313 cv
211.51 233.825 213.201 232.138 214.783 230.31 cv
215.184 230.469 215.586 230.619 215.99 230.762 cv
215.92 231.033 215.853 231.303 215.779 231.576 cv
215.057 234.137 214.059 236.83 213.736 239.51 cv
213.717 239.723 213.688 239.935 213.717 240.288 cv
213.643 246.076 227.137 237.283 228.756 236.224 cv
229.951 235.348 231.123 234.412 232.258 233.414 cv
235.014 233.495 237.783 233.479 240.562 233.32 cv
242.438 233.215 244.338 233.171 246.35 233.147 cv
248.609 233.114 250.943 233.097 253.309 233.02 cv
262.377 232.713 272.855 231.541 283.53 223.549 cv
284.734 222.633 288.449 219.901 287.826 216.207 cv
287.51 214.334 286.196 213.145 284.76 212.382 cv
285.16 210.852 285.463 209.293 285.596 207.716 cv
285.631 207.318 285.826 202.774 285.182 202.827 cv
285.117 202.773 279.547 206.791 279.048 207.071 cv
278.918 207.138 278.781 207.203 278.648 207.268 cv
278.605 206.772 278.572 206.273 278.51 205.779 cv
278.445 205.258 277.468 199.384 276.756 199.64 cv
276.672 199.591 271.533 206.396 271.053 206.903 cv
271.04 206.917 271.024 206.929 271.011 206.943 cv
271.044 206.186 271.059 205.429 271.047 204.67 cv
271.038 204.141 270.717 198.189 269.982 198.341 cv
269.928 198.302 267.475 200.784 265.592 202.673 cv
265.404 200.701 264.857 198.845 264.055 197.117 cv
264.1 196.862 264.121 196.712 264.113 196.708 cv
264.082 196.602 263.967 196.559 263.797 196.559 cv
259.908 188.833 251.025 183.75 247.318 182.181 cv
249.318 176.549 252.816 172.629 257.427 170.801 cv
257.433 171.622 257.465 172.441 257.527 173.259 cv
257.568 173.784 258.25 179.711 258.993 179.511 cv
259.036 179.542 263.985 174.221 265.252 173.016 cv
265.162 174.527 265.146 176.042 265.241 177.554 cv
265.277 178.08 265.874 184.014 266.617 183.828 cv
266.66 183.86 272.576 177.63 273.171 177.209 cv
273.624 176.868 274.102 176.542 274.592 176.228 cv
274.545 176.519 274.498 176.812 274.444 177.097 cv
274.29 177.835 271.443 186.22 271.521 186.271 cv
271.667 187.075 276.857 185.222 277.317 185.049 cv
278.882 184.427 280.394 183.651 281.864 182.786 cv
280.686 184.832 277.467 190.171 277.527 190.231 cv
277.506 191.048 282.917 190.518 283.396 190.461 cv
285.514 190.175 287.603 189.632 289.646 188.935 cv
288.234 191.241 286.508 194.043 286.551 194.085 cv
286.512 194.905 291.904 194.474 292.381 194.428 cv
294.994 194.121 297.564 193.421 300.067 192.514 cv
301.799 193.455 303.723 194.033 305.807 194.201 cv
307.773 194.36 309.838 194.172 311.955 193.646 cv
322.59 190.797 336.106 186.944 338.681 181.59 cv
339.253 180.372 339.283 179.066 338.754 177.912 cv
cp
.819608 .819608 .819608 rgb
f
215.004 194.698 mo
216.093 193.199 244.362 180.918 247.499 185.882 cv
250.222 187.481 247.55 207.764 238.01 219.921 cv
229.495 233.183 214.557 238.391 214.746 235.457 cv
214.4 233.506 219.508 221.067 218.871 211.933 cv
219.219 202.295 213.617 195.973 215.004 194.698 cv
cp
.196078 .282353 .317647 rgb
f
248.648 185.054 mo
248.809 185.05 248.486 185.055 248.648 185.054 cv
248.648 185.054 li
cp
.180392 .258824 .286275 rgb
f
248.648 185.054 mo
248.556 185.054 246.642 197.864 246.424 198.899 cv
245.104 204.622 243.154 210.18 240.365 215.112 cv
237.552 220.084 233.877 224.187 229.766 227.539 cv
227.613 229.288 225.356 230.844 223.013 232.173 cv
220.868 233.386 218.25 234.945 215.799 234.969 cv
216.283 231.347 217.641 227.849 218.434 224.301 cv
219.297 220.418 220.008 216.324 219.709 212.252 cv
219.699 212.145 219.689 212.035 219.682 211.928 cv
219.714 208.668 219.2 205.412 218.182 202.333 cv
217.984 201.708 214.952 194.562 214.287 195.127 cv
214.209 195.2 216.831 201.823 217.001 202.484 cv
217.819 205.522 218.199 208.674 218.064 211.825 cv
218.033 217.039 217.107 221.831 215.779 226.747 cv
215.057 229.308 214.059 232.001 213.736 234.682 cv
213.717 234.894 213.688 235.106 213.717 235.458 cv
213.643 241.248 227.137 232.454 228.756 231.395 cv
233.557 227.877 237.962 223.395 241.246 217.806 cv
244.349 212.523 246.471 206.468 247.715 200.192 cv
247.893 199.195 249.856 185.021 248.648 185.054 cv
cp
f
310.197 181.22 mo
310.178 181.22 298.041 189.814 286.551 189.256 cv
295.463 180.437 294.525 171.285 294.505 171.279 cv
299.761 174.564 304.99 177.88 310.197 181.22 cv
cp
.788235 .788235 .776471 rgb
f
305.366 178.115 mo
302.021 180.991 295.135 186.346 287.577 188.177 cv
287.248 188.538 286.91 188.898 286.551 189.256 cv
298.041 189.814 310.178 181.22 310.197 181.22 cv
308.586 180.188 306.981 179.144 305.366 178.115 cv
cp
1 1 1 rgb
f
307.352 181.605 mo
300.827 185.59 294.294 187.671 287.076 189.041 cv
291.707 185.905 294.987 179.313 295.551 173.468 cv
295.564 173.416 295.575 173.363 295.588 173.309 cv
295.627 173.341 295.664 173.375 295.699 173.41 cv
299.668 176.211 303.89 178.672 307.938 181.237 cv
307.742 181.358 307.547 181.481 307.352 181.605 cv
306.609 182.057 307.352 181.605 307.352 181.605 cv
cp
310.5 179.958 mo
306.04 177.047 301.518 174.191 296.936 171.401 cv
296.225 170.787 294.828 170.579 293.961 170.256 cv
293.708 169.789 294.293 170.885 294.231 170.774 cv
294.088 170.903 293.941 171.023 293.789 171.138 cv
293.701 171.236 293.527 171.275 293.469 171.469 cv
293.404 171.532 293.445 171.691 293.445 171.813 cv
293.645 175.002 292.67 178.34 291.411 181.157 cv
291.088 181.828 286.48 189.188 286.551 189.256 cv
286.512 190.076 291.904 189.646 292.381 189.6 cv
295.291 189.256 298.153 188.445 300.922 187.38 cv
304.336 186.067 307.813 184.423 310.881 182.246 cv
311.343 183.11 311.355 179.713 310.5 179.958 cv
310.5 179.958 311.354 179.713 310.5 179.958 cv
cp
.180392 .258824 .286275 rgb
f
301.17 176.92 mo
301.151 176.919 289.095 185.74 277.527 185.402 cv
286.341 176.412 285.244 167.276 285.225 167.267 cv
290.564 170.457 295.879 173.675 301.17 176.92 cv
cp
.788235 .788235 .776471 rgb
f
296.615 174.121 mo
294.02 176.305 286.785 181.989 278.736 184.083 cv
278.354 184.521 277.956 184.959 277.527 185.402 cv
289.095 185.74 301.151 176.919 301.17 176.92 cv
299.65 175.989 298.141 175.047 296.615 174.121 cv
cp
1 1 1 rgb
f
298.314 177.358 mo
291.823 181.465 285.287 183.67 278.055 185.175 cv
282.658 181.951 285.844 175.296 286.314 169.441 cv
286.325 169.386 286.337 169.333 286.346 169.283 cv
286.387 169.312 286.425 169.345 286.461 169.379 cv
290.502 172.106 294.783 174.49 298.9 176.977 cv
298.704 177.102 298.51 177.23 298.314 177.358 cv
297.578 177.822 298.314 177.358 298.314 177.358 cv
cp
301.451 175.651 mo
296.918 172.823 292.326 170.051 287.67 167.344 cv
286.946 166.747 285.535 166.566 284.662 166.257 cv
284.398 165.794 285.005 166.88 284.941 166.772 cv
284.799 166.903 284.654 167.028 284.502 167.145 cv
284.416 167.244 284.244 167.285 284.186 167.483 cv
284.123 167.546 284.165 167.706 284.168 167.824 cv
284.422 171.011 283.498 174.365 282.279 177.21 cv
281.966 177.884 277.457 185.333 277.527 185.402 cv
277.506 186.22 282.917 185.689 283.396 185.633 cv
286.316 185.238 289.182 184.368 291.945 183.252 cv
295.359 181.875 298.828 180.168 301.875 177.932 cv
302.353 178.787 302.307 175.39 301.451 175.651 cv
301.451 175.651 302.307 175.388 301.451 175.651 cv
cp
.180392 .258824 .286275 rgb
f
270.312 152.229 mo
270.238 152.177 263.848 166.528 266.617 179 cv
273.025 167.756 281.914 167.63 281.866 167.621 cv
278.07 162.517 274.219 157.388 270.312 152.229 cv
cp
.788235 .788235 .776471 rgb
f
266.063 175.242 mo
266.172 176.502 266.347 177.76 266.617 179 cv
271.717 170.038 278.43 168.127 280.885 167.733 cv
278.293 167.847 271.962 168.855 266.063 175.242 cv
cp
1 1 1 rgb
f
270.336 155.334 mo
270.427 155.107 270.518 154.88 270.607 154.652 cv
273.613 158.663 276.531 162.831 279.707 166.648 cv
279.744 166.682 279.783 166.715 279.817 166.754 cv
279.77 166.774 279.723 166.794 279.674 166.817 cv
274.285 168.211 268.691 172.784 266.713 178.388 cv
266.634 170.318 267.46 162.877 270.336 155.334 cv
270.336 155.334 270.012 156.189 270.336 155.334 cv
cp
271.48 151.744 mo
271.605 150.795 268.344 151.238 269.235 151.625 cv
267.563 155.202 266.527 159.196 265.851 163.096 cv
265.3 166.257 265.041 169.504 265.241 172.725 cv
265.277 173.251 265.874 179.185 266.617 179 cv
266.66 179.031 272.576 172.802 273.171 172.381 cv
275.563 170.579 278.516 169.045 281.516 168.814 cv
281.625 168.796 281.781 168.816 281.829 168.741 cv
282.005 168.65 282.014 168.461 282.094 168.359 cv
282.179 168.178 282.273 168.006 282.372 167.837 cv
282.262 167.79 283.363 168.254 282.895 168.048 cv
282.472 167.184 282.09 165.734 281.422 165.068 cv
278.18 160.597 274.867 156.155 271.48 151.744 cv
271.607 150.797 271.48 151.744 271.48 151.744 cv
cp
.180392 .258824 .286275 rgb
f
262.357 147.852 mo
262.283 147.8 256.04 162.253 258.993 174.682 cv
265.3 163.336 274.249 163.075 274.201 163.064 cv
270.311 158.022 266.361 152.951 262.357 147.852 cv
cp
.788235 .788235 .776471 rgb
f
262.426 150.958 mo
262.514 150.731 262.6 150.499 262.688 150.271 cv
265.77 154.238 268.765 158.359 272.015 162.126 cv
272.053 162.163 272.092 162.199 272.125 162.231 cv
272.079 162.253 272.032 162.272 271.983 162.292 cv
266.576 163.776 261.002 168.431 259.084 174.069 cv
258.897 165.999 259.63 158.545 262.426 150.958 cv
262.426 150.958 262.107 151.819 262.426 150.958 cv
cp
263.529 147.349 mo
263.641 146.401 260.361 146.891 261.267 147.267 cv
259.63 150.866 258.641 154.879 258.012 158.792 cv
257.5 161.961 257.277 165.209 257.527 168.43 cv
257.568 168.955 258.25 174.882 258.993 174.682 cv
259.041 174.716 264.916 168.391 265.508 167.958 cv
267.894 166.123 270.848 164.546 273.865 164.267 cv
273.977 164.247 274.131 164.263 274.181 164.189 cv
274.354 164.091 274.363 163.905 274.442 163.799 cv
274.525 163.621 274.615 163.446 274.712 163.276 cv
274.602 163.227 275.719 163.678 275.242 163.477 cv
274.807 162.623 274.401 161.178 273.717 160.519 cv
270.395 156.097 266.996 151.708 263.529 147.349 cv
263.641 146.403 263.529 147.349 263.529 147.349 cv
cp
.180392 .258824 .286275 rgb
f
292.934 167.334 mo
292.928 167.334 282.916 178.921 271.521 181.442 cv
278.287 170.487 275.184 161.844 275.162 161.841 cv
281.088 163.638 287.012 165.468 292.934 167.334 cv
cp
.788235 .788235 .776471 rgb
f
288.318 165.87 mo
285.389 169.937 279.391 177.335 271.926 180.748 cv
271.793 180.981 271.661 181.21 271.521 181.442 cv
282.916 178.921 292.928 167.334 292.934 167.334 cv
291.39 166.848 289.859 166.351 288.318 165.87 cv
cp
1 1 1 rgb
f
290.217 168.461 mo
284.715 174.073 278.753 177.835 271.988 181.088 cv
275.829 176.808 277.54 169.521 276.705 163.695 cv
276.705 163.636 276.705 163.584 276.705 163.53 cv
276.748 163.55 276.791 163.574 276.836 163.598 cv
281.391 165.264 286.114 166.531 290.709 167.949 cv
290.546 168.118 290.379 168.291 290.217 168.461 cv
289.59 169.1 290.217 168.461 290.217 168.461 cv
cp
292.936 166.028 mo
287.85 164.381 282.729 162.808 277.57 161.314 cv
276.729 160.908 275.311 161.08 274.389 160.994 cv
274.029 160.61 274.861 161.519 274.775 161.428 cv
274.664 161.589 274.549 161.748 274.429 161.903 cv
274.364 162.017 274.205 162.102 274.193 162.307 cv
274.146 162.382 274.223 162.53 274.249 162.644 cv
275.205 165.691 275.027 169.193 274.444 172.269 cv
274.29 173.007 271.443 181.391 271.521 181.442 cv
271.667 182.246 276.857 180.394 277.317 180.22 cv
280.098 179.114 282.73 177.558 285.215 175.788 cv
288.279 173.605 291.329 171.08 293.848 168.145 cv
294.506 168.863 293.72 165.559 292.936 166.028 cv
292.936 166.028 293.72 165.559 292.936 166.028 cv
cp
.180392 .258824 .286275 rgb
f
265.747 220.115 mo
265.698 220.145 272.016 206.078 269.982 193.512 cv
263.351 204.394 255.323 204.621 255.306 204.652 cv
258.924 209.693 262.407 214.852 265.747 220.115 cv
cp
.788235 .788235 .776471 rgb
f
269.982 193.512 mo
269.129 194.908 268.254 196.125 267.377 197.192 cv
268.162 205.17 265.916 213.408 264.4 218.031 cv
264.848 218.727 265.303 219.417 265.747 220.115 cv
265.698 220.145 272.016 206.078 269.982 193.512 cv
cp
1 1 1 rgb
f
265.789 217.014 mo
265.705 217.237 265.621 217.459 265.535 217.686 cv
262.942 213.596 260.313 209.395 257.326 205.595 cv
257.291 205.563 257.258 205.527 257.225 205.493 cv
257.27 205.472 257.312 205.454 257.356 205.43 cv
262.338 203.982 267.695 199.612 269.862 194.116 cv
269.633 202.184 268.531 209.557 265.789 217.014 cv
265.789 217.014 266.102 216.167 265.789 217.014 cv
cp
264.707 220.57 mo
264.58 221.507 267.457 221.163 266.683 220.748 cv
268.244 217.231 269.317 213.292 270.09 209.424 cv
270.717 206.295 271.103 203.066 271.047 199.842 cv
271.038 199.313 270.717 193.361 269.982 193.512 cv
269.897 193.453 264.025 199.474 263.495 199.908 cv
261.19 201.66 258.42 203.172 255.615 203.447 cv
255.512 203.469 255.367 203.452 255.322 203.525 cv
255.159 203.622 255.151 203.808 255.082 203.917 cv
255.004 204.098 254.919 204.27 254.828 204.44 cv
254.934 204.487 253.893 204.039 254.338 204.237 cv
254.75 205.094 255.129 206.536 255.756 207.197 cv
258.815 211.625 261.799 216.083 264.707 220.57 cv
264.58 221.511 264.707 220.57 264.707 220.57 cv
cp
.180392 .258824 .286275 rgb
f
246.109 209.53 mo
246.037 209.556 253.16 195.919 264.113 191.878 cv
258.902 203.708 263.03 211.85 262.961 211.847 cv
257.405 210.895 251.78 210.12 246.109 209.53 cv
cp
.788235 .788235 .776471 rgb
f
264.113 191.878 mo
262.857 192.348 261.646 192.946 260.488 193.631 cv
259.148 201.437 260.949 206.872 262.205 209.59 cv
261.388 206.391 260.507 200 264.113 191.878 cv
cp
1 1 1 rgb
f
261.932 211.677 mo
262.277 211.736 262.623 211.788 262.961 211.847 cv
262.961 211.847 262.928 211.766 262.867 211.613 cv
262.557 211.637 262.244 211.66 261.932 211.677 cv
cp
f
248.373 207.862 mo
252.422 201.239 257.515 196.447 263.701 192.293 cv
260.451 197.082 259.863 204.583 261.342 210.232 cv
261.348 210.286 261.354 210.339 261.363 210.394 cv
261.321 210.376 261.275 210.364 261.232 210.346 cv
256.9 209.364 252.418 208.931 248.014 208.469 cv
248.134 208.266 248.253 208.065 248.373 207.862 cv
248.834 207.11 248.373 207.862 248.373 207.862 cv
cp
246.342 210.818 mo
251.197 211.372 256.039 212.007 260.858 212.715 cv
261.663 212.995 262.916 212.62 263.756 212.58 cv
264.127 212.915 263.271 212.127 263.359 212.205 cv
263.439 212.027 263.523 211.855 263.617 211.686 cv
263.66 211.561 263.795 211.457 263.781 211.25 cv
263.817 211.167 263.73 211.037 263.693 210.923 cv
262.478 208.031 262.205 204.531 262.387 201.395 cv
262.423 200.642 264.175 191.916 264.113 191.878 cv
263.872 191.082 259.064 193.674 258.658 193.936 cv
256.13 195.47 253.846 197.465 251.793 199.673 cv
249.26 202.402 246.877 205.507 245.141 208.928 cv
244.416 208.365 245.725 211.44 246.342 210.818 cv
246.342 210.818 245.721 211.44 246.342 210.818 cv
cp
.180392 .258824 .286275 rgb
f
240.693 209.717 mo
240.646 209.757 245.357 194.815 255.426 188.534 cv
252.34 201.276 257.694 208.437 257.633 208.446 cv
251.996 208.681 246.346 209.106 240.693 209.717 cv
cp
.788235 .788235 .776471 rgb
f
242.643 207.597 mo
245.531 200.213 249.715 194.42 255.092 189.031 cv
252.724 194.426 253.404 201.938 255.773 207.196 cv
255.789 207.25 255.804 207.301 255.822 207.35 cv
255.773 207.345 255.729 207.338 255.686 207.332 cv
251.254 207.281 246.779 207.8 242.387 208.27 cv
242.472 208.046 242.557 207.821 242.643 207.597 cv
242.971 206.757 242.643 207.597 242.643 207.597 cv
cp
241.128 210.937 mo
245.975 210.462 250.831 210.067 255.697 209.751 cv
256.537 209.852 257.713 209.221 258.537 209.002 cv
258.955 209.253 257.982 208.657 258.081 208.715 cv
258.133 208.523 258.188 208.334 258.254 208.151 cv
258.275 208.016 258.391 207.889 258.347 207.683 cv
258.365 207.597 258.26 207.484 258.205 207.383 cv
256.537 204.787 255.692 201.396 255.345 198.268 cv
255.26 197.518 255.498 188.559 255.426 188.534 cv
255.049 187.802 250.766 191.37 250.412 191.708 cv
248.186 193.751 246.287 196.2 244.643 198.806 cv
242.613 202.023 240.795 205.589 239.646 209.325 cv
238.846 208.924 240.625 211.682 241.128 210.937 cv
241.128 210.937 240.621 211.685 241.128 210.937 cv
cp
.180392 .258824 .286275 rgb
f
279.392 217.76 mo
279.357 217.778 285.939 207.703 285.182 197.999 cv
278.575 205.625 271.557 205.059 271.541 205.078 cv
274.262 209.232 276.879 213.46 279.392 217.76 cv
cp
.788235 .788235 .776471 rgb
f
271.86 205.082 mo
271.654 205.082 271.541 205.077 271.541 205.078 cv
271.557 205.101 271.57 205.122 271.584 205.144 cv
271.675 205.124 271.766 205.105 271.86 205.082 cv
cp
1 1 1 rgb
f
285.182 197.999 mo
284.258 199.059 283.329 199.96 282.413 200.726 cv
282.218 206.653 279.697 212.388 278.082 215.564 cv
278.521 216.297 278.961 217.023 279.392 217.76 cv
279.357 217.778 285.939 207.703 285.182 197.999 cv
cp
f
279.674 215.413 mo
279.581 215.575 279.488 215.736 279.396 215.897 cv
277.45 212.56 275.5 209.133 273.221 205.981 cv
273.193 205.954 273.166 205.922 273.141 205.893 cv
273.18 205.88 273.221 205.87 273.261 205.859 cv
277.715 205.222 282.719 202.406 285.03 198.445 cv
284.18 204.531 282.651 210.018 279.674 215.413 cv
279.674 215.413 280.011 214.798 279.674 215.413 cv
cp
278.443 218.005 mo
278.26 218.707 280.807 218.71 280.158 218.325 cv
281.801 215.804 283.042 212.917 284.014 210.062 cv
284.803 207.748 285.391 205.335 285.596 202.887 cv
285.631 202.489 285.826 197.945 285.182 197.999 cv
285.117 197.944 279.547 201.961 279.048 202.243 cv
276.906 203.355 274.375 204.249 271.912 204.198 cv
271.821 204.202 271.698 204.175 271.654 204.23 cv
271.504 204.284 271.48 204.425 271.411 204.5 cv
271.328 204.628 271.24 204.753 271.146 204.874 cv
271.234 204.92 270.367 204.487 270.736 204.675 cv
271.021 205.363 271.23 206.488 271.722 207.048 cv
274.008 210.683 276.25 214.337 278.443 218.005 cv
278.26 218.709 278.443 218.005 278.443 218.005 cv
cp
.180392 .258824 .286275 rgb
f
275.385 221.848 mo
275.342 221.881 280.188 207.011 276.756 194.812 cv
271.406 206.551 263.496 207.902 263.49 207.933 cv
267.59 212.442 271.557 217.085 275.385 221.848 cv
cp
.788235 .788235 .776471 rgb
f
276.756 194.812 mo
276.018 196.435 275.227 197.852 274.417 199.102 cv
275.684 206.789 274.277 214.869 273.291 219.292 cv
273.992 220.145 274.693 220.99 275.385 221.848 cv
275.342 221.881 280.188 207.011 276.756 194.812 cv
cp
1 1 1 rgb
f
275.117 218.756 mo
275.055 218.99 274.994 219.226 274.934 219.461 cv
271.956 215.762 268.928 211.95 265.584 208.59 cv
265.545 208.564 265.505 208.533 265.469 208.503 cv
265.516 208.475 265.553 208.452 265.596 208.422 cv
270.347 206.286 275.18 201.188 276.705 195.427 cv
277.381 203.476 277.072 210.96 275.117 218.756 cv
275.117 218.756 275.339 217.87 275.117 218.756 cv
cp
274.398 222.445 mo
274.367 223.401 277.178 222.65 276.371 222.348 cv
277.569 218.627 278.229 214.56 278.588 210.609 cv
278.879 207.411 278.918 204.149 278.51 200.951 cv
278.445 200.429 277.468 194.556 276.756 194.812 cv
276.672 194.762 271.533 201.567 271.053 202.074 cv
268.972 204.135 266.4 206.029 263.67 206.696 cv
263.568 206.73 263.424 206.733 263.39 206.814 cv
263.239 206.929 263.252 207.119 263.194 207.234 cv
263.137 207.422 263.07 207.609 263 207.791 cv
263.109 207.821 262.039 207.524 262.495 207.658 cv
262.992 208.453 263.518 209.835 264.207 210.4 cv
267.682 214.38 271.082 218.393 274.398 222.445 cv
274.367 223.402 274.398 222.445 274.398 222.445 cv
cp
.180392 .258824 .286275 rgb
f
336.782 174.073 mo
322.865 142.5 258.723 112.526 225.226 123.226 cv
223.194 123.851 221.222 124.566 219.313 125.376 cv
219.311 125.39 219.313 125.403 219.313 125.418 cv
219.311 125.418 li
219.311 125.418 li
204.605 130.935 192.727 145.259 189.186 163.577 cv
183.916 191.731 198.029 217.977 217.66 224.111 cv
218.998 224.521 220.328 224.935 221.657 225.356 cv
227.545 226.229 233.896 226.547 240.418 226.171 cv
253.3 225.435 267.838 227.758 282.439 216.761 cv
287.396 213.069 287.174 209.93 280.559 208.566 cv
266.855 205.654 236.627 205.04 244.979 177.402 cv
250.648 158.346 273.56 154.835 297.587 182.834 cv
301.393 187.307 306.791 187.71 311.463 186.552 cv
331.006 181.55 338.148 177.066 336.782 174.073 cv
cp
.196078 .282353 .317647 rgb
f
336.782 174.073 mo
322.865 142.5 258.723 112.526 225.226 123.226 cv
223.194 123.851 221.222 124.566 219.313 125.376 cv
219.311 125.39 219.313 125.403 219.313 125.418 cv
219.311 125.418 li
219.311 125.418 li
204.605 130.935 192.727 145.259 189.186 163.577 cv
183.916 191.731 198.029 217.977 217.66 224.111 cv
218.998 224.521 220.328 224.935 221.657 225.356 cv
227.545 226.229 233.896 226.547 240.418 226.171 cv
253.3 225.435 267.838 227.758 282.439 216.761 cv
287.396 213.069 287.174 209.93 280.559 208.566 cv
266.855 205.654 236.627 205.04 244.979 177.402 cv
250.648 158.346 273.56 154.835 297.587 182.834 cv
301.393 187.307 306.791 187.71 311.463 186.552 cv
331.006 181.55 338.148 177.066 336.782 174.073 cv
cp
f
336.7 173.988 mo
336.473 173.531 336.234 173.07 335.986 172.607 cv
335.768 172.205 335.54 171.792 335.305 171.387 cv
335.277 171.337 335.25 171.29 335.223 171.239 cv
333.746 170.806 332.096 170.465 330.345 170.115 cv
329.102 169.867 327.813 169.615 326.477 169.316 cv
325.023 168.979 323.235 168.708 320.973 168.387 cv
311.401 167.082 294.152 164.685 268.377 153.927 cv
266.764 153.258 264.717 152.731 262.582 152.105 cv
248.715 148.02 233.697 158.983 231.666 171.831 cv
229.441 185.201 233.033 191.101 234.636 202.292 cv
235.636 209.395 228.074 214.021 222.189 214.126 cv
215.717 214.198 205.352 210.319 196.66 206.792 cv
201.936 215.223 209.117 221.427 217.568 224.047 cv
218.906 224.458 220.238 224.87 221.567 225.294 cv
227.458 226.164 233.809 226.48 240.329 226.105 cv
253.213 225.365 267.755 227.684 282.359 216.688 cv
287.313 212.992 287.09 209.852 280.475 208.49 cv
278.313 208.088 275.757 207.696 273.015 207.234 cv
258.365 204.608 237.763 200.75 244.885 177.334 cv
250.553 158.278 273.467 154.761 297.502 182.757 cv
301.309 187.228 306.706 187.63 311.381 186.47 cv
330.923 181.466 338.066 176.981 336.7 173.988 cv
cp
.615686 .654902 .670588 rgb
f
317.16 185.007 mo
317.096 184.73 323.264 182.07 325.023 181.343 cv
326.794 180.595 328.564 179.804 330.27 178.885 cv
331.224 178.375 332.174 177.828 333.053 177.182 cv
333.579 176.792 334.693 176.061 334.754 175.28 cv
334.913 174.449 334.297 173.254 333.969 172.532 cv
333.482 171.461 332.896 170.439 332.267 169.451 cv
330.998 167.446 329.539 165.574 328.01 163.77 cv
324.92 160.116 321.514 156.681 317.847 153.593 cv
310.411 147.318 302.054 142.027 293.428 137.348 cv
286.93 133.822 280.182 130.67 273.212 128.03 cv
269.612 126.666 265.947 125.451 262.223 124.433 cv
260.652 124.002 259.07 123.616 257.477 123.251 cv
257.277 123.201 254.609 122.746 254.639 122.469 cv
254.7 121.797 262.46 123.192 263.306 123.385 cv
267.425 124.246 271.465 125.443 275.418 126.833 cv
283.459 129.658 291.188 133.257 298.542 137.402 cv
307.084 142.208 315.422 147.673 322.439 154.426 cv
325.889 157.74 329.146 161.292 331.947 165.169 cv
333.293 167.012 336.41 172.698 336.908 173.531 cv
337.374 174.297 337.039 175.673 336.527 176.342 cv
333.974 179.677 329.639 181.141 325.955 182.425 cv
325.25 182.647 317.179 185.157 317.16 185.007 cv
cp
f
236.849 119.027 mo
232.347 119.279 228.206 119.949 224.564 120.996 cv
224.557 120.996 224.55 121 224.544 121.001 cv
224.536 121.003 224.529 121.004 224.523 121.009 cv
222.444 121.646 220.378 122.398 218.385 123.244 cv
217.898 123.449 217.412 123.655 216.926 123.863 cv
216.926 123.863 216.926 123.864 216.926 123.866 cv
201.594 130.302 190.416 145.184 187.004 163.104 cv
184.268 177.231 186.465 191.42 192.294 203.187 cv
198.223 215.099 207.037 223.189 217.214 226.354 cv
218.547 226.759 219.877 227.174 221.203 227.595 cv
221.247 227.611 221.291 227.624 221.336 227.637 cv
221.383 227.645 221.427 227.651 221.473 227.657 cv
227.73 228.585 234.126 228.861 240.562 228.492 cv
242.438 228.386 244.338 228.343 246.35 228.318 cv
248.609 228.286 250.943 228.269 253.309 228.191 cv
262.377 227.884 272.855 226.711 283.53 218.721 cv
284.734 217.805 288.449 215.072 287.826 211.377 cv
287.186 207.585 282.452 206.585 280.896 206.281 cv
279.833 206.082 278.712 205.891 277.522 205.694 cv
267.621 203.982 252.61 202.167 247.424 193.458 cv
245.149 189.59 244.952 184.599 247.012 178.188 cv
249.717 169.69 255.707 164.843 263.688 164.788 cv
273.286 164.704 285.167 171.622 296.029 184.4 cv
298.549 187.356 301.91 189.057 305.807 189.373 cv
307.773 189.532 309.838 189.344 311.955 188.817 cv
322.59 185.969 336.106 182.115 338.681 176.761 cv
339.253 175.542 339.283 174.238 338.754 173.083 cv
338.748 173.076 338.746 173.062 338.74 173.053 cv
338.733 173.044 338.729 173.034 338.725 173.025 cv
332.261 159.812 317.169 145.087 296.552 134.148 cv
276.335 123.336 254.027 118.02 236.849 119.027 cv
236.849 119.027 li
cp
236.988 121.345 mo
272.44 118.597 324.125 146.273 336.782 174.073 cv
338.148 177.066 331.006 181.55 311.463 186.552 cv
309.688 186.992 307.803 187.207 305.944 187.057 cv
302.914 186.81 299.946 185.609 297.587 182.834 cv
285.412 168.502 273.182 162.388 263.645 162.462 cv
254.549 162.53 247.893 168.133 244.979 177.402 cv
236.627 205.04 266.855 205.654 280.559 208.566 cv
287.174 209.93 287.396 213.069 282.439 216.761 cv
272.453 224.252 262.637 225.552 253.216 225.866 cv
248.805 226.017 244.498 225.943 240.418 226.171 cv
233.896 226.547 227.545 226.229 221.657 225.356 cv
220.328 224.935 218.998 224.521 217.66 224.111 cv
198.029 217.977 183.915 191.731 189.186 163.577 cv
192.727 145.259 204.605 130.935 219.311 125.418 cv
219.311 125.418 li
219.313 125.418 li
219.313 125.403 219.311 125.39 219.313 125.376 cv
221.222 124.569 223.194 123.851 225.226 123.226 cv
228.781 122.205 232.74 121.582 236.988 121.345 cv
236.988 121.345 li
cp
.180392 .258824 .286275 rgb
f
308.398 176.892 mo
310.578 176.581 313.609 172.885 313.614 172.886 cv
313.614 172.886 310.055 171.525 307.865 171.836 cv
305.674 172.151 304.027 173.542 304.18 174.936 cv
304.334 176.329 306.219 177.203 308.398 176.892 cv
cp
.67451 .780392 .819608 rgb
f
309.578 175.887 mo
311.133 175.699 313.64 173.748 313.645 173.75 cv
314.624 173.654 315.607 173.562 316.592 173.476 cv
316.594 173.468 311.092 171.547 309.09 171.796 cv
307.087 172.037 305.58 173.15 305.719 174.28 cv
305.857 175.411 307.581 176.124 309.578 175.887 cv
cp
.180392 .258824 .286275 rgb
f
327.916 178.473 mo
325.818 177.711 323.416 173.447 323.412 173.447 cv
323.41 173.444 327.133 172.85 329.244 173.612 cv
331.354 174.375 332.764 176.083 332.389 177.425 cv
332.016 178.763 330.019 179.232 327.916 178.473 cv
cp
.67451 .780392 .819608 rgb
f
326.915 177.237 mo
325.412 176.731 323.25 174.291 323.247 174.291 cv
322.294 173.996 321.341 173.7 320.389 173.41 cv
320.382 173.403 326.107 172.655 328.043 173.315 cv
329.98 173.97 331.291 175.377 330.976 176.459 cv
330.66 177.541 328.846 177.889 326.915 177.237 cv
cp
.180392 .258824 .286275 rgb
f
247.309 177.347 mo
245.488 182.644 245.23 186.858 246.091 190.158 cv
247.584 192.072 247.863 194.715 244.374 200.048 cv
237.334 211.426 247.699 232.153 261.576 210.929 cv
274.424 192.547 253.529 179.978 247.309 177.347 cv
cp
.478431 .164706 .129412 rgb
f
263.234 196.338 mo
261.727 189.302 251.978 182.405 246.656 179.452 cv
245.935 182.019 245.615 184.304 245.627 186.337 cv
251.878 191.646 248.107 198.272 246.056 201.455 cv
243.342 205.614 243.811 210.939 245.312 214.119 cv
245.981 215.527 247.482 217.863 250.127 217.757 cv
253.012 217.643 256.447 214.697 259.956 209.482 cv
263.012 204.946 264.168 200.538 263.234 196.338 cv
cp
.839216 .290196 .219608 rgb
f
259.535 202.656 mo
258.669 202.259 258.506 200.088 258.5 197.842 cv
258.771 195.165 255.572 190.239 255.504 189.756 cv
255.99 187.985 261.545 192.669 261.9 196.916 cv
262.461 200.527 260.355 203.138 259.535 202.656 cv
cp
1 .658824 .509804 rgb
f
254.715 210.156 mo
254.162 209.802 254.139 208.617 254.666 207.497 cv
255.189 206.375 256.074 205.751 256.631 206.107 cv
257.186 206.451 257.203 207.642 256.673 208.761 cv
256.142 209.876 255.267 210.501 254.715 210.156 cv
cp
f
251.951 187.52 mo
251.484 187.849 250.662 187.373 250.107 186.453 cv
249.558 185.531 249.484 184.514 249.951 184.181 cv
250.422 183.847 251.252 184.329 251.803 185.25 cv
252.354 186.175 252.416 187.191 251.951 187.52 cv
cp
f
253.429 190.235 mo
253.021 190.525 252.475 190.394 252.211 189.942 cv
251.94 189.493 252.056 188.89 252.467 188.599 cv
252.873 188.312 253.424 188.445 253.69 188.892 cv
253.957 189.347 253.838 189.944 253.429 190.235 cv
cp
f
255.322 204.317 mo
254.744 204.255 254.328 203.429 254.391 202.461 cv
254.457 201.499 254.976 200.763 255.558 200.823 cv
256.138 200.884 256.552 201.715 256.485 202.683 cv
256.418 203.645 255.895 204.378 255.322 204.317 cv
cp
f
288.585 154.606 mo
287.769 155.198 283.846 150.931 279.656 145.138 cv
275.467 139.343 272.604 134.196 273.437 133.57 cv
274.266 132.95 278.466 137.11 282.641 142.933 cv
286.818 148.753 289.4 154.009 288.585 154.606 cv
cp
.67451 .780392 .819608 rgb
f
269.388 151.361 mo
268.828 150.488 273.182 146.505 279.297 142.624 cv
285.408 138.728 290.945 136.433 291.483 137.333 cv
292.029 138.236 287.382 141.969 281.294 145.837 cv
275.201 149.695 269.953 152.237 269.388 151.361 cv
cp
f
303.771 157.005 mo
303.188 157.454 300.957 154.062 298.709 149.442 cv
296.461 144.826 295.054 140.722 295.647 140.258 cv
296.24 139.801 298.599 143.165 300.834 147.792 cv
303.074 152.421 304.351 156.556 303.771 157.005 cv
cp
f
291.499 154.008 mo
291.207 153.31 294.383 150.348 298.686 147.467 cv
302.988 144.588 306.775 142.896 307.053 143.605 cv
307.329 144.318 304.004 147.154 299.719 150.025 cv
295.43 152.89 291.792 154.709 291.499 154.008 cv
cp
f
180.188 160.958 mo
174.563 170.568 163.043 179.527 150.594 180.433 cv
142.486 181.014 139.492 177.849 134.745 171.591 cv
131.106 166.712 129.412 162.545 124.193 156.155 cv
118.768 149.475 112.711 146.323 111.083 145.235 cv
109.938 144.474 109.481 144.928 109.514 146.376 cv
109.617 150.505 112.439 153.62 113.499 164.761 cv
114.49 174.494 111.836 185.298 119.203 190.928 cv
120.415 191.847 120.637 192.169 119.73 193.337 cv
112.736 202.08 119.19 221.977 122.258 226.833 cv
123.014 228.123 124.802 228.532 125.873 227.43 cv
131.736 221.46 138.492 196.669 153.489 195.314 cv
167.012 194.009 175.993 199.036 184.24 209.53 cv
189.079 215.7 200.322 221.015 214.74 223.218 cv
218.891 189.34 221.563 155.511 221.058 122.205 cv
204.011 129.544 190.896 143.122 180.188 160.958 cv
cp
.196078 .282353 .317647 rgb
f
141.604 180.148 mo
141.533 180.302 140.811 180.211 139.705 179.627 cv
138.598 179.05 137.167 177.965 135.659 176.423 cv
134.146 174.888 132.539 172.913 130.904 170.648 cv
129.266 168.387 127.604 165.829 125.857 163.209 cv
122.42 157.992 118.627 153.851 115.66 151.156 cv
112.695 148.451 110.59 147.099 110.765 146.761 cv
110.906 146.46 113.379 147.258 116.779 149.71 cv
120.168 152.14 124.381 156.291 127.977 161.718 cv
129.768 164.39 131.365 166.97 132.879 169.269 cv
134.385 171.57 135.793 173.591 137.066 175.212 cv
138.336 176.834 139.473 178.034 140.314 178.809 cv
141.152 179.591 141.686 179.975 141.604 180.148 cv
cp
.615686 .654902 .670588 rgb
f
185.053 200.764 mo
183.32 199.861 181.678 198.994 180.16 198.21 cv
178.24 197.225 173.221 194.908 167.735 194.773 cv
166.669 194.748 165.379 195.173 164.014 195.72 cv
164.014 195.726 164.011 195.732 164.011 195.741 cv
172.044 197.324 178.353 202.029 184.24 209.53 cv
189.079 215.7 200.322 221.015 214.74 223.218 cv
215.202 219.446 215.645 215.674 216.069 211.906 cv
207.134 211.841 194.32 205.631 185.053 200.764 cv
cp
f
217.83 123.408 mo
208.223 127.701 199.752 134.503 192.508 142.576 cv
188.419 147.137 184.707 152.121 181.332 157.361 cv
177.825 162.803 174.362 167.837 169.073 171.866 cv
164.257 175.534 158.546 178.243 152.508 179.091 cv
149.429 179.509 146.091 179.599 143.279 178.256 cv
140.568 176.957 138.613 174.591 136.825 172.296 cv
132.97 167.334 130.104 161.72 126.293 156.8 cv
122.414 151.788 117.792 147.801 112.513 144.624 cv
112.084 144.361 111.666 144.035 111.201 143.844 cv
109.5 143.029 108.369 144.484 108.292 146.191 cv
108.262 149.884 110.087 153.401 110.94 156.905 cv
111.939 161.036 112.387 165.322 112.451 169.601 cv
112.584 177.113 111.482 186.455 118.096 191.731 cv
118.354 191.924 118.612 192.121 118.853 192.329 cv
118.855 192.332 118.859 192.334 118.857 192.338 cv
118.857 192.342 118.855 192.343 118.855 192.345 cv
118.793 192.439 118.725 192.533 118.652 192.626 cv
114.643 197.806 114.848 205.022 115.752 210.943 cv
116.563 216.299 117.877 222.831 121.103 227.439 cv
122.387 229.589 125.393 229.791 127.109 227.921 cv
129.383 225.393 130.813 222.227 132.333 219.318 cv
135.393 213.447 138.386 207.261 142.998 202.274 cv
147.881 196.983 153.771 195.605 160.77 196.236 cv
167.326 196.824 173.084 199.62 177.805 203.815 cv
182.508 207.988 185.696 213.055 191.373 216.28 cv
196.679 219.287 202.709 221.257 208.877 222.451 cv
209.424 222.568 214.656 223.529 214.74 223.218 cv
214.768 223.102 206.104 221.042 205.365 220.795 cv
200.494 219.335 195.752 217.442 191.539 214.801 cv
187.428 212.227 184.883 208.72 181.719 205.272 cv
178.402 201.658 174.494 198.516 169.867 196.528 cv
165.23 194.539 160.08 193.905 154.955 194.195 cv
149.799 194.485 145.597 196.583 141.961 200.213 cv
138.423 203.747 135.766 208.024 133.361 212.29 cv
130.797 216.835 128.811 221.984 125.404 226.095 cv
125.303 226.212 125.199 226.329 125.098 226.445 cv
125 226.557 124.872 226.687 124.838 226.711 cv
123.514 227.831 122.019 223.388 121.887 223.065 cv
120.538 219.827 119.547 216.445 118.854 213.029 cv
117.664 207.207 116.701 199.309 120.779 194.086 cv
120.848 193.999 120.912 193.911 120.979 193.824 cv
121.062 193.699 121.134 193.607 121.223 193.448 cv
121.414 193.13 121.551 192.788 121.594 192.439 cv
121.783 191.233 120.713 190.411 119.843 189.762 cv
113.963 185.076 115.191 176.101 115.041 169.46 cv
114.962 165.583 114.578 161.72 113.788 157.95 cv
112.999 154.211 111.082 150.575 110.765 146.761 cv
110.758 146.694 110.754 146.626 110.75 146.562 cv
110.75 146.558 110.75 146.552 110.753 146.552 cv
110.758 146.552 110.758 146.555 110.762 146.552 cv
110.916 146.647 111.066 146.74 111.217 146.833 cv
116.479 149.986 121 153.952 124.81 158.959 cv
128.743 164.123 131.713 169.99 135.909 175.047 cv
137.752 177.266 139.854 179.373 142.592 180.533 cv
145.762 181.878 149.356 181.806 152.77 181.328 cv
159.123 180.382 165.113 177.517 170.162 173.629 cv
175.446 169.559 179.053 164.53 182.467 158.986 cv
185.903 153.404 189.717 148.098 193.949 143.238 cv
201.558 134.503 210.277 128.006 220.132 122.77 cv
220.172 122.748 221.101 122.304 221.058 122.205 cv
220.972 121.997 217.992 123.336 217.83 123.408 cv
215.77 124.327 219.897 122.494 217.83 123.408 cv
cp
.180392 .258824 .286275 rgb
f
153.439 170.153 mo
152.561 169.659 151.738 170.011 151.596 170.938 cv
151.578 170.936 153.102 176.713 150.592 181.838 cv
149.047 185.45 172.863 176.767 168.086 176.275 cv
162.848 175.975 153.396 170.183 153.439 170.153 cv
cp
.196078 .282353 .317647 rgb
f
163.548 175.96 mo
163.508 176.305 162.738 176.57 161.568 176.478 cv
160.402 176.394 158.894 175.966 157.39 175.258 cv
155.881 174.551 154.649 173.724 153.83 173.025 cv
153.016 172.323 152.599 171.752 152.76 171.429 cv
152.926 171.111 153.678 171.125 154.729 171.416 cv
155.781 171.708 157.129 172.263 158.558 172.934 cv
159.984 173.602 161.232 174.237 162.131 174.732 cv
163.02 175.229 163.594 175.599 163.548 175.96 cv
cp
.615686 .654902 .670588 rgb
f
164.171 174.427 mo
160.683 172.85 157.334 171.001 154.094 169.03 cv
152.846 168.365 150.766 168.437 150.443 170.182 cv
150.248 171.236 151.395 173.332 150.922 177.917 cv
150.88 178.324 150.125 181.625 150.592 181.838 cv
151.246 182.188 152.367 179.154 152.453 178.876 cv
153.252 176.452 153.321 173.835 152.935 171.372 cv
153.205 171.541 153.477 171.708 153.752 171.871 cv
156.29 173.362 158.971 174.686 161.795 175.633 cv
162.318 175.816 168.061 177.385 168.086 176.275 cv
168.105 175.927 166.544 175.532 164.171 174.427 cv
161.792 173.352 166.543 175.532 164.171 174.427 cv
cp
.180392 .258824 .286275 rgb
f
154.786 203.167 mo
154.143 203.767 153.307 203.72 152.929 203.075 cv
152.926 203.075 152.654 198.408 149.119 195.235 cv
146.826 193.158 169.666 192.949 165.779 194.536 cv
161.445 196.337 154.781 203.167 154.786 203.167 cv
cp
.196078 .282353 .317647 rgb
f
162.966 197.034 mo
164.688 195.541 165.9 194.783 165.779 194.536 cv
165.426 193.744 160.964 196.56 160.553 196.833 cv
158.384 198.326 156.418 200.035 154.584 201.808 cv
154.388 202.006 154.191 202.205 153.998 202.398 cv
153.662 200.469 152.875 198.556 151.528 196.962 cv
151.373 196.781 149.588 194.815 149.119 195.235 cv
148.768 195.508 150.3 197.777 150.449 198.067 cv
152.092 201.35 151.653 203.196 152.109 203.929 cv
152.867 205.14 154.76 204.648 155.681 203.819 cv
158.016 201.493 160.418 199.2 162.966 197.034 cv
164.688 195.541 161.227 198.511 162.966 197.034 cv
cp
.180392 .258824 .286275 rgb
f
192.277 198.379 mo
193.922 197.46 224.045 197.675 225.17 203.514 cv
227.049 206.078 218.383 223.772 206.068 231.11 cv
194.379 239.892 178.492 238.494 179.477 235.869 cv
179.703 233.928 188.193 224.555 190.412 215.861 cv
193.708 207.105 190.558 198.985 192.277 198.379 cv
cp
.196078 .282353 .317647 rgb
f
226.479 203.211 mo
226.625 203.271 226.33 203.148 226.479 203.211 cv
226.479 203.211 li
cp
.180392 .258824 .286275 rgb
f
226.479 203.211 mo
226.369 203.168 220.586 214.229 220.095 215.102 cv
217.128 219.857 213.688 224.208 209.656 227.627 cv
205.592 231.08 200.98 233.362 196.129 234.761 cv
193.592 235.492 190.998 235.998 188.377 236.252 cv
185.976 236.491 183.014 236.844 180.635 235.853 cv
182.138 232.71 184.459 230.044 186.264 227.093 cv
188.234 223.871 190.139 220.379 191.105 216.497 cv
191.131 216.391 191.155 216.289 191.18 216.185 cv
192.215 213.191 192.752 209.975 192.778 206.721 cv
192.779 206.062 192.266 198.234 191.463 198.485 cv
191.357 198.515 191.658 205.692 191.619 206.372 cv
191.416 209.511 190.785 212.577 189.684 215.424 cv
188.041 220.226 185.723 224.27 182.996 228.255 cv
181.552 230.321 179.803 232.395 178.721 234.736 cv
178.641 234.921 178.553 235.106 178.479 235.441 cv
176.795 240.754 192.293 238.226 194.084 237.909 cv
199.643 236.646 205.035 234.313 209.699 230.484 cv
214.105 226.865 217.833 222.124 220.885 216.828 cv
221.315 215.972 227.555 203.668 226.479 203.211 cv
cp
f
225.262 101.478 mo
210.528 89.52 191.29 87.0796 185.018 88.2886 cv
183.797 88.478 183.44 89.3501 184.166 90.2661 cv
187.074 93.4351 194.721 105.852 197.347 117.157 cv
200.727 131.459 197.984 138.455 197.01 142.374 cv
210.14 143.408 228.172 139.505 239.154 134.165 cv
250.746 129.021 255.303 122.25 255.271 122.238 cv
242.926 120.472 235.34 109.64 225.262 101.478 cv
cp
.196078 .282353 .317647 rgb
f
244.178 118.921 mo
244.014 119.221 240.564 117.713 235.739 114.133 cv
233.324 112.36 230.572 110.112 227.547 107.593 cv
225.977 106.273 224.395 104.958 222.804 103.652 cv
221.967 102.96 221.125 102.271 220.283 101.583 cv
219.456 100.917 218.576 100.278 217.649 99.6743 cv
213.938 97.2427 209.936 95.4985 206.2 94.1528 cv
202.454 92.813 198.941 91.8882 195.959 91.2251 cv
189.984 89.8862 186.146 89.7466 186.141 89.4019 cv
186.111 89.0405 190.123 88.5308 196.371 89.4478 cv
199.488 89.8989 203.158 90.6675 207.094 91.937 cv
211.016 93.2085 215.234 94.9634 219.209 97.5698 cv
220.203 98.2241 221.146 98.9175 222.041 99.6528 cv
222.882 100.354 223.72 101.06 224.555 101.771 cv
226.111 103.119 227.658 104.477 229.197 105.842 cv
232.12 108.456 234.707 110.822 236.926 112.74 cv
241.332 116.597 244.362 118.602 244.178 118.921 cv
cp
.615686 .654902 .670588 rgb
f
250.213 120.411 mo
238.881 115.586 231.943 104.262 221.771 97.4312 cv
216.898 94.1528 211.484 91.5522 205.762 89.7095 cv
199.592 87.7212 192.541 86.1636 185.874 86.8901 cv
185.518 86.9272 185.164 86.978 184.81 87.0396 cv
184.302 87.1304 183.658 87.3442 183.253 87.7085 cv
182.145 88.6274 182.344 89.9185 183.01 90.9497 cv
183.303 91.3647 183.675 91.7388 183.99 92.1392 cv
189.906 99.9263 194.406 109.211 196.642 118.597 cv
197.707 123.063 198.35 127.641 198.232 132.246 cv
198.194 133.283 196.992 142.369 197.01 142.374 cv
197.889 142.589 199.395 134.083 199.508 133.162 cv
200.035 128.402 199.644 123.608 198.761 118.925 cv
196.883 108.895 192.346 98.937 186.191 90.6421 cv
185.906 90.27 185.612 89.9019 185.305 89.5435 cv
185.305 89.5405 li
185.301 89.5298 185.307 89.5239 185.313 89.52 cv
185.58 89.479 185.847 89.4448 186.115 89.4136 cv
193.324 88.6597 201.076 90.6567 207.625 93.0571 cv
213.913 95.3511 219.771 98.5747 224.867 102.65 cv
230.227 106.933 234.873 111.952 240.311 116.059 cv
242.889 118.003 245.658 119.742 248.677 120.917 cv
249.098 121.069 255.172 122.979 255.271 122.238 cv
255.311 122.028 253.374 121.747 250.213 120.411 cv
248.641 119.739 253.374 121.75 250.213 120.411 cv
cp
.180392 .258824 .286275 rgb
f
213.265 183.677 mo
213.26 183.542 209.275 178.568 207.654 171.275 cv
205.512 164.043 209.146 158.113 209.127 157.95 cv
208.109 157.316 204.214 164.148 206.32 171.73 cv
208.377 179.195 212.713 184.546 213.265 183.677 cv
cp
217.828 183.588 mo
217.796 183.515 214.147 176.628 214.192 167.557 cv
214.236 158.392 219.478 152.163 219.589 152.085 cv
218.707 151.122 212.896 157.942 213.002 167.432 cv
213.1 176.788 217.051 184.344 217.828 183.588 cv
cp
219.375 165.465 mo
221.228 155.73 227.918 149.71 228.556 150.775 cv
228.388 150.732 222.353 156.23 220.764 165.727 cv
218.516 174.982 222.068 183.393 222.152 183.421 cv
221.294 183.976 217.545 175.084 219.375 165.465 cv
cp
.615686 .654902 .670588 rgb
f
213.518 183.525 mo
213.501 183.396 210.533 178.461 209.346 171.074 cv
207.69 163.722 209.308 158.151 209.267 157.982 cv
208.43 157.304 205.659 163.81 207.501 171.441 cv
208.699 179.11 212.915 184.387 213.518 183.525 cv
cp
218.074 183.512 mo
218.008 183.44 215.54 176.738 215.986 167.691 cv
215.852 158.555 219.398 152.394 219.464 152.294 cv
218.725 151.365 214.218 158.17 214.1 167.621 cv
213.979 176.97 217.236 184.271 218.074 183.512 cv
cp
220.652 165.948 mo
222.271 155.943 228.113 149.542 228.698 150.558 cv
228.571 150.551 223.939 156.57 222.322 166.291 cv
220.719 175.924 222.156 183.498 222.295 183.521 cv
221.371 184.116 219.047 175.843 220.652 165.948 cv
cp
.180392 .258824 .286275 rgb
f
218.131 323.605 mo
192.631 323.605 171.887 344.349 171.887 369.847 cv
171.887 395.347 192.631 416.091 218.131 416.091 cv
243.629 416.091 264.373 395.347 264.373 369.847 cv
264.373 344.349 243.629 323.605 218.131 323.605 cv
218.131 323.605 li
cp
.819608 .819608 .819608 rgb
f
218.238 317.183 mo
192.738 317.183 171.994 337.927 171.994 363.425 cv
171.994 388.923 192.738 409.667 218.238 409.667 cv
243.736 409.667 264.48 388.923 264.48 363.425 cv
264.48 337.927 243.736 317.183 218.238 317.183 cv
218.238 317.183 li
cp
.478431 .164706 .129412 rgb
f
259.342 362.14 mo
259.342 384.843 240.938 403.246 218.238 403.246 cv
195.537 403.246 177.133 384.843 177.133 362.14 cv
177.133 339.439 195.537 321.035 218.238 321.035 cv
240.938 321.035 259.342 339.439 259.342 362.14 cv
cp
.317647 .686275 .27451 rgb
f
259.342 358.769 mo
259.342 379.785 240.938 396.824 218.238 396.824 cv
195.537 396.824 177.133 379.785 177.133 358.769 cv
177.133 337.75 195.537 320.712 218.238 320.712 cv
240.938 320.712 259.342 337.75 259.342 358.769 cv
cp
.392157 .819608 .278431 rgb
f
218.238 328.417 mo
239.533 328.417 255.301 355.933 255.301 355.933 cv
257.408 359.611 259.227 361.472 259.342 360.068 cv
259.342 360.068 259.342 360.068 259.342 358.769 cv
259.342 337.75 240.938 320.712 218.238 320.712 cv
195.537 320.712 177.133 337.75 177.133 358.769 cv
177.133 360.068 177.133 360.068 177.133 360.068 cv
177.248 361.472 179.064 359.611 181.174 355.933 cv
181.174 355.933 196.943 328.417 218.238 328.417 cv
cp
.54902 .901961 .384314 rgb
f
227.046 338.527 mo
225.956 338.105 224.786 338.763 224.466 339.88 cv
222.737 345.947 li
222.419 347.066 223.077 348.22 224.136 348.708 cv
225.495 349.339 226.749 350.197 227.819 351.267 cv
232.903 356.351 232.962 364.572 227.874 369.66 cv
222.786 374.746 214.626 374.628 209.54 369.541 cv
204.451 364.457 203.809 356.822 209.772 350.857 cv
213.995 355.082 li
214.817 355.902 215.62 355.634 215.786 354.486 cv
218.173 337.787 li
218.335 336.638 217.53 335.832 216.384 335.998 cv
199.682 338.384 li
198.535 338.546 198.264 339.351 199.088 340.171 cv
202.318 343.404 li
193.373 352.349 192.885 367.8 202.082 376.998 cv
211.28 386.195 226.015 386.429 235.214 377.23 cv
244.411 368.033 244.417 353.058 235.22 343.861 cv
232.892 341.529 230.097 339.707 227.046 338.527 cv
cp
1 1 1 rgb
f
216.677 333.408 mo
216.677 333.408 li
216.458 333.408 216.237 333.423 216.017 333.455 cv
199.318 335.841 li
197.795 336.056 196.633 336.947 196.209 338.22 cv
195.785 339.496 196.184 340.904 197.273 341.99 cv
198.779 343.498 li
195.061 348.078 192.918 353.984 192.828 360.068 cv
192.723 367.253 195.363 373.912 200.266 378.814 cv
205.275 383.824 211.886 386.582 218.876 386.582 cv
225.724 386.582 232.171 383.906 237.03 379.046 cv
241.964 374.113 244.683 367.542 244.685 360.544 cv
244.687 353.548 241.97 346.976 237.036 342.044 cv
234.472 339.476 231.337 337.429 227.972 336.13 cv
227.456 335.929 226.915 335.83 226.364 335.83 cv
224.354 335.83 222.558 337.207 221.997 339.177 cv
220.267 345.244 li
219.61 347.552 220.784 349.992 223.058 351.042 cv
224.173 351.558 225.163 352.246 226.003 353.083 cv
230.087 357.167 230.11 363.789 226.058 367.843 cv
224.118 369.781 221.55 370.845 218.821 370.845 cv
216.021 370.845 213.37 369.738 211.356 367.724 cv
209.284 365.654 208.121 363.083 208.08 360.49 cv
208.049 358.468 208.684 356.486 209.935 354.654 cv
212.177 356.898 li
213.196 357.914 214.228 358.126 214.915 358.126 cv
216.38 358.126 218.003 357.115 218.329 354.851 cv
220.716 338.15 li
220.896 336.884 220.56 335.691 219.774 334.785 cv
219.015 333.91 217.886 333.408 216.677 333.408 cv
216.677 333.408 li
cp
216.677 335.976 mo
217.663 335.976 218.321 336.738 218.173 337.787 cv
215.786 354.486 li
215.685 355.185 215.349 355.558 214.915 355.558 cv
214.636 355.558 214.317 355.404 213.995 355.082 cv
209.772 350.857 li
203.809 356.822 204.451 364.457 209.54 369.541 cv
212.112 372.115 215.472 373.416 218.821 373.416 cv
222.095 373.416 225.358 372.173 227.874 369.66 cv
232.962 364.572 232.903 356.351 227.819 351.267 cv
226.749 350.197 225.495 349.339 224.136 348.708 cv
223.077 348.22 222.419 347.066 222.737 345.947 cv
224.466 339.88 li
224.72 338.994 225.507 338.398 226.364 338.398 cv
226.591 338.398 226.819 338.439 227.046 338.527 cv
230.097 339.707 232.892 341.529 235.22 343.861 cv
244.417 353.058 244.411 368.033 235.214 377.23 cv
230.673 381.771 224.782 384.013 218.876 384.013 cv
212.817 384.013 206.74 381.656 202.082 376.998 cv
192.885 367.8 193.373 352.349 202.318 343.404 cv
199.088 340.171 li
198.264 339.351 198.535 338.546 199.682 338.384 cv
216.384 335.998 li
216.483 335.982 216.581 335.976 216.677 335.976 cv
216.677 335.976 li
cp
.203922 .611765 .215686 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.2
%%For: (Daniel) ()
%%Title: (YouFailed.eps)
%%CreationDate: 5/22/2017 5:28 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Blb4`Q7i)@&c*%5iWsnf+hBEZ/$l6=E?h^8mG%1EQJLSJV^E04#tZ+8TIr[eD?'J,Cq18fA9!_4d)?Vd+Ap5&orQJ"q8k#5
%MsL'#g%rtcia70U*?"WR<[7N*Wh)HPjHI?LICK'7hc#Oc]ZZ7>AXX4FW1+^>=H/650F`JHIW9E,DRI4Tp@@3Rp#3gTir%g,_d>p?
%hj3TU=3EPla`@$'<p/W^^Q,2SbEJRW4-M=u=3"t:X5f,]GK[%L*>_[W^7m:\n,^6,(#WjWGH\`.#=U:I='*a&W#K[TjL[(Bkp)md
%Y##)`gZ=2$/#`76kLKFD5Jp\Q?WsW/jm)g8Ed;eNZ%gF#3`9pF$6P;jX4PP\o.,:P.,G+\Y<En6('!1TS+g%UJ\G^S6&Mg3/q0_`
%:uJN%L&^.LS$2=h*gItfch[:h3Bfh%%CR+A$9m&3"h!k#/GYMKM'MfolJ;@/jjf6c:I@L1Zn>`!j%FkHN'GXndl>HMgTf:_)H?r9
%\uPS.g`7bfoul%Rf>!@F[T]9*/nHX_QWGidIYTp>'f=MV;Z,ADq<IO+p":&gR\d<EVr=\7e($I#14K2sHq>!@oTB->42,'.^0+aX
%lF]*k```*&W%S!\?XLQpZ2AHmCJMu=^3RIsIt-u!C?SMt@K.5c6EM^r;VK]NU("\49eq:6;QKo6mq[)+2rDIrr9!S:c.Vrs8nlo\
%Q'M%<`T>ce>b4]OCAs:j0WpVs`rAY0U#T3UX0llXd][7i,n%C'J+YBWHEfZ)?+e&mpjd:\.qf'erpu%,nnEJ=T0X4Dn"h[:nET<I
%pqk]&.t7KaC]:Dap$MQ4I/(\B`V'*]f<6j!5PoPCHL]I!o_mnB"R[7Xo@*`@:1+HWqXsF?mI.*^PIKl.)W&X"0<`^)<o`;pqp0/Z
%&%[%s)Y'`pFa=FF?fU$-hhMXJZm&PdV18ATl-/u!C45`(Y<OSAIXcQ]H@69q0%Re=c7e%X7a(JhkWbE#n,#6,g[jNQGr_T0r"IM)
%7piF&<gV"%YKhS7]j%)W0YBCB"hqL"@I<^j=A&$j39a(X:]@_jDFctVor.!&>9LDUp$%6.qdfZf*,"berFTQXW$?\>TB]e_p?ni:
%o<Str6KMoQGho^&0WaSYf%f?0lORo(hd9WYLRPuhrW"mi5?iV>S[Vc3KS.%K<t>WsG<KJ_G(+`KO-hNFcd1HQ0&OE,46_(6hrXI]
%B<0=5D>AXaeTF2Web.FYmoR8r/^HMN\G<NqH5I.hla&J<bRkH3n.;Z:$2^4BLXjrD=$S6dd,B_70,u?HLt,S1JDR3rr93A?1GtW(
%;gSJ_jmr$PfYq2fTDl'$0Aim,7rP2:Ub,Qq=UaXhO/Ai$TDdC5BE.N"=]*VDiTg9/QGiNB.Cf./Ig<Zb)HCqs?Ml$tT0N3[oPE\q
%jbt^\G(i)f$Tkgr40adIXgOEO[KMFU<QEXaRTHh1;DhH[frD'p8l^R*2KLZ1;_p/9EQ/n.HU)o-7[;$UU7@RVE`+fl.rB"CZ;f2t
%KqA0S*uDu:iYX<GR4i/o9c"JSRROo/E']['e\]Z:?XB["0gD6_kaKh1E)#;[^]hB"hTY;rK+#7FYNBG'cLkGeMg7$=L2/LOcRp:7
%Vb`;GhjU]G/gFF4/h<9PX-Tdmf0lbj?;T\SGS[Hm>RS++a$71MRRo;PB$Itk5W-MK:%Y6OQq90?'/um<c"&St:1c2Q$`Le,Wi;SU
%;_tg[2m'"&F>BC^B/&BSG[rN2EGD@`jikrKR@Ulk4_nYnflT-)M-3)B$5e3YT<4'PP_I;[=u?X.Xeoj1i"i^sa08MX>[!KJkR&rC
%SZ^pdoL)J44@[Y*!?BQ(:o,efkKdO1JR/M\$Pm\a_b-D_craCmF'*hu(g7u%1]$1_oTHXeJJqO@R`/Ah>8`1t@o:drYUho>2+Y#$
%3pN_YC=oF,CKL#.BrI>aYkqcjW06BMC5%6oJ/_nBe.o]2T[OA$#Z[3[73t[%i@bqWg6B`]PW%SgojD"$o18:33P/FiKoU)JJmY]6
%esAoYs)IaE%0H51C#ESHC&uVD^g`6jW&F:J.Z2C-X/[Tf9s:!Pebj.?9Vps,ECJF)WsZHTk8;bfX[HKNF.`LJd"2SNM>;N"oV3[(
%ideViJ_&&$S/`b:JpkafO`qrHL&H_;&pL(8s5U#+a&^m*pn%5fOaUQa0/WD?(-ML1oNU7[Kb>F?/R2,14@MrC,%!5#+OWcQ]0[fX
%i<uIb>"R67==>Nr+N9iWblk%<=%sL[9r+:u!Au`&5tdrHROG.-W9H#q%sC#69^/"]aQ$:<*8kDmWdmFO%)W%K3H6Rq@,oQ?,$t_N
%-N)sS:`$cp5QS!,Duhcce-#0XDolA]0%HcYDZQ[Q5+CR_W+uIB:?hcreMn$<f2-6=Kp=NtJ65c9gGJho;[)eg:Q*<rIt7Yrl$!4/
%:OjqGoY1JhM8'7nV#e0,kSL43d4BgZ,#t1$oC9;(CAP>47DC/IlDD@(+Q`hY_0J2?hhHScD;c;p#`u_4IUT4nrrjsa3DB)c#%ZjC
%XoY,"_ljg3Xb$6rinhbkB/"lmio&%u*W-i6iQ0%I$T/PMT*[H[JY,$^k70J_!MW4l*VfI4VLAkNL4$ZXcAk,c;5Q#NEH^L35]_J`
%,CfG-?3+iZjYmF5%BK`3[f]6?JY%Kr!46#FSI`B;EATutr]9mkJR%`!A#3nPJ6@+4a9r_PMm!GG>#X$,C5tan<\9;<al?G=1jV-)
%3-nL?4WH]!fudksqS<bC+p"qWjJAOGq(ipV(aSGnFp1uMJQK5jW<a9%84GIrVPVZkBf,d5ieZT]Juf*nWZcYE,UU#nP*n.dm;X!!
%.?#oQ:H6''hS^WI;Uht112\BTkNC0!TTE7OOiAI[AHh,ua8g'87DfCt`CAfS_5.J_5Hpu8eJFF$"q3+$`r_a*'?RMG'Z@=M1^U,m
%;P,tsRMtAs;A5iHF4fggd"VmN0(*B-WN[U]5LL#E_DIP6#5bG]VO]T.h*cSqp<F(Y^P3%MZptn92l<l6.bGDlk&O(8=O@UT10Z$?
%_EL4&<en*N-!5fJX/p<2K*IX)UX:_\k2;Aoo;KQO4'LIMY!Es4,E?;T7e."K\0IE>!pRbPW8gZ>j*k7WklO.C`ZN8->W'h0b^lOI
%()nkN\l'P6[B<#];RauP.[*MD\[MHQ1fZiTeE#XAf4)o\n%<TJB@+EH`\lRm9t";$H9mP\?+o??>;"ZQ6&jE\bA=`3/XL-q:nqo6
%?,PK%+$gR/dJ,:Y'Z!ufc!j8MH6okCLU8])\e]SILqF31440co0!gbkY#oEd3`Zj5@%!R^p/rlQj&U_'nQ&"<-#?uASMbD^#uT(f
%lrp3ba#%mqGZP3i'Ru4:e\p3mJ,jGXO[-5QJIEnk=VrmQLk_k>,t:]5V#[A&'OsTpF?p79!F.o(LIH5h&^No6MsP1Fr-1]D)0eBE
%Ba"t]nSW/X<EnJG2=[UOnZ*Ps/egI0BgF2@A2jRD,QpcQYSIZWZoZX`]Um-3Rb-*&[`804f@W?$$a\"IWPVn0Xc$h3&SA6UZPRa9
%YA*eMK/j5/2$k0:c]mQpOr<9TiRp4$1Ln;'1k%oE!qVAL0GcXk_pm"`bWm%8^CDKLj3D/[,EBFoO7soYol1g]*b?-W\;(Rlr)lZ#
%Y.!T2[qigqq[?'H(5.eg-?_^r3+sV2WYZeYZYiYAmmPjC!GR$URL/0\R21^d0FB4.Eg^m3aecnOk_c1^)\?,R^jaS&^GD$tV^1q1
%8D\2SnuX8b3)+(=d-<t))!,,;E)eBNJC-3i$HcU5p'eqY.qsf`4-B(`\dY]hjQ;>U.nY!nP3up-fhG#CX%=eL1qSJf4.Srd.,3!7
%[VJFBF!:^j>c0BgDAM:oOQh9&":H$Nf]*Edc6]cd(5j!O$T#QDLtF?@RaKF?_/A<X_3/JG7=5dCU8D#9()OjTQjSHk#LbIRDM+G8
%&V$d5G9AQC_@s</r/08(rbcOXIp@uF[-0ZO7b)g?mlg,/hX99d@BQ@/(fu5S[rM,0QPFb!<8ht'<e\<f1R%_g7IE*V?Wo8;Ogi0]
%T9ZlI_b:bn1)/PXB^t(;`W\N%AUY0@"<6_4k&_]r"RP:Uk&_]r"<tVjbiq<m$-7.:")WrRq/&D#hHPo+r%j&tXFXLX1Cqf,8H0t<
%N:WJr).fIY?p56M!roL`AhM\e0!\(Sq4"cfOp/u&;\Gi^`%:GaA?`DY3#sa"RM[G[ba%6D@V?sd^DNRY@e41`J.5J^/];&9`[`8M
%8V(@1EcSEJTok7-@b_iH%,9"!7Wpe:gH+XE9_Yr"CjKSm73ra$Pb8^4kLVW*-X>s!.l\0M?0*Z)BjX\H?;fU(fip)ecVUCKiMph/
%R][$5giS0b];GDS(8Ee+e4j,.;M1J'!Diol!1kO%Sa(g)$qqV-3c(f(9I5KiJC$)b>1$4cQtB;a2k86TL4lZXD&lXtn2_=.QP9^u
%#V<D%;'[V'lWD)8Q(eku@NseSDaRDV2X(NEKMAJ@1I3jTVlA%3(jA2"X534_RItnbD\=d#m#5CanA^;&))'Y++f5kf-H/BJak29M
%=R9Q1e-i'7;0*r)Sq%R'+IbBWnS^6D71m<\/o$ReVRcqg<9T,B%KEnC(2NWicWf>P*T"b@aD:gY/IqM/?gcN\8]3%IM6JqWP+Ga<
%2HQ".2AZlm6Q2C>XfNdbX<:5R0)?CM?D)Ln<bB"a-/-pDXQZ`u<MEp$?oO^7AlU3^<Re!u1$1MsW_k)=<*Pj7F=FN02@4uN0SU]P
%_q>gNQ<5)BZ"sYP"D_g@p/nbQQbi[7:s_[R)^X(f.Tg-fZ$u;1C1s)>>*:0`^XSup"&h-1:Rh*e.5=X?-U,$'FdiQA_K68s<8r=a
%r\kY?$fZjJ_TSeu:5Rq.HuU8uH%4V^jcc0k(tAcH>i"ts=V8YU0G?1#I/Dc%Vh-r%=M/ebo%`csrHJ/Q]m*6_+,TlOjheIm(:ggs
%YuRTCML_:31%eb)J5.gC'.@`66Z*NE;K$NaTZ4Y*Ahe$f$u9.Q$)#;-"M(#@^hpquI!:Jkg(mpTX\hiXO%*_GWWii.#J:t:.KI$;
%0-WW^]3O-0$i7O4gEM)!hPYt=hec<^IIg5GkCY1T$h6N5-U2r0<]Rme7ZrG%ih)hLL4F^Hm)M>&^V9L<g#&t:!T:3_Pop3;N=a5T
%Y*Lu?+@cV*rt0&)f,</?A^5ho&Va[;/Zku_9Y%O'V^=fE9(L%ta<tU6b8*q$beB,r@W1"n'A5GoX$/#lCsPTi4WtO[P]5XJMH"P)
%TO+;[8ED3enNlX[b<9kJ'YE$/NI51Zrb3(Yd5&c!CEq^&RbYgp$c4W$oV/0'3>7;+:+XAE`,=XDlp""6>Dl+V8`XKEHQsSV(btU%
%0A&KB^A:`Tp[#r(`NMK@5<j2A"X=!M%8[BmJ<0gTDEAK.=`L'jnrCHm`YnjC3X0n3$4_VA#nHZkL&EhOc`$jcG7uIa;u@$l(-mlB
%YdZI'_OUk6Q2H@77^d$MJ+"OoZUi&eRhJHUKZN_SXd3Y;!T'hFd'Vd]C;f#"H\qY-aq7p;bWA5,U$'`'U8oG3Aa7k\)0H;WPiIag
%(j90D'q2I1862$cQ&^7*2Y.8E`GQi:3CTNf>fKc?n%=62oa2bB10A1^kcmY!UBkThrNMGD&*=sP!+HU<74ZZkHpUb7Gt>0Pk,ZQM
%cM3/M+<kWVPQ7->,HFUWmpWR\VY3DN#!NjS80+e`;_n-1AK,BSMcHMp?%n8fRts?'0`%&5'(lj_@PIi0MLfp0c$sR-'@WQjreq]m
%-@sa@Jrf3t<rgK.brI9F36tM2&dHQ6WpefnK^/DcBSM)W:r@\*O>bIU0I8tAqj@))7JhIi.PgF+hSl^#)qqF(%nki)LeF3=[7*96
%>g(![,@?lQ(IIOg/\75,D'%NAk>u<&P[/kthWAD+k*>B,@e4sPKL1!%o9)%:Y0?bQ29'jp4SP=/rg@,+Rhtle]<?'p[r$c"JstNp
%fnP5P&/0mdFriKL8arodnZ$ka=qPj9f&F=`=3L%+r\L4__1/m!)I85ZZD,rrbt_iAZe;5=%&fX-4\mHHZ8i5,;mI1D[c_X--H/E1
%f&u]idenUsHgNKXVMPfH[6Uo#Z6kC[-mR@m'sp9X#D)W-:?]+&Llg%&7V_?G;F*Zl)&b*bUgR4>K%uaum#K[6]uHugaWapK]U1"b
%?,j*E"*U5TlXbZNT*t(m&ZfPq:hOl2Bl#2Q_2+4k<fo;;"Y7\caa71o@%DDn"R^1?T]gq:S&"tS![&_2g'$h^&HFi"djB%?73L&u
%4p!jW,cL!eV@dAOCb89DW&Z$J'^`+Q7UcbQIQN/g_``lD!4Eb(3dQobKRb\l<2!uV@KuN2V[:>(7UV725b^;l3:^+A$;;.bU'\c#
%i%Z]tk@4NRVH\@5`b,K<HH7=+Uu0rg5T`iNJH6Jc,\qjXX7K<r0I4OZ9sX/-8E>^\"U'_d!`3N65Mc*mCu]Fi%.Otg"^mEW_ZD4l
%PfHTk-\e9'$Y"c7"5!&a/Q?+TANcpJA(oK[_9Y!<Vl<jW8gqP?'`PsL''$1:b[_?OZOT6^W*Cs,mmmWT;Mh.:]fsF<cP'5Fm^7%k
%1?l6[gO.>eNV;0e)an^r;2=ZdGb$aP+ZC?"1?1f@TTG6ZIsE/"?P,h9-ST($UsSS7@fi#MLm@+]ZjP`#-AfbE/tNBZQl%967SCZS
%!fYMW<"LSqFs-.h3UOZe.2VnD,A"d1d-r[qVN--4L0Oru)#mV>mB/u72RIZ;WA"2$LcXS4hjVJh`@u9'B-@s/pGW,@O%C4XLOD?6
%"_emj0N6ZrP@W!$&uQ3+HeS?n@i8\8)HAK`XU0VeOLL38j\m(2*#aPr)cGocE(;48p,WQPNI]2fg>aUH'>0iea;1QY9F-=+0LDFD
%W5UoRPhm?gB4UFtd/L?S7Q+dB68";A@n*-PL.kGZ6'Fsk@O^g)R#IR1;cEHV70ZC2:urRGQ0Z5'.2[TZ"-^N24c>"'%J4s9X/`&i
%<!J0Y9FU;h@/W[trR2=<7j*8L/#L6B"8?6Z23'PRnWYH%V/b#dY0Tr,-Ep.h/5mt'ViV&-%r?9ug"[Ol4`IqIo6D]c3C$S^"Y;$?
%j$s)%7Vi?eN/msDN7\]oPE,cMN7\[s5Wo0f0k*LXrB:R-0u=]u5O/\^9H_>\$JLL)=L[R\-t$6o/MSfP=-[&L]1=K))P(,UlY<_@
%P$QPf22`82S`\V5BO.#p^88U-h4l&'A`HRS>pd1`en)22`J]E0\ofm`2;p':'edGjGf@-#VOT,pW#n#a9!\L<?\I:Q=/A](0JZ_'
%NP6u\DY@K/H"&Q$OE0.@*`gQOAKMKKiT36Se/K#:,U=**B^VSV7Z<5]XGBgVGS!1f"EZj!-:SVM]U;V%oS<aF>N1c]DY,XT.J_WY
%!e"C:8AqCGBRDW;PjVuEhV?A18-YuM3Kg<LR3Y)TciJ?B'W3/.K@)%fImV/s[e&W+R1?pXWlWC`AV(HFAo(qhTT'.#$Gl39Th/\r
%RKg@N2W]V?DY$O;b-F;NJg=3K&5+*K.08Ylia%4Vb"5Fp]isk>H`u.%k]p"n3BY`Ib;E;h]mAR:n=t:o'4<^Hps5R((h/iT^Iu-3
%EegEo.Bh;M8j-T"]h7b$798S;R1HGD7m"+(aoqU/6Cnr</$MLnOM'Lb6k)uu9s[Xr]-q?1k/7^R5&l<mOrkU2Gt7'795CAe'iTu_
%h?.7f=C&D>_MA%;s1_rFMo$]4,"BR>?iTIPVCeF_DVG#Vhf?tZ\tI&BVqZYpDRmDQ(KOslh7DlU0@t>4NU`QV?XYlV,,uOV&SV?.
%L2'3G!EA"i;9^Mu!p.!ZEXg,^OoR"aMoG`Imng@M:.m:)0uuu@'#L_8c`]5nXWh)WNKl&Y@&qOk/&FYoJ<7k+8l1Qq@&TV=V^!<n
%^&a&ZE!QY8^mYl5o0akoR@p)Wr6XT_,/^9?CjUsb#FlbADqsEAAGDrrVFfG$,_SdeJWNo_;YJ+,7\JJrF@nF*?AQ7Ldi2KD]WN%O
%*l)PPe&7F"m+:fm/3g7Z9K&V^qNkR,m,F*&<u[Rr[4ftA@&B^m(%nb0"7nR@f>>0Ajo`[O!R=#.(8*U?BOj/S=Fr-0L%+^j&eU=s
%s$+AJD#&qcgES\QFN?`r*2(03!)!JiO:le<Z4(`s1'McOAIOk`/E'neiEg:'q?okA1U:^7$a9fjb:(DYCcD1kf9f^knuIu7-.e.S
%;P`Vqr&.ljEUU^+TuLp^^l<A&J8T4/"J>8:`_UR:h@#.Oh<FY2g&6H2gRW5Fo&J"\h!Iiq8boX1mH-nc-J]:ol;U$I[:hdf(.M3=
%j9]8W8O=6uOh)h)eHfP^M<"1e37TtDlHukC[KBMgJlG\CH>p)E(e;GAH*5j%W_PYY_!O%m",WfO<o$tO`1.L>eXS0B=st:m<S.Yi
%`<I5ka]X/WV.'*Qke?JlMKk%M@L[nNDV.>?MY<,n>!rW'cie8R)P5i'&b4E`D[Gr7O9!?'3K\sd4Wk..48M0=<lK@"%ccp*"Q='.
%p5o(-]OGO#4>MIf!,I2;LS5P&>WiAI_^1+l#)uHhp5k?]&9J-ZQeDcj]uoS7:.)VP^Js^\Ke&#IlAjH<I:Z]H=fjZc`"RC%h_+Z\
%h;Am@)S<c=NY(e9<ti5l.X:GBr>#9r(qE(u!mAJ1U+M*_Um[!n]K?S-`2&6k?s-AQ?q#NHOJ.IOZ%mKp1rr&?M[5Ci5=e.LZO,#8
%'Vu-;\g"i*79L9`Yp#!\PllF[?ZerU1PR5;K"IcME#Kk&1\$,MOQM^U>R(81h^eV?"!Eo3Lu.;)'HD;C2"Al9_uAWP@tZZCc^kBg
%HJb?Md[&iFr)+ZMpE#dAX&p\)7SB6tp`iAAD?:d`s3@>l'5D(HjrF.0>:P2&M&/!8-XH5#Y^LO=i5rF1=%RFfQqh-`H^No:^Q25e
%GIN)H[t3_R6&i:j/X+^^;Pbp^LgNpU;^l8f^dZZ>7Crdgg18"<JnQf8>bn`*=tdoa9c5'Z#C:YHYin[ZdA#e0/PPi-=TCXPUb>4I
%B+Zs?YGY/5dO\4,da!CZec]fZ$+*PAn#Zke>a%qt\b.[ENG1=O"E\a]bFg276kCA&RZS/G!lNGMSPWe0R>9e"=GSMKp/.M`UglV=
%[#,Jq4Y!g2&-S%"Xhonga+[QVs/7<P.^=+j"H&OPD',"cY2"Mlq6ls9Woa3%4_*lOga&'G9KEq+T_HR9rH5Y0DjF[G:LN0.KGl3i
%04N\Vkcu`5:ZfAaE`c0g<Ia,%c^U,<jf\?rq?+*A1Z;A)Juo<'9[`0F69Q]@Q\nhGa1M]C/:^8-jLt-JZUm\eaD(?Q^nI13UUD>n
%4>LIu&rk6d*E]ZOM8hN^aXnntJY-C,=VA[h?$J3[0sr:m_gUS(W$O#`6Dc&cqrWi5KCq;8i7'*TID=)+HM/ku#V#]f@1>s6>a<m*
%Gd@:jnLMP]#!_R7Nt68AK-lVb'm5S^RLKj=N&Xudko?Qd;&"4Wa=nO-)ilFlTN<Rjk0^`X3R/nuE@Rha<]9n`+oN&JaG*_CXfTSH
%a6XouUFLp6ZI.5n3DP0(l3Ie4<)QOh<H-K.%`<!W7;^,6jHWQXFsgZa>S4KO;8^?/5Yh\SW/7&g;fhTS;$.7^]K*7C\ZjDCIaRoq
%;^ChY*,+D75*OFi.fPaP=H.^NV$/kBYt"SJYRb`(*fK9&*h8pF1.cL!NJ?@l%@J_`(=t#JXcfV-k*>W0X*Mp(*G3Q:*n^PIj*[OH
%M(p%P57=L%j9-3*XCni1E7Nt5XF1"C9&G^dg)TA&,fu7F7Da",/1r.%EW7ecq,k^47(:4<T8GD#HcV]&p;m:dSH-#8!kD<qAPrn\
%[?4^cSAg\_WD52ND)^MN]UT@uWJ5$(OI1^u.*]mpP?bXfEcTGN"0R1iN2q0V1c,FPNW!*;fN'.7B1)K/2(8M];ArBR@//H/ZH+!-
%^PQIL&/5\qK1P?67\[bIV_eTV,*%sES#QJFD*2oA`kV])@N9S\%Z"s^1OBs&P:.`d2/dc/$#qbBq(stL5l\J_-9'&Ro,o)eGn<\h
%pj&3uGP]QUXG^3m^$DlU(@RQc1@]6Img(1?+N=!93=rks0McF=$#Z!<bJ@L+hN^E]]"p_hE1mCg6ua(V+JlqWQO2<D$T,4*2?\*J
%#osAZO[Fmb_*^51Le^+k=mCYOKc/&V6pn,s]-kP>%B-"?D1ZTe>u6kQs'%0]U/5t""g%WHnqC/GR)X3=Ca1rmO#O?K'A->bW2Mu?
%>Ss0qMaV^Y=diK-8l_a]oQI12WIgS=Vi+S<=]A01-\N>KVjWFR9hA(0e8@\iIRsj%A(am`A&cK\Z6"Ok/Y%lb]MF%1FfI@VVqLM[
%$ROad&qolA`qS='gC)2?$bCO$[b";\#H>3RAT@mXTO:-J<kJkdIJYG038Su&a]?'2TKbcGX=R/5%Gsl9A5+9a`+R'sfru$7S`\O^
%W">!tn]6eKO5;)=6T.kT^e2\2B%-i90F8%AHu;&<QI17#8Qgsa/Bh-=;dkudPORiDft*T60H2/^6Km'9?m30430?S8<;Jjq)cjcp
%@ph32PuAGDaD\DAad@"O=O&\G7h^uiF!3k1@qm5R]%7i`(RS0n\@K<0dXAa<hV.`O==pb@UE.m[6diZ[Z$R/6L(KdtibJ)Z?&6S(
%6LI#KiIk`*e>1hWkebp*B%"A*p+-9+h8u=:"%;)@kM9N2VI^Y$c8Ph/DDrblZiaOqAjc+n>Tc*'K:>)JoM7PkG8kQrAZ*<H\,QNU
%,0I2_`RA53Gq^C[<6Q7,q4^2FlNdZE&VompB<mPj!&#RR9no>B*E)#^\4&M1iN6Aj<\j=VJ7)_6K)sP3MrQ[i]P]O1.F#Pk.3qM;
%`=?It/nK`f]0Q!oYbX#4#<b2SGteAsQjUJ"=d2%1Y[q#HQ8O+[/;3A,dj17s^VeC1/^9/YO"GaF;n3+ceT<PqDOI`-<\C:,O-@oL
%A81Mma_otp2'nU:<,>9MZ$lHJO4cG1Ft3=&88ML6XBR"(Z?!RD''^-IB[L^pJupT/TTK\":6+MJKLIb=dYSWASYc<nh\;&%c3K@7
%mK6Dn[ccc2`.ot\5SU&;AEM,:&5DXO9DWOJ05>+Q"OV4?D9kd`<KrKbB?mJ4%<*rhN@kS?_)+C^9Jbh(l<YgK@"*]Z(\&bX%U>Uq
%ehKfm+t.eo7MPA>m%T_,9Suq)1#-(r`:f]Y<K`G)VP@0)'Oh2#kWq*X)R3[,V%L]u7?rhuSAqo]B7GQ/8E4>2a394DAe]\dEhbSW
%TS;p_Pb4r^R:Rki5;f?f<Wk1K'!9PHA"5eV3N%fZ#ZOO/T@/ZRYUaE8)-V:pm>f.t4rH?cBpP9A'Q`A_*mp8AUIf`"E6K`g)F!%K
%pGkdD/Mq):Lt5DkL@gKsj%k^MGGKFRHC&0k$Ma&sq4@j3RmL<#60MU=3k/!E1OZdkXA%E7>Fe4=m\1/GO^NBb_[(EsF;]3_NB5lb
%RuS`^2BnK&Qg:U!H*kP=[*=0Om6\sc8DZ4kW),jAOWEU%8WHaiq<CG`[ZRb0,^#)o<?kl"8<7"5[Y:_NXrN(sUltm.+1GQ?%.dnM
%<lM"\A)Lq[UGXj,;Hg#,HL\L@@#b\gA<07+><M,U`&_=H<gA'=*imFo@s3oOo5ceU+fjkqK$Ne[Q]CO4Xu)G>rPW2/9rJ(NSP,RS
%OBV)"s(8?<@IDm"q=\=#N+QmcXrhdt8<o7c_PS1%NNnPt6=2%H&AP'+V,Lic#16,>Lnlm;4oXA0(2C]2@L^Wj=/<jI/sE8^N6:2]
%g`#=F:9H1kVVhPl/bGQ67Tbd<hDLUYCP?L!U`qtQb,$?V#aIQ#XRt-G'6p=XP0+h]NKmuWK'T270ra`K>%ko%Lr,5,6E-,PBVD[H
%^[0n0Z4[cQlsH_1?BdlYf5sV?+5Q:!!:_=?BFh*(iThPP-\rCr[-jcr#E4Z`UX8_]d?.TR@i]9^$Y29!ZW>'*OjnQfO1",>0aPaZ
%]&^EA50%ssB6JcKnR4Gp\'&hTXZLqm_R%,X1#5^oek)+K/=7dn`SB"<5"G'.RJ7Q=>qNTK-uH>%Gk+W'eA#B^Z1^`PRA=h6OFqaT
%]ARn%H+t#kV:"1.,nAFo-0?.sL,PP&Q&etQ0h(crn]'gUNpTqYT<bqhK[Kd0QK2#2i+qm+dC-N`m;_F^2.bVk!h]9%=E:$4oK)fs
%S=7[rjLn?q`!\Gp0$&^[#j05kf;]2?b5>ctT@uH"mj+eniRL!Ra^=H0krDS2=(VMC,>X_qFu%i:1tQ72M^87?"Bu"B%j?(n&h+aj
%e]diBPU%1YX4H-?jofc]%?Qd-5Yd>*2>$.84[;@Bgr,#kDooW2$&mP>2tJaMA7"8o!%!aRL(6R^J4YCr`H\IuLrEOg,Z]jZ0pD[+
%@nS@%`ft<<q(qTlL$UX?c;!?nf2U%Y=A\XFcZ=:]#[f6=5Y\7@_Zd'%WQ'fMWY#nQ,;EFC'nT87R@(0'VG<lONWY)@-a3=)A&,cl
%d9i1mM'qg`L\n.:]I)Adn&&%N35tFXicoo7ULP_k3]t8Og_3.='d6<<c-Zs9q=XYgE.>89@(?XrFb0cU=;Q&^G'.n]R4O59&_p@7
%N<m\0pdn%O%('i>*V%ep4di)nNW>9'pdq&53qb`Yo''X4ICeEe\FU,SNiB]JoQeBI#6_U<4k\$s;<Via/40C=>K2P.r&bJ!F@N-S
%FLju@H^+@P@+C`s=SEUh*ql98)#!UeqD$a.E)=]c[CEacA!Gg3C(.7I3^f_LnTB:<V@M:^obcMj&]uAZ=ZT3[$*Ltd'cD'6D+g2N
%>*B)0l4_X9+$(@9H8jD$d>;CNb0'(c2Y5I5jR@\9KdP1Zm1l(mdB6JAlVnA"NGGr8>#if$hHI2KW_HMH3IBc^h-A!ac8E:TAOauF
%+q:"o7@,'\C0WZioU9A#_dHF)q8W<E[LV<&/kAeC%bWi<"t1B.<";kaas\/1n'=u)]7':2'(sG3\%aOKJ,cEfk,6bkS)sLkkkFDj
%hj<Z0'h[+;I1-Q6K>]or\u=<;CL(Z$SH02&6#<Ladg!gD?7E1Qd45Yu?Girr$9sLsk/XMRC#$d22tFA9Ht=O0f>q#NP+"GojDh15
%ea/u0<KGk<lI">YW6MpFZMn:G?G9X7No!=S8E"=O.##>K(@clr*n8R=,R9/iKiFAsPWon'^BN4/an[Y=b_5'U-KLnl(6\l,e:AWT
%+brC;KMO)[;hLotkB-E%@'=i`I/>`R3jl#2h!!"mlP+VmF2G(@_<Ikhp,;WuL];Og7:S,\])^W:fsM>/okLSoJ@[>DP%B=R.[.f!
%PoLGT;`n)(eXoY3kejOo$2&!Sq.0+h8H$V,#!UIC*g8dNP,CW-+@SK'1*d&Z+o]7g(ijuGdL#a<3g,e$quNdJTsrh"Qju-Rc^KQ0
%>/&6;nX?>Y@sVC-[@m,3o$=59n&-K_I)giqq%;TXMTMbfNRRB@.XsCLdnTm4^WDdfbiicj,m'J6-E$C)%]U4'lTm/`5Sj9KO8c)u
%QikhC^4i=&j]KPaj9*XnhY>_a+A"cXD&[_;'0b"OSdY$JZ.?k;3B;>e)a;jTcNVbJcFVnQ<+(m2UcYJabc[2mB'RILfU5/_k*_*Y
%WX2`u_2\HBiJPJ*0o5Y8FW>$RP&iuK*Fg"ERZ-HAXcR<6Ye\DMXOoD!XO.%&&-IX$A6.Sub7CO>I(i?Y6RH,>(6'YFDdh=rn+_A&
%n$,a'_&='?J5W\qS1"oO9Den-1:/3U!cFb#!>0I/.Oq8NdEb&nU+R>P@J)`b>VTg!^]NVsV)t+]frSj#ZreBKQ,[N`]GMRl>7k%P
%#gAK^g`o!5$bIO&5oOo$%q[nAZLd4i*1PQG(ICe;-3$]7qA'+(f1rmp%k:?Uo'M(PnSG5T'V6@E54)%UWC*>5#L:q(TEQ[toYE18
%jee._R!+q;Y%4#93"07oB8CYp:`)Quc'f3@Ln@',S6Ig%F0c@W_BigV=hkZIkM*sX^*Y*l%oK++-FUncD,9*O3ho,Tr;]"0fc!K/
%7VjI;8u"h'U7ioj(6,<9rMn"M7U6W_3XMe-o>K]N>@SqF_CB=fpk;8:M0u<Z=3HoJY";eu,ACH^lH3[;+-=k[alj-8MCT%T9H$l!
%=D_5/V.;C7[O1p0R,5+e-G`.5@lnr^@!m0"K]bHX-W>5j#4F`k-ZXjI5j)jN&<kh**p3-WUhu#]g\S+1\14qjMtp*5Jl$nkD")mr
%KZN.hL%mNG9*/K^:NPK#F+GZ,XiAhcQjU>0l%#[_3mE9*DD%g*oP3Kfr(,4pMU^X&B0LJbY-P193+Mf4Ti7`ppuq'f>diHTZYk^g
%L38t`XA(;`H!I.?T"i7k0n2CMPY@0dr\(m(I6(_Yi+d9U3H>j/6\6g%dTasF/Jr!;CN@*doWXk8Bj8)^J)YACUs9:c.PQ&pM)R98
%)^rQgUFh!U"=O556Vf,(+/\AAFEl'4`qXDJpfindJHBiSR&HM)Zlt_![PV'0_tH\P--en58TI\t!<t%9Q5J2kYU5)^0s$3Nf>J-D
%1X_0$0YUcIB(6@3iu=gdfcFYG#)t+@<D?a3^^LF_ak&[@&><Zlnp[3L5?ML#[]&OhT"<&KQ$lK^#F0^6fa!dj:tZ)=I8JT%Q$j4_
%#PDn8'>p7Uf#4^jpA^d!,ori;/LX?;KJ4PaSNO)(h=5:`^#+5RP+2jud/+bql%$*s#lZHhZju\%-Qi``-DlK5A,&b'>'cbdM=ana
%]CcT.7C"\WV&f)_Qh.T-K#4F,eoedn*/>O'>?8o6CPC1FG:.[g[Sjt'$0d6D)Nb[C6>D:CK\3I;b/+pW,;kWBWME\ZSX]'%4=4Po
%EEFa%-g^7FNQ2<O3)(W0@P#M.k?+Q:fT*c:#^;>IO3,@7aRl+fq4GXZPf0SI,&PHgT?V%C,1D4(r`KjOT>MbZR85(ah+/gOPHY`E
%q+<`*9MQI=`^([>8S#8-Ll=es6dh3h:.TsIP1aJ7.lsXu>SA%]hmN-CH&-7'L&F%A0b-o>c2hZ:*>(7pg;37:Xll'g7QOpX`[',D
%R]M0)$E&56bk(LXX!+#.:aIXO/o/>Fq$uA*LFck0RUF55"@I0?"F`'9.=!gQL8K(K55EKO$h#KlJt9,([W.CG4J[$m!/X0:!p']P
%,.n?3L^[.#@PTt>C-noT.lujn8-$piSNE_"S&1>.6=J<,mRU2IBJ<>H)'r7J[/."5k)r7QdjT"+#+S#Jc`!gVY&TcjrfhAo4IKfC
%;^^0R@ki,3Vos(pb$KelT&2eqDs,srH]ukqfpLJB,Vnp>N91H%2*L,gF`Ac?AK+FQ'khZVl1Cuuh<F*Gqa4hjkd"g_[];Kc&I4bK
%6R)'tfXsM1]-3=3IF<oV)u$+u5`HbiPnU[NY1PqOpP/%WFD>lCEpk$T.uQi*i[kcNBHpY+1ta0)Z:rb]E_"S<AiVt;*nJ96-AFB4
%XGL8!,/^tKacTed<RKUV%4pD&Gg3[<g(n0s2VZ,5P?[JC^b5'.k"!4TgUc-R%HT13H.Y/tj4o)U`spcmEfP$TSG(NJa,@ptqt]q_
%'TCr2i/;<soCOD9;.H#HO49`ai_/kl7jh[+6LIIKT;FUlkMN`?qEDapHoc`[G>DjtFWn8K#_Fd=d>'=M3&m,8Wj5\W@%s;#@OK[X
%KQt!DfGNYj@O0TB9Di"V7),!tT^_.4ph2TV.S:cN2Bu=W7(o9j/\+5+`OhCu=VO<n>*qW$\O^@rpuIg'bb\R_R,fWLCmlmj0Lc.b
%^XK\X)j7c,GE0lr/od.:#m+sqdqfX"p\:a[`j+4l]ZIlHTi#aFR!U,%J!GMTf&5al*<K0uU,L"l\klIMpVjn]b`PM2WQ-o:&^pG?
%NBDMjelCC$6Y$q/iNJ;M6V_Jq^_\*/L7DG/J]Ks*%6:g=;c]@mgQ5?L5d1FIU4n>h_0O,o1/267@[pX..@/W'/@r&#?T=\(?lir(
%_D%$*gl+!>_ngZ<7[.>;1R,9:H)0D2XC7Ep5>B_D&T*=A4kf/sDb/O<9%fg^m2,(GX>2hdf\8R\[/F.era7VBFB+OcC;Nu+C\-?Q
%r64dEa:1"qE!CY-'A46<\KrkKT#O2kOL\^9r?<J)N/]*TFqu1Q2`btPHmFL[oCt*Lf/1$O_DYsuj>f(&(`(6oNT\)IeGqV)^dgu#
%Oli*,-+3Vu?d^GA<FPs%/d`/&-jEW9RM*oc":1[FE!F"eg6*K;Jb;-)HIUc,7nnNS<-I$uZRS#!cumK>$&FY,*8#!TfZHiqS9/Wq
%d[(TWWt"!VUhYs\AcX/5*aKI&HrE$>r)f2UW;<aX1S4mbg2ZhZ(!ohDoYFbjB[[)nFPMJCnJI\d&?45_[<!@A;'PSl!KW^BTojuU
%;h-+/d__,80m24*6h/%(#n4A%`th*(4ncSn\:Pb;*IoXjaj%KJm\-822Z.V0C.2c_eh+[;(Z[']XuuLEJ&SK*?Ak4a#MKF@ckb9\
%,/AqLKFLch2h==W!=m@_Y5A=oNfkdH"<4X4.A(__LZTX;Pc3K@HmbueiJ4b;@L8"H9nGs?UY0^^KFTlS2'`'s@lpd?8*qB=)Rd>/
%]oSd]qZsc(YH7Wg5))(FKTcSf?:#/EiFIMHNs%V[7isZmFRA"+P\&EDOs$]r.Q@sNeV<jiB=A%WlGXRXm5gWrA(8Nb]..g8O3$6X
%BhE0B9NC+362WC<jc?e.(QqAk#$7'1Go.Tt[YM0ZZC@,G)sIQQ+V"!V^'/)pa%m]k9.qB00/'6WZI(^KI"3*3ob3?1lXMq$]4kVF
%qVKhkB/"<4L^o9@Qo10BD3U22]"i$@o'5?F[b,&Tn>8ekRQOcE>HGWBe9kOD5BJ-=c@'B['"-Bao"Y6GR?5<3"qYX_8ik:0V@Xs?
%-J>cup,eBsZh6M3G2k<XFk]L9Gq*mt-DBHXHY!H*oS_5A)dOh3*9Td.7iEQcK7o[b4/qmmcn[@>6\7DdNJ&N@r%^J\;[M^Q3m$!k
%p%,P3=pUG'j)3Rf\)fHI=K^l3C)62u=`1R-@E[g@o9mjTD3oeu=^Em1YC%HXaD3.&>?\(naE('k2U-+D"Ir4fT6"VNNr3LcUq-3^
%X!;CH#3AW]T;6,#U[1l.16E/b-C^nq%)S(2&K!rS&$?OlVml?)eX%l%WT>s?ErH$%@#sua4fDkR!'GXHZUk5GMAGl!P+=2A6fph/
%O"LBR+^+$kP\2Soa;1oLm<id8I<jXOBe+7/G7M)=RiAQ,$&JmA-"7jdi*Ali_ukmB^JW2]gAI>^MfY>h=g3'=$`CIJH7NU7>`,X=
%YtiTd:>M3-ZL5(sldSD;OTCLoKI#Mmk.o`qJu<M1JX7?"9+#u[RGNCKm.&XXGaVQ8*/6Bo,J2U48c(kc4-#FLiu-4^Cn?Z^0fYV)
%C"?m)mb7C"/_93HKVP*hl7KI0cMW)Eo/BgPB,t%<>I*uhNBQn-h.W?Sm*i2)[c[&5C7CfJ.pA]_Ih>t<CK#D"+D`n\kCU:fB&Ab\
%fF'G<o=8RFlSZXBd1fgIj+gXA77t9k7Xhk#>]iZ[<Ehd2EnCj^Ckj"=6OqioL[C\qYhbpFXUiN;><GLfgP9i=gW:1IgO))%`ITNL
%>]J\Z"'=8VY.,RDBV2g+6b&lVjGN@pDp"0'D+M`+,\.i,Z4.,nL4jA16FJ$\gQ7NaagigTjBKNj(tQX0-MD=OgcP9o=1[ksc.t@"
%]0jp1Ns9`kHk6AX\i8!@(UVN+p,8UmAbOsc_GV4e$eUe4q7;*)W?L"3D9--EPg'GZDaN,N>*hM-8?e>o@%0F7dbs+Z+PS0S(8L]c
%6aui8G6dd.6.E%R<%/#[[\6<1T[L)(5MgEAmj:l1A^9*<1oCR4B9PfMar3Y@7BIRr8RN]m'[N(7++[P+K&[^e;\`$_7C!t:d;C@7
%dn.BEHW./u\/:L7DQn:M.1<fJQ(&P-TO<V_01j?l"fu!!PN#WC\!^hpD:#t6\l^Z@9C>F:@[Xq#oIip:i@.m#QD1,G%FldGMp=I]
%Oo@$skl^MpJ.Qm^#^.F9]8`%l&@72)9QC7-_-LpiZs.PQ1gOFf(@fQS?l(9I,`,gFES;:M^I^+<$"nH5^*fheisJ1sP@,;2J/!*+
%Pe*h4VFk@aj3?So]*QJ6?'Ooo2>eUCnirH_5--B!/BTKAU.Rs"XX&q)/d,4U.B-9<cH1t'X0&1TW%#\"a')8#U3(#ne&P#88CH.F
%3=,hJaI04tm%t/&ESb_.,SP[%-+sm`HE`qE+rIFrhV.;_]e8BFR>Kfb[J61Y(i">ZDc2?o$B]8H/aCstb#gb&F%AITh'e3>8r:h-
%%Z`R0""$+5ADnXMX>j</A4FIa*E2MS1ZUD'gp%\=RH$$K!=.ml+:X(B2`PV`-3hK2ktig=';HDZ0fu[3m)8E\9];dYa=NKN&TlVb
%8I4BE6]NJj$2"At6*A?7GD?rEGRc+l&@6]oj6riG2k"W*rfe7;$"+D%98d>k#`'X8"R5QV$Qq'Q<$tHX!\=Mlfd+\)6dT1g2]KV>
%/I:a?f-b4_NV<;6AL)'*U^<Z+^.(QtH*<=UioU-!Bp;\Xo9tN6BL1uDc048qH6mjM`%+t:ftD4Cn`B@iq-789-(gUDlQc3<HDG>)
%:lTpTqohe^jNYhWUY9Hm6mZis:lI(0WZ&=MPB=;lfi)Y-"3*ZJ,F947AU8t>_d?)D.'sh+jH?Jq8cI#sh+T$<k+1sEn"Iahq"<d?
%J%*tds0c)ZD2d,N<-<Z6N)OC6,='*$N+BCC"JDjW%ks,g,m<EiRg.*"a">8X;2ek>OZ=K'1^X/p=tUV48--2WnN)qS3M00+ED@,3
%Pie;&;*6SR'I05XBaF\ejI6L]4\[%&Si#(FqijT?`HWIo885#"LNQlr_cV$=QJ1Q!2MS2jABH*%&lb'4?)i#^l*V[pV\trWYqYR$
%R*D-qH#u_17L!VO@V+7E7>OkaICh"jlo'8RFi6d(:UeTq-]uO0[:sT%:&Lnb%bZ"@g!'N]M$)22!OL;_q.NWA:UO\;X&ku>)V0W_
%J!"aVo,aT",M"\AQHG'r1b:"-B6h&WIl[IZ]V66O3gN)?:6mW@r\=dt[Z\./,HiSR+L^pb7hX;J^dC4+JTjI$l%\e@_fi7T[-?@p
%ct%HAe9"DToVS@1^TA?u%Vrp,6X]%'dT4@RTM7JqSrCs*ELe&:#LhI\&IAj:"EV!`j13_8g22;`C^aN!$8cKoj.5c:D)K9:/1f:q
%HUbbf4RAAmIWQ&r$PhEYQD\I;>%l*V:_Y'T!jQDm3t6uP(e0l>X@]a6eDo7cPG[Dd?qlS[KiP3(bNX%^9Z]6EAQ)_e,$,N+/?5U'
%8iaQ-;F3LKaLQ9oq]Kb(_^gojIq;J]_VeIS1'E.[J-FHZ@+/Ml+c<:AR%o=LW:X12Vpc4%#Ljs>ML_!NCe"`qXUW$%9jLT\^`%N'
%@h$em\e'3cV8bbHd[>DP/K_t&"=:7c^0#l3H+(FJ>JE0Z8hEs*-dSE5rLQ2'q6P"+=')HGoj:4]I^cu(>-3;QVfV"kp$*O!<pcWD
%*EOA9Ng(HK[aLq^JgIG^O__t@(b@TERX:^'%mU'5n,G>ZrZ<QeF_!sKNW/7YMp^d1/H>6%r4H%s];/-#*kf@pf(8H!s6UUC2,`,=
%X,;+FWhO^4f%fY2,Sa)W/-ZoFU=?ugMi]0GK*T>tK#3@m?:kGA]YY*^$lT8Id>pr%`)PcoKT0?l0sW9HGM,79)E!*W%8[C\['mL$
%>D8o.X_d%L?ZagiKs/s$8d"Au)O!<YCYX\Frj8cR5L"]V79?&MBsnqT\/4G'Vc=1Bo$ZX[n*A%%@=nZ?f6J%`F`'CfO&,I+C7OU)
%YqP`FbD*K3B7*m0I->:E!E*=lmH[K3A#7?i,Q>8ik-J]3SWIJqAb)qWf2B%DB[t]m?Qlk4-*L$L7onhTM#[=0Xu\N)N9Vfc5%h@.
%Bg665'A@TKVth@(m57t+SLOEZ]@16nl:BcbG+G*ubP%BSg?i\05:tVjm5d1uQHbnKg@k(,L&Pf>'Xd8^>`la\Cdhr'+Y,;uP8/B?
%C3hI:)0@o6Eg&(jP#8Rf.>brY*,&28CkBElLDXP+,.gNZq_tuKOknmPgUF5U\c,!?qhFK6M#<f4rg_8\2Mk7[f$U+WDeC*hfj]G?
%^7?jQACGb)B^O3=<4l5]`\Xn1'eQH7PBqH?WGF.CR$bLeo<j\Iir6m.?0?W<7=X=QP?$h9=@I`!h+7s#$57l/q\/Gc_F/l>akp7^
%cfr)TEtA"X8Y)#cUW0]!AbVbM=jl^(2QOa!I/gS!4$3/?oK$4RILNREe=QcMlb!b?m;0&r>N_OtCHkZlSFs66kNY5+CoaT2N$"WU
%><HO%&sQ-g+.qFl$a'62l/hSn\"Tr),,=-0P`O=,c\iCh=[t^UqY]#(^.;8J<5DO&cnJV;4EB"1d$'VN%(n+Ph2C?".IUN^41Z*Z
%V+-[CpoJE%J4E)F,!<e7",n0XPu1dF]W^BN^[OTf>k(7V&SCZbg7O]$];9m6WL5q%j*+r*IZQ:>H-/YTT!P=%rp]#6^,S;<LT6q1
%qb)/sqCB5UnZ*I5?_":_p&+1;lKhun]_q/_O$4Y6qQG,+C\[B))L-Q$e+M8V_e5`oLDqV-Qco(c-Z@>V:G5db\jMPXo&]]tIYe#0
%rUt\/++AO3MbcMUrT,>)\pfk#oZQh'>427=Q<S<*dN/+%DU8<*ijTu"phb5G:o7#9hQG/\]Y3UX'7]%kGN[Sae#Tr@H6`1OW\]hl
%?VPuqZ[.&64F):]qYP;][JK1TlK-,l,T#cJlLp70SbD7nhXp:8qQXs\jQ4ARjiM7Xrr2;ja'c"G%*!U;oDR/6p#YSs\6OHl54>fo
%rJeGSNk)hV+0JB%X'a/<fUa-Ib&?aZB"'X(h:24(>Q/sA`U`lCLU6)g\p`.m[bj1Rq`6s>ICRnn%bXpU54fF3:3S*Vo\9(d:VAAe
%^](IK\m[N[OG<.CYCAof431]VNWL)u&LSCX(RKXMp$LG_WXiP;m<mZ*3CThBL9:'?DL?]D3r.oag\Ns!hI#qX@b6sMQRAi#-d-rh
%/\?FDqF/f,@kaD(kKD&f^YW>!=6i'![J?)YFg-AqAf'bD=3E\u07N"J'ojO2D&p@PK#/`ChKEn7qfUrn*o6U>k;(&d(ME'7(]E\O
%s8MPWnPZg\$]uA<;WtZd>sS.I&+fl.#_T)IL\GKJO=-U0Ge^gp?=!3-'-t'TQlaL)hS$]!Y[(JcD[OiYNqp63[f:W.]=nMcqfuC1
%ZTb>$Q7%/7qt-T;ms3PtLs#R%%Y3sg!&nHVrl+!irS+ZB-bpDAc`XufSo%K'%Zr1m0@-fX^0=n9R@c]$F$)i:pb%lh]552e:?Yc[
%b;Upkab,h$qGWKR3?K?N't\8_+a@mC^gH6)f;$ZamlB[r$"/4R!og,&>)8eWh)QUr%iVPk)r%\<1#]&1=e/el0<Wp)d)P=h[]R5/
%ms\B2?%(qa\a8aUr+b,&imm_`:Y4d1ogo[l/:[!:@0r4fX@#cSOkHT?-[f-)^\d0SCAH&Qc^IRHhAHtG(Hq]&5:o+$N\=K6mhusS
%+-tKhIoi1F?bF$4]/nV7lnaS&hY7!%H*<(JmbY3fr;CJ#A&#F:IO&AV7/c*C)-e&3.Q=;HK.=@^h)R;lXp7@?;!":#.eid[$'P8_
%f,&'A#%asD1V6]MH>LP&<9AMZM?[@(d,bI;DU@KKSJZIZ6'iffFhW16?EIRO"(M4c,)U^U!G6_lm_`Z7N<;b!SGo%MSM0jCY8nfi
%qs*23rS*8%M`3f;Z[o:8OfmAgY4WW`JZ]H(D4kYL6.Zm=(T1oHb<]YX7(3%@D(A_e"(`E"gH?t>+LDSEgHaErb4\d_gDA'!J!Qr.
%E:S0pq4F^oPIJ<eJ*YYH@sa"BOjX]LieBVhW-cYrH`G*t%!uaA;q[U";GR;Gf<5kbNpWm=(:LDJG7Fl4pU?(Phqp"MX=g]cVFVU*
%ISUC1pXE0pT%PpoII.MYZ_+VW[Vo,Q8=Mc<c$o:q.SkR'a/gt]X4*Z>(Pb-2Ip@*4q8L=P,Q[r0I!P;Sk9DUjGeZ@$]DCou`OH`I
%3Jb?+eBKAFVgA'sd'h=V0"chl7J@sG#695A]3k9&R=9Cm4MCN4p-a*(+2q*4pk4(>$oeOCp[?,dg$@8AIA/FiSd+iTah_fk*oW")
%krTk=Z13fZordKR3r,a;4Z_6p_B.#E0<i1R\n$$RW`O\cEA`Mbn5a+]JQ_u$p?oMYf-]:`X(eG*e0Ca?hK&kT,:30N*8^@q&1@5?
%=F?R0&HUef3@Jt2-jP//aqKp"r97'SleIT"/h%3!^^WfLFnG.\O+;S?6I?nh%5Q>u%2mHGgEmp-ph[Isda93'%E@hPfIcLZF0=-/
%T+T]<I'nAe,Hf?TC^]gZqG?U(+85Yl\GffurTB&6%BDR\&N;Da]jiVjc5_TA<!VQq,;j9*)<Agu12tRO1@W;]`Z#H9Jp]coC&^o;
%bD@7b;*F"9po(;Sa;+4J%s>CW!IW4]s/l+g&!?hbnM)-@8JT.BK;;!G-WTMFMV]qY\fQ,+%YBG9;'B#mX&*h`Ds:i*Q0<-K"?O<l
%9^<)]p4jS`:Bqlo8&886h6bf-RnPprl0*s.Nt"*)p3RGnooSh>5"WcA;ok-lnZ5DGl-;4TP)4VDp\1)I"7VT26!W1A*JB`&S=o>C
%f$U&k_JUI[_;,m]61(3a@>"llH.9?"Yg+@fmqs@52%K9=ldb+eg#W_2+8[t6=3I64bjIc!-hXEns+3<0O1sbsm-YlmPN2!%a`dt]
%7\8$P)nSs%HKr]?Md`%@HC:b1:X#[t"c&1sK-ARu?S9qP?M?HR@1UufSHBAqhWf)>3UIs-:7e8B-[6,uO2:H3m3g!0jSXDPE:1==
%#DhK^JQRAs(-J^?OK))o?_I:F%$GlC`ut'?`8M\geE^eJ_`7qcn,Fr0H$d8o?M;6+msPh:i>eXWMg4$tq/KLA'0d4^7%Z[0q^-\_
%8@?pQo4=ONItstqh=7$!JW/uBj6o)"l@T]$GN/:[5W&Z6g0<Re$_4fs#hu8-$2UVkONmb<Xkmdj#8lh>FSsOpaklLZVf6gpP<pnq
%^b$U4S93.K0,`cFLH+OZ1I^&]M5>:B2du`(1\LJdfDCWHGT*Zia0OEKf%Hf3#K&SM4a_mg\'+GjFoHE(^,kMVhf!sT=8gm.cqPOj
%GOOGO=*Df)k%>dmT.`u@moJbTYEnVfP3"g*e/U4A`b=D/b$Nr]iIf7td>P[+4cel:;qldCeY<e5B$*.+S0GW^f&#kU*kM(EmuAH[
%3#Dt)cTtid5g\Z-mC(W5X4?Z%m&$u4[\@hILn4.nc11B&fB$r*,_19i?7dgWY$/P\='b*r"g9QTLj9du'_6QDa\Srr]nj8T\&VJ/
%p#X0)5!+I9gY&mt0dW`G_S>oL?$53*CqX$G348EiH%,>773Bm%EpKkh[D#c;+NV`iPO!GE2a@l$:8Ko<W`tf?;S@GLm.Br:lKjjD
%r<g%%W`M>oL9taqiEoM2DXUq]s%YG0jne=LYLW@8+0,Q@+>q,84WmVq6:!\Y$:pCFSN&It`ILA0-i7_`D6in_r@&jdqK1_9N%n*_
%AUcGqm/Qe\Mm>G<dmLK)&1gF,K"_1dPc)>[T)oe):F?X,Gn*r@!K462/E^_W;:M3<MpdNrmlc_X$<WNVSN&H9cCn`FH7c53h]5Jn
%MpeL:#:%(P#o;V6]JPD"WTghLmQ`XQ3L>ML6uajshCoUuQZ;&)-K:f/@[AZk;CN#%?bZC1lsHgb&+@hFkHCJ/Dn%8d<=_N`Vt%B*
%\nZ9SY'Mt$SEhn#Q`G<H>N&K_VK_3jhPZ$^mF.C(!0X@EqHOg]<Pe^S#_#!nfC8NUpn5[<)$a[>4'S>[?D"@/k6]IXeGIeeC>Nas
%P'_E'[1D^<%6S$L#;#AIH?G].od9kDn!e"_[.;iJ[,&N@8?,:sDB+UXf+$<e"/#Zjl0tC<FC="Jfnhr2k*t[Rqtq#i_/SJ^5#QqQ
%2SPg\D#BoL\F4dspO:uMc`@XlLRNFJ5&A-8A:5m#HQKU=$*la^h=]`eP4@E#`4IafKAqk4.I(\-k2"4eX1.Ou=+)@!5;eWe6q>09
%([^,\*ZVumi;e<6!J?",3:#P]!:Chp_#ZYXJ-Q=`:ePm2lf.N-P]Lg?mb[1i,_-f'^4Xo/&(#V,Vsh?%Jd/.A(7B&Zq@69XVsY`l
%4a[/(qFMYJhRb-?6NVR932P*1M`#1@lTUlnpr9I_pY5!2r8Q>_]6Jeuk3Wo=E--]:^HHnqrk]^P+0Vo84d5)?GOJ5/mD5-l040?:
%hR?_bm619n^9N=,68hrer[>AK6um-#"8Mf=j_D4&*5ni,k@a,0ZSr\ms)N:&^:O1=Ecq6S`T;-ReL<ACc3DbN?of6#B?:MI+Y!uq
%Z^hIsWp\gT=oNmDmeU[&IaDn7r11H'GIC"c<p/tTVkk`NGK4<aq&*n'05tFg'V$pk[Io7?n:P!>:W-f9iVi$Ef[o66!nDq1q35_.
%It67e^E&LA]D1!)OQLjlaYpo>ZOZ]e/\\W:0EZ3AAMCb*L6mtJV8;ZLeWZOB?Gt()L)7,3OSr`E]F9O]_=02s?3\<j@!F[;_oqib
%G)8T'/dqr[Y[p"!6XGYeF3k\uV\W3X-WAH$(`TbTlsh1*hI[&GpM:Lk1,\EF[Y[3>0P$[*,P:."E5ap%PM1)lG^ai/mIG(o=o&\t
%ifI_\T:+`$MJ5;Bj,f.45FCIOeZ?GsOSp'>_=5Gf"k0**3?Fp0r=03Y8A@!W?eX$cSUC7ujiL`*FL?Q1Vsb%.ML$euJ$-<ZK96Le
%Ud,k#g3:&PHCRZUqHG%Tdr2j&@t"4#j5==VBtq.UhG^V9f<7E?Y&H=)Y"j>,j?l"gqA\_[T2?!+cg3hiF^X*=js)nt%VJZD*UOD[
%Zm/S!Er-42_ln:*Y5<@9O5RB4\Oi&TO&!>nog<_Q)gBjRe#,:BSt5RA3Qcc^l:bs7GRA/\#><'EaZ+*0L)hf_HS#<N:V`.@V[nD+
%@rHMG_3/ddS9D,Ilmiqq//a'dj$5.5W2!XLo_.6SRmK,KBMV;hH[WFe\QYSSI<!gCFjAmVF^RQ/46b28,@c%Cdtsu1,O*[6K2J!4
%A?]3D^\\5DdkAC48Ye<6W`-mH8)g57Q60/JQ`L.1]iq'#;)heSn#C<lMjILX=++3(#J0C$Zh%MpQJHt^A:I-/F;q@8EOqi`O+T6k
%0)G(sM`msjY:hQcoiYaGgTGknFAaFpfn5%G5st@=O3t!l@a^l&H-jSerHs*Cq:#!sN:e?`"eSO"P[4^_^2)OlP)ta7A"T!bZk"p)
%cQQYD]!1XRYMs6s^3XqbDua8F=C(oPG59VPr-J>(e[>bZ6S`<b/qk@!FEO'\G%_?hm*HD$AG<n#*2"=a(_#)IKHY]hk5H(K>X+B1
%k];A?2s>=84u_\HImSRdLV,M.F&,)oH\)g6-`5;aa;8iH)I8D1%1:pacj^?<T[4,Th$t.1:F9GKimhLd)AG7_X0Cg<f,*akTb][`
%kt&spGj\l6an'.P^\@EJLG+.(pX@)A$CfYNJ,cE&jt2IZ++@RfS\/718#)j,5;"R<`=FReTR'q'-I8;!UE=u6rp6*Q6,@pGru:l3
%N=*7Gr!hQ^Dg:q>;"j3G'r.s%s7P9gkS,NAn[mu1Na,LAj(dWn;ife_qo4SSeV9"OI8->8H<c][VBp+:j)=Ga\f/9'hDaI!/'@-n
%ke0(lhJ`p)q=e,]A]GNLbhipADq4&E.]G_j6^qCmmpiD.S_PlD-G5bS`W9hAre(BofCUXIY>9XMj$G^G]t%C>SulD&g!B0JYq^q^
%%(oPLX0pJ5q#(.+-<e<>?-Vi!r#9mRX14#*fN"1S9k!g(j&;l)kKj,:B6<JY<>QFB;6%VNNnXXVW\b,W0s:"!e2sf@=.=7&j"_Rt
%;C8bkj.`[q0#I@Z+&&Go8k[$/QE@tSrErZ.;-'T/d_Ta'KA$#G;2uTCR(pCUm2CCE=B)H2W*HsbYtj_R?W:TP;3b8$1!\`?/$EK2
%r:e'lj;kt!O'o&Q[pbffI2F@3?HMRk">4DXEI$;4(h"A$X]/>XJ*Xiun&)ZVHf%5kL`7H53G\<b"g,.]qr.@W+*a4RGl%?+*I[e;
%kf<_AK"2F*SIlJjqW`?2[^I7/A_$Q1eG.<7jkT+3WT`JVCouZ!Zh/C<`k&/J<(UMgCj?P6<D=^%?/eM%V:3Q;Xj1WF/8f94@tsk2
%e#q)bKLKgbL;!*,Wkt4;$d_=RD3]=R2(UP\+^K3-I>46D'j;hJBS^VlenbtZ,Ie24TED#02hcs`)^G[&1ls_brR-t]kf7o;>B$o,
%8FieKDq0Os]Rcq-pNb?^%aUk6`k%>)'rYB_W/s$u!iq"n!U3Y-aTAfa6*t\i5r(B>?Nj,s[Uie/^\hR<2!C+b_#j.+1(hL8d6Pu7
%c,('YWiE%;[S%U#>/B!/Sf.duX$j8^#9^YZ$=E"SR$=_m:=G5Vj[bB,#r8n/WtHLAhpJ!%2@`bI$sW:6R\tKrGhW&23.tlBh/pq+
%Gm,DN<A*omo'4[KfRL]2RP_@jF?2_+m<9@J0eETW4oOg404/'kICD8J\3,JUU!IWsqnINf>+U5OKEqD_mi?g;Rsb$cbinf)0.u/P
%BC[G^(+6!r5HS6d^2.+AX']33G.r8;TC6^9s*-CF+iFPZn$lcZ>F3A[OAnZ#>/F)un#93R*8d5$7qoa$qq'S7",,Xt`Pjk0r_$7>
%HhOYnq7!EJf;k)c(,Gou>bB/qn"K>;Cop?k8rN_6VVZ16!'I%S(6]\CY+(d@B7-:5bl8KGB;^5dq(]$?5#:VG%`I37=-p9P^A"Au
%Xc6\hQTq%EIL[*j\,2WiShI7m:.:*:jH\SL5+W14H'LKpL8+4E(8ZD@c23Fb8#*8S-Z;L/%R5.Fl[tT(7u?KqZOsF@Z8NGTM8`Ru
%Kn4.egJt8\ou>iGckrleg-5(G=9MK\1<a#R>uZHt5)AQ\-aKW_]8[GM&D5f5!di`n?oO-!Ya\i#p,Wr@gH#QGlrB>D2'8$O`H;l9
%93$W>l32@k<9^gum-rBM^i"c6^.jF7@oq7CL;7[moIeBhJK;=4Pg'@)rm,<elo.)NU$-'gZL/sA4/Om\0.e."^I[6d/+6d<H[)9c
%RipNkTTM8KpuO]$:UM[@]T=4YMlcA^"fn:5Z/hcS;q*@5@_\/Xateef)(s"MH<d2gGGH7lJ2YA4%-uO]A)"M^-Bp];cpF[/6b02@
%p?rd47uh>D>"f)D((U)P*^%.%K6\`#!iUGf!WUR.qsFLB"2V]eFZaNOhVg\q#.a`9E]kteocVfr@f7G#%q>LRM=m].:cj'TlG=[p
%IoN\e/pJdsO,)Uo61S'Imqi`WIbge'3&cO,8kUq=M#)#U<.8V1pALf`!p+apPdYJ2$\Ql>d8WZ8*R?1Vf(CF/\L;WZ`-at-F9Mf.
%[lr!9ZDo=7`K]p&=.#$:f$Fn?N):fHd4"/+r8-JEdlT[YLU/I<;=f!YM"\UaN<2$7#c@J<7X^Bfs(D^G%2/ZR-2bs:akNj^`#hDF
%6,Xj5r.>[Q#L!&giqKb6o0*\Nq`;B>OhQmBqX4*gjk^oK[Np>lbIu8dgiB#NllIq]p,Vbgo.JM$XQJ#=T7!m^f2gE\I1`?8!+,Ip
%hVj=?]0>b[=Qr7`)T:ApVg*R%^)AQTK6TJ6[tAoeLpr"]qc(O=Sk>nlC!$8+:T[`eg[C\niial$X9`FYi(S2R:s=p=mb4Z,<gD0X
%0,o';65s#92=_caToGmK**FObk9^uB.(':]A)sWA;+'rT&F>CNW8):&^/kCsoU??)LSK9Ya%cFpN^hAP"Se,"h$Q0/C5PN8S8XG[
%@(77'qh(!ss6oXB5FjSX57`AE&/[G6o7Ja36XbEL$loC:HT]L-,r!ikjCa%;+Dt4TB@^\*0+SJ.IJJ&KHu!+<(07:Nf*!0kUI$nK
%1D;ig&mo@mg6E-7h&$mLZ'hVNZ'cV>Y)NOt;H.5uAK85W5'YfU_)-VlPe.A4m2l'dOO&]Lcp9om"SCa90,Ksf?1<u+$_fUW=D]$q
%=][\c6+\(?"oJO05`Gl/kR$2<-FqrKMX;1u5,b?5%6QO+ls<gqaE0^1N9*Q?`+[;nP/>XJ,/Z9/A#QUGVSrqjQ5.pYXk!ot1hL"D
%Pp;,*kX%kk)NY=77J+%L6EVI\#A0[;-dGhN/i@]Kf<?D,3.lCC-oo9KZ*6t?6E7kP@&&[@WeN$^lt0oXcn%[Y"%'Cl..X)h!5BQ_
%V6qtd&AG<;cFX:mXgCol%0?eY7H<1CLc)tbX>B\A2CLVN<B_#14;CI6Z#Jje-]jQlI^9,Zf<I/9KCiZRHt8m-(3+r4@#!+@FYcQ5
%KrOCNg<Gm=bN370SCP'XZ7LrpXm2^Pq1V1J6I!oZf0CG$g9Ilbi2(@#j]OC!B<]>UP:=Do+i+73Q(k5+H@^W5ZW-pO5G58XV?H1d
%Ml(VQWbB[KTs:CO^uQA5ZhauLhC)_u"_sBentNRA=k(SjTji65&ZlUI<OUK$0=A[#5HF(&L/YGp9pa8][n<+sqh67*I(H]d?sJX"
%;JLj<@cMBEXQTq_'3;j$P1@2hfn@iZWM)j@Xf[kJr(#:[ll$OtC2DSdPRIUiPH(dSN=gfOJV%1h_[F^g>.8*\F,A/M/A7NQQ0kZR
%)E2?#1_0PO,D2C>l4F_GUYR$0c&*OJVn\dn^L"=9'6C&H7qYU_eSF@4!c>NaSs3i`*OZS3AQfQR[TYtmZ4+;Y]fBM1J.&cAT>L`4
%*Et@0,s_0gG"qPG'AA6L\tj&`Jfq&8K!oJH`$L13330mFXQ/g1j5Z)Q48<g09u([Fr=@cSQ[GG'kHX&=-#o1?-^qp@Uni:@0Qa++
%S69)E;ZQ"m[:WW0K<O,8<Om'>=q1&Lg':dE\u(d\UcZTk.0-BM<"hGc4%uDl?3tH%W_mp07%T")!n,p:K`bdg!j0WQ0a3SKL.*u`
%RaoU`lT4Po)L5RdYnoN<;c>&\DZ#j":WtME`K**P<"_\MIj4/"bWq?R`PTuaY&QW37#O($[RASZ#N#R-pWg7n=Mk'h.%Me6qaeIr
%c0WeL';8dO`FC&MdG[1HIEBa</lf#*=)/1HX;*RS\L]Sgg+]TN%iJ7[J_s?QNn?f&<0Gk$FirHZ[%agHYYrZ]e,6f8V+<R!>m*]d
%_i:X+G%k'hYXFpH?Sb<m"lL`(IiM"7Tm*0r<hof74OZp=65sgnW,d3)TihTiKi19pk2N7\1W$5<0L>38,&V/J>1?aBZE='hK]sU^
%KuseHGV(<p)_6kI@misj#b=pp@:B\[*+Z=sqSt$Z"9nYN@(n./(l@(u+)%bH2:sYV%3seJbmVCB[>C%oF(L-UXfRno8s??>Z66b<
%)ARAUB;.:R7-7+H_%=52<Z>53<S@-_TYIk.)M"bd(%68nFG=^g#$.iM"*..u=gE&ZW=mNkD98Z]=g$E@"u;R3Gs`64.F0NXd1$C*
%9E't'U%Gl\kAeU,JYg1f#'t"m`ufk'V6-sC=-5<Bhk=m>ZicpoBt7W-N=3Hn="#OTX9fjY-"nQ8)12\&RSj5]Z>F-8XfFPjE]*Lk
%Q\2;SWt=En%_[\[8Em5HD:#.gb9\gD:)XeU!&TSW36Xuek:O-P>jB+6Y[!uDAhiNC2S@b,6Dt:5E*O0m*8=FoUT@WAL.)i1=_WLA
%$l`0t<jch"QOOO`[+\WL[36u[%?Asc?/$>(*hr$GU`BIZL4A^P:E_CjrSmCG/oaa:FE*F";%UlhG"d`.G?UeA$q`MT,2iR,j$X,n
%QH2p[.\j/[qoFq8k6lnmMtTLh&)%NW8LCVD<39')&/62kKgHNNBk$+ASkB-aW,N3'2$%T8Ua<LmgHBp-B%<Pr_qnft%r\Lmm;e:$
%*:j[h/6P\6CQB-M%U'8*.OjF1_EaQqFgLD42CXkKbe,Stb#//cc:/n60/pZo>rBbG#Q:HfZaT\H'Akn989/e<E`-aP-uG>g)7LE5
%o"j=b)SIl$8U9Ya;#dC>#?ETPBZZ>tZQTMO;3pU=D;A'+;O@o-/C0)..8Td]*g_g`Cg0*!Yp8MXWh\:D0H8HbE=5-k!PO5h1AR"Y
%jg"8"9%b[9-"Ip7B/ZP^:@'YVs/)RFUbEb9=Ip%;;BG]V+.%paCg0*!Yp8MX\uT#jDSp;6\:l(pRj-VSnf^`MA)A6,a6@u9RUGs7
%LU=lg"C&?Q0"S&7g2.*b1b$b+1b"K6O,lq'.CLfMdb']Sk-D&AZJC8gQ>q86C0dd)?qO;IZ`;/`?)6YNP3'7XfE]9XCaY;cN"IFY
%j^h2KpIrQk?;_'4FAVarEm#n;o4f;'k?J+tJUNr"Wi^lC>UCAo/Hr=KRW>f=#XW*"Uc1g@[]:9cR?T\F-SpCM5`A%rMla-pjC@lh
%Pl"&-%?9m(1G;GQFmY@_\G%JYGG:V`=Duc6NL"2l*r<K'?SfGa9]#`0I&p:AfbtWpW2a5K+6s5VAgjjR#nPSCQ<o1>jI6r*q9E-L
%d79CE4F/j2gQDsW]0F`+N$V2!@@9j7Mlb:O@/>[5d2QT4@hjYSVDte)Aa([Ee5>RVL28'\R+fQJ!aa1'#Uh?@L0^M4d]grc'S7I0
%l6`JRg6F1sh,^Vt990uUSrEoJbM$3!kWi6_odZr7Ao0UP1U*onrmNDOM#;fcXs.Kc&;+/3CJ8Tt8!=Y((i*>%29adL"H%FAI'Kmh
%*N1\tY,lHo=D2riGE28GPNuU]*U;YV$>.e?ZB.O0q=<W0[)BKq>*Omk.fr%hk/NVC8hj#?i;;%QY7R2AZmp@4'V>)"ckouqDJh_%
%V+mI\)[l6Q`:B_/Z.c!P)^B<bg@T;_^4<M!((IY5,:MNsTnZjf=e1V67aptjF^#kbnam?7(MgZL+'0o2B8qT+?)tW>6.Zmj%dZ_\
%JFG*f+e$;W+0`X`4KZF?'IlZ^r=d-a*6TpuM[M/eBLG^RO7aeH?KI9W-$L]LMfio\q4o+6ZRe>)3u!E_)-mX<;HIQ3_jE%.rDbkX
%*(oN$>(a&?&uglQ21">&*""(L0S0GGFu3b?o^#o`\"R>Y[d0!+bbRV["eWnkoObU,I`bAt["k^j2(kEL;-LDee+;\6f#UZYS>%Xi
%Kh1=P"s"JVPbU0E/>Bj^P(d.GQMu;7PVB:!]aNuVZ8e&t((8S]VraVCZ-oF<)h"@ON'Oa-`t0!.(c:*BXh/,bZ;J$a$o05nQO,5C
%aM3l#2e;Q2m7.rOCb^;:,#E-/G1)!+]qpgP7Vg8i5\g]%88dY2,(A3Zd)?oa?]H@970I[3.d%1ba;Wpkka\]ArPV#e^,&!f;GP5!
%;i[#%Bf&K=*a^B'RYJ*60CsD9E[bb<[^aVi0Ps'YT!['M)`s=.4GRJB:L%/mc5FMg)-)CPVJ:+TKu/i#<2&R-'R#_j8>`T%2&oLL
%M^6s-r6@iMP<*44`dC=&BPjiZNc\424DPDBXcS'm1=%j'Xr2?3:1U][g3XL[FnX*Fg6WU(D`^fu5bG$da5.<pXm`MKYfrsm9R_%-
%?AP]:Ueobf22$#B"$*,H=gb2Y.9<W])gl(uYXjD1Rq('5C,a2,-gOao#"#NCfEk"*QbKT,\$d"TJb)hgo>KN7/+R`>X25!eE%Hdq
%=,a4H&#^[@)c^eJ+1%M)d+c8gGkmn>Ir'/3p?'>ig8%R!&<%OA4GcE7e`)5#N>^L/$Y>>bK9MdgY/P-7a5Jc88<5L!>qMa"o#A-t
%FBES6KkWRl[kb',EoiGTnQib3Z+ZZS=m788Um3#7O<:O!0Pm9m@8?XCW43Mf+K77J1oUR6.7\?`nXNmb7:0]VfXq[-0MIB]34V'6
%>-)mg*$/Tn&7pR3%%InphLtV!LUCWJNlVA)_o@6>+Pu>?<=%[lX:V!XoW;Y?)pE?]K%j;KY)pL6Dbj4=V+Y_2<NtTo"gQc`kh?[H
%g:k3,;L>J\*BMi`X:;lti&daNaj!DDA$qfdn/0UUoikEs4>$PlZr\%r4KV?-;Q9AG<:E3fl`Cb!C'*.Hj[HBX6"*cTPnh"*Q'eZ"
%UVt)9$A3iYEf-I\Af,"/\5p#B:tcJY3L$F4"fW7t3GXUG)l2uApVJjK\N0%tW-2Yj*ej!slGR?AAj#Y([oY*[ZuVA+.E'5^PmnuW
%Y;7Qf2%RtE"&)<Fh#\h%)(nSe,B>R7_@pj?DAq!<)?&$,fr?qG8fNAa=iq?2=gIcW<f7Fqc!bb"%DFOS\YR(+c(Soe[2\/q31L3F
%JZA@4L>V'%-;V6J+u#i@g1[N;)UE_=H"*5EJr>ET2"<@6[p#%s;A^O(KY>QHL)hF<^nf[dkh?ZWO-IQC=C$6[UJsnC&OGW92Yb-&
%DcN&,-TB)K-.Qmn_kV%?$9##J3-h(&(8$<>YLtJ3qVF[)FPVc?R>a)ANBmMDKikjahBR'f4!p[ZRe1mS)NYc#?fHa'$-r=G,j.4k
%erk_[K)dYWKiZ\36[jiG$V>@unTY%H]V%dEm>.8@788;/KKr,:82t];L`qb#"ct2TFht,t,J??_-l<P1:p^n6ORW<roQ-ECJRV_J
%iuR"X\lZ`MY]@(L[0QN\g<#m"V_I`%QK3)%`t]dJ!f;&RTEPTFei=NogI((%`UQ_-YVo!%!TjYRiXM_>CTM%s7S:[M8CqgU$5Gc7
%do7Js'#.+[N?sAhUc@?AMM>/F.Y*)c^C:9g$m$<2A-Z'\3E*2_.2C!]?<K\?G'qp"YZJVbCK$rTTdaJLB!N;k$WCFMBTM=s>%[?*
%f;,tlB\M\H-6YDV;c6c4IG2H\7.6(Ya28h[QO+/AgH"JtH$JE+S`XpYd<IT&a'7nga?WEoQ4RA2)=",%^C'K`<CM8D(8AX!Zs1V8
%<%(&61i/5*692e;TKL:k`8u]oU,A]hWK8gk>Y$8:/lWF;=L,Jf*p6/PrKM<8'Kre$$89).!>-NN-r#p,2&g]gPRji.P!H?E[[=WA
%7W1G9)_"J_'"5<g%$so;>R3/UHWnBV"ia,R,S_*G+nD-O&DJrL>J`/C&hRe>#,k0Y(\]4KQugM1[#c6NA9fHZ1+:cTF]SiU"#V1?
%6PVKB#OniVSGDH#jGo6O&cH=;JD)3A(K@S)CZghX,g=\i<FmUnj"4q-#Ub7meuAoY6.&#g'rVIF'tEimN*:pC#U]kl,$5W"Z-mZ1
%KRQ]E8cq,1_]Wa]6A+ML]=s2:lH9"h)b`[Z]h?PfBN'`u#--u\W,Tj]?r[_%=mA1,HcYj%[DXKKHCXcFAmk9nDnsd&>gP%t#jecB
%WulZRBr?%E,0-RR;\qBd=G@Ehc4G"92P`5N,fhB[FF+Z>RgLZ7Y'O`T>!Z,fEEZ`Q=r`?3j].8ZNWB;#0#3$Ska[FS,Aar%&I,S%
%#][a!3(K)PR&-L"?5Spu,VTB%=rU5L0PIR$6&b#i'Jea@0S^&o`km>d.0[n^1CmWe)&InUCg-i_V)%be"Imm&>WdOC6#V$+A""=S
%g+$RP7[nEt<>71hS4>RV?k@'0q]2@b5W]]Pk9'hAg8ZGF<Db/W8q<XF?bJh$,O*#_4?O+L0=V0"4:I'8V6g,;mI3#A01\eGLd)SO
%K0-e8NeF1^i(WErmrgg]154C9*FB'G_h1[iq*h#P+:U=h\J9j9-p='D!KeA,7HqhWWb5AgZG:!7O$TK-4I:grT\<S@A)e$=i&3JR
%0!])`K>&ZH<Ht6Q9o9nDaUK3FEVhc5SUm#&>#cp(P%bf%=Tahc;$=ZX3Md%9<@'MaV'K`"RKGMfZu4K%S>oD3j015>4E@=Y^]L<<
%0sUpLL`)tCn]Kq"+_p3MrsD2=,>4X32V+!V](70[p_:d%,*L)JI\0^P4[eIk1!7NO=$@f6"GS7X(5kM7&Q</i_niJ]-AFj\ia@nn
%\[]D?LRqaG3b=[\C#_ip6%dZj_Y-119N<'&9X5@&-F9EM.isL,SjMHg@<sCL;0=RrRY(OcqLdb<,YJ03_7V%teSEAVJ-:)VbBO'u
%+!=`g<g!lS(f`$o(5FtBbX.Y*Y6VD>7ttN3?NK7/>MnsV$=#4eel3AXTR+#6JT/93&6Fb*!'MX,d\:1/&QHHU:?J6J-f3]DD)/%V
%2We?q]hh[Te"A:_-q^@Y5#.hMX=-ZE6Zdo1.s;pEVjWo\0V=Ioo$24uKu-\q&mtq4Lg%&S,Nb`#n.CQq_<03@.IV\b%9oNXA\Dc9
%^a7)R`km"P7QSs+d+;(Zc$1-5G>bY_n;O@#-^^hd`u#V]9$,=g>N.tN=:V0=E]EZ.=)r^Dg<t`NX0O'@&f/'\N45XkVVqQ=P0ksi
%.'0-l"e(ADU?\J\7Dq'DpCRfJ#]JqBoJWTOKi\c^WC@f,K1T,-f.DC`4)#mB?naYE*sG]?eloq:d0@\,6+(psgE:IP<e7r:R>]E]
%?rX?j&R;c_WPppp4I=/$&pN8'8<+6AhXO=I,SiS`&D"*N7''1BfeI60q.`[ff8C&OOJm]r5)P_L[u!4T.YQ1]2=YKLg]lLlAr5L%
%2&HMb6OZ6HWApN/B$l1sK7pb1X[^^0+hAFF6:uNu67?bXP[$cK!%t?0UY3f6EXf<tebDjDMf0J!Bj(W[dhlGjN:A%N.`<_ob%k&q
%$nk@>%#BubOV/=O7*[A=ar<0S'd7Cmk3l0X.1.0FXK2pO1YtjiI(V$H\c<:.ib0lU.,`0N*d2S.&]H@r)'W)O\TiX(<)eb:HuoM/
%+3Mfa;i$jb0P+"5ej>?//&isB92^E=;j)\<#R0"_YkQA!@8'qfF\@d+f,-4c=rTq8UDi$SA^00A?!jcM3B1Gpi<A3E)_j#]k`Jak
%U8!3q[$6#8kEEqZk:h4R/5/Ue[s]'V_2UE.fdO&;okQV3^kLoMXdkBU%q21Xl+3f76Ths?X<&j"lEDmLFM4C8"i:Q(-f0-a5G]GE
%-=pXKRR45#Gtfbc3_5/Qq]I567-hq<9,e&4E5[uJKck3Zd,]Ss&;d_`Gt#'M7g5q#5>KQ_cj$V2%k!P,"R#m:!<l@W]E]*u<rkcl
%@=u\=<M@@7!go2]RcNte51PFk/'1e'UJ'3<SFVJIa-'_E3$ag.6!(9Oc\7YE>k'M20'&ithCPlOe6O?cC[$C'Q+6?GkMcLt'@]mA
%XD]eV0[NpDB.?jq5r[16VK$K3e^PusTP&o$95#op/;M:kJ5i4`9H,;YV/q+&X`4Cj"iZ=8iQ>'4KPCW`!);-#esg$d<!EeE:!b"H
%NZATi)4.R]MB$.AVE=#9>Ttu6G[QZ,A[@,;]=qu6%ho7tOmbT[;EYpl;c0jK8BD*1^Va+f5,M9i5CE-11O5qk.1(:a$3broQd?p5
%k<q";/?bW*-:)9N9d(jN9>fC="1KoimOf_la*8t@afMa]NNpPh4=F4D*4<T%]?@-Nihht0c9FLYS-6#?2Di$%l"I/>ZhHCT#KIAd
%:,cGC)Y:bu>-a=/MFK!V0PAGW1*G\I[D5fa@VlFQ:Zi?ffNrlc)(n%1p5D_,q1od]b]VTHRrA'_ChMP:N3$_>-GJNXVg!T7mB(O1
%OHTp(l1>qS?#Is4AT>nRr1Rutm/l3)\)ukc=(L*1042-iieeQap[N:WJS&M/9'HA`hk80_?)uc5OE)!Z4H'k@VC39ffjHj-TBCe5
%K.U38I^kf1Y]dEgTl5S5&Bi0-k=s9/R&E+#i!Y2*-4N^f::femm2?5d,$QtGO'fTqiQF5tN)*6p/l,l;l;sU;5,X4Y!`q"%QnML+
%GQ]To)IEdE`opGm@eoR2^>,^7,V("sL7NUkoMkp6ALusAZA:;rb&>2;5&rXu"oAhW5g)[MUQAQA>,ItN`0jF-.SPYr$0A+[K5q]Z
%Lm9_:]]kXNUHa>ML'[0#*'LX]le.TO#\bLpnYXIRJ\nWGcDd'>'KTAi(-64@'Ga];5o^_E:cn*B7]3tN\-XT<$a*bf#9F#K-:Ejr
%YuXp#*O,=eqdsUgknFD6d+RR7QG1#A,rH>;jiW]ON<)Fer/55J.]sU0qW,PI?_4o9SmT/p`tMoWhQF9i%,^YU(m$'uP#dE'+pZ/?
%<a6fNc@s[kN)oR0=qB^i$XM`O,dYpRZh\66elJf0cfQEX,m@al3G*h7C%^"Ie^smU?O*"6p,@`HA;-^GBk_7.>,?<rI5Vnd3lgH=
%_Zi(#'=>`9ZAAn&F\p%OV`nL+PR@(N"ZmGEdDh(q20I%;7U`T;9Q#t6s+"HHbX6Nr\#C;U;Q#hfFk;CEn*tABiLk6pMaL$$5/LP*
%FA`;kAGDn9#`B9bN]&bcK7ICj#4$.dQ;g1A@D9fjlrV.f?7RqLH,Eg"I-O6XY7ei./OU77YJ6kIehQ9!j=3$Bb+UZK?7T%=>,hGb
%KuFSs3l:F1f3sjk&5ncb+-RJ[(1j>VnS+8tn#'tX-/k`C<c`9P-e5`&$OC&hlVPb$>hXnbf.G%_`kneb3pEbjVoL7hQ"b0E2G"/n
%OS>rGR/R$'IBI.Rqo>LdfeeK4d.jt?l/^tDD%J-\7Q88ck.-im%)+:RCs2u!cCU3m)i]tK/EJ`nQ]9>FW[Vlr$Rr&%gSOn!p>30Y
%XX%$c]q=V9l9E?G2Fsop0\Ahsf[sSJ^rE]4KE)l5@1?4BrSd\J)fJ.,>.FhDW2d#\mX*8D]/C/\arrP&N/U0pbETg&8-Q8GWQW2p
%6uL"baCkWll(O=5O@W\X:WHiTc#j1eSnF0b^mEJjNpc_^PWXk+M:+uSr2*en)_2E=;E`j<4r+-)*%tkZ>OomXl!'RAk?7&hPjDCK
%)_lD>,XXp$1VP.6F&&3a1MYT_neHF>.3(Su\g@#M/NMTWJO7mrjVlKBXpAQ!NRC1gF9WX3HOHUpO8M]3-rqdCB"'*@SUgf9-Ymg=
%/?=SZk1(Pa_\k]ZEU_i*%<Zr0fns7:W+d8s5,"b>+K9hrGt*rS'-YR>k:Z9&Q+,ETm$\NeLm4j5,$'_a#tHDST3sU>`$?"08?ERE
%GZ(V*djZnuP[QLIfEF"^;@Y>.(h_P/KrJr!TJ6N^RS;;r1gO,g%[pPf@oAs3e[*^TCMDSZNfmhGj=Zu(1hRXCMfI8Npp<tKkd>r9
%aM8D/2,J"c8Ri<TML*gT!R0n.$;Dj_FD<A-LkFgugg$jf1.haVaQnfSS:0#<oG:)VVk3@Cfebrd>#P8Op\c),pNj"i+[q@&7g.RP
%\]n^(kFb99"9Wq?_DHG@&Y*0Mak&N(_aOqn$,-%oNB].nS41!a*%t;>,n/k#%:5(%=`-W<T!2dAF!@<3'*r,hT\QFX.7@Yhoqt5N
%Z6-0u'6t5E1\W[Jij6LbrQO#IOfhMn7nFb78ecYKAP:L51NP\Wr@Hl<`PAYH]N>g?]]qj-fC(dRe)Kr@QP=im[@lC*jJ)e0O=2qN
%>:,.W#tGprlGF62o&2h)o%3OUiqgc++jSsd$je4c#%9>5&gHFir(n8lXss[9ll872!^f%,7l;]Xj-r_T;Ksu<01e.1>]$`8B';VI
%&k1MR&#Ac<dWGb-VcLA1,uZZ_P:XLk4C8<n1K^"hp1#O0KbNo3emT^ZDU*V%%ak`H#@`J&'QVO<$UR!fP[VDIakTOUXtAT-T1>1f
%8e,J$"oIVGhY8n%F)hs2Z7+*'+W2FUdP2`I6=Y.*&JZ%V65HO,<2AKQjG81sfl'bW''+!o2b^.O),LW>G^][,CYL*86/m-L?cdD5
%AZAQZS%dUoCg\QcdWO.g0[tYq"/Mi0FuGC?r.Hduop&uV(R-km%ZCCB\AOG@>!7dG$;tDcG3Tk.<T2A)lrPs5M$,N:',3FZ%uc<u
%\dGE"FM/L%CD3*%R/t`72*7!p:)PSsKLp->!Vo3b@hmpV_NWGnNog$bXuV[)Vhe+Im;'Y@pA'22qgV#YH&`/?gPOH&I`;$[b5&l'
%faF*mPP1sEIcWfck(AnZF+^:FXW8dGq)U3Dfhq=kJ?*`;\72hFQLE$!8kqd=49l<o4jY(SjK!%]MAuV]XMJssUU9*jW\0<YN*`U?
%>Ok<8*q4_"Q3"S%3=RX5%HPjK"Ge!A;3W$#$pRsad_b:cC;*U5-F^(.$ujAmEctXgN4diZm,r@kTDBRHUr`dkJ`_j>V$^I5!*VUg
%SS@=)##[cY"H/Qp8H1Ggpfo&@\F#kf^pj0Q'U\^oT<YA81@'9%+4iDAWT/dKl*iQ`TZ-rTWTAW!@?7R'>P$H)jV&!onW$_=,]_g[
%GKEgFjbQHI6_LXC+T)rW>+4B`NT9?G!/cH.p'rQfWd9W,B1FtjE29#8@S1/pqgP6DT-UsZ3tFIPr+U=0n0hOe=>2Q,ge,&Y=:C!Q
%2C'H@OCOb'\b-q/oc,V5>4<"75s/Gm8c>D6;1P$T+uf`N$N@aNW^\<Ah&t'*,Da95&nLjYF"43D4[5@s74I#3&i_I%eM;[lWG@ke
%Cj@JtO\I95&'mkJjs+"^P\8M87\Ae?E)-`?/Y"(/JlCg!n"olHA=+WhA\"BLJ@3HOllh6r-Cs)KBHV62B,VEu>OqDP[W<_#g8s>?
%P<hs<,IcSdP=H3.<A-)5fU,<,g'-O[9eph(!\tua?AK!1O-"j$(%s,dY?SsI\9r@b/']KFcEJc7LDNH^C8,\\&W;gMG?)!RLC^n1
%V-5&pcW->'3"hUt].YVtC@cBj0.]"^&XmO^l8A>&*;"Roq$H4b2[alD3%pkYo.?6fbVsCa2;EC"p$*UU;V]^i=E<&63Yhr,=]tUr
%MdQLJpb\QT$q#.=kc-1Y5C'&g?Th)Sb/2i?3`u%8[=eZ'>lR8GS)?35K#^I=i';0@-ZJ_g.h\1f(7AW(]kAD/d?L*1Xe-Z[[RZ=]
%.#890'0YSQfU;QRanq7Sq+$"?V*n:Re;,S^ISR6qPfs[d%OFZ+9K,]S+VtS`F64c$<)naLILi[bU^).C"s9QJ6PTB;oa2GT4?o,Z
%^)`hh(%DpYFMke(jmJ@^9!.Re3r,ouNL"@=Ira&Y<C]JUIAeZ9E35d,N+Ae_AYk]J<Tsq<08@rl;.Y./^?AVCLIXAbj7:FE^LNMO
%ZX<a9RoRq_Bm3Ap*hE:crB@3!*f7^baB56*WYSo7Nn!`9\T,\UVBiTf_B9-6_aL(DVr>]#nr6mL/qtWa/hiFa!_6^/X@r4i\lP(G
%[g):lh$c]/JM$?fnq5o@lX]kMO-Ha7l&P9@MT`$MO7:5DITr*'CrqBMQ'7)G!E/jt5sQegY$d#VMC/`<&6A\^`)I9'H7G=a'O,)o
%^dpdeW"S(2iu.,RqT]L+pTKgC;"jdWYLDPs9H@@jmcsFakNf3tQXBaGc;Pf@p0N4D9=li_PjL^8neWa*q^A9Aq;neW_$m\ln!plc
%7Q+4hqp&8Q^]43aj*Il'Hmpfj!k$4F'W]\ojW,Ii.n(ZFeO[B-cutU[ioKW(dN7+cSMAD9^Dr13S#h]]%1DjFE);BX.l!e?r20]@
%P?b+8\\(m>+\*>IYg]mV-s8nE2cZkXVDTu&`V]'`JUZu#iF\]<hd^+0=*,tBX^'.@c@Fr0l>e)OMFfME#q[/jk6nc%Wgq#llW*I2
%6G5Up,Qt<foaP;,o[*1hmG2H7H?,.\di79q@pLinPq;Q)I_sO4-kZ#gI.bXnY4fgh-!NTf'rP%;eI18cG^?@p>jc-(#j5BWX.P11
%1MT4Z-Ps^ZH]_#ldD)a:L2ld3EoMFZ\BqK,02/,V>9oS*N?2*%d?FHec,=J)fZHW'DVNa]q)lu(0g@;H,Ed[dh<%Qt5=mcO?2Dps
%3W5):hc`L<Ym@U"?%[nq/nL>F.6^;jbk'@c^*j':$_jF\Z0S@@?u`Y5:tbP6AN$;<\^:`pGZW4VC(n<-.=l;(4(RiX<LmA<%Ch%V
%Y92T^F#5Vo<E]o\.TPSs;]V(riEUe@O,,'\g_*/4N[j_*mX89M*cm9MV1`b(0%nI!-a,k2g1aH[hY$!1(f2W<ak6G6SMY!+cdl)/
%*nW-RSbVYLGd,j=EtEeBEHr9F7r[kPjp06"s)2/6fP_kWLankh\CZQf=qYoGF_jDCRu;,1V[sa`,VR<p-o&]-M.93?ep0!.7/FB_
%1V0_ATMH\e@&'$I'rk:oA[JfBV@YVt3i]U\*4Ks0T&ZI>m%5K"dW:T#Hom&kR<N]Q7>+K[bB<u9(bV_K&r+5T%8Q7*DCk9E)r?P"
%35npMM4Hjg>5jDrgsJ(oCP>X2'qOJF,tcT!6QQ+ri]X63.ch8<`0<<C5b2g!GlqMI'c<47BVh17lHRaB@TQV\9;-Q2WgC\ilic;L
%m6kqd4)PV.<`S\\c$iTI)ICfdG+r1YTO*]O0%Xb_Ps9o!k+tod]HH12pLAU)\Tpak82#r_s3AgU?_g&G+c7W-E^ae?e7n_kCbRrU
%._gE1_&CoC9JY8VI"@L)0A2X5I]+hq6"!4G49-'aH:q8n2?V"^94g;M8!K0,L4YjCTt=&l</MAqK+tG`M=*D,<:`Z%h,?W0;T\Q<
%+\d$FT-I/q\T09);&6gVflGS2Z*d2)4OH^&*]Y`7a`!cu<(6>[hJqS5*@#@@M;n[5g:;DgB',08ak'SLB%<j6X#sgTCk?N2s$r)l
%?+3/dGJ)(*3l1bJb8VW%Bi^DY5AWEl3H"$#6*f8ueoul'"8AFnSP[Wb7L<VfGQ\Md>3R#m&,E34RB0O!a`GVp]u:/oAhlT@`[EJ?
%Xti]23lBmY)&Z@!`f`(j1($Sr33\pC/WmcEl)O5=7MSKA?q(mQHS?=;jCD4eVVd>XL#FgGfAE<RrpS40M<FnGrEQ(Ge2*bpPZ!Qm
%g?RTS\Tqg8,\H)L8g!UAE'M$\jP`7#hPhp8rD?PHr^\E+iSeDAn/dqZ8#T?Dd9UC8Qq+)n-b?RSD_eNght,*0Eg`Y(=kijD[T+mY
%@V.Wq:,XRtfrcP7VDIp^S5?e($gagRU?sYe]B"$rN[W6m7!\D$\t_4`bihqE"?".R'U@L_N5I$4RlGee/uYfj5/jt?(ad(G%7+DT
%0+gASG8k68)X+M3o_27Mfl%4;jPV.J=$4kqVs%lg?B=C-dOWW%ku*<*RM7/m@"egUqknL*Y^(ML&(e-!KIm'qP!(%fi9srkYe7k4
%G;..qZ1I/5A_+(\Jc+smM':SMlRM[:[Y]G1qs2Gai74bbR*aop<<[#6g&0s`?X@(.DistkW^!?[mMp\R[?*,fjh*(&d<'b>fkq>S
%-f%X2B6;WDh7r<sMYu1Ep\R,5XGbP67lB*M9Is7'qX)QWg$*tIeYKXT>185n$u"b#`.@-ir1MI'+'nLCj)2V@0Ait_e?!A\ffB';
%ej!XV=Cu._!8-qAYK`G:V_hTWm"?$7k%8Dg:aWeZdGdr*dRSuIMZ+^%rGk?WI7RnahnPO\Ia^17`kVMYr*hAXIDGjak8K,Lb:dSD
%@#!c(nb-nWUs3pYV8$j=qSYJn=nB#V)cWViJAoN5<c-2XUHS$fN,JiS]:;F@*0(6Z&M^5TrFfWGhk0K(_/NB>ren:-=V*kn\pAr9
%l^bBMT[H"D;-2QS[Ft"CqD.fUjnVm7]ugCUdT"0&8qk$ZO8trYg7nsu;mPJt8\9%ebpDgQ7`2S#r/Vis7t50I)IL(5ASJ+:VfE6e
%>MI*>XmU1?V*Z\=0`%5jNr6JW_nja-2jq(Lq&a+SQf)lOqNI,=2rj?&Dr&7Td1K0FdJ3HD-0],%:?JabdI.^5s+NloEt<b029%,o
%0'4d=^01J;[kl!6j@AX4-n@Io$Oi'LUSH/4[+O]8?h@920r(t4<S>&\IRX3=!@:s8]VJPi!6hNqKcg[s6Ng^J94,+(>r!((*NosV
%1%BsYYM/#VGBD[_Obij]T5jAgh`tNALL5OVeLADb_Ek[*.<Ir5i&V`)\.nmgHh?d6o31JaS516]>c_;mP[!T?D3-TG,U6IQ$2Jr`
%XqpnXbbm4jT9A>4]D]XCIGffM%CQ]:4`*1T7/lHoBoDl^Xq^H4IFhQL:)8gbRX_]np9Epd.&0rR4Wb1jVMIju9-dECa4%2"bgjO]
%0M(>91uBWAC+s?L?e@XYLCp`?E[$/T,*^glUjN>dcR_g-#dSRi_>l#4dd&,>Ft6?1OlbJFjS;r[#P,HdO/aT:63e"Xmo=MSCsPSA
%B%7W:FIk[:a9R1T#"DZ;NU69'U(F;9dQNJ]i=\R7X__>IHhrPWUg.9@7:*:C2i?9EjM#;]>Sl"YQ1=HkGlKYc$hH^Q/p1bDS[k\Z
%`Qo\=3VnbX(3qO!Zj=0")m2*22BHP]Sb\Wif,9)!a!osNI`V9').>q3W\[Vj^`P3.?\RN(^gYZZ",sdL1,nHV7Z?G<8M,f?f6('-
%K!>U59'g"o2IdiTYaBk7Ni+l]_CZ#dD,?bXEeMpF@tZ*%^R?Q5$]DsPU5so5YE3_,E#p1m7**5bpoQ+D=d+OaW)K8_N.']=`hUmR
%qMIB?-*XWB0$B"%#st9E)ij:nrM'dqeB)d-R\&f,-g+nCJoh5AneFO+rSokWaHt0m5NXIV[(&B[^lqDO"LGo]R3(l>p`nZlQg=LJ
%/n^.]9mX&:<[Q!);H>rk?F!bh2Yma^Rh9L_^<`G3kWb4[::R"VKUrIh_R'C6-D;^PMZa4@F!=uIp8!-F(S'LL"W#Fk(?bgQ&\,a1
%?$\iOR%NCA.J>G[[.]=!I3"!:IsRc:XO[jN3eB@HEgUQM;3X\cO:R>U(VUT^66IF\0k)@9_nmY<rhc0ck7pg[*\Z'mdpf9ui&%!K
%<@S^@R9(ggKCs5g68O9F?#,1&IXhR+/Ls8]cVO%]3aCG0ocu-W^e;YAKm+aa<]!HO?rb]aTF%LmlFScpk#tN]YC`T[8BWnu2C7=b
%:lAR@@^!CaM3"Hq2*[O;8^3dP'm1Br6A]S`70d,G<]tka29)em"SknSL`[F/o.\]VX9:)p_CH2-U<>mJ7%R(1OX?+.?>PMCf_$hX
%#I1BE#&[0hLtLhP@=1/;(0o]%a%h>Y_bVb7\"1<E<C"DrlC/#:hO]>4TSOqNnJD0qoiB:i*&2LO=S2.3$252<bl+?Y/=$O:a$NO6
%i&B_]AFVoQl.5XVL.HUjqkbq-H%?pVb&@d80+tO]7I1Pr]p@k</b7_V4sO21I>0nG6A'T3QfYI?3?E5s?6jY;JRF<W$S;G17QD[*
%<Q>[ubj6=F<9[L+Z6F9M,m\Aci=gokbUekm0l\P7+)c\G:r6."`jS20'.Wp1)(:cVGbE/f8J*olj+N/k(^H'9g()_g;TS>qoO&9\
%;6!q(0Y>T0.WPq%nDr8"hrPemOIDKUHg!M\)kAH2=0$&3I56\<op-aT8WGlkeA1WlObl8T4)^VUZf"i*!9L%Jc-C/KW0l+aC67B0
%@?8/1^ecScOMB"$);96V>G+rs@U`e,"3iPs+\5@JN9?Hceh>T/R<?6egDCRg'bRD/g7%ggOjpC8`j!Vf>-j_KVQUDEfX?Rkd7J\(
%;Yg'ontJ:7FRL0GHo@EFn_Uh6VLrPL(RK8Y^mEm9!4ecQ\%Rt+I$.-X.=RC^_#\m+QhI/Bc(*DRE87T=MULp"g6^Jn3aC<S:FFu7
%n%cp+\?!3F'8I+uo?ldhF60.WUHdc^M=uW_27+:l@a(GJTdStQ$4o#X7%r95\gUAR%kXYE0b+K:0FPr-p=Uu>9?=B*!W=ug)'=sC
%B,YoUs4%;q9FN!ea\Tm(i)jkBJsU&QO,*]SQDbr_]rS&rs$QGt1B51F%h/R)`u^-rcf\4D8F":j7:ZN5Wtd;`hi'&*Ij*KCq*V$?
%)b*GBY`7d7@bK`^-(>geSm21)h6k-ePC4SMDq[)*FQZf[0s9H?[ZB&LZ=t8Z=D=TSUZ+ZZq/0NX3Bg)+;Ah2>,;RJJ.D"]QU+AVo
%^&/t`lVOr9gE<15ge"HM%r-l=V(6AkM)C8O(+aSpXo;C#NodOJ!-(d6:#/a2o;WLt_tq1n)df#4Z(>%rO2P_9fJ<Ss4/p\`=/s1h
%K=GDIO@6Yn.\BU\6h^O,:*:K4G`j$G:$Igag@pjVnU+ob.<iiebi=Wg(V#<5m[2QJ=U1Phf'l_33*W!*gnD.c*9f=()R6\PM2-hj
%jV-1KL5dCDBpjsu=^J9"Q[?7t=o0CIiZR`504_bO/84C/q]`]rM<9q9:5/TnMqQs->rKI.'2KEi$o/$Zbf!r$%1W8ROgW*$aKoE4
%CsV\eEB.GU$BLITU9KU>%?iIh1L#)#Wf]cgP*jkoNYJpJj%2-c=H'd^Rm21OO\J52=8u'"`TWYBB>+:!<8>?Ki<Z-VjJ(rn$QJKj
%L8,g!ib)eN=f>,Ws,DV]Vu>l<AGkn6%o"S)b"E^4NOk\0aec,:Uojrh[d*SkBB)Wh%1hWGojQ!?[*I@k7b$_jE:c5@(eo7n(XnRc
%5=s@orFj->&rPAc'"QN,I"dma8ZCF;3P2CAW&<p8cb"g$X$,F"KZb91o$A!OhJI2E*$068r4Gp1pt'e@5Rja\a^im_,\'+^!&)qo
%U\6q+c/1@8dB7QElQ;+tKA;m'rYba(UrV-rG6d03^U6Sl(#q?;g%MmuJ!r46&*"N:EJg0u6`!s=r@ajZ0H>2<Ju/INF4NLc&t3pk
%V4V4JLV:M9:"[2&,)Kq*\s&JnRO]r=D#SVk`Eu,m4Wc+S6U_Nr,ZiuaX6fKYF[EUP:jDcie\qUDrYu'%F`sYBamf3U&:a^W&q)`W
%j7F'IPkab5Pkn2F%8H&!S'V*M/!#a@rs@od^HdsCO`:([ZhIH9:CBWQQYH0%?Z!u9&trV(>hm6k]M$lLa-G6Ka%runc\\nXqpK&H
%G'bU7=-AqBe":-$DH(\>Hu[g@J+"C$"8*#e;_<KVjWuq,1Y6b/S<0SPeNKMjN-aR;?>588O+&"BJu.ScE'!9+)p!U.gB?^>Lr3nk
%r1$(2Ucgd':<;3Ucsr"^Dm)D;`K,HTnm?XQ\Zmk/S[W6'VTd2DHi<Bff%DpMc2X+s$CAqpaf%?>?aQfQcILEIp4Juh1bRmBrbt!6
%g?MY\s,L[hhEBXUm2\u/F\+n0Y"%Z0DgmS?3du&$@L(BRk-.&i?-RjQ>5o9E[&luFo;FT.m>e?UQanbuMM9KSNfU)J/eW<;R$JK:
%q^4?F3Bb-sWf:qGMKN-i9%ru\1>M7<9flDaBU[3G930[aFSaI]DR4aGRD&XR<TZOAY?C+c46j::=,b"cc$tTc0&51=s*#2!4i]u[
%(8b/:X4dEK=R5(\3>cX@DiNE\r_$9P)YX'Ghn#TMp6_dUS[)U:\MLtt.Fu0dme48?:%0X>4G#i;"L"_Db!,]0EYGSunAaeoC3Qgm
%Q6^<sRQs1EN4P(sq`c)epeS%bc??C/'`YYDMg()MPk>'b]gf[45<5df_@Q\5CpH?qT41D[1?$N*s5n@&5Lm]la1qWgo/Q26g.1O%
%qeqiqr0JdPlUW<^>tLh2XY\%sDoS(9BQ?(KO,b\1_]5ra'UI7.F@'!64nu-BhWt-p:coAkDtLZt,6X^t)O!j-<o::O8s5K/e2=p)
%JI+)!#2N/<eYkRt:+Aa(#O]c(1Zqk[.Ym7:Ja^5Mm'cVqg5ZdZh^gR"=#Bn+B*4=N_s*t;1)`n@nn::\gYMC6AX?+C`D)WRmWdBV
%)BR=cc?n'B4mCCR]:<Pue,JRe%,]GPH:O6?\fI-3/[N*3aue(o"YJu%8RL3Kaf(\*pna?9)qu6P0KG)@lW3_ks-cp<O*[#`@B\RX
%kd[3sP[Q";eQ.$912WY*/$F[Dk5OTDj2sgfJnT&W4.l5k@b:ial38.q([[t!<LgP=B6i/)@Q;KIgARVo^S.7nd7(79f:kN`Pu5],
%p!$*W3Z07`;R#cf0q%'TJVYBE]g9+_jr+Zg/%2#\H?7O8IM?.@DdQ;p^jBXnq]"s(Lubi>RT4D;Z#`t'gmIg4H6_9i7gL3aYF9@'
%K\0VYD\lmNUL)8J8<!4k9iAeaVsQ*s.Pm&?:[=hB)_opD^X9MYBnu))HdK;3K:RJ[Jm[^*GQ1*:E^C-NQOp(jab;'?\5jEe9HDG'
%V4?YTfBke<:C(<3_bRfSYrCeLj`XhUH4s/3buU^Dq)]P:(qN[+2u&oi'[Oe9p,3C19qYmDLtX]0WA>>h.+o;f@Hc>m\"gEFqqG>?
%7_<^G3QZDI;WVA!#Nhn%`nef"3>f4h2SL]h,\=[4QVs2!Vr2/^VQr-p:V%n%Pr28fTlOt6X[R_l75ai5App,cIu8fjl/D0:O#g!m
%j\Q_kCPFb.Md1$rJR15O(Yq>nReEOtcl3r6IkMu>I)@mqhS74Bctp,Gmc9LFr7oJOo'A9BVAK2;#7;#2HK;+rpU'm'0+HCkfB$Oh
%fV>m.TCd1W^GCCd5`)Y$UW8@topMiqZ$3=rr6eSOp6DI3kdA.qoG"ECI:iMiQ%_4[p9LmA'uO^,Y.&&kT:9;O-c.mMRmgSm/O2A7
%V5pr*p5Mad#!(!/k`]T&g9sX=9IMp4k(h6S*RXbj+8U[#S;I8dTsQ7]':!drY@_I\iPcm-?'C5f,:TY7W<'&u?4rsX;L,m&@FPGP
%jttu-BQqPGGr?p0D`F,kqcEfP/?K6#bC99XZ_'?#DNQ*=AT5DS>'$HXRA3GZ7>Y2BRd[]qODX[79IY%cJ0u1"L)k0X>D:d/>/ki2
%h_.@IqYA+kO(PlY+6Ri.dldZ*l!3<ChjgJVJV<QXWr&mj[6M;X9eTlRpp<72"*M)"1$t#Xm\0/&)ntIdV@aaa(28+LkuGf6Dl;o'
%2G8V_,[@$Bf]Bk`9J<<[`T?R+_]$'=rR@4?B=)+m\_Ym0R[Q$dL+$%nNne1dNmE"fLLf86h4HpF&c")TEHaB7D5teAW;Y9:V3BF]
%bmCR!Xt7_O4Wb__%ZZ;Z_`"tuO*!'LI>CL6+KpHYHO2kP5&PS*HIHrQ-3'Ji#&U8)0&sTpMWr&uA%)*#b2M$u3'<o)()+.l2g"kt
%3)klr6Y6-a,XIk`eTH2mA3W^D,TfWtXhn.DE(S1Gi31f)079#o'<Jt&S%"8aiuR7UmUa&lbE4;^cbloB0kl&YPY(afj%MYK!n&]2
%l1Du4oq6ZAr3gh!*A27@a\4Y@?kPVi]uth9$*:p<j%7"/e3.\Fq\,joK_`df7<@#)LgJA@HZ=]DFSg]kcf1\_;!+7iFe?$P>YF'A
%B%)Zr;6:'4<pOsj'<_%D:,K`YA>k,YIcOkeouKt+Ob8Ffk-p[^i4K]Ell@#E5!2"MG7.i26G(]o]2FK2e/e9Y#,V`Ok/l1APmKR^
%:Mr0\<p*I$[`=0:aa*dCP.&eP<"b*@2"1',UsfMnPU?b%c'p>S-ISBJ;.lIUlAUa<AE]_9i+4^;QH(9,:5>ToVaa$f1Y*9e`^=1m
%hiPcs;*2I+_r'V#n)EF+XOcJGg%0KH)[]L]q`1Q+D:JbhGkKuPa"O98ZmEG@82o#qB20437?>sfAaMt,Z\+UPj^@djHSh=L;Jpac
%99/eh'GjhaSVi=U1cE=l'q/d27Ca[1HP@A=k@T0sf'1D^d+Fla'q/cI?7,9M$_<<iAB;)/4cbef#F!k=s'g(4/@lUbcGqeEBI$-g
%Q]T:u7cG*Tq1.1fC:qpc?Pg+I5r,^=:tG:"8j\IT.N)hdqTH+.2O";s3IR'Y43k+E?+++q:4">J\ao@)VBb=m,_jU4VpVkmrl7,]
%$gf5qB-*13,@q^*#oicLR4?c%16H5$Ah*Z$V5f7#FOW=Qm#S`k6a@_H]\];OR%@_jiHrJ6RA7[+,&`bOmq,!T&Z'0[B8W&P3SA,3
%l9UeIQR\?LaV?WD2:C4![UqE:GM<"5dbCT-kNOd:Fj][=6ds"DS\]P'8u^46f2%HGB53KI;Ghd9,F2f*lCh'!D9M&nOtF:-V2`LD
%_dmV%\O>a&B7Zma2'tZuhSsrZ39Zs@-0oK`S0]t1E(Qh=h;PS=d8.mmj4!^!GLRYZ'3l=t[LAiEQJ#Oh1:%4DZfEU(E:ZNjn=h_b
%,iKO!Go5HT8(5tYm7kZJ)NeAd4mmf?K4$e^SBUQcki5>2=sWocd$ZC,\5dl08.NGu1qQ^@PFORFFeLg3:WQbrfQk&4GN6iDL!@<%
%MX:OQ=EPZGQK<P+5KcuZ_D'f%1=(Ul_<:.onj1G=T#T4ef(m(Qp*SV+lpcsHMW764.L*15Tt5,Jae%.^YL]Mc8+ZZteaiPs&8C?/
%i[m7f;ep/\^gt2n5,<&dh%V&-j^As@<jU5jiqsEBg4Md#>oqrYh?'[F:CmB"kQWC5WjVB)eK%G3ir?_2p3W?UK(&8(N:\GsmQ2@t
%4WUs1fI(\tcC;sXTdM4U4a:P5GDW`+^N_R&155.c.dXH$2,eks7Bbe%rXukLNp1)Mf'rEbPU\BlReIDdop:+b+4^9p%bGbLLE.[,
%[=:5#59.%Wa[njf*_ckgSr(d6GkF#mUYbf)GsVb5D.f2](&F+W;X</\"tA#,i-RX&n/!S.\R3!#3q'+N'"u3LpAZPrK.J5K)W9U!
%Z#:C]^$`Bs1@qGbe:Y[N<[HE]Sojk.=4\Hl%_KFGb2*<RXW*u#*IV"_-H&\,T=8JeE#LL7coBS,n;P=VXn&n^qRoNY^u&"5HSc9C
%2XXVsc!cnfe11:%,/&sh5.R74TAoC+hS:,:1-?0d-?Dp[p^cA&dQ]+SpA'!qpRW;/o']bY;6+LC=r]Msos@5r-Gjrf*9t+VMEeX)
%r%H=fjHCO_;>ZOua`XuqY2Au#[r]OuAW"sQ@J>]p0p2hj[2CaF@):-eGEE?>ceL%a*EODVp3:W)4ac#MrdG%%OlXo]H&OPKr0'h'
%/+L?0V>=kC=<uAgr`n!VRjMn=$HUR&43n;cD0NT>\Yb]eGP;^T0-ea\R7PkE2C@0e1D;4LA.jmFi\As:@tIWfQn'VA>m\IJECK8f
%dmae,7.)IGheZXj#&2DjrF^;\4WFklVk`3r[o@4/q?,>?6(Gu)U96FP)KbOB/6Ao:@onm"OQK9Oll^0-'\'@7dQYt21tOK@2NMMd
%^#Ru)R#_03l*JK/W'<.S!GD#E]R'#/<Gf6^md4RtN+"E>,[5,M3&AXV_uep,MYc<$\'2tR'gKD^;:rnVbaA!uAlQ<dBUj]e^V!_[
%rHq<#be@ke.eiVKZe53*YEhiMboIj!4D4*=Q2#h5d]XcZl^cGmYWX-3VOQe-d\qPf%JcN5K17.]qtk>S[WT\h_9<F6009H,q.8U7
%du9]eVCMV7d?C*.9YX5<5dlV#[1I:5E@pj&nrb:-e@3?C8c,`Me#so6AE/&la7J7uAOh3<RH[r<rCZWel28ZalB@K(7c<h#`uMu^
%[He7!M8>s^)4Q8b$7[p"-F`&7q"G!7+mj<FVl*eWCMn#ZIZ((O`%M/JnXf+&rOB@`nEA_$qq]\Ap[1eaYr6oSIerPEE9$c6NMV>U
%c!J"?^)ak3[N=4M\G#(Lj)+8,_lZ`/[b"!t::RRsCe&\ccb!akj4<tUac^dnD<4FX_:n2&`HZ7t_HEaEelK4sN-),`PK(_Nf3<$k
%??`U+Hh=hsWn$O.'ZSifH;=WtXc5CQ_[fNjXm_l$hM:AorHu+4Y&E`&:)=uW\#()rn+K'-HiG-.!,`f]cOWZq],eo3iS2s+5LoLt
%[C<J42;::l]XE-pnTjN\\9>U=>.QNG=Eo.69Z&Qu2SP;;C`S!h#TN`Mrk!s+NRLJj2#L`o0_4UKX(-)H=Bg2omm&q.8WT?J:;./$
%YId#&Rn&r,)V+'KmJ:/^ej(SPY'i.'@H-_`Mk0O$s*CAal?ur@Xl"-e/iI#gI9TrlhKuTVlqSWbIf'&okt7l&5/Ua@`V&8n;]4;t
%QJ:AsGPg.4hO!CqNW,IrpSt"-:Xf0khVB8U_#:[+kGKpA'<JkF]N-+rm[Z!pg0RnlcTaSXL#MUtfWC2qS+bjp6TaP<ds=3,9:-+U
%Fi+=53dTFo0"5PYmHmCOeYR/Y+20e&28%hXZe!o:]lgQn'`3-kZ*jB^\Fhgt%_jQt^-2>fcoJc3RJVCp\3io8*'C`bD>>"g"Kr%q
%e`4[&rLg.ro^1%lAUhG%h-+^"hVG]HpgJha!rVPAHf6;.N-0Ade)Pp/52KCAJ#scn^QA06V=ecTS+GLi,RT!5/O"Wr^>uYmS30[i
%*B[M23VraG$h%[_A*S!1iTjpN<TA?[L!Sutm"IsAB[ubmk20jZ^,!:A"+9)3++isPqL7c-@dA:7`K0\8qqg^0E;8R<r9DS>2t`_R
%j&PDiYP2Poa6/4*1ebf6^].:FqB7ipYl<0ZI,"/IeTWoTh[dFZHf'J;Q/hHt-QC=j#<(Q1n[C4-4W:1"7XIAF?ds;.*k^-=h*63/
%f[72E('"Y7/o%R+T=f%@O<m%"UA!<`ro@[>s7p2/>[.cL"t&tS]Go\R?0r4/m54@%_"rh]4"&=_eL)qaj3sI?FKkUYFe_A^nmH1:
%0oWm.pFD/,F*%"d#l-SC*D[PK=H/0;k?CaJ?_?(H2lhiQ/)N6#NaL<$f'<5>kPjj%X"oki7Y9lBgtc)BHZ?fG)XO&t05f;u;L0WQ
%GX#_IZaYAd6<ti(3kn=G]61l6Ek4FE=#t8Cler*3+MSGjT(UuQ3ktK4]t/;&QYfBCepYrA@I!aE7uJX/*lkD&f))eZq/TE/h:),W
%0eq"c@l[>um3;@"?>\JIeR.!Cq&c-Ga%sID`dbQV>$'m3A%guZNM*lSQ=Wk:IeIrA7r9i-]6M]t4ukZBoET;ip&3?`\#GE)&!@DT
%esD+ESW183n7-n@q",VUp@9i8hh<-H7f$f5>hZ\P=["<-FSb[LkC%PamGuYVr;*O<ka`dEhq[IT(Y@QYH^;%N>Mn9:fT3c@X/df-
%dU(EWWkn28[G!TE\EIe25.)18;?()!6/+d8c,:1L[WOQ8?[25'+OrTb?U<$HPOO5Pf\J&7LqYIDClXQJIWo]*%=?h/=Ps#L]W$@>
%leg8oT/CE6jP*n%#?uBkp4qnaqVH>O97Q'COD+hX?Q4,/hN]ZK)0KY+ouTsM&;Djl\#eb*Dk:&a(+qN/5=Z1KKmcq0T"fahb?shX
%r?o5L='P]T^[M>[iK"iRI.E:YZ;7E[Km/T;O5upVHVOMR_kd8%0_-*1\0&I`s09<t\VUad]ql[p7qs(eT4E7PI@ZeJa2d>G$XYUe
%q79lZVIO^je<"+ejm#mpjk3M30Xl/dZ8c/;rcu8`VnW+KHWsu^rL+jga&8Zg^:7O0rTBB8<Vc4]fuL\W&U/[gf[0u!<MtZ3nXk<@
%pCbBBNnOq`c1],fffn5S";ug*KHd^KDGZ0ZRR5B5[;5/E@7ri?f[>G>SY@<ZX3OF6a2E6(iA*J=OKFSaYL4c12p%YhX8,C6^g6Ip
%26Q*PP@kEB6UKN*l:X!nF5s5@L1eAepo$34IRs8]SJtL#d[S*q(7S(3_\AnJ^%3ZD:IYC4.i?j<8Rqu8=N[D<'ZfjI5paWcR,Z]E
%BJ8IO)5aL7M:rAEb@!?IVo`h!>Mo(=Set?J+jV[F;3&"$-buV,QrcZ!Rh0\p/2&7)FI32n/.YX`X$qRo$tEI>.rFLJXKD;k^AmoG
%?t8S1GG"ekA&m(lEIC)Uq.+:$g\1N")`Jhf:9EsC_ap73e_;nhfh&<P[=_\%:7AjL?e<jjB0YgAc89>RJ+@?_)eI__M[+=YW!BGg
%lMW)>CVJN8s!^sF)6:Qa[J'=N6JO\omXAi_Gk%P;/ueBK>MgI.G1QB$N"3rI41>U8/@*Iin>4\8\m#'@0h`P-YKJlnIj>9omDXBa
%Bn*Z*/3-_JA[NJ4-`ufhok0".\,UgoVhh$TPh#LWg+en/=tJ_N_m,7!)oL^A5,a*X*dq'0/oU3-WafL<EY/-ZWCI)Pi7^rRofXKW
%TW[Sp?/$TUeVWsU_k-D2^RV-l;:Me/SuI-_F6?5bA+-!JfQ,938p-ElB#G\eq]2,q2oCmR+)koGM:ZY#ZVPO&?8R7\1rB4/`p:$n
%%iVY?I%J+V?aQCh[DNVVR4]%Ls5W$+XgRsfD!*LMn6[8""$s]hDsc/#hRju:-T94FAsP(p."*'<%h_'Ng?8bh+*0V9C>9_+mI%?Q
%T&&WDT=nQ"=J\B7/PVgCgcUPU`>.iQ[bn2)^<u4/*jr`6?X'=E:O^YEG%^QkNjJHA7]bD+r<HWFf9phSd)#NsG,oobl,H)Zo[g:8
%"?tFN_6k)=ZgC3PIU4%AH8RtO6hhm5)J@?j)sM8IfinuJcMJBcl?UB:%iQCfl^qnu]7h225!QQbYs+P(F7.!0OV$-mmH'Bc9GDZY
%Si9uj>'oAdIt.Gq9m-=3:Ask/]shtRoa_;b>t#@C]2j/74a^gX?.A^Ha#i,)r1RhlZI/^Kd$cLEejcF`2[D`6gcfu",HP!C<kcDT
%Cg+l!F49?#kG%LJiCt8W^%>oa,I7n&^XV;/(Y.T%IIB\.=/TEWQe"VbT0M(TE.?!)@7YJ\OCP\?1a$qK]<Uo!rf'i-f3MTDr%_A9
%GeJ@riT]?.Ntc($S]T]LeV+RWZYJh%keX_Jd3pG/PJ4=$=ILS,SE]FoVlR&,'@cJ#Q'bui.-Vp']4q1!jlA0T2J*"K-80Ich!C#I
%60l&WO_h;q+&2/V'2lM1PelSXoaOg]RZ1VMC%FccRln'Q)_X/<^OJ,?^NaZ=,ng(%MjHr9U[r_%;rPU<f($F$<ic&_QCtTG]^`KY
%JI'Y+#ESe<h/@ML$<>DY/N<O6?(:]H)l0p`_j>;9cg+rQh"`A7P`m&%58mlE&f#SY:`mg;i:\0X7_B$JFL$A*r1TIbCfl.9jNrHU
%iEIZt<SJ=:WA:A[d\c!']A?inZ?,f+/=%$lT&]_6SOMjCh-5\BP;GCX`'.#X]=6?lT=h_hg-"hPD"qr+e`s=[]K3%\mOrH?^%:l;
%fJp3u7Vobg4iMp`"nQE<[J=h.!A'=<DFLjWFg#WXdJhtVHQ-=1h0n0A-BpCadI!d]o7d&LWQCoOMj$58i1&R_^:A93HgfH@S(+AX
%WR]hpqVm.cf[P,tYD]TD05GKE:F=31>I;X&2hK0&`br]OY>s$nKEU`!YVn^0>uc:u.[T27gY\'Q+85-9hBlHFWP6c+s6N&)i\Kp!
%`KeceO.XiI>"N@1]mUI+m&]R73a1cs\UVWh]SA.9<dO()_[eY^8`-]>q&>ruSkgE_6bDe2CpJ^>-HE5Cl'C^8Yt:Min")FE2W$\i
%$pI*QEi(V'nW?N1+1no/CHi66;3?Q4,7GZ!n=`P$\5iE&,=[(n"HPHi4Bl[q\,=`@<dXZ(erA8NhR?q"GOr7=o^2%q#ELg!-!Rr3
%KXWc(>f>C;b;T--kMc8q[?\acBpPg1XY-]7Wppc9HEA6;5'kmCNk[0LJ*9Yqk"ltG+5P[!>N!^%qXAUi6&o8Z$g=fK6U%?qVeJ<I
%1s"nNUVJIVP5),m^0_E2?+),q[Z4^U?\ld"PC:GcX]b[OZI)o=fmS&@OhFnYQd=s-<iSai_=t@HqjZu4e^h[+%a!g:2qK)lFALJ^
%MpYTN7%,!*h7<Q9[u>"beS/p31Y4,M?TJkmZMLrCID5J9I/7[Ha+orSa]>["5!!$mj65DYdE)'oCN#:.Vafj1KBL]aD>1!?p@.2<
%1W+72s6KtL2[3!!,a@fcO1M[J3%&:)3EW!6me)oB]3i9dF=VuM@H?+e[.We/GhcI`gfRpsJ,@M1U<*'n)Ws2Cr?BY%^.B71lpKfL
%`Ej[DkM79`DL\)Ic2NOs60n=$@)^C\kAO/bCts9?2S/QmdQ/G0C*ds@P9)ltO$fgh)pRCjDNToBLPQ7$a"T3\2K$;,hQn4%m'QHX
%nXV;c*H<26iQg0gj.tRtNJ5WP"#usG+>)HX\uT2r85'ik!n2S%E'Nn`.gKT64oNZR@lIZ``h/d'XZjJ/AMU*jNp*[AAYTcO]_!@l
%r5MsEqpcLd+YrE^0\h?Eq.7Is#Gm\7WLFi2KCt6hTV8Eoq^)$K<tG&62eX;i^T%h1`s)!o@0lNZ,45FV;!_\CN%4/SiV'#CZ+du&
%pVrJ#Frp>*0Gt'cc3(-SZ1IsfDE1KN?5%%$Zdq5,7t,7@fu4KXG\IFf0+`_]qL5Qma-pgb/3\CZ+nb+antF[d`offU>eA7PL,ruW
%E8hHnQpPo]5-,g/Nfpf=Z&7p]pT6p"J+5,Zk@aHIT6m1(%bD5neU+0UXh"r%LO-_k`EC;7*$SPYh;Qq\[C#Pc8/kB<dq%U?^>WMg
%Y'4afT0[1<r>VMkok=)&:;MTJT'^F#42#Z^IePHTptp_*M3P=R[RkqOf?/n=q)=/(Z#[(_\8uSNE;685VFPa?a4nOn05f7c)n!4D
%+0;U<2sq&>-O+n2\%Od18A+kqq/SXt-48o*pd:Ro8m]r@L"H(V_gOgMICXRfiMnYWFfUM*rT/P4B$almhjpk#USm,Y%d9r4$dYkl
%S+`?CnOiQ7h/ccmmX90?a$7k7H248b/Vq\d4Z^580pDg!h[cpFcc?A3=t@YBmO0`ELC[S3`YV4BL++MF@E3_*M=5:tXIZHcR09Da
%8!fEZ^s4YZ"(&i&OjS_I7`t">I;`hZp?(GP+@i*jSa"D&or)'+$%aL&0usqEl)-hViLLu0"`N:GIN*u:Ra7G#+-1<V$bNsXqV(nr
%HLYJ;AoaK6s(l8AI<U*VjmsEH8&Nr:YQ^Pn*uu!j+3mCd+(*NAqu/lN,e)[5NUOWofm<2DrES6le[R#kXua,OeVA,DlZ>DZRZCW"
%IW0@NC&/,@P/60#&(\isHLPESFeb^f16GRnR*lU>agA>D3F:NII'a[GCiPU?c/`q%gcHFW5/"K)V4+t<1sEk4UX&j+Vu>ORUL1G'
%T>(3lDErP)Br(8`C%Ci<iH4,7kNOEN6gh5N<#mOWH\FVl->hTOZJhhh[.S>Q5QZSUPAqf310o?Kc<2Y9q&l)Shi_:BAP+q0ItpGI
%lY6(EKDPS:E1bM_&c`-rZaK7+[.s6F9UHK\rcUOflbXRlXjraS7Ndude[W*"hg3XRm]8%SJ'k2b9:ORr]=j_/BUXQ6m->*YVVaGf
%=H-((kJ]6IkFT<k17ZRY?Jd#6dJ^T'4rA`e/['XOdjuR6f"\lXn,nN>lMHb<hh!dK+29=7ZaK=;B'1---S*+-:2o*/Cu<"b$O<0)
%(NV<InH`Hb/[2p.O/VpKL\9s0kbR/X\5e.aH=)t5lMI^RKAae.p6/#-5qe>o[;'=Z9R;!RB]\aBfq[-]hYUMNDT_]13b%iUFO9ib
%52=c7e$YrcCU;n\aI*'poD6q<NJ/1.W;c)"dP+sVc5&+Q6k=18^OE]-m\aML1\:q)'@2[ud]J-N+(>_pE)'7[qfP#<^&@?q;LS&q
%`iG);$_JFn`M_;Y)on7!6.Pe_0.WMRcZXqrn(o&4C:YA,FsMZ<EoX]Q!or`5NUTMkr(6TLnF5#l.qM*Dn^kbQmDYG0E,g_ZBn*eP
%H2NVIHZSr@G5PtNj6cX&?pkZTL4Fa?97?iI1Vje*cf6jW0:QV,ic=4Fp)\Kn61A-c^![P4HgT_%gXH.tGL>m1F60d7--T3S(q%QP
%fc-..7_!;;ek0S^DRILu4\YG3iCZ[2j9e<'B)He"E27Ce@\#bDJbX[;\+%-j\gP/lVnrB/Md;JFZ06](MGjiAMW=U/5?>`.E9m#F
%?P_3']*#2P\i&Cs8"*9-@j,bK>EssYC&O<#$gt.#eGN$%GPpXU?`Zj?s*=A9YJ3d,s'(a/qG5AD,Duc07:G6^r.j;m?:]Qj:)Lr&
%rkPDYP\YI#KiW^gSCjU]He1_GZ5Dm'&,b`RrUl^h^K56PZ<d;$fr?%j8jDbCqMT"`[4mW89%Ai8%fSHfobT!!CK;D["E\C%BZCka
%:X+k^T-/=%pS4D@7C=7Yd3PO03+8ZZlS#tH'9'h$e[Oa46D5K1%5@nCRdC;fjZSS?em^S8Sq=Hf#@URTam6Prf5]S<26q!u&9r`9
%oX!l1!0L=j"$^0q<:_?XY#JmLh'F$QbjfG17pT3VTOpVIpLhsb<_2-%<`BH(n",&Lc1N+7"44#MU#f>QRV`41<#j?u<`jW?;k]Vt
%[PWknd%NqCkJmSt[298tK_[pPrP[1r25[5)2IXq.Ar^_*?Sj\>?e;,#\[GH.r3/NDKmjFugKollhoBA)c*c?R#,:KgjG.%fOtI&+
%CS`X6ZpCu55[pGj*fbEep+/JbJ8e4Vj?th"k\3j1L)#ca%J7.)OhUK.\)n>RoGG#D_#qV4:LDAaUTMRTN&d:Z2NPU!6:9@)g1M=a
%E$c]o(.M7r_`=Fef"rKg;dXrFA)Pt=*tXje#<WUT&J+=PgQ`s;dW`aHrpg7]9_<Z'lRtP8iI9nEJ]TKE7-*DB#?[W.rduUTAeq>a
%_A1$S^aG`6f.=ppT'*Wa4eGnWI1R9k_H,;43fX'i1D&jSQ`a9OJ89PW&cqdV-a)un=fS&HR.7.of1/WT.R[:D^;-SbI_`k?5pZ@n
%FCACj,AnLt$mV57nS.(4ZtQTFoA#c:\ueF6#m(,fML]N$3jp"TI4(\jD'i_]2Tlm`+WNua>1*Ve;%sA$GTLOW>)"nN0,j[Ea(F$P
%JnO(.2)HEPj:^:hK[37UN6*kNW.co<d%l$sqb(E&XqNNg&Aa"E]GbX>D3D@U"P:bY[o;n7X!W*BO@e<n\$B4#'g5$tV9)-RXZ%Wo
%f`<61RurkX!]%hY:H"bhA=?DrA(r^E4Q717$Na\2\)RKu=ah4GO3!=`X6^?./Ei.kE(G<pGV#qQCb1?0Ai58$+:/YlH>F]R#RO9P
%>j24Yp/V9f73JHHKAk2kM/"57Va;=rdL]js`((ebo,';id&IfnTn(-+beUjKd(giGFO2"J&j<c;U"5'o\HqS&hlF_&aLgFm\GQaZ
%UA9u7$7[ZSYX'91d83Bgk_;sZ_:<Ca4j/+u86fa%[/Oh(aWDSGoZ4?F66m_DBe(&,^#78KA1pL[H*Kn\fCMC.q%g:@aOMF60ae)>
%/n8*W8'$*P/+uC\5tj]J7!V=4b)-%:!r-Kk7\45#Xrp[C18Pc>qOAjl8%Tq[fVcIi[?g3a4<S3o]d-GifV4m`<hRg&@El4_k1*!Z
%)aQS%BZ/dr1DW?pJ:"$8[6q5/(pu6J+ikON7Q0ln)'I;qNog>I[`I0rU#c@m>.Ei/Z[8?N*moT/,@MP'Zq[p7!*e[65b[L"Z.Y5H
%?ilg23"/?pdC_$"9b?"mhB-]%8.*%&,Z+q:q2hO,N:@pV/0l]TXP^H@:KSDcEEC,e'GWoY#=6SGs5,0Ns76p0m\[\<%_G."f]$t7
%k]Z:nb0n?4'3\l4&RG0@WtDiW3049][l(V^^sRhhd"VZ+9t>qBM@7<X('FbL`Bccb0uOYP2Y*+MJ^ABg>G-XXdR#W(fl.X7LB[>E
%CG9]AmS?m>-ksLVm_%2miW9aC0oYiNY%CmAQ`2k(C5<CSSY5LT-k[Ce7#"*8kBUH/BE5u-@tB_<G8Of,%:G"ZM.I\V`Wh?S('ol-
%a:%g]5XZM%&4fm,cM=e3QHGh^/tkbQ*A6q*:hYu6!V+Le[uHNPQq_?eHe2==l-nK#T#i#6cJ9BU(b@/3d>f]a5o\of*j_F_ZZEJl
%`gg9nFM-O./_CM'TJ[HjfQma`":bOH";&\!=aXPl/2$:HVb%?OO7[\@m,9JDJ@uoC4*%U=:cDnI^^ZLh"q%m^q0/-\,h`p#XQPGa
%AV\Hca_CG;6XU;?<M'lINn%gW%oXrWneOidl(<'*TLQ9_Rm?&HG\oY3,9XE*"Bh<U,K6MX)$H)XjFeT!-)+sS/rL7--9el'QjFN1
%l/C"/k!X0<aZCf!A^Q#.-rM19m'*5iO@>n!3[(I6a@EIL"7WnhM:q;b>+Jl[cSeMYOqC1g$"tq"8c93GE2OO#`:$A[jAUtk#tYpE
%`ou;DHtPDE0J*Xtq(kPJTab7/3[BesRPU$,p0gTKP+;kl!jGneg%e&6=J1b7&)Q:,Ob!,0A:d2Mad[g"@Df%<BmUUe<!'iMUjpBj
%b_?]PnDb?To[!OIeA%^T(kB^_^h7j'0K+[e,O*I4(ekD]L'5;DWm^t@'f.AXLftZ-.0.k1((d`V6L4?e6t?[kh,UO3!jNC+,Nrt1
%.[(,9ii>jk.'kDI[t+H#A3(KBU&YB"%8ak8>fdtPC`urn;8@1HJ/h&<BoWEaPm&-q,*$k<_QcH/)$eOj[6fV0ln;&4O>Xe2TEUY#
%jspK!=qh.Q_%pm_ZF5Rt48]t!Z*ELhn,aIkXBhm.F[Hl_K"eUE8<fCFRTq%6Ndgaa!8p=7-a:=A`b^<k#U47B*fBrUTQ6aBg%t5i
%4n+gH@KZ^WTLJVb/o=m)=cnjo?GNli+IbA"_7sKr[\ooB6TF/WA2-YS`mR3+%Q94b0uupsMngP.d)EnI"<mIcX&c@L@TpZ;h#Q"G
%660J[blUekOLRL'#TsJ@0%k/2d=@@?6afjGoQ1pRC0hmoEIGf:e8HoMN4Q:85IP`_M^/SecaA%%"@6FG2StNKE*Nq)J9"tppAi_1
%;Qh@5=V$0,)\(kG1VqQ?oj#M%lO(hPIe@Ip`6el.\LrOF=j"Ya;"L!mSHhs/iq3=c8(`+X!^30q+a%M2]VTR\akqalkp-01X2RHE
%;!dPinp17O#uNHH3fuZe%L$"n5s4*nedG2S_%nmnD]rSG?6o`2`emr*;"rj_n2a02Z*>\8$;Z"'A3_9C#Or[hRAX^6;E[kE/irTT
%#KY7oKa=qh7@q2EI=3]H^`<gYOeR"abK?%rCE"\.8?BWa!iB'"]5UIUOG.[KMmNZ+Z!=`5anCH]F=g-'V=^h7AiZ;7_8UBiII9;\
%K/aR3Rt,%(?sBmCd#]5L'h]C;>1hX6,'&W)25Y$rp?s9&#m3:ZnC!$jM--on_>M9L\8\c>#5foahgjC9kh:m77"j'1!ed\l%h<_I
%+L8%"?@sb#)\\6>h-,[^>_jC:!Gn7q7Vn'DG7i#=V)';Z-.L"/,m;/D1BSa3;M4'TJOg8sZmBTXUIK(2qhW5d_Y4Xe.o:'M5erJT
%8:u1[('L:CbZN(*P#Q8,W;qkI"V<l5gr4Q$RJ=YN,c>A!TeE#nk:%B4&EX*A)$GV%s4Ml,+#?-U&R!VgYUCIel;RKkOr%a>(tGp%
%-/rBY4.'75L9\fc0=D!\&KE7nE<ncs41#f7T32qj&Le@.@NC9i.W:Olkf&;/cRMj/-33-qrurWL]/Bn\@bXbO@-@k664oBaLL<*(
%L;S+N1Q>F$6(ps8_j;naWk]@m?="uW%"h9=.1QCjZB2VKUVmSL&^R[jM/_sA42Q_=F81Y^2.V4X0aNrnnH'1rOfN:+L^B'Y=>2_1
%489kY6=NIVTEq^FEZf?KiN[SHMS`qCd:'c*l&Q;H=-O8;X\69(^\Ca%#iok(777j:KK^Xn9S%_B,T!=LW&VrZSI@h%dP8)!a;i,a
%PtMWK;;.'>!#Dq0n]D5mks-HIAe6I=mb_"V9Fbjl[`ek?/'su,Yn6u2&H4-f);jFN@Fr)JlA.M:;'B$H8^D2mY[p('MVYr);FRaT
%T/A6#M:'E$MIN=^9VYJRFJe65_os>>lEp*MdgsZgE8di-?91C5oisq#"6_O/JF+2S,UOb2`s'PJog8-Q0XRj9HSS/JS+u9e#geq@
%mj'%N&<T3fgQR^NEaIfp;.>*,'3u*o3Y6n*-P>>lKFp`B[^[4%5\^9S!'$LL"FUhKR/gus+gX>(HT@4mGfa_#ToDWh#4g'"EQh&_
%a7`e&m/daf)&E\#r;Yl<K([3F0c>^pkd)<8RJS._=V+&63=E%77kiGI$mEO#if`Ou^9oJB&/Y&"$KM#dKG\P@`aKU!LZ7P'ABRrn
%m1_KF_@!N2@1eV&,k_=1jRKilK/#]L@^;B.EOs+:5A1`ulG2a2X!i,n?V\"<kTQF3-8DV_F9!,76_SMX9)R.i'i3^V3"V;(3d`&8
%-G7A'KWWS+iLF>sD0XlUp,_QZM]G/s.T$B[Jk6m@jKRprJ7KD#NugZ-OIm_gIY[lH55)t+8;-bYBT&93oE8V*7)Xgs$3!$QB`!0p
%#J7hG>]p7,FWf+Goo=q@/O;B9Z*EE6J?]GX]<P"LcLo/a(:e<Ua;GBX,t&X%&6))K%!Hdo-6\80P=!=1,[_o#7%/n`JIDN/ZIFF^
%XbZiu(WR)1`;UjQe1d!*/.F^"_MJ($.j:c8!sFniXi0f6X`0qhKk#tWZdn2mJX1Y=U=loOU]?[hkerRa;(Q1@Lr=ou"fIQJ:Z&H)
%i:CV%D?8Y]-c5;OdR(p>;r?:k4j]]d19CUVNL1T:&DEj<Mu5?^[/SNX%8=e%^c!K)aa=De#ffDf#+WK^lk=XMFLe3HfmojtbJtq4
%+d.Y/Faca2A^q#E![e[7=I3;@3$]'?Y!/Is&R396R5gTMYrQD.MS8=&p)u.%n%XK"3B%M*7D?*I15SOV_;-B&/*S4]^ffS2Qh[0h
%RV"Zm7QcS\C.m\(Ls^:8JNC6FQ'(U25cQ"*lmN5Cs(UpT!VSN=iED?MKS3>:2*qYTe(t][R<B59m:Us8SGai6e)!X%A/YaW4.OMS
%JbH?P]sIp2+s7c?";s?<n^lrP-$FNp.]pIU_F0hnP_t++#><>RaLJN\k%sTS@Wdu.l6l;!)DXSK_Aq;f4pR0C&;Q>;8qEeF3'ott
%1@-4+Tc$,UoAVk9*=q!45&:T5.VuHTl/<a!k=n.`2e18?e/6d#TcC(Za:1i@l9cANImg$OQ#UYOBL,ZY:^Nh+LD\C^#UE-=+IWTo
%B21UO=!-V!H4#3Rko:+"+OG=R9bIB0mFb<W$?dhQ^pB]%V<+tD_\.e]QU;!L?fr<*3?&U*,hS[@d$-(tLN=0bR8=C=gV3*lFl?HH
%Js+V2F#r2G.24*q,`-N\b[s*LlkT&P+t=C@#2UQ&+48#u"CVRQn?)N5+ouRmJEgYO5Z/(5ieHP[f_aaMX3\a/R/m^AAsE8,":-s:
%6E"YBR!^>:R=(;u@-(QmQsDF?:PY--bU'/`F+C'=;W*L2@6])[r)FS#!R@1\KaC0^\VQZ`Q<QWZ9B`VsMr5ScU>SVJL(SP!`B%S2
%*TdY%kJ7hng_VgNUh0To)J:%pb49$I%c<Fpc\J<T@?.4Re&,;o-:1&CK+V!M(28:*n@+4:+<9Yh#)2Oa)A6EHg1,sRZ2ir1@41(0
%XF0<N,I!I1"oeY%Nlo:mB2)UTlZ*)'&?3QG3/a&81n\fSp^#K<J,>$Z5sPSBXLNKE\^;f8&Q+*(lbUNs&u_!*/I.3DIuAGF'M8-*
%-K7FZCQLHX!PU,^%N<L8;B2[tqrH]iLtiS<OCZ0`;/#^RC`GIX6?dhB_)QVBmFXi\p(Z66>#6_h6nZNO6BnZ2,LVSR\4nq=QY[4D
%KdE@+QOr4&)6J_9o21t"!Q$6soLZ2%aH!o#<t@qnJg6uE=K'GE8R!<e%U3Db<p58B81iF&*7o"?Z*>7HmND-e'R&Eg3`t`>W^)\N
%nk'LsXR*C3`LM;@q`-9(Ts5i?;@LOdFWAVYRQ\0HM@Yt>9gOm7:_!YY&b3F-R?^&o4X;O1LX)&ED@#.@'Og/O1p\<FjH,Z^$^aP2
%gN0a\=Um<"]M1k.(^i-a6W5FPp.ttT1BuoNQkPqi1lt\T5n6IM;XcZ_N5u*Gl!0m%Js5GXHr6"6)(>=.;&na2MN`H9N,h_t"hcV)
%^[U4t:R]Xl,X.h9lC%<<k:=)nG,9n"M5>UW21ujN##:nf'>FF\f)88*3"(G]#\'QaIVHQ$))PMZHGI'lVVF;#2+qt*"qr/5IY$Kd
%\Ca*md]a>NZ*fB?68M_r[j3DRV9hmH`VJYPK,c1o%V7UJJS(bheWVimE_p7R,USBL?4Jj'"X3B>^f^lki"i)C12)DJP*sRH)X&^2
%+bqHch)J.>:E#Td#U8cHPt)nd#qX[E*QNrC=_OZai_!OKZP$q`idCHaB@tk&6pOeF#l/%^RAP[\c*aLDAL6h[3f5oWPfjf=cXB.m
%j:VpAM)-J@")Se7b<eSU8bVpu#`Z?=%[oF1k/>E9V>_k)aN)p!e[SFLk?03BXY__@8:`)4<\.Zh`1#=n83mMEf]oQfC`&'/1V6:G
%C0^`rKt;:9@!'Hb/Zs#PX$QZ#1;U>+\r<Gs_KmNdAc**#I$g/;6YQ!EPrT2RN[21r)hDO^O>KUrQ?8BYSE0If!6Wuud1t[6SeIMZ
%C/>ZHBu>&l]!qSm4#qU065,7WC-n[=QJ>.8H?(9]i$ZP_RBTpI&E-)R:'&:3EH[l(qd-'XK+Cc">pbSk<J6*Zd:gK:U:_uWN_0$\
%,8NS]??EuX,$g<7:(XC<+0p1R>Y2QRC=n%I?qmQQKGn*Mo@l6\B1(XOq(+o.@"hPYd4ZSD+A`otSMF_0+hS0C7!pu[nDt,d!4td)
%'b(l\P,mkgdW$NXb5l"h+[^FgTMq%-!u1kB9/5fVs5)_=K.f^ukWMbZ-5=G7?]k[]Pb4WmDK]Cob^qBFpcO42'nrp^VlOiXMPQ=I
%*QX'-<1JZg:dHS$Xe^T!l3<(i3NGh:OpAdZ9G3BodY%YI6Q!V)AWm&1[q++CDCG;<6[0Sg90NTJR[;7U\gh!I;2NeOHlIlZ+aeVf
%FUV(lq-[rB"Uu1e!lPlrYk]KIE/BK/!5UW7L?D?L3Tjl*iL:3-DFE2.lm4Cl(+PIr"bcf%-;d+0VrM7q`L2lU!-6:mS=$pu'k8[&
%[TuVaDG?gT[a;8oFmJ('/47d>1bi'$L9'Tn4;f0@;kT0;V'NgO%6Y\;L5OKK'c:I1mc3&tr2F!UW#@muKG"!,@1_ZZl:ar=pcD9s
%fb34D(?e:7E(a$Hkrh%?aLCD3+JtmYM3/C/C`.aKnq4SZ:SU*SLSeG[5$VM!`1DiIF4:?kWtT7X;VNN7?B']25"l+"\2J9$(Yas9
%ao!Sm"1CgX&NJC>02%V$2fMI/=%QY-48KgA.PP(>Y*m.H-7]o.A%gjR3BnjERW]9h?oFGS29f;@g#VG:0=A)Yk-1-"2-;2\4ck``
%feUT=AITg2_Zu25:YHo`C*Km$I3NhL,ZJ!#phJe@F6WulnWr`V3G*k4U#W0ZN4RaI]qSU60f)?K5.?hk9-fk9T\sY,26:LLVE4$!
%Chsc",#;KEQjG(X#YN_^1dmA#_L`p`6i[\?R2e-TOhq.T,?LWp9?2)n/bE1gn7lFf!sHJC`3AooA7;Qokt!!DaeujX,35+0%L1=@
%;j3AP*sR^1*FX#rMLqlECUXe'Ym+5*+%mk]Er>!)ZB\sC([3'GBIp"Q)&KQf]UT;l8^JcH]P`8Pn7/es;qRHN?!k,_*l<KPM<`ld
%M1D.6J2fqEThjGP?r/8./?p1HX)C!#O_62TNh#e.p]``FGY$8p)<lgc_""ba0NEfuGFhDmbDtm[QFAS5kWDqDXB4B6g-@E[lQsRU
%$!s9?-2/b&*a3P$J-=,3fN9oG3N"+mGn@^SQA#7ceXA3Z<_0_uAN$nAJ(s1h\@\:ggqbIqdnMRCfQ02mA_<TLI,bcp$4r<(`Kgur
%6KAq#H_<YeX$GRB9,i3BAq\PPDN"^\0s2/g<bt8Q=5n%^X_t@]k\"kN!2XX6cD53.A[)5.4"@C4Gp`0',ROT8M9u74JjpsN@_#hJ
%O<eHpX.fi_%)^:Ei^h"#da/f\`SF*<JhNI4AQUl"oquhI-934L"sgXr"XtQW9[(,jX^n#q$3;C]A'#?QDaETF%aV8#VP_gtfmis$
%U<?X:G[kIQk`0Z,fk?CY5U"s"c4`Nr/K_5:+P;41cTuFNMKf@Ma_>shnUkZ%FPI!%J`uoM8n0^=A4GJC/V+b6VEd;V['+!L-&ZW+
%U0u/4Hs((+K>4T,$AOm/DD78*OpH@=ig:I[L9`.m,Sj2/n-1:;QT*G)-n(37hr75>_hAp;\>8.3+LM:phpG.;ZB`O5(m=;bO>3m=
%eItWg99rG\hI\2Pk&5jsD/,mrLpe<)am`efS+@%/?ZHe$TWrkh"-J/?.D,h3dt+J'=goSe;AbF#i=<0I@@*Q!nAW%2Of1Mc#uip4
%.j0E6fpGA3=5=`:)3o9>&ssJ.D47gfL`h^WS&eJMm0W@UdY@!1P4%mV'd84J9afoJGW`FRLa:##YS@(Es5;%,JCK#\gq$[G9`Qp\
%o2qgaH-5b;nE?fRV%_DDm`(,@."fPCC>r*5BAudJS&8d4Xpc28,hjp]r<t"f.#1CMd(lIFY..el99j"OTT+&HcOtg,Br(`$iZ5>l
%*!ct.1U;)-^f,5M<r0D+705nEXMt/jZ5B!8rW')'A`=qiQLC<b/I/g`VR$3GH'?JpWFWUbZt+a&AJun_.)AtF@Z*<EZ;6g)W1IB'
%kRZ3?Y0lGZ_^8>q?5bQ&JL$:;_-fbQ3\_IM<#>;i2j$d*L8?J"W0#28q^UTUmBUF7nafYWa*A2cbU>EeE12Js<mG<9Hip+Ia/@*0
%ZnG6uYqPnkq%n(n7h9#ne5Wrq"H".mf[P?kb*P8M0d,NPekeCF%I/aB/b@Q/^&[hc2uRlVKOg#MLaUY#`M*&tLlm"8$Nmje:p&K/
%p#V#53DLibF0`;MYEbKb7>R-j3TG0S/i:&`J/GdjTdFY5:g&!'7Y71Q1+$nfM4;R\=."H>Z&juS5SDQ^0W6\kWG;iDe/D/kDM!*G
%5"Ujr3Vkq,M-JL,'&UaJ/c5jo6o`[3LVV@^%#BJg'Pa@#"-mFF6R8U%Vda*nS[OC.FFD9o.2%du18"cZ73!f<VY#iFGqY%q1')#5
%E"!/P#q]0@+CQl3aU/1\bmK0cl]eN80as/7"pk`P./DFsWIQ`paP&QX_/3FZlc*`T-mKH`0Imm$Y73>P0as/49W&S_H)Y1\2[/K#
%VbE;I-flro]>e\D"1p#*VOo5pSIUg7%."m/"1nb:YM9s_j2[OHJR)dJ#'u7T-D)Z18B+1C#'()2/B@u.\HZ"d4Ct#c4Xl/SfM/p(
%`,<H"ak%tW-Y!u9"1\Wc5ct.<$W"gia>)gdi7=:)JQlW8qJu`JH40md@(1s2IP0G%F_q&7:K%tHkF%a91:p5akCcnm1N>#1[dqd5
%+r96O6,5B7gTR;Tk4Y]>]0rq@<'W7Gd<aeV=f>@O7Fb=5;9_uYDU!bSB,K#aH'nt:@]![9ERWu9'AoXt]jLgS/;7\*QC6qh1I"Kk
%PajV[bXa<!hk_)d_2Kkr>Kp%SDU!bSRsN&lGF:<o1q=!+AM^)^9U(msW[/EthXYMqPd?5;12FJ>jt7M6c&<Q!;-m`$QZrZ;pRt`E
%_lXflj/b4>Z8jF7;L)WL'lnmZ.ois<bXrUKRMKFO5r`MRMM>`=8h0='ZpI',A>P0TGZLi?3iT'f$4<q=MT)]#d&^>(O^;Y:PhA'"
%<M#='-H8\qK7X,$YV`Y+`C+s=q,1tgjK,&V>VRs>DIO=hZ%BsG/B-T!/8.MWQl%K_a@kmnJn^[=/1/fgm+i;T3,^rm-&[WP15if`
%DD)k%=ik+s^!(7?nLY)C8@&__>;LfoTi\6tO]h"L';&5a/#^UXLcO!.J`>IE%o2m6J1m.U+@FMR:fG^[:e0fS(k\L0!j^r^X$qTF
%4KY=$e"/b_:-SE"<F7j/_uL[<5)#GghLOl;VLp.M.,qL7MVY#c@\DORd0A;F9A^4T7`0M\j+QQb%$7Gq'50kMVGN87FH?WDL@o#K
%h6:u0Zm5H6m[U2eL:d(qAe5&Tg5lUt@md-?KX-b,&k!H(fIY!Z_0duADJ3_dlWcE2,HT!pQ7%A/di"tn"6U!;7!T-ha@HP,:hCOt
%#0'S'a$;VekX9lS:$b^.cd>+U&-L_pd):)79^!oC+JlY3p6oP@/Jp+]i6p<%"tN28nR7XE("AHVWZ\DE1?H.L2<;CN7>YI1PUd?k
%r`-0p9h'c@4KG/Y\WV?3$3iYJ!AVO*!B%g.+bK=f%G@T*:rHhL'Xn7N@NsW9A-;'#a6V+]\Y/,MJhkJ+Kpp.AKdqbO@jG/L-Y">`
%S[aOKPi:(S9>j0&YpmUJ+]G=R6Daf4TrM(4Bf$O/fIY!Y?Ds5N2d"bK\\[l`YZ*=?)'oh-j!i>?GR@E[8Gc0oQ;5B:G;<eEh'pMp
%?RKk[O,sDOA>_Zpf;\72BIT3L$,u"Gf.9;QeuZ4e't!f&8K"[1QJhlrS2eC&8f(R6D+PF0iBoU@7)^d6m9rR$Ar*VBLS>Z[<5X6s
%)0;oLQ'?p<oXJOf"(P(V@Q^V^__/*0q$Is(2LDmn8+;:=eds3YJZh,tCbPXH.g^78&(L/:L5`%ZEM\.g&ZVA%)/pH_qTQEjeN&k3
%J8YV]cc:CBnVTXi80@MIBc=-XhW1-%Yq:/OA'*"*2'lF(d#P:5Gj:G/(\I+mq?o6&<N[3g%=D0b)*)G:B[4)`&3A_/jT93lIRQ_3
%DW+d/EE'cm"3E0<3/%W6#C'./M+A2'MB/\`.64>8/4kq0;O&@531g`g7Js:td\+,b4U3i[[cG2s69]W8$%Q7p&/j.ubS?+J+1[A"
%kYc!V7I(4UZ7[0Yj`@"<"+:Wc<44X+r.\J=4chc^e.4u7[\M@d?PZI^?BCd$aCY<8DBh-7ga(g8<NK(PNL90N6n0i*+%H)B"eglr
%q,#0Z8L3A=(Elhiq!?,I#^dBqmX7YqiJo)ciM)!U=E:0D<@;U'eSK\gKbM3\EtfAK,W?`TO&=oj:,WC0W`?&RXr0;^0,37V*4/Q1
%Sh%fIFZR&J*]oNUf_h!bJ_IQDSSP"?")@IJ;BS0aHN=9.>^,E>fu5!2O:*KU2pkoZ&KMGDWWD+)lF+8V\IY?<E'aF'U_L$Ei%$[p
%30!Q/gX4lJV5R!Me/*QK8`3d\P\*>J8k9saM8#XO<U?aS!afi<3Du4SMiK@=MKp)LYl[]D>k\gP,448hKfZbf'lIoE>j;Ot02\(-
%,tG%]fQH:V#ORqEj:Utm)<>[T<=PJRF%s<An8.@k0PO+SRM/(1kI1/W/SQkX&6o'+O+VtLc"3&g7*ai`3;?7#0qpD5"DOM9K6-Id
%>RL,5[X/a(0?-[J:H`p;FgR5MmQkSWC2R9P%!!NB"Z%=S\UpiRe0r:W97bUcQKk'?3p+US!^EWoqPb]!k.Z.t9!Vog]';AOoDl+8
%CIX'=Ej&0(>QiagjFWmIJYG8F@<J-aC*OnP5J1`JUq`r9&%$nP=hn5iJ\7q3!3".V`L76t/#-.HZJ>P<F\)nB<7'SR7Zu\dbZ(b>
%!/N,mWe_I^.m!?dlEP`Q0Mp@W\YqV?91r@o<u/?6'#21-43Daa407n\E%YOgm#7j_GQN9G^h7t%IV6n@W8hf4NYF\]&B-;q9BGOP
%bEi#hW*?IJ?Wp?NVShN_V5-,i!>cR'"*,7g8-@r?=o.8E-ATnk.2U5_7O4SC;KV#oTRd?(Y;0P"ZtNpM?JY_YZ,#s1=[X_5JF%B0
%,`0YZ[S>o+H.b;&/fp\J[G%c[P_H"ZXdh*cWo8=?IC3nA[jUY0aM'pt!92XG)jh:#Cot40#Rj]5&&!n5VD#6$Og8#(YuWp`QAo.,
%!8#*_!fum[6>Y^<qkZ'l9rc51JP+JUg*k<9aP-35<SrD71f7(&#ZZUD)eSZ7j2eXl:p(@[5&F*C5:_C27s'D/6m7.,J7R$Aj/Q>#
%I)W;a@<3L5UEld2o=.7I[#C[eXBKEGH_^W^XpXCt?lcJCL!n^$%4Y7O'9[q1(,q6JkoQ"!;R7#Q0#2_1m3Cnf'B)+0J.c)''qJb&
%gHD'2*E`]b<"Xjm!=c!_fYHl'>OEs(qjTLjDQ*\oJJ:eWilXp0\b#kg]h8fEFm0#&90$9\N6_(4D;#>Ak,Q<j=&QIF?R/!2YoHgS
%WMYuG'M0)@&=5%E=,KfHm1u\EaK>R\](&V?-4uI,/X$mPi-jqq1iC*E8ZT;XDPX24(qr(7glH'1+8=Au4O=ba'X/f34h<*Z-61&+
%=64i`]uqt58i@ai8V'-#ngRj?ag);A.Gt`o(!p3k(F>R%j>H5qYdRup%dTG8\P*1t&<"P)!bsLII""I1dkHmCW'$%-PRs:2R0.?K
%2Xlna#r"lk?4";(9mTlG_&YtY_+mE'b=k5)AJ/_Y]UQc#C6^4c'FCX>8k-h2KCLJ7mqX,b%9QRA8tf6aY*?QTTmki$7XQ<pb@A)T
%K^j"K8a7<cQ9Hq;b6i89"h10B#Im/P'dF]l=F:LcdMB;*YB"YFe7)<5KItT=GWnI^Nk&C"=B=\O00O;;V,FYT.=m?DA9Q'0k=E)P
%e0Q1U2,hJ/\$S'qC$7%1crZHp9T/6&9>r8AGATC<CLi-3-2:?Yi5//]+plEEj;7\lj#/@9,f?WV?oNV,dU]CdI2CN[8D1l>Wa`Ei
%dUMt!;qJG<%5l5f8==Sr4:@CC?N5nYXHCQ4-'\buj%9#Jb%$C\)\??8=GD\(Uu'N5Bn6?QGZ.5Bo&Lu<Sl:g,o^E]-/Vk[E)[s]>
%jDDsi2QEKJY.iP[p+,[?%fFHr?C2"o7(h"p_`P,SEb#cX!5rL<aqIBZZ_5FSP,H2'OU?l>85)%=a?n-L`_*"=3l`Zpc-FY0P)!LV
%4)j@4;X^@baD&L5[Yl@4BF>4B3E\:C*2(`CS6nE==(!V&>X:![<.TUg0R5O290N_iI,S=p;3NNY;8gF!8l`g;9p"M02aL%]UaQHu
%<-R#/aq;_#"@Z$j1H905=`@764p$iU42Bq#LH=+I]OZ(FE9gF21XXnH/-cDkH/;eCJe-+A;C)<a":Q*6@pbK6@Whh/X%T[jg`-t_
%f?HX-W6Pm;GqETr*0(TO-.#1g<#2pb!Ok&FTMU/X$19@=arK=6jDs[Gf@2A0A"^Pi7#b0cJT_?F4cqYRjJ`/_2="pXqb8]g/[6Tm
%$@_^nFEOi09>]!TG^8UO\)L$Mr8*P'Lo\CfL.23cJ#BOTs%LR=K,W9UgOXeW.051g$+f2lH>tZ6[2<8h+BuqNaL8LaMWcD,j'%BJ
%UriV<<;B+T\Z/+HbLf?0VZik4\#-Z`V7Tu!$q5c96#8QE/5g=&E>Nnn^a<XIS=kETs5Xur"0J-eeeE>4=gkGem?@Md7`h6#a&6M:
%_`V#6W<NXs)=Bi3\rAUR>U>7%>m$,53U6)7&d_SGQe/X1XQ1KS&6T!N$$Q-m.*$?'&Puh9V?&Gt><I2_Jg#]nnKa[eTcU1<)2`.r
%H"oQTLL"1>!s&d@ESIM+]@8Ec6M-It8L2j@;6tdYH4Hpco$f8:'d`F$FBlPCQ:+\8<qq&]_PP\#X&@V9^o8<;i1LL9Q-o"KgEb)g
%6,Fcn+<9%J!CYIR=5>.bJeJ-_8s>:f;ZACsn'W`.ZCQcq%Hp$HM#g1e?cDnNO*"%4p;@.AHXtK-1;Q7T!'qOm^NY-faNCO(h0o-k
%VG0@^@&`TUQ+O=Wj0<'qmsuA@:T;?_loNYP=2/1VO.R/4g^TBQ\;BZia1#iG`W,HI*Cj-gN=&>snm?HeXcCpQ/5&^sN;PO@D_!u,
%Wf+bJ5ai8)0Z?6#erOZ+/3i`f$0!M-\@=+o,m8;:\`WNqVO3[dgI(*0i=ss)rWTEliJM02DaJQVVn.`)@(lg_WV$o"^Q4GlCco<j
%LS8m:SsGkX?(M!Km]g\Ge$m)2j&Mcq.!J'cMY%,O<TuTh+:U8'-g>_=58L@imIW/)j.GLsV:]^TknMj#:qpJ?(=.Ch;P4-KL:-U)
%.O&?,3pi\Q/PqEoDpcPl#OMQQrkWl13`q84r*r\IDJkg.4_\*UKKi;XJfdME#_IB\P^r<NkWqVk8SJgQkV9Du[iB*%q-\-h%Q#[A
%?`mM[j\K/+r^IWJ*?7eMi9-^NhF=-p\0<#:q=KZKi:H*_TA"eTLP`=+a!ka2Xqo5)7+<*,IgCoS0V4Mrg!Y/Kc'Hs3TW7qTUTI;q
%e_nb<F9^=*XeNIh:@.[=rsl,;YT'+i[K7O-<:E&Qi:ElA%rK)+%fn8=d[='qhRGZh-hWUa[\:q"rKPt)R&_fcGsK[uZ5*/BdSqs2
%q++;Nk7_l$%?KG`Z9Is:("ZeR,M-T#$m&c/D<CYlcsC:?q0Ya3/F5T>lho9(pT2-:rPD@N9!Cr?rYdpM^V'c*ApKpsg%,`[`a-Ut
%_cr663K;0$lMMK&i(KJ<J*IpA2l\FDK$DX.q5:52-'rOl6o/K3R"L`ppRg/hj2_,Wm169`J9f45'YZls&sB\A@6C>&P&a*bkX8Q=
%%]L)I^i!.n9.QWt:@u4^ekN+,Pi=k5-W4s=&q@GEUHY2c_J4tTEc+u1F;dsUj5j4qSZ]p!h9bMOl:tGa8s%o51].G-ZhNAOUMa\3
%nAP/&\snNtP>n=(T#1d-NP.%)V%BH-?e6X(OrHY5E3>a)Lhd3Oi>;6]<U-Ckh]aENpSeM(1^"Md8NG=l6;BRnqrpqQJjX@?8C8+^
%^4bV#$KK'4*PH1_'o8`^L'T*7:1jZn^o8,Q/\oI/1h8sGV$d$7g9D0G6#rpAlU'TrVik;m2m'=f+X@Gs#Fu%@W?_l11+`2(IpdE?
%qhTF!5DDjSYQ9/ZT(u5^2$YM2Z<EiQ8a+QDM#]k+$+A^4`^Z+OYP^_f>g91X@f^IR>PDhD]&_Qf6%r\0#-^i;(.<#_=q\tLB`;Z>
%FS7!_>R5I+g^>,mpD7m3iEj?>YB%LnU>]GGKR5#Q3d%(24\nBXJH$l7$CA$h=:>_upJG/o_ku[,ePkueq5LF`J7/Ue#<A?0-g)D=
%k/aPUBB:k=d:\aL,jM8B0^U[U__YbMN&+q5/XGX`Y[-upam0J=RR]u]eD[]>of!*P&>f_j(rn+VLlR^UTSX+;Pg6#E'V&>no>XqB
%$[7[Vnl[p:E""U$Q;8&8O[DnhSjco814_9D&/m0SKlen>WY9#a]_@3Tn@gB^KRDl65>`p)Z8%oi&rVCo1_=:1VVT^6r+[V&kbT3C
%AmfKCcfVhi/e3m63'I9/"nrOt2Nck(kt2=,M;O[XO(\+h\M)<YdJ,m(Pg>qp/,e9k*+^(9+[pt5+Ccl`*/sCXiib#7a#7LHHQ6#)
%.@Ub(`FmNRLXN?&"[6PW^M_0kAE.W\"/""8?;uauK[0f5RI'Sd3P.&LrR(NC!q<O7m2*Qd%!NQI4KmaENT-N5%rjJ[<u8W195"bB
%NnN/#Nd93GH8-BqST)e$3+cN:bVl)4bd-/obn+\*mf^[Ih/LTCi0_kn>&_]j&f:f^`uGJIa^AC?__IYDB'LlsL3tZ5R!le*0g6?m
%Z_)3\BK5-6iL&;;bd$)n]ftDBF29TC&N3.4"-cRrE6NUE0uF`dkpd?CS6k#r53LEC9^-`6Hf"_Bb%m1_PTiNu=a&9l;h?^^0%073
%_@m0%bh^iB8gT"J%E[-q)GT4n"d)V<.&`7L`&BEB2*jun"Va_7<HEk)\%G^f=M+orcLDcbW[P;uUYSbm%lQdeAp4Fi*[r'A=?VJs
%#^Ru-Nn!?VPO^W%]%*D>;aL2#k&bn:=Lekn<YJ^L+3t!ILk#[$:6a6:]O/KM+<5ta1_eoK[@qOognrm\?-TRBnn8"%2-Pb]/oSOo
%V:(/O)`C'b2ALFHi<UU+F-qkq,h6WY<KmgUWW\UtX<j[\Rjt/:-g)WW1D8DB?[8^e@%DqbZ5nY\LkD>pj@P@EZ"g4/;15m7E8=gn
%VM"4j1$RN`ejsR.M<:O-`c;f1pUD'u+-P*.*Bi@13%ls)Se_M0O<]l]4UDS@SL.-)ph,hW^>-A_=JI(mI@^BfA$XfT"@k17OA7#e
%g'/cN]>S#\lbiqg(W%)[Fs!*SR+r!o^G(O6KH3_0I#,j"8&crFoc]la+sL.!'9$DrU/hC5Orc<K0k-Ss=?/i1EI*^C<V6P:?Q;Bd
%o-%F8&->ISP)U:_)l)$nNF^2$12iYh0XG`"EQ;Eu;PTZ>Zs6c_=%g^!.\Qh\B`mA=EC6)Q&H%g#V^p69_S@/<!1h"9098;u&)!]#
%`.".s"5e6$m>6(+a$DEpM^EZ2d(D'DJ_uB6fAgDFqM7PmPJNDfGC^2uTQ*#ois2rk5?__*^^h_W5RZt"OU'Gd6#kd1+UMLj;ooW$
%8R7XNKqI$GlGj(F*EXa01E^`u4s'R+R?$M(J/b1u?2lQN7E=gQ,"4*6^A5bN#RgT<O@&!Kqisj<>Z&EDJG3/_3*V13oIhf]3;So3
%`gP1Z(e9=TR;QSW4>e#XBEftgkg4<FgtY2E,U.hGXiBfp$I6?r\,oef'STp<bb52#HAikPD8-((d&L\7dG\F4o2+mk\poGn`KrQ]
%_5/P"i:tRRO"pc_)lQ])WmEB=&HE!he!\@3!$3Ul:+1_W5AhP-f,nf:BSj^#8Fhh#>*:g%<oo=]rHBmga3b&.r]'=,&O0?Z-9hGq
%McMtT4?qt\0PHFYh1aSaW[#PR4F)P!P)S09)n81T.KVfd@6#*J*ba6^`7+"*FV@&ncsO%&gn+jhq_5QO/aMGgVE/f_o,eYFGXKMq
%GMti\h*5GU4llSIk2PprJR\8sX&eFT$Y;3fM;t%5mo%)a4e_j5<a-0imNA%T]^]i<CuaZ$E&I=F0EOhN!>Z;<%14g39C)I"s3Ul,
%VaeV.JN1;,N,O49_g%f6gP"Bpp#D7hJ$Vc&XX:NXcJ@c-Z\mSAFuL(ZS*9_(lY<Z+(O%+j/bD[P#6G]2>OEt4]>Z^(#.pa78cC7'
%DjehB;,fc/;N'8m0Ooq4X/Jk;!_e=C#:nK5/n$n[$L9Wbq""ZT']AA-jmc7RE5d[c=4U\XU4m,P&54bsLkk.X(NcnI2'T.JSm1Y^
%4DZ;4m^/bX7bAa/5Wq,_'^2a^dlIN,6F=aHoc+>V!c/u9/-bY`.<nD)h*C?H!aF.XrTldKb+fApL6rKN#f^!,9n(MMn<mWjYs;@O
%LMW$$ATOU[6&Nc1c>9t,)_r*KDjAS1`([h_oN%pEdE5t5C*i&=5t=!lfgPiWa#Pu>nOJ]N7s$%2qtRN^jQ\3dobg_R7*9Tsqie@P
%\J$0\j$fa9410CPkZ+H[o_Ft7h\NHs'^+gb!e##PRE+'<r-BI^Kko[TrN\Y1b@U\K<3'C:8NIoW"Eih!-*GrG$mY8&N0u/XhW$8%
%EaQ`D0,C*j0FR2e7Y5IZElh"d*<(Bh'HfsH,S?[L*5E,[#i'@/,,"$+l7sJi/='*3V32V!#tI7*756q7)Aa5#9l5Sp1G16)`5hol
%bdnA`erYbF+'ta4S>l$?OFWN@KglILjSiil"n%HKCHsgtHX$@d^&<*N1Y<eurR9OCqYjrAhr"-r[ukVo?M7g8&&$^0\cmT^:6u!e
%BIp)hCg`q&9qZh?JqcVk><OokeDYdYiHIQr>uj%QF"6r1?(<t(.Y4![1U.d0=HUji?:Md0Bm@VA#nLq%9I7288uOTH<3R=rBPJ4O
%iC:.dNZE]g&SQp'0nT`Drj3R/cDQI6ngr?h'RW1fSEG"=*DJ^W4(B*5XNCL,I**FYHH&S:VmK$$,:%&rObZsjiqsVr)50;Z5p&Ha
%RV:43mJsn2BC^aZOp0Xs&h'.#9O6G#!^<im;1c+CoM$)?\cIqSb"@6R0l;NRS_4?l%Zj%c;bo`Rn`\4niUnD45Gkk"!@VF9Q3tda
%EbB*..H<SBeQT));Ob!2a1b`1\;URuUcf)]M;P1o4fs<jSj6C**kZYY2smuQqT??np9:F<!3qQ+qj@aX5[-o[e:X^1Sl2_7#:6("
%QkE!me8P5CGhc#WJ#Re^!_r[1'/#RN&qF+n__D/W6<eu:,NU.C"Z#jF$jdt?!ue9bon^o&N4J*!4YX#md6l%1%[42]6q!4qFV1?R
%[M!,NgU=0ak<ge.;\kBT&8)k@Gd_H:`;SdF[J]Ur'Vk#),*a39;'P-JT8Yrj3gQh@3hD/+Jk-QY?_9uUl$a%A\P*Zrm,gFG?,98T
%YHQrPmd8WeCcS,,P$kD$Ila9=9j`_Y@gVSp8CFM.9(J0.12\G_hc(In`t'BuQ<CJrL(7HXO'csu>`$r+Jo3uBS3&KP_>o/W7_PMM
%Bt#$p_ZI'g'!&hOV>r>JE0%eY%]@3(3,u*QlnYqHE<X?N@I\60)J3Jrj`.56b)H[@_@b^#+F3G!QDoutfmcB<%)3E8$p?>B+^<,u
%QGY3;0Sgj4LDZ#fEUf*24<Aj6E2Z'/LqZ\2U-)u8N5$Ie&An:&*b2?G?j./qdI*L^IIm!h3ME:f&^$'0q[r8bm74jVT3R0&;#89b
%J,_gl'GNC!!OiFu8<bL3&fgoo&-1$G'Vu_u^iOrI68Phc_n'(Us*[1'SN^?;"L@BRPBIOo"9;a`BYS'[4_TDjJd<_aRKA1&[E/\3
%8_?b9DPBFt#^.=ur^k$//_:1n:m8G$G/k=bX0lLW10#!EBHqT9UdtMI018$4%[E_rJ.&?T_A^mfY8%<H4_[W&C<Zqp2D7>)8m+TI
%6..?L"HLiK94=LlfpW0U[o7.5O)G^*DGkC/IpX15a5Yp:h1t[Jkl54aV.4rppW(L9C)q"?D;&2j3L(n6p+up_&UjG&)0l(UbJ<-k
%>m;?V#2#qEh[p;\RetH`P7MtS),SqggVifZ24^jj"`rhHK\AhI?>8.U_hDN1bWS+%%1=_($:fgdS8(tNQ(.c!r!?OTIUQR0^m$KI
%e@LbrgX&9\1tpFk0q:>hGW-X.IXs70KuOrXX$SDt9/jKa_jZ+\m[!,rp)ee+2Y6^%[M_1;?kF_`<tKg("%<l?*]/ptO1X&"k2U?l
%rqZ^A^B9N$O!@:"O>3c"iHq+9l\"m+61D%CXkjka$?9C/3+<Ji!OH=$Wj,Z+rq7Oq*V;o=l%r#Oa'_?ZK1d2K(kH,ZD.T);_J'P3
%qhPp+&J9-d?lDuE*C=(_<kp%+1t"k?i5dMpJ-]53L'!)H5^#Zu0r!=;8&4m=N'l#W&;/:Cg9Yc[JGBE0.&(+(*S^+QoC=NPE_8))
%b+Ur_!<@o!Qa;CX$%&Usc)k)3]:5?XD^dGIJH)93lELSWhh"T[O5$8WXR[TjIKBSpR2M^IG."+q,JAFakh\^_gU947WNe/,UX^QB
%"qj0M5m2*YB>c3mI\6e\Olsl>G7].Rr7tb[G`qcFXC0X"mha!<Lo=$gS7;Yl_;J\(cW"<gH!t\[+o:S&#G2R-Qo+2Mmuk\Nl%F"b
%%<ne-MH.X-'^P$`[>M_96iV-^*WDn,$a4^)1ljZ8XK)d[].gc[H.VFCAAmV@XBP/^a@b)9qPK6T!Wss/NQ0BYG(%>`52b,=SND/)
%XCR2lYN_EJJZrfF.n2L;&Xglre-gq_r=lXQ*0WecU=^Nkpdc!dMcPM<I!F_0Ht7(>gaYB&W%JEDZ2M\']-%#piI()f467.O;i`h'
%\LeAk(7717+U81`mZKcSo^j:?lPbse+@`pEh*`]n;*i>Ja&P/IktbsB2"1N[>8HTr+7(%f+i7m%KT[f_FHEA-_6AG'DMIr4&%3fb
%cJsWpe1Wg[=B/<Ch=01m_`hsem&tl,0THso,8M^Y?sc5t8KlMj;CIkX!s63X:"ela8mmkZ<^^GPQ/sD/[02p!RX1&]`1K%ZVXSJ"
%6#=E<o=Oe_!-1R34V]JQ+>"jnJ%s)9h`4cV(#2%If:P7/n%dZVC&&#uI8'ZS66+CMPf<B:k2KjC:nMCeli+/mVHNkQ:]A3c3[<;X
%V!!@TO7E`U0M2&D=K$AiGfV=sp-hY/#NVbtPlUn48]V7!;([`kN5(#i8tH6E6(TDQ3#\7TW(HUA#ga=8cXGj?i/@0Sh<`-b5qd(O
%QO0,tL.]EodK_!"[0$*m<5DhIa\p^I%uYgpP8(Te-uhZgXYHNhaoa525Re^SH:DC-J.0Fp0G62l$AS+dIUQIW\lJ0_\??KrNgIfd
%$e\5khIf%4j-GRo$sLo._T6Cl6^!Zqr`&1eG3F0sVNrIK>faNG?!$_2ERGQ=(l#2<JZnP@n_#=IQVgX`G.S6k36)n(i(.nC$Kt.(
%)e2,]>JuPoV*Z7Q`[JBsW(7Ljr5Q"/:fQN'APIY@otiOGPQLN6'2%<_]"$D2d+Hm$59<')4BjHU,H5:M("i<CfGYr<K6(S>;lK4\
%(UPOn:P[XKI"kbo&IEk&kYq>'@0kj>@7/DBp+?_aa"d8XMe$-kV`71f*;i8mDD3771D-in6]$GR)=iYED$;?]qQVSp(aD!mEl=<I
%12q?$*'%WQa6l8I+T%dBkSlURMdq@CTf=BsRR'>%eg*aFhEl\":c(j2$T'"N2TT\ce]R/$3obph?7Hd#O?j!r&rJ6^Gp:[fo9l?C
%0(HQQ3WnO10ki\<oZ(n=r.PaU&cd-NOHPD?S$gh>@t3J5$]ce^F2q2,kK#0p'??Go69K]V:bbqYJkHdM+OE`s=$k]<kI;kIjK$X&
%_ZR\i9KB/i`g,i"G--RU8K.MBQ]J*qP>0';8=au>LmZO1flY-fe&iF+M#rnf*dtrbFD,7lM$the-o;Rfn/6jB<Wg:9+An'a*5D!q
%f./@V7lI'u*,G2P5!7sG[AZ1MB2*]&8cQ+"*3O5n2a.:m8fU_aB6<e-hiHVO7dBBrS9QB3^c9@tO@b"dVAR$LT#&XrmPu;WZb?KV
%]VWe*HojQi]F#=X`UXpMleF:NVA8b%!6$<J$4BU&>*SS+q-;_+qUj!7H?\GNY7':3.f$SW3M1=1s)oC`,+c6A%UH#8/?]KdM%gsm
%SkhauS,A$m:>h7YW]Z.P21$#gh4P1.d=ueOi,SHu8Hn=?i`&Qn*iq2k0<:OnfQ!eRMB.Jmhf)YVHqd#Ulp4#ha"-/IfrlKt8-lc^
%EkTKm(*sPPkj"B*\T`R#JM4(OTJ]8'!(7UUf+HP"m9/9lPqr86!<#2OUOPG=rFnI`*q=As_[Q"V>IaZ^;s[W+l8-Kep16Z8%>JN8
%ee99C4[hob6V7^o&b:[t$@,Oep)%\$Ok/0M:FLIaFks;H<^G"<Uc/Vak.bjI_mF:])gZ4/`)!2+Ol&><.*HgkW;!^N6b^$0]>](%
%ei+djohP/K)^E%(:]N\0,_Ho-]Z:ju;mm\I<hgkroi\sjdDsL1p)=R3;.[?%i'1RM5$o+TL.'*a&.s'E&K+-?;!92X'm6Dg4lHDd
%@?[uFpP;Z<'tP0Ln";!AU=cjM&cq0k6\#/5qi93mR;h+CKA7,e1HqR#0Cf\t0td?/4ufPg+BLfKL\P@E&mo;#MYJ>893SoU/@eK3
%#hD7/H78oIQ6G(U8/<%WVG0QSPcg\"`s!<,5SOs4Ej[n#58SXHaU(60TTU+"RaHGr53;MtoXK6bf0]^[*[;C?&"Ee#:<=6d\-["e
%M@\"p!r3bi,As)T'PqOI=&BniX0?q%)uQ)=dHJi*o>X#FJpKI8q(8fR7cL]3[(J-[>hDIGe`J'rj#\*/_j`]2I&u#BUQOL)[BP+9
%Hfsp,qh^BGhu1.?8'%nJc%4_2.bo8$&8Vk><+MoOP8fb??QCqD/kI[SX![cs"G\p<k&-A^2SlN"RA6OqZNH+Ol?OLsluZ7DJsS0Y
%q5>Q`Ulj"Y"9#%YBB8$K&N*;.O)aBV:ahX`A0cdsKQ`_o8l9#g;1f?M55t;]^(6cA;G\qc$uCJ,MWCfl=Hg]LNsV0&Y:d)iW%tSi
%TY<X]^;f8n5b_L!=RGmE+<<o2I.5Rh>R_e3n2-2OA?AS=o;&7Sr]1hh,f2gEWP_i$i[a!nHL.JH+016XM'2Hp6s=>c'X'+(8+@],
%63>:VN%cQrc97;to.sZr)M&O[KhXc?^P@(N+tZRgB%BT-d#>iuYRo+GYd<njeTCZLLhRPMD<cK9"8$RlC9Mt3rhBV"dUbtI,r+g1
%,/(-T%0ls\2G$_^IT'($!C7&Hi24I\5\*2`C/>O2OYNEjUD_!K*`cG=BE45K+`rW_@T6"D!`Z#_"$O2r?#>JQP6XT!>5kl\EgX9,
%N-L^%'E.L,_AZ!dpCS!4?Ua6^o>mgl[#(K5#n02JFkg.E3c&])*,0.k=WL;O#Tf&-0cLhN*1IjBIJm-a5\&S.g;?86<3aXZ#sJsq
%N3aH)XZJJ1ot8QS=D7B+=VS"*<'1m9*1@RAk9^%tP.VIA/LW./M5*Pco4)IoP@m@=;EVcF:,F3;C:[Lf3@(i\+*gk>-cSF.!^\E(
%'Zb^l7WEm=`Yr=,p-T?=iD"=d?qa0'"F/(N<m]tI9=App$b,GHINA-C]=DmElmJb.'"sl1MYji61B(.WL(R(;lb+aq<KNsG!8AO7
%>+^t15Q`@K%p7S<j]I21>4drCOlFY3MiLO=nV@h*LW,(c$+h3G16(U]Chli.T,0&Q.gs0FW!'e5,uBXc^/3uO8n.;,`Nc5Y9<\1/
%>8"`)+@T.<XubV7-e@.>'+@jMSj0JVi?7GeBt/dd=4]@HXb!'AKmZl_M5YG:(ZJ[),MZ7YTu3]<f7dq\"p?;A/n":&@0cu=i"[YF
%&*ia0dYjqFM`4&>:f-sR7%/4rjC"0G<&Ks9"029.aG8fS(U@(R\?#*8*dNWDB!-=SY^,#`V9@#/q2ac_TLgNO5t1?hMoas-?+pZ$
%oASg6mjJSb`>Lu?/-TO;fe($8`ZLP>hoJhqU'f-:RU5eLj,uLJP#ULr_5AP0f],MV&P4RRSsTU@!Jh/nPB*/UKbWOcb@+<D<P_6:
%(QL/&2o2WsMACSlHDfjBn11&#hd8Q)C[<RG-H7%Q!RHp:HmF?bp^@]i-u*l`8?$Xf9ie:7T<'N5,->L`@^UHV2n-l=H6l\CEJlr.
%a(ej,,41#g3^RpBBui`]ZJ5F:AYaRl*fEs(F6cB9Q*G>`qs#;Nj-VbPL*=XL*eT<5M'_8`89>s937&((f(9u3n-gXeD5V%.nVmUC
%O;W.6S!F3a8SC:$;2n`pr[&iE6V:C?J:VdH#Wh6*GV2/=^+i)tIAVH4YN,_U9-$JGDF"mqR:#-(#YVY*TNW*+0rqR*g+s@HNotZX
%9cS4c-jKqD2mHj/Fc^,aM32j:n*@i4REn/U0a@51dR%^L?RiOSQRVeef,o2E^tj1PF)pd(@n!oG'K^#4EUkG5/rQ-?&bX2_5"AJ1
%R>NEmM<c.N-<66Q;;A*`;9\6g,d]>te99+2_@)jP;+QF/dgbJmW0On0//rjTKFs'g?>mqG&'ieZ^<lW'5o?Of9[(Fe9e[\c/Z49]
%Hu5mHnO/)g4EPh9f\nO"Wf^D>V!M09Xt5U)">t3*<"B#NGG%-WL_,*(C.Y]nM2BuUIP#OR&ilp^cm[CR?P*AYHE-B'0p)+`Qn're
%qHJ%G`.*%,8qk!@gc%7Ulsg($@ns&u\,WrW'%^CmH:D_CXPP#q\m]kJ:._-)f&tXMW-h:fC:VDP\mIOL<F%4k5kEpe%H3!T_;:b/
%7E[qpOV9B@n5K71oWo*k`srg8.*R>A<d5k]8#d?;[,`=]4i3qIr//h'd/:6J[f=:dh=&o^\NHs8R6QdrnIES^?UjR*"LoD`7+q0?
%0C.oai&qG>M%urI"[sY7d5PpT%\A>Fa*oAI?N3U7@^ufl5OJg+NR=QP^T(n,/sEa`*"iqZQ8"^qFYma=-h<[1#1e#//-]m9s4DRW
%Ut+XV)3JW]9IVs!JMuYqVEqXH)'bY$a+WHQ7-'k7e`HfGA;#6e98'[:QOB;!Pg>DM[9\!95"'X%X]G#_@&5+l5D?*N=%+\F-lTP:
%77m]$D#D]8F,$fjn"QS]MWIT&J;E+tLfKS31$jIXTp^^ES'sYK4BO]LfGe!V0?`Ui/>lG;CsS/.R]u\/1166D/D4fL&lY^6<0DnE
%pqsuPVE0RZLTsiE91":l$s&isI9lL)$nQSa/=K><d&iZP'A7hZm';T7H.?aP!.o7SP=[A7YT_&87TrLmqi"PJ_ieLs+a7\s[N1Bn
%+O`XuSs+,qD)krN-K]5>mucppIb[Zh]=kRR7Ydm5N"i>s>\LE@H/dfsq>fgi:`ItT1t7<_VAH;*%#S^E.rF6/StNj>q6MiQF=Nb[
%3TBS?WX9LX"#PN@WqVdT6D2.;-!)Y?c%ro4I##qD:ufQ'7\Q29hjLETNLAC*ppg4SfDU=$dAMZhR2f^(%)!Co0UQmP.&+1j@'$+`
%'*jR6m9iU$ZjL<aGU#BN.ls/i2j@V-nAbl6Jlh"oe->#oB7&Y^fPu-gB9GCAMNCqZSI3<r(Xih]A5)G\HrUCIosN$,CB7HU>M])u
%8-#ao#;[>b<!_[-MC_[\`2<Cbk#J7hbV*?2MRH/ebBmn:^gfhM7`4]G:WK431+0Ra(aLECfML*h\o.3%JjE66Rgr0u`2933;8&FI
%jOa^X@q3OB_"fWu%]U?HBs]r"SlI(FN-EGfs#a3V3A89Y)`<\gTl`3u+n.H;T80QsH#fmq28e>-EN;>F'%*8=!0RZSU+dHjS+&dI
%0Pftu]uO?X99^7+4%O94+p;;YV'@X`<ktj0P(h)"PStbj#llTnL=Ls/8HH%_%qCH]-ULZ;c_=u<=R[hOfUT'[!4II;,P]9Q=\s7,
%8XTO&03l%\d@1jjT*D7b5f+15DZOMbS8r@L<K!^pG(6HO]-i#tp<Wc+0!?G2"Yg6/nQIK=EcIUBF-4Z?\J13Qa"[qKl#acMYa6KC
%6U[i$<iLKMJe0"96.M7=Y7@i^JO+fI,Hg][M!W2]\n@?;B(MuC[o&\Nd3fcT>P)g1:ga!W.UaQ">t/3F,&5(>0*uQT6t$ic)\.#K
%T!4[bC9*aL#cc:kTKbn&J0NI;J^\'sGTfPrW7R(^Df-!UJ2IoG?X3(Nb>)5Z-m#+[:'nd5K2Y;<,s)ijL^hjN*pWi2_f<eM@3g#m
%Y(11@lX;uqerc4"&S[VWa/o]^N!0Am!6bK&'2TllM'"r\$u,nO")UVO&N840VO33@&/=X@&ZrZK<66I7P]r`n-m8^=cP9F(+`X^d
%EZU`"U0&MK<f,i]MM15'.Mh"u26J>%+aDt&LGgt<E!X?2lSK`@"8'sglRmnM:L(<N9U@36c(rD9oX\66gZ^-l(./`<(QF)[Yh0)1
%'.TEU5#-hX8K1_lpO[qR/!j-bd5KW(cr[!T*tIG35uXkP7=smo$a,+@I(+F?L_MgcDCoBRCnSp"F_u4c]+<Wo[+%Qn)/0N3'hjar
%q*ENbPZ-O'AN]MGV,'8YZD3UX1GL:GqTT9B>X?,Cq@EgJ&>'C)RDE5IN'[M"WUip%W*j5(GkH48P$k+Y&r0qs1n?-cSN>Q(oO*e%
%G?^8](e4>t_BsqbN[4%pLl['"2fRs1Zbi?$4X[Ui!2uTQ.ohUcU>]Ib^+"S,5p/5b1f=:8pa7WYIG'`m3sZf6;o_UC;Uks+?<p%@
%OT6m;oMI4,d4D3<=e-;4Y"'['V!Iaq4'M:i6l:;aeU8O5O1ShIh,g3J0gE^#>A*sN,UZEX!RqTU"<uttJ_&D8Jn95;SrE?1j>^0o
%O`^0LKS\?:VSma3b$psZ4/8-`q&iV654uY"d,^kk>,_E-[em9_K,[9d$]fCCEm<a%*rJ9SGf#o(d4Zlkjuu$&H>*c@,4T&iaTQuH
%<cNTR/m]u)qXZ#:^`*,59V7pqG/u#',XkFGl:(es':NMl]M)8U5#Z\oT_4t!mt+js21=N7W&dt,0.2$R[uF\jWh=-OJ?7_t(T@es
%%+VKDm_ca^-:s*@gB^NT@VZB"X6\3s]J8>g#/d'^hM"?-O?E^dl#@(670<@="q<^PWW,R2m@i'eRK5jo.\R@>.VNN/AM'1T'r(g\
%gKrh!nPY5H"7R2EA"mu(d(6Y$,OBSP]f3'BG`)'2kX,5%'"f7ug[#jm1GR&t$B??n[2CEE<(9b@ngink08-QidGJrT'7cas/HZCJ
%>es91Fl%nDGarA\!1s$q#?bQ%Zb(cgWYpLZKb#_Q7M,*c6LK;,`;j]B8U?kU$BlFJHE7,sSXn7.I8tOI/JWJVjB/fhe/b%R<3S!\
%\;l46P2kLQ=W&OuOsA:?8Z1MtQg9:NVB&&i4(>G<?RT%t=,FQqrU^(a2iI8pEdK:NSc6/>pW"qWF3T[AXJ`lSSg#u2`1j79?/JdM
%XF<Y0!H[F\&RH;+(&n+JW&8<GC"-N2ET&QE!H)J]f3BXq=<3/+D$g4^I.L10DE<^m]D-DE8`UU!_SNRGp2,Un];GKi-Q[_1?aI?6
%ON,u,1cq[<K"7'QMFn`So$PtKSc_aBcrfD(E<3.:?tMC*eb4*<(II%3cg/XJg*5*EfLF*FDAZ[R/BH>GA=%F.png!C7:cWWTE9\7
%jEa<b8015q(k!NoeLF6P-NPtM;/8fe&P&'\+lO&5(u^1n8q8nNYol8h`R?W!]i_4!S'CUD=@5M(cf_3XJLB,#_MIF?ns$d&U+$mn
%UA!6NKTpLsl;-e9>3^9`D#*";+iVb6C]e2dJ"IG(bJSXQUlV"cliR.WeWf5*`u!?#N1N\l:ks95r@jlISTX!5US$R6eqBF%W4W\#
%P]YaY\13hb<D>],IVd+h0Z"u:Ubo&(F>[GWAgd%_CA6(0Lljka"%%B)4EZh2bDRkl6nEI\4@n;&9qlT46dj..S`Mb4!AbB_(I9NM
%E]&Y=3ORco<'F\jNsW</S$:>.BpA`#4!VL>WA*8')?`p3\;W82]nVNhEMOgmJ;HP>VoV<eP@,1C0\CMU*Xg:$-mm:6JBM@M7\h+V
%01R%j4TXFuC7?r8s"fJlGRY5dj&$R8IP-FV&W2cW31$o8!gmjqk@I,tCSZE_9CRg`m1u(."_ecH?P"Vn@I)"8c<#.]k!i4MfhZ0<
%kW=LdpR7'rTT;*'&l"!P22A'=I86GaP.@Cp3KBCP(b7FsQPfs+7FrlMHq;%D/a3*R'2<o&kNmJd@un6YGI.=d$;0B_V8E.)6.pRc
%+<o?2;*Ymj7f&9[-9CZ?d^U/<+Fc`5/tNEq=oC79K+JH_L%jMJdF)RddN,4fH<XBb]eDOg(Wq13bOMg^<,g*W)?iX+ZQ>@^*`'?:
%D33MUZe.6EUC?+=L&Y_1+/ORQ:^uQ&UtmCp"@L]J"P"Hd5VFd,Xs.0of'>,?gc]>a%6:a@0d\CN_;>rkf$4UH1:k9^'KjAgQdo9I
%%`:YK,:]%3oE0V=-=tf*9)?m)a\'%;X8M:q4)7rO78Q:Dpp<=R#i4ad0OKrtmSnT,lc5eS5cLue#K2s^J;KP5Q_r,IZXG:<0#:\j
%-9c%#Qah4IX#MQ/@0mX'`EsN-5?sf1lQ^i54m,Imn9d6tb<KXUC[eCmg]!XY^$TJY6adUd,%<?*YL@C6+fahO6O$/QLh*eIOX<Kq
%Pj",qaeCEa65l]"(`.:flpAlnah]'3qMLG(SFQMHPrL"K),hVUm?6$J8WfT$JU1Nn<No=(0HFh%aXU$;$+:FZp-ma:eH<a9Ku4gK
%6sMs7*fYKGc%\27`8`ii--!T\n$^NhBVRq8&7^NMQr^Z3=.Y$t#%b-eNr^QIV7/l6[PI>Ua^%q6,C#oAW7dg+A<5DIa;'pAcC>;W
%5ReQ>6bU:+h1=V1<4n`$Vbe5XN"@Y\`_Ld$BaEpYkuW+:QBCM87j9-Y&,-$T9tnH]T3<-*IGiLrCJA1sb7FZI!"3*4L*'.aIYs:0
%\4=&JZ?m)H-`euj\*Z(9"e>+XYm\nI35lL_'-9:nXsk>[lK4TELe9p,rEMAo-HddLXc"_#pgf\9Qhj)ZiSQhq4+7Wqs2d)nA;kq`
%@@F*RBq@5[H+ILS[s+]0b+Gk2o6eS8T,Z7l^,+$oc88n29./2YK(2p>3U4VB'R;/:oM&a:^FK`BE2,+K2hcgk.1FE^Kn9&s0VG/p
%<FGkB[p<F8D[HSX;](=7$3PEL(mpf05["Ks=0g2:3*AY>Hm.=@0(_c+S/ZHgLcG2R2JHZ2)c.=^JB0)!%j?T5*[=HABi7Ojj%:]<
%mC^h<q`C?J81e)$?DW1Y5gt9qJ:oeiCd%8?p)j(>n4K;%_]nC)[m`IPc6Ile'JOj[3L[@N$RmliPkji9b"V9"beB2pZUgK+Mj0XC
%g7aN8<b@kf^1Q!o_QGFVPCC0K/*f:/&gQk)?!0pGji.aYEiLHH<SssLWq=T9WZ.jNgi9@6`i0jqVeY",Wli>\MXR(8n]%QnU,\8a
%9i=t2WbLrbHf7F_EMG^(\5Dde)hgTL`f1nr7X_pgUZ0:Q.du/kI`IH5)`Od8go,[qI%992nkS&")gQAWOS?mZH*=oDpU\FmS;S9e
%XI0*>K#'_u/7CY`f&*ppniER!oRedm!K&$rqEa$&#CW?hoJ_;??WFKMed;h-hH2;mNjY$.ek4Xu/*Ver;E!)ugK5udNjUW#f#lWI
%/)uAl!j^W$CF*i!Q$gVUaW#"ADlf4Oa'.^HCF-^$<pC]@V7s9:lGd#,GH@(<Yu]Su>3RDMjZ9J<Ubo;-8TrZ$Uib=PdWn2Pf,(5>
%Tt(RE9hKDEbA0#CSh@h.HA?`_)reDFM!'4QpRQR'^>[oFL3N*1Gk\Z*h:m[.YBP6cqMod')rA9biSF*[G>I[PGJ"AF76g>1[!mG>
%]-Hm(G@,:YZ6);.fL[K-dfbWHDXT"?&iLGI]gH5[%>A(H'R%0_YSYY+B@]#7H/!l38XmGD^ObN]".H-3TQrSLk21`7p,e(Ch]SM=
%K6[)OLhGTfSo'+)[Mt$8gE<)1K6YrdLhGHbSo'+)p(MarSa0&[=VHPVgD**,2@NaG0P(-6@l]*cI08X)%@B*BJ9c8>k2gep*mbQ^
%0J@=Z]XS"6iZ0^+Dns#s!V>"c0X#?/]X@k4g'Q!854g5:Jni%.ojE/9hs_B@*FCOmIF0DDBP[sI\KQLc*<IY',Co?>!315KT^n*C
%.N8Gfg`_4%L&`.\#bVfR":u?B2Zut4&4#aq!L,JF:tZCFD+=T6%09Ee"Ald!!;-d%1uAm1nI>Sa2?Zj&7f]AI"Amb_5j]Qm2!to?
%I7"#-%0=rp!pD[qcSk/iO6W4GBiKgRZH/jL/HZlT@b:_TnSGP\_c_SQcSdjX$En=?['eSfg?]p52EPkb05YlI2-eo&-;s[*,Y*p%
%/:e1MNC/pD!(hFDbGX(U+#!$PZ*hcqeh/%ZQ[cZTbK&0d+'Z@)m-XAK[EI`[]6p3`_IoKeop_0Ac/5]&B&K'6qTWU;2k/4giI3T5
%q9X'BQ2h^iB"MllZtnF+Wbq\(dPd+igUM0=j/f]ZLYBMNX>bnK%LNl-36*6/p&f4kpe,t4o$r29Bb0=-4k-t7:f;Z(j4YPH>C.c8
%m@eXR*bno+-uJ@FU@usSC(IlAb0h?F;&+7*g8OaN3bM:pg5hTG=kYoLAa>l:eN%u"0[=9%=0mQ#N3f?9h,68F/oc#>cK7f"F65i,
%UbIQHCCQL2Q?PVUAo/VQQ=h"JW/L;AHG#_Ac-<+u6`RX>p$>ltor\/EBEZ/*Z*79!jhJmt)oHXpKo_iV'OT"2iMOg<[PDdRb.Q]9
%bZctkdICQ*NH\sj^6O!8>FCi7[-rU@j'>K']F0UWRkep<b.M^-OrZJmhRJhrb?!cmG@fY1/gNM:+k^j:k,hjU2nbQ'(IR/hbaZ's
%Dr8^M@?l-<r-r24r9M,oqnN0#Du]&drq<i$n2LC;n,Cens5UABrgVfZi'9(p#n+Mmn/I&u;-/?FMuW61s6[Stn*i(0IkWW56F;Rl
%jSo5IcK]>NXptDLhq!Lg3f#1^i/I?^V3IMu-h@$UJ,YN8F::LnJ,4#,$Qp8aq'WpOQVp*NhaKE-5QCPj5l^4E=ZkN*`TqkR]PhBO
%G#oGt>?O(,Aas_<(.T\IXXmf9bMqod/Df:-ifM*+.uU=oQ,V3X=hJT_n[Ok'j'>eM]U-V'<Yga?Ab!L"`R@j':NpC?]SR,YXXp'h
%ZM9J-bT,!p4XUX@rI-k90J_Y#$q%1!k3d'WV&^d?UT<'3\WTr=S8V@[I[_s^J(`Y"q;I[B/&+#I?J>^5D]aZ,p-IQh#OS[Bd'iX6
%gY)o"Y'lDggBZeV]X/4':&=pNf!"HC9U=<(6('\!K/,B"[B[+Mg.hGE@-tGs6$dGke@YE?h:`*VCEM'<p-F"?+!>'CCEKpQp-F"C
%+-a8.6+ptSe?+.\[e<!om=QKS4YXI.03V:M8^%_-hJ^o&bh"QYQbmA,i&:9)0cTBhRI%7Q.t"?a;"`a`mX>(OGB<6IHs?NbjL\C8
%lWp9^DN0sn2-T9NUSVhu?t3uZKY']HfGZ>MCUAba7SDGR/S/_)[(Ae#gDVY\CUCH1H*FP2>/Jj(M0FrF\2@ILenBnaNL'FtBHc'i
%V9tIp)D1cud?:t.9>52KPc`>2[RNnQ)_F:CJ9+$jF\T[3J#2&-q;G3Er#F>8_pUL$9u-;ROJ3r.Mq]cH'9C?IQ'0bpp\B$h9u#TU
%?,%me]ZBi+];AQ[RSn-@9'*[^<8O'AH#$%6];AQ\RSm^49%CPN<8F!@F_aV"];AQ\RSm^49'*[^<.8aXjfKtsn![-oCJ':TKPBdI
%WRVm$LbOf_KP>h3.2D9>;Iu$r)I$,ih_h8$es+<];_$Z]V=N9-;IsW9KtF3]fU>^s]dX]AVUQ+m"<@-]o`1r(+05_"kR*ePc^>R'
%)Tt)*_>J.8Z`duRfh\dkkXtC.]^<b3??*Fqr4_XrE@Q?MCt6/K?/8\.F_fg`]@L9D>'FOnh3FJ\?.iD*H#)6tS(:lu>'FOnh:8iS
%pS5QF9[e/&/SKM0GdKk_pRX#>TJkWs-c6*\3O$K[\TE@?:WLtorT!KB4rZ2jj4h;?^HENVjeg4([Ou4K\t&Grb?;;,BAL.hmB4X#
%[k;=Kj@@3aQP7?<f.JGhls@;ooX`\dS8mk8k,lg0m^ep"lZ/;nb?<+Ck7<UiFi'Nuj0OgBj.ecc#'LoVD]MAkIIfWbO0a#P$`s$s
%Q%M64E@gQ_G4XB52l#tgIbFH#kHic@Dn<c-lNXimDK*5R#.L]Rgp_0?^ZbsO_s!p9*4Kg)^?Z!$pMOs(]#!X6)dKghE81"-`f2%X
%GjbiX/U6LaK1!%jK>Z7L:0TZem+pU*FbB;:%F01Ri4=&`qcburmGY_t*4Ba(Gjbil]5DTA]#!LA)r0km_0,&Jf<#us=#]nE'0S5b
%rm*V,'(FduN1'5GHqki*3:a_Sl1(-hoH0iEpnsHF'h@\PDc?W+9CA\Rn,0WOEKiJq[f*(M%TpqZpUn7bc]Qt"h/daS?G#B/l^m:/
%mQ#SAY9`f2eicfQh=J@'chi(`]\dkXgX\N+>PGedFjJgn4`=R!]^=PH[WTpnHhY1&VgBJ&]'%-Mhn&"8]mH@6?2)!Jh=L9q4jQ(C
%F/gn-G0fL*4c_PXo<`YddsLgOSDEcYQ0!A2A3K*4NWQtj/mfpuopdL[Y.+)GS8Kt$I-4E"<b+MqFr:&QP0`:_n+a=5+%J;q0.ljE
%K/SN)g7W=sK5cH$#TMJ?ChSH?LGgP"g)t3FK62l,M!o!ZC8JY;%=gFkd0=#H)l*p[OM?E+W-;p-re<<R#NZ,+J:Y)$%6tbV72l52
%o85G>GA)W7TafG)2Fr%*K=%<]nqK&IC8HAt[Y8Ac$QSouEJ,i\9j$``:UJ.=/5+$na,U8ilZXsE[YH<fKX[NDo1SL`g$ejI:M8@M
%oBp\JiGTj&$F$Y6,jC:biFFMjj5[PbAH`3(Ci&[pK`[njBt^S'N&-oR9/I2JqH&Dh8N)Y6%39500paXZThoM<*N_0rZ-p%6Q:_\-
%"J$[_7I'Fe91uo6*P,Z87JK9.6V>$'`hHJ0!C3J-,'XJQBX9jF`CX/;2&t+u[]'hO-Gq<F9&Gq8VED]2O9k86.p1K*LTl8lIqmn*
%$/?EH9fekdY<ZQ)fi6m3GY>'?PtA%b/_@5A_Kmbm-+G&I9BTlRAqhhhkqbqp;'r%24)MeVV`=#[S#`l.IW6Na6RMu;J@KA1F#X0S
%N9`20Q9tVVSFj2@*^":b"fk5f)<$:RG'.$Qr)h,e3>*=rbMfq=\,\NOTJLi,Z0#u#<u3'djhu\ijEg#ikN#u<4XoB6;AZF#Q"H&G
%XSQBWm6pM=>L-4=2A4(lN!TWaiI/X/p.;K8"/!B$<tFT$HVfc]&*E8u)mX,^+5J'(Fr8[4Fh.ZCh8#n2B[n[9CBJ>=@'1I4cOE/'
%#"3Qk27eDc]u-0(cqPG`l38SXMl,2o=$&,%%_f?']QPFM%9i+9JF#b)1*(27?BGRYXZ\lTc6X(7]L"^/d`@auP@'\^W<7^+V_)kK
%i/-<f?OA",WZeT#'CV*#YD=4R`=@3K;SNH&mL,#3JI9&XWn%tbeN-BTZE5VKCeP3e+iq%AbAOmr#\0W?78/NE,Jl&Ze_XDO@X#tT
%iT/_a_YTKL@l#KqAS@Z#J>!u,<&9FN68Ln+7%Y?.a]`N&3n*aVe'<#@hT"UDAUaS'pd:\)*;VJ4a>dI.M[VC/BuL\!;ZqGM(ZL!(
%X=F5@1h&fp`tcuQCfN5mlug/!,spb&)Da[1SClaRAeo,>@\]XVRtX\6gDV25lp/umrls@Y^)4MK<``*Yh@(#eL*3'(ST0G,q%TKZ
%ij#\C?-mh`cJh-pPf+@kjAnDJ49lW=BP31Wb8-/ah4c"0MGX^>N7THW1Tmo:GeMD`e'#3`%:8GrgR`l/Y:r/sgkPOW!J*2.]&cp#
%'k_e,gWR*DF0iP^[+Z>,4Y9k)S_TNTnf.:`Mo[tFn-28T%Q3n<A)$/jgZPIjFL*dqp,!k8O8-tn<Nd]4Vpa&6f>3BqDd?DY2rM>E
%0RU&`^C:\:Z#-Q$FI<391JZ]#8=)oQ]TLN9SaOVUm`Fq-78Mb\hY;hUI)eg]A\<<:g\U`QLQ:hU5MchJGTH]X4'2at=!?jh.6a&A
%VTS@pO1ctU5CtHqPB:g.FHE6EUoB%ke=$#5%-2"r`PFtC4fI^W#c-Tb'4PGYo*bttbs$C@-EuT@!m>Z#,m[=T.nTJS*:K)-L,F__
%T@O"9<U<\]^*B'GWaJM/9j3C3o'`]OilFIi15sGP&V3>#&XLTkO[[fU5_`,k,H1H-m3WC6lU,L2.Q]6#7Q:oj"NpfdPc["DIA^.5
%o3RqnWV.R7=4rT@a%3+0Y>0_P4oP=/\Dn,%80%*V89X[R`AKmpV>(G4"^F^7.VSGM-HW?mq?@kdBUOP8/4P3l@t\R_A*n7p!8j>Q
%?N?!(SK"_Oa$/?(,k#]:mo[bW8>[KG*HL`dh>%N^?%\Y*]Mq_8%BljZ)0pMR/&D[\naH'Zb8^4UanQ"Aq?C]jENaTUfH!D-K=&;q
%jPJj=?]i#`SF^4ES<e$`C$f07a^8B`>AY'[T8'I+PHI\;kuZ[)_dhg9:>N^dT-.At*:,adp(gO&*k_/Rm?V.WDrqTl'1)'P<72ZE
%oKm(3?AcH^0>_1cf(":_<'_bn<5HWh5^>+&eZFL,(rmOD[93LPQs4TFe.)2'/jRdO4_3bP;]BZ=TUApY8*!'SY-o<&4Q2[[(;?rE
%>8X&'I4=8F;0,#Z(kIp8W\A!dYVZRI02RRZh&%?<#K]aL<-E0jMkKh'bK&alUu_&h+ZOb];`ZEq#`KO"#QWfhYg996DgU;QOPN^.
%9MrBI\5m"f6D(4Ler%8=PRlq_/EZF8'8j\QoO"B)C,e;f;28aQ:,(qRH!M7hC'P(ofm&Z531K:oD!)Xi223:,(*['=4X_l?7ZgYL
%jL]$FOn>Xo*NIZ(YtX']l1Z^</Y-CX&B2#jOEG&uX4urJJ)&;!Hfs%-EK8kJauc-h%_d7MEnuk^2h9Qj<kBMnn*mls.,K0Dmk#Z,
%`sqLii`c]Z/Q-ja1[h""*?2]PVf-"pGA-=`Z+]2/GP(Wi&AJC3hr;n)9_pnor>N=++Y>4>,?CQl+=@nO)+9Jk=J`Z?BL5<4!Hnd=
%X18k1W%npL5]^#$V]8WM!&-kS+I;LhG&$"V$iXnD1D9!tGcci\8bjC@:O<5BW]fsX]hb\9-<.ShTlD\`PY%NcP5PM%_96SKD^rhU
%J5V/E%jYZj"g^Jg]*5mA:>++.Zj4WHfIS*H+t%2-10"4k]9LT-B2F`;h]fql^0\knalR#O6n]=J^l9P"h#o^n+jq!4a)_g?\QG>c
%8tgA,KqNS[,+1"B%(%nBT%T//Q87FKI:<RZ\(#e^E4AVTpBlpl0ko\E/<1_nfW*,g2aGIP2?Y+Gj7:5cW6sc".u9!,YW;KIhC4/W
%L&NeX$;Cu?+@F4F,=[Ssam,!D_Qtu>qSV`,fp12CC0_+>S.$EG+c,o(fb'tqF;cQndZoec9eH<\j=>mEVc+X_^A>7_\q8K3aocF9
%=pi1rY9:T%"ViKX4d)CfLTV".^O3&.a<W)g;3>O?BXYg'+jLa(94F`g.6Uq;(.*B]dJrP=isA1"(FaiNBB`nNdMrg)"P)lGfHieN
%6Fm0j^:mBTk<sH4,Tk^N?=?]hm--A'DF$qFpXOl($79f$T[i#_c%9!-]9fc;Eld^3TD,Lj([p(KSZjgcDM\j!>N3;3M,3Hs]Zo.-
%S?k%=[c%27!I!l%VZH-Zagbhum-Kal5&eOtfU)s5Hj)aTG?2W,I(1InCc%$?BlQeefQeDt\)WbUZ8"dk2T\,Hj?7`:)XcsIDd!e1
%8.mjLMHdg6:<V:h)a!rUN[(h#.,O2(IOK-9N#Up!/]$I1pmT+I+u_-4<rbM0/BFqA24&:eMPrFWVtr:H!L204ARR]<25Te<+^UW`
%UX%5<7TDF2D?Ys,!<uDE#*hG<Rj'+K$\:er5&JNL$r#RIpZj3C<u9JJ4)mbUfJj3s9ST,-Y`g:!W"V8/@OGU>E]&#4a%lNAiD/aU
%>K>.Po/WYF7pM(L*,:;'JH7Si)iRIW>FG]_$U9:sEV?P5f8d[.[LI,j(?eo%dkWFA%#11go4.bI8r))T['VBM5uDe1PK?6&BWKj=
%.KX:!kQq:i92oo/k?td$$$!u.:j1!Q9WK7U5'.Y:V^cs2S^[XOF[@->EshIfWS:^p`b79kc#QAQWiqNI(sd8J/[R.<h0E^7p:!1R
%=V9_Vr1fFa!b+:qOP+!bB>GP=dX#mb]d%g8nN^uJ%<q`*N?`F9V79r=m&Z.Mo#A]>fQeV6FHJXcaZK+TQCtPT=E^jj/LBOBG\^]4
%<]@V`K5Z@`bHr/!`?9NC2W$n$#I9`]!][OCN\?(=9sT!adl%!UN$i1fr@7_&]cuhCEQWL/$98f37#&Irdd,*e(3:7)7);EC@55]%
%(.3oBqCsBU:&TLW#S@Xi"EtTIHQ!Fr<?9sOr3=\5GSA"o1K(N('>`@%:PP'21U$V0"-Z-<P9Jfa5#u,d1D/r8Od+QK*d6Cp/0]V@
%.7d^ZALO_2b/kF6LpghFKV,%@rY2qaU.e(?6F'B7`<Spl?l,/s-m-95?cWHVV.har^+*fD9ZDX//sE$is*#YbaChGpllig[";.64
%M=9`4D'2r?eEUuTA0e)38Fit6S51esN?]Hmq&#RD;8`r>1IbDkeE2&qBYG"8^&[6hFTm\l&M/X=+T3:\@/u,)mfsk+PVdY)8g]25
%)]i\!b'`7EqW`?(PqCH:\"AAqGbQApRh<OGP.QeM>CnnEh&77PERd@Zdj''PGb#$H`U6+rN$I%jdYTMglts**Zf$i-B6uB3I%rXf
%%&f_NEl1nfiNq=E?LG<X4+CjTg$Dt6SZd*-la\2=m/3Lq)UZhgg)3IDD/&/kh=@1]RafW[g'Lii[&fh3FiX!_+bFQQZ&MV(90BiJ
%Vem-VS`mNRiHEN%/[]I(repk(bJ=ts8r,R`Wst.cnNi'#4U/[ufmLHP%gkZn3N[KGNOYq6ArQ\6*#r8$"Ese>Vr$*hRO*NdPL%"G
%i_Vgo#7]+kS50Mbe[l)3_MMc'R@2X73Dd.##Kef\[5f6UAT_&\E=a^X"tl0`=o6(0-Q[*0Mrb@,ER$`kjh%&TjAf3fQh.fJQ7Aap
%3XoWo&<MT:V<)&>Y*]8N5*!IjY:.$@(1IMJq2EKD1=>cuL,8<>Hc\eYlLSL[-p>:X5k4=GD/M/Tm^ZRN?%(=#*+f<OC0SjAHMZ0X
%ZH)&R<2s3_"EVPr&a[q,S#a'<e0m_@3hlX!T$a>WXgGo3#j7"$$D:<[L`c4FXZCB.7&eT=-:mZQ%/3A:7?`.aB9o56--0Ek/CTNL
%j`-B@f1uS=d"m4=5uYPH'OfhTc][R9>\31=T@r(AB_h1<o53W;6BrCP5?h0hiN$:`cqr8,jpIF)(b\7ZP[kaI4]cWr5$iX#QMs%1
%^XKi7Y!WhE;t-W]?0iYPbj6.dbgQj*Y7YuIV=ncQpD<9k>HdaupSI7[qpYH5SQC$U^=sNO[ktgCY2@M0I&@F"Ek\jfG6[%g;:/0Z
%.JhFQpM$eb[hZ,S<l!1ap\`ZXkM);nmlR5kC\<s8Gsfc&-Z;1ZWqOU*gj,PS?.9P-f#N2A+.r8JI9V*qh;ZneMbeS'I*uTr3Gi(C
%]NDus>JY4<7=WcJa)U-*DKNuX!SVS:Pa1WMGFRJ+OaL;":@$^,;l@<H?1tku]M?66Sc8F[&`%_u(N\NEb^iOliUf=Oe'/:sf,;:X
%OAF[k2lB2MEjCpZFdXdk@F:7%^7th>pqdY=O1_p.\gRF%ai!0\P?BK=N-#/q=#9Q;\kBLl&\<`_CjHWQ:b`Np/bH@HlCo=@^b#6c
%^:t$fKdM*mS>.KDk!JpkO3>f1'?nk?j?$SI7Eib[ZWp*5H7&>3f.cG19Y);b;[>ee#VJ%W_R(D.Jn1"0c."1GU>Q>HW!$Ec]>;X$
%SCck5O)UDUaL3YErYrqKq6t(iLW%dJF4!7JK9bo.Xi2E`,lS^=m5.9H.?'?=hjE+"^Xd4#3RH;AZS1B0X];jNSO,5AlZ[JCNNu_i
%L0g%#U6V%DP7]qhE*0u'DrqWDV3\FBA0]3(FOZ.VfNRaEW>30#N2F]r*2:QcAQ]=#e?;W0/$bbB>#goM\a>AI/2j'c^9C?/)Ud8p
%YoK3gTe?1c+k,qC=I-!`aDG31TEbtj==:mFc+hQ%FC*OVAO*kZ(R*R[9PWJL_s=dK/E:q$nh"9qk;@2-kBDNbf:k2FoaTN!V]FZY
%PMZYi)pd4/5dnW;0&'i<)a>Fqq_NZU4m6_aV99!&*GEoJZ_pH5?7rWEI,_ns0n$2mc!#\,fN%H_;26g2?s[H]o(7?Zm.C66k\-kt
%5Q4Q\[I7'b_6e$::M8^pc%:$r$ds/5Hm\RdM#dIm-1nZS7Q15VBZ91/kCL8Q?sD!4QGO>?C<%g!VTDnN%>?65"H9Uf_a:5/XE[o`
%T]EHe-?8+uNrcB7\q#7U5F?D!E0G!a2>`7rJpk>h,nau;8BEu%CN@.<(;(gfae+&?2UmXf;7V((U]NO4Vf22&Z0ST=rk[ddIX^t5
%'A=M)hq()<jan^2WD"_N("?^V`JTjB%\q(k^d!i""*s22&%o-jbV&Lam7[B%;2fl,JZMiS].u\T7p1PM0/5<5(Lo;biomY00u?g%
%,CgIXKE[G\jA!,ugfTk.^hI<o$qjK.\dadA((?<^if/?e99];D&!bIo?mJ#V#mIn.b/d,^7^X9*<BqY1>,_XC*5aN&E&0amYZ?WR
%)3UBnHmj/AJ4!:/M?(*E0(H>(gCQ>b#=HcV\oY+^j(UUjl?dPsKK21fF!#YgW;ke"*%)LWc6<r$j!Pi,=F-mcZN1C(b;?a"_`3)H
%=]gMo<gdj<cJ1-`p0$(?IOZFt+i<\8X-T]4<U6Q0B4.BS[T[Z@H')T%.*!cTP0,F_4`Sc2Zij^4m3%-+k3bU4R_clE*Wt^5r5R#Z
%"m*Wk\jTAiRNV_85")GJ((mhOTWSa2rDY3).1%t0oEk<cA.\@+RR%\!Vbs//HgV\*NKJ`6,W7)"_nl0aN3X^^./S`)aV?jWk6@b"
%.R2^._#@VY:r)ZYB6:C=/_L.UMFGp&MI%sJQ4\6M?qW`&5F>:M]W$73f;B\k3Yi4r&[cN;).[=<]_<SDKUg=RY[_/JA3<lAE('lr
%^9&*'_drU:5r9g\#fEWODLs%_+]X68$T&F"_73^5&Wt?)DpdAa&l2>"!gdbC59f]p%e1Ej1EsT.qX'qKb<?ZTQ=gVF'8I?]n2(JK
%"d:15R`LDA0Mub!:8+-uM%dke/ZrPG8bQ`o3M'A;7(q3V)c=^'/fcY3k)X(k*D^>Q#te=a4sU]tOZ8[#+sEum%"VJ>&@rqF<*SZ3
%RX*BW*)e.&Nj]T!3SZ6I4C(`"-?)uY"X#ZV8&m_7[h<JFqIP'<V"Fd6XLCD,)\]^q"`eclnbu)\a/5Zt#8iem[()@Mclo/#eM^YN
%LJ^ZSJtd;uiTECgFt\:SdkO6cC*_`'Fc&/<n:&b16N\Y*`.Hm,f8BeSMe6V>P<A5MVH.B!%=HD4)5#K!i(WpeN_n=Z1_F#='`\T'
%GCaTE9,B?&MU,\VAWDOaFOJNt*TaTp[?.kk\UnBA\0V$,gc_ruR>:<Md3-V9m.ou!HXUJ@EinLs1(D7>6`Y$#;Vi-K+.qukdo\+f
%<4o>8?$/M*dl^N;J=gj4'gJ&4\tU1G%$@$s&EpG/oeSFrQ_$K:aLAo2g!ePL3NlGccJ8kD>$ROT67a_X7gM@%P42KL[8G<E0A$[P
%g0k7IMrLK3^C@R^ZMP9CNT^V4(PIY'A.Z9oQ,>,/2WrET(.KI3YaLRif6`/h.M?d_;MJ\SB:nD0ZC6]][!UASd76;5dh6VlJ`;Ua
%L*USB,X;mT'Wn@_FD3qR+_;ZL+KI4$#=.WZ.P]6WcV'C*HsOn?5>g&qA7Z'E#_%f@1'L?Y:d!E&$1?D.eq-AI0o?."i[1NQ0Jq,l
%em^W;.Ip=1[?/=`]U:0q@:Y@X57LCQEIf+q0uY\%p4jGm(2c]4&p*p%,H?2s;%4313O6;YC\\W`cT'qr1PbF10$FccGI#MJOiK0t
%\oG[)_SL)!\mgXIOg(AN6CDiUj3?0N-dTCO&GSWBBW^0:#,QJ0O[Ke0+hNSO+4s08dc;Dbn#scqb/DoNY/1o3&2M_K!8T^TI`,@=
%.V.ij90JNUE$-kR\TT/2<eMFE0Y</b-K1"SA&dC.Y`g;MV"MdDPt+uBbE=ntR6/I#@:dHXaMC3MAS,?N64t`+75!goTKn.snADVE
%,i"?%H"O"T^r$^S(Z]#1QUt^t=0F+U:rA/En7#YCO3NX\$Xel\)B^!Y%RI=/p:H`0XV/F#&tqfaCp")ceB*`e;13I!Ze28!KDArh
%"LR3oN,TPPLV_2p)%_?9=5t-QJq]JGBSZ2a_cRu7-0?M_?\S]FMTM88_9$Qans0=YBf2<SX0`XZE3t158?DCQ#nR\#HQdcTXj*o/
%^rkS6<l4Q\air96%W9qgou)!u#jqcbooQ3U)W&iqn-cgVWX<k;d'\>J3"1!4ch!T&(`">8MbXB]iNB-s;iVc6>YcH48KNl$icC@g
%C^.p<FhYp)><JQlKGgQ3'HsF0mt824Q'<R\bn6\"$[s^ZbM?$-WbH0;0I.GJ@!e<q1K8`7Up74+p`g]D@QDn(c5$BiTO9g*k$ofR
%Rg'dMBWLC__Z7O5]odK?O`1o;'+!X<])EiiL:X704s['LZe,$](=CeIA;LWY8+O9W/HhD:+EZnF,q,?fQ*f^XBC/Fid'n$cquX_S
%M0K:<Ls#r^Tejq3LR,qi@'Z!gTpF\X0V4.7m=:::03Im:fTGC"Hn90fE/Nii&mPXeB!05=HOsXg(XiiBWuH<aoNGLH+_N5>,SDgk
%Dm8Q(I`h@,"LS5:8cYEr6HHNKkm#FUh+0[NViRSp#*)PuKTcNXRNRJ-[RWXjD`WFO2$njtHlp3VEPO<ObnD3:JaU(<TuKHuQkiA[
%?\A&)7Z1c0&u3BO<[:Cp@TXE^2s,Bop@F7'r!&0a&:2Z<p!hBd6@u\\1fHAg*IoOTR?n--9Q>_2Nf;(16EFScHVpHs*!f\o#EcX`
%N.u'S+nS18GP<na#?$o-,(5OfQPRmU1n15p_V.D?DOTP0-p*19"F,_kW$P?;O>J3.B8?d9L>7s2V<m/rW4Xf]>tD_R_,&f8[[s1J
%OM4*sI3F#'CTXP2,B4['U*$=]O#(1^A9_dU=](fl'%M80k3P8cTk#S/4m]'t^[PI6)2f+3TfO_/,7gd0GR7i>ff8-i[X+XHAXs<^
%FQCW,!!1E#4^+Vp9HEtf3+`$=W`-R)71Ybb=<;N]iqUI^,jDK;M^oq&)B)#Fp#)DY.P,Gr:gFe"bc?i/n-+=*dSBQe:>19DkiSl\
%$R3GI/pof.5EbcCk+fJ]KK)5lQ8fHl&?pI(ZmlO*;B_Ui/g"W\)rVfnW,SrLQ&51`#\LWdR5Lb80(X.Hpg&u]rOG5X75mW"?ch]R
%?eToIJoJ-3M@i,:&5%RdK@P@(H9;d^Olt'TEYMB6S2JBXR/8$`iX1CIm/V8hU2(:0\#b6\Bb6>bY[%=I>B(C1(m0RbJ8s)=CRG9D
%7HA+c3/Muu56p/KVlhAA!$Ljf.o6a3;P)!]!!-\^ZGEPiUG.`U\[NS^E9]Nb2G.HW^7`'W65D:em/CF"1:_[DVc9.<a)+]T`aWAL
%KMI=e6WEPaB[d]?UF%mn@WnMu_rV4KiSB9?isMKJn6oE@cXhoq56e2W+L`Jf/rILX^_1D;7at599F6(iotg=;>,CkkI%E9q7Q'79
%=YZ=6L4?_hfenAY5X'!^0b*-ETPTO`&cXJuU%r5f;'o;6DHb=Cj8@+J+@[GC0^A-gX5Pa1/Q.V-$Gg^j!qXO\UPfjJ.Q<oNa4X5a
%Vb<rOq"B6q7_)=9rrHe3#C@+S!/5%=qZJf4'#\OY5+RbRnQ83+UaX"Vci8me1HA;,jeSMu;aRXQ(4J@V$Hs2a"<CLMe\m+5eD0"[
%T8@#5jTb=:c"[licBEQELDDnNS"5C`0TBNQ6]f_Gaco34Z#hD-LP.6`(!&sg2D!i94-cE]3#SiL.L44NR#G:/+lm^bK>FAr_P%`3
%LTEc]hKDI2ATmNA$sI#PPIDp9(\?Pa+91cds2.)#LVN`]a1qMtJ,_J-nGiF[59fg)YnDb#Oo@;SrO`+&+91<grr-hcqq$>so=t>#
%pnr'1bCBN3^VOR_c#<Ua55@G%s3chELn[0Z)NZAVToU5a'Ch,'q7;WL"jp'+>;0ss*U[%8,X<@=;Th])\>iudpnkaT%2hWd`?Hgo
%L"PX"n]eJuQf"NE^\?c^`7L#TlM(;QcgR5[oo,%E.#EbA<,':%7:^9_6W<EX3,]\,L)c6,!6S:kqa=4V*'Z!/Q%B?u+)5*WaH,Tg
%QqG_BAbq]DZC7_n_TE6O7rCP"1omFR;]08`W+cfaN$Bu!WAp$iR!^)%>E?\k3._DnM*p$j1l-/`gc=tB-LP.5(i&Y)5Bi_"RgObW
%dZoUSo,Of(=bVtE)=;DRIV!JtMU$d`;*AonGmG!nQDnp<M1b`[Z\Ul#(nR#I!cXl-7g!CYpr9&u]=p00&A!1M]TWn36IH`2QHM;1
%`FbFSfEu0J$J>cVS#BYFWCad7Sl1AY_$$X`Yucdb#'Vb9'!4V0O:eX['bW\L`@ZJ"^GO!qP7G,o]K-">']1>o;p:5re50>S-><&@
%od"!O,/;%&1JeH.1N=j^+Qr(\]tE<QlD;.E@t$u#l3:Bjl-q*Oi<27m1hNo@NF3?K96DHjf^W/#!$/M,CMdRTjY!qMN&k$,<F9NW
%i"=cS7XO/e0+A$KZb&MN,XgF.cA'<IN&WKKgdsBpFc<)g$Pok_Q6OUAPU#:t"WDnca%<_7EUQ6kF88(UGe^ig\omA>-3'hmch783
%3Km*Z"N?qcnY$+h]c=A0)Y8AbYC?9P[VR*Q"FsG5hj"*m=Bt=n&k+9MQ!>%i0!?._]8$naG2(/3fU##tg(>$c6`Z.h@aZ)sa+*0.
%65JJ^dtm=KX7]0Y64i)<m?W7kb`=m`poD1(RI>*_bd4G^2#/RmFegc*q-sUbUOH7e4<FXJ9E#M90f$Z!$h(d44BKd&!,h$RGXMl>
%fKA2ONcG)Lhd==HgU_l(14Q6O2k7CnAhg8o`^j+4RpZ&FkBgaDa2.NE52Q`#jq"@;3Ok]@,g/@keY&4)a93@b@aKZES3=0E-r5N$
%=$j8M&R+P>\o_^Z&s#a^-pj3L1;M58Ktmc'46Ario0%5Hqu&N4Dc'=rT8A]S#E?LU/ZcsTHhZE-3Jq0@U1Xke`r,^d/Q^<RniH4V
%0;CO\p%jMSf<hP%MFc0H^NT#6M!@geRl#L\4K/gQh=qn_5_JN.nni4#LGY",T>FQ!JJI+H8Yut:."Kot#SQ:W4%t2Qo8,k<U,F\R
%D[-3]le/MR6@Lp6(*0EXB>XdTKXT0\IE'GP`&&*7*:p9d)4Dq_!(`4altd?Z?,`=Gg5cmhHQ55qe$e@k`.:<f?im$q`*hVi:W[(#
%C-;qj"9;d5n\\GYo'&[DqH(t^YWQdTmH&+,I$P-[7G+@n2]b%DY5O/%,64m*W]a9!d2ug$#ol<#:_bcTUcZFhnFXdPe8#9[f<?Gg
%F_3!C=;7'?QFgh*`/s0,&;nVs$MVmVp1/iT.u(Y7R$(/Aq2j1Q_k_utVF^271sLkJ,17eETj"`5EY_5Pa8_<cU;YS)UaeG\;?Bs=
%:\\?O+a-.*C4\^FgB[cQ?b6+5eM$euD[FN=a@7lCRb*ZM$E2"=M!^.qYt*(arZDF_]Bn,f=HFg'_iu^(HuZ7u!<_Sj`^I,2#!uYo
%%AWE%[74V:@=Vmg5!80;^Ugu;?^cuPdk-#mH=PO/[a_W;9.;YMBH_8<A0kJI_[L9%<%%FAlrl%F/Gm"Z[*$l6r9)cBKUV;W#J@g.
%S+h(&PW7uD0G$p%2r2m/k+XGTqm!mm+1]9b5B@M?W;h+:6@PK08l,f0e+om8a>P!2K01]j[*I3dXo7J#X.C=XqH^Bs^.=hD&7[iZ
%Z"TX"TWF0,JK<P[5\mZP-ai[QiDh.\OcJj_4Be!P'?5l"HrBmI5cR`9h*C"e<$`2Y#t0S>Da\i5pXbR5b=PaiV7fPkSdb+5<:B7R
%pFQG_plc;R8Zag=RQo@jMiJ37BEdK*VtP4C;b.uY5erO5U_XjVq;Xm<Tf_64*&j\t^Ds<G3*6%aUsYYlnaTe-?Tj*UiB9_di*(@9
%l:&>S52nV5;O)jXeo>.5fdK/CUVmQ[D,#'t3@%iX\`tC63J0c;c`5&+&nbi;)""F9*G$K-Mp9PhmkAet"89hKI3$3XSR4Pd+T0Ih
%IsoV*f("O1K_t0r,p"81EU0H7',GeXDV/]4JHrbIFY-d5Dt(//A$*:D<]2Qais9]HmS)mTBic^O+R?]Yk$)),@uH1H5SqCARuuX6
%``T<8NGL/(2N/8ZnVMjR=pY=bp"0&1k8'n>em3cn$V_l<&_H%m734%p$]C'@Ob'Z,SK78eKb;?fT^;4JP^Nb$l:YBHkF3"]=-U2$
%B%^OAE77^C,,03j7="Mq0A!9</C@]P05X^!$KgVj@qjt3V&Q[L&:'Z2(:JoIa0+Wk8*mTR]E6Xa/Fi'rcm=S@F2-NQmASug7dVk4
%TV.c*h`B%-Us%X0jV^C5>b32absnN_@bt>QG7SAs`5k*)eIqpQOs&:Xj]OE8#oD!!bk^U^qI"3CIf)'''6,I^AiFr20=Cr!rj@d4
%[)XUf"jsCu#`".,CdGI<7L22VSY\WTLEd8FI,56+]f4:?;F&51&O#N%OF@;oM=:Mf)T*/C;Afj4i4[\*#!se@@;$k&\3LUOQU^9k
%"G&OiF@@;d[D6->_T+2%!#@B;j*ZFhOAcH'F+Oo^-JYQ`9B5eMh8+&fi[PZ,18R1[:t>^B:hgPaBi_]q8jn>&l#Y,Jr1p>eeh?`n
%/()KT[m<R0G06gRrOGA#a9%Jc,9`%@UV)ZUe:l.[-ufDD(8E61(<agV*u#\:dpXa+TQ!#uTp-!O66sDOr`J]AS.\?X8nm\Qp=-Oj
%l@NV4VV=_MK!6n7O2OpD`J'[CR+r:F9TuE4g;#n,(Z9m.%?9=1mlpO&:$)iKrt(Lr\]gd"[5-F&SVt$567qE8./Kdo@\(f4_>Ngd
%UH,jT_6A_=%F(k'JNJln0%=XgF@2,RpfH#KCf[6;PX=cNSND35cl+&FUbROH\ZTeUXouHEs(>.16HoB)')6#"O2%u>1-.DgXGR9a
%$OOamh?mYFs-?^ADn%KX=dcVJB42PV:2Bj6m,;d,fVg]BCNF/?ptP,t^7.^noF([o>4L'kl^o?(!7FjQ,LULnL12/2jZrr'l>kEt
%DZC&op:,XrqPAo?>b@]#QFUr<l!JBM(T]&:&eIB(3.'`qS9is"P.!rVl^:3j?f#_rQY%#JG39:r\OUsS:FWGUG,kU/M5_mPg\!Y'
%8@=O-Q)HOB4UX_U,Y^D#6Qllk=fV/mF3s=tg9@*B4Hh]M^u0.,5Z+C(d>:8\+kinK.)UF1SZXBY/5#bq1;rHQKu&0[nB/=cj_<86
%(*sX>%>V^gFJHab5O2S-5o+@?;r!L.Sl8f<Y/OmC.RXOojq"390NF>P$NU0^DUo&Db"$+rG&]VJqnf@/@=KZ7Qcq-8Wl$]+6N.6>
%CdS;q9A/!I4JL&a.3Y[R'!a`d;%V_B`t5;'7N+`>&eRiD17QD][(#)6$;=WQmNam7KbeG*j7E8K,XP!r?+SbOg`YX):,Zt-+EDMW
%CtW&+DLIoDqtPU+j#?/5&,pY:R`EpMM<0n(=$M_Vbt;iWLM+o0C!iWqTfF!Qc3#94*&A!fmp:-#o2Q*;OL("L#YBW4\k'D,hLL>H
%h@+G>D2V60&.rRq%FpAKp,O1d;lAha8eK4f]O'k)n]W+BCm-`6[lnAq(k(44`\jPLCUnC`ZS3OIgYDP#/mpWoEDFVbHR3CZdWaI;
%IH[@`k8V\"[bL!EX4f;UONZ<G`g+.feEn,Q3R5kiVQCZ]0+(3BXe$!XmM7MR=/di^&gjmQ=8bNn1UIW/B<MsnN?ekrasiUaS^;i'
%5<o6=J;),f3/U(s19TX*3-KU2,#iuGMbmsWi&!j<)-(b]Q6)3`B0FWV<$'*C!cepH8Z;:HrN`$kg#Lmp_u?\(*Y9%eeX](U9#_OV
%Dpp^#'khK6lG)+q4F^scZHaZj2nc:D>m*uo-rWDE_!np(Fqj8eY51!N5]Zeao7L&[oSFI"P.5+o5G!g?4?bXGM9W5MWUR3i0+-$B
%d9gA0IC*N\,TgS(9ZP\)`<QWjd\B8%aRUt;]qt)9UhB4:(>G=n/Y(q':q\!P9SjHlY15IdB6n!h6gIBN3ClA@eM,@d0'R6iLX^P7
%n)0guqR+i[<tQ&:67@@6Dt@#C#R)Uj";X*p6G[=cPM-5U[i,hc(1Q2g-ig!2#eMIX@$hPkP8t1_Wf<*'f<(KP@L$O6>Zr!i8>GQ>
%6d!X`PS4+4CJ.3W9bM.P4q!YOftehJX0,W/1L0%/\6dTOin9*m@3\#9i",Ye3L"#BqRO7l;PD@3'NS;Jh?ig%?f<PQlsr6W8IcWH
%?bhSpnUN,[0'lur4D/'L?ubot9BAg)^D/ogU=oCmcOdGeh]b'C0.kI1.7D(p>T`:_jN]q?,Ma5Sm6b4#O_bX_5O<3`1,S</(kf_"
%7M6nHH_IP89u4`cf$\LChgb6J++!9c2IHT?d-a*mK,2;L^$b?t#_)2;rH#=OP-oege_%/Rb6p*ua>5X+7DWW'jiIN+IA/>e)B:/.
%Jd!?(Ws-bHL^YV$*Ch-'ADJ+U'e,s8_RL8%9Z%X(9U"BaQKiqFhq^Loc**t)5DF%-Ik2[@Q)_*G5o>H\8>CfB6+5%rB[R].E@r>`
%ioH%HA@DMA;VD02Y,'4p8bYb.bdgtf3K++"<[:,<3>#75EbFImh*%Punm_VlK/U+3PY>KVl'm:[8-hbig)/X.Ve1_pA_B[C1f#W3
%<>^Aq!0iu91;&!OK%0P3+_P@%'!t3qdZZj&:<tc1cQXVG,9S>m_T&uiPcnA/gkANcruBl*F.\p<k2X&!De+q!VZf$LBL,;B)Pf%)
%7LD$\i_5#j6nnMR^-b>f);_]i4J:9AJd"J62Zlo#+rR4H6<uKh%+XDR+A)NCkb`SV4>!HqBQe/JD?h?PCGd`mmN==^6W`"($AotT
%+-UaN9nAuuJWQN0#Z9U%hl:4Y;4a]D9js^n1n121.K]5ZmWj46?R,b?kTk`VjdJG8"&6j5N>%'I`:_fUkNaOJ\,'?3m*'fJnl+74
%nRENWdF?q&c[C!JMZgTQn<4<;AA#)S&PH>TL%5:>N34d<'_hG0("_dtc&n1U,X/S6aN+_[Vc)-<jT7Tj@L`Q@TVO(<7`[CuN[B<`
%4Y&@=(m0m_W@N@Og%[R*D5MjnLplPL<]Z51Z9-A@OnM)/;"C#fJA"REiuA-<P'q2h!g<8\g1.I613o25&frI(d6S"r)`=^#Fh<@g
%)#u7,*jXC7;33Ld<#FFTpY@+fBA`K.ZBh-];u[8/$T+NY0N=9pIT)KRK799YNa=>V+ug5,GH(Xn#L&_.iQNOJeVJ?Apk25=K-onM
%9;Q%i%$c8O7B7e%7tY:e#+6\e$6HRLDJo7T8P9K&LYlCDqBTe.I]KNAM]glYb6"eKSPfKO@c\I/90-U6)4[&i5dbbqQ',72JPrYH
%8n(bXQ`VC4#uiafe3`PgqNL?$)]%cMKB2[HX8-m`#B#I]:+`t@^9#$`],HLR-]"VVZm);)Ie)c*=bn.fkCjGu1072bk-&'0(0q>G
%b4jh0Pu,D?LY_Ce^VIL?_E&<DZ-!75AiK;d5:pZ4Uh)Cd&g_TR.,@M].<bBG^$%4+A!FM2++,ntNnS<6kjT@'H`7NOJ7LYtkj%1p
%b/K4]8OO%!/CRtKXj"hQR88^<A1PO&g#Ird2.B:Q`Z&,$)kpBa!NeRe.u4n#T;?)(P\]2T\[j'>).iCp+'_#RcPro(s8(5^<)J6Q
%E[QT:3c$o?5A)--[o^X+GMtl#A8RpD5EI=lEY^Ml70RIicJ9kGJ#[mG.-<55>-+X3JbYu'2@@8+_karRJ(qAMD5Kr_PHIf3<"_m1
%N27e%U_SMT@;6rO,EQ!3DNd#_R2DIH;^7>.d:h8f?>?i#.C"QZ;V\?uehJJ`)8cuECl=p6kCZ"OKbKW7T;[t&BsuApJ]T.U#rnW5
%JLu,1.C6ukPR-d>a_[Kb7nrU.-0XEEY^is&b^*tt$l0;;TcVVQQ_j'.+JX8,p8;ImlBIANJF+ULqJ4I^_f]gR/'90BgO#G&ZJ6&7
%Bn]/@[obpbR2.^XgffOG)B\U^?*9Ctn_!B*LM$]1#h3pPVFXuJ.@Zd/q]gQ'PiZ^%.C,cCO8U3ErjfN:h43formX/"c34]mQQ=Gf
%\ic([.Ii9rcT?b2-7/ZQGO"<4M5:EmQfVDq+frt"Z!A($U!ek)dcP4\_2#2$L*8P=KC=<+R&LE8lhBe<IuncK%_2020:eDfSP4oR
%<NRn:Zo/\W<SjV*9$QIY[aX=ugq,)Wp6mhs9SZV.K2H,@p"cS""M^#h;l!-j6<me&S=r#U.=U64K/lNEaG>9Ogo_`NJ$eg$M;D!k
%bdBI9I9+ZD=gZYQOX"X-aAS*d87c8U3P)jI,hq.BeF`Cb>2t4?/mMc+g*RrU#`Sq@S=-7P9CVOM5mWWAKBcX2GKT&'Agpb>UTg97
%s(a8[(,*ODT51g?V6EaG<O,I$BdSI!T=WN+IHs!U1cqc]eAF842=XQ+i#B^-=],gYWXn2?V44+J"*lNh%f/P'c'+E`"S]oH+hCG.
%a^YZUR%@ej>QE'S<*'9WggM;H&$H[]M:1nMDa*rKh=EU]cg[.1Vp'MBAR'Idq;_uH'rj,X"%'[;au?"<M\dX``\`dDc[JIqeK8U*
%Dd24D:u%c1F0be.C-Gt5l?R3DK!>NK9MIMkTi]*m8n67nk&oqa#K=DB-n._^ZEiH!*VBj*[6Zh'ZRmWl7)!1PNk!G^q+M:_j^MB9
%]Pt<LP6=eFk@l8W:VV1t%mBf1b$&J&fK].`4nRpoq02S[TDMRe%!sD-$S(2(7e"Z"aW)MYLF>//Y8>qBCO$N@9LRo'FK%7@R(+[j
%U8dI&"6km2:iWUr"od$pQKo#]GbeU2drcBX/Pgk;_r'98H1Er#Ys2?u(t'q`%9ok@D/$$h.JWVCHMliZ^,ut$jr!C"Ik.hGN6q&q
%`moU[GOc<@cNupI3M^=Umeq$QD9ZO:m;*Gk<U0dc>7ToHc#T-?S%1L7o%XXBc*VlPLGC$u8SS\GC[LbfRu;oZnZZC8O)o*D&MQHR
%>!h+t5>kbiA]SBkeU>[>JO09B=oj:kZ$A4oJg#pJbXKmc$hBr+&<d^COW\Z&a.Aom0!ti!d*!9BDUim/M\C7p_KkpU,*71cn6!LG
%:Ul4'\C.?ao[Hgu2n2,n92C7Kl9ihoU@=X'e?utCJ*RaB:!8Ur'_i+F9`.lbKcFCg:5'Ir2:mW%PDR"V;YR.-rkO2C$FQ1uj#ki]
%&t]Q'eF%Ja43h/uO^M^WY75.5.#C<q3#ufAV.p91N2rPUg2l:j-aDuid*gO<g3)*9;_A5pYC:6Y8rjTNEmKTGFdHpPTa1^:^>H@I
%TbIQ7r<c+lnBV:()\X7/`@=<kr?lM1/D7@3Ps*U/Ro`AL6f&71a#8V2h8d7AQ]n:F8,g'sm3I9koG=TAh\6M\H=2::6(kes9hu&G
%EOceR_.2WOINm-N%A#_)fgs;QJ-6H<ZapN-6.eIeoP&[hUMLPd['g`Nd*hKV@Ydp^lVd;5(`ep6I=;DeJ./hAFL%rB*O'e2\P?YJ
%<W6ad^?s_(JotQeZqpIDcO(fJ`6eaS+Ka2]#s\'8Qa/IG'#qHYi-4ecT7,VSak_F>:]5@qDGb4sC"]1qo$($saUf1"'$$L#D9^l8
%,n7#?aK"rWgJUWB/e0i#Ru[f<Kh[;RcaB[<-g6Y%8\26dH:`4A*=6WOq$6SRA$"kh]@46Yghm(fHqHu3?WAFe2ZRf,C.mNk/nnk4
%#-@(dd&$HH^_)/J<_-NPYaI9FiRC^\Pe-N8Yld1;(T[uuTUNaI?k)@a8+];Xlb?7=DdVKBn/1'bn]aqu3&!ZDXU+jN/p'rt9Me8"
%C9_p!cjLMd!aP\.o"ICW0YSF.XOWJ)ghsu4eEV>/!9bkhj][tD$]SdP@f2q"@/[@YX6Pn\K^;JhIL9Sjn[lOSYP]$nVe9I3<n3LN
%AZu=/7>r;lP3ucgggG46`XV&[N0W@)J5-CO'Wd2/m!?+QqDr(RE=c'b!7TXu[jW:W)c9"aZ]Vgi^$&S[kuC'Es)n=?Y=_lli<X+f
%Y+$b`8[pot2+p&CmSE%]qrm'p1dfP"kLo`9^$9aSYN'HM-(,=KCG]*ANG7]nM/(V8>e<6k,,DLU.0OG]PNr8cJaf,:,ZL[PbP3R4
%I!B6(YM[@i@ira'28+G-#DInB#_hiUaiTt9+shghJiADFoTPojN)[U'67!,h'6KJ];rSe=D/E$a4@JM3bKS1aJ=>FXku-AMYS>\g
%H"[jomL7K`VV*IsU#;4J5%kX<[\"$rp8#dLCpg/Y8Ci;HY[u?pUROSp/l"NtealQ60\_"i$/]C]iXm$Y4a!fB3U/ZIDNB&pdPUcr
%\ggXWrI[>5./r!ps))uDkPisg6hpm8k;bn-/#<Vor0rAp9mMCL"fqSK>#T__4d$MUG!I]SN_I*P\/#c^Q]\_.QFnKhe$P,KS"@_S
%WS'^)#/^dGU?CWZ@fO,rU1$#7f/!3qdjX.^&sLDe-<"F>(XP.*Xr!3U7Jmkikl(-0'uL8&FauJLi"`X&K8H.@Sd3cbLE(IoqA(TI
%%REaN/@K[,9QQUNft3YA>ZBn*V5^O&R\L5!r6IEt_"*;u@X0u'jf%"X2.od^EJ6.rE*dBrP[q,?MN95:GcNEfRTr#[`M"kF%JqQ&
%O^,?<&]"Z+=g+054"gsd'GtP5OgF*W=mmj,16fKmH;Cdp(gBUa(k7.+ZeYdVOcHs_TWBd37?B\!cS`=_nL/W"/3bO\!VB2uONY9?
%I:q&Qr;dR>0H7&=%`q4#G#fiRW4jbQJShRfd_+t^c,K]@(]W5pr0K,S3C\R`!QV.50c**@#2]JBq(\Xn"0SVtS'-SEClSG3G_tV/
%C,N>k$56.Z0f#)q.n_AufjUbi_15@Eo)r<hJlGDTV>PilHUs#*$5Q]4="_B0Pcg0k@<>?^d3ZS9.i3pk)P-djXe]E.ci_mRjhFP<
%WFJuG/mVMaU_!WCQ'7'B$k_+;f3"C:&_&e&AERJh3//>8QoS$55=HeI?5j%JO:h[YqlgE2g^3O=(_eB+pdsW2:W8]a-p]d]M6>K!
%<MQ'B4RM2M9a"ZbF^D$"^o6&BJ;tFWK(u(ZpEq3q,&![Ap4$r\!tddlC(BZk@.$^mlZ'k)6#jB5!A6f,6*c_J!1SlZO-XmgAEO9B
%87&^t`R)qF"]*Kl.cSbD-mVOeA%cRLS=$4M!)@m<QFIW(#IGD/(nm?"-/OVON0O$\^d3%/jbSNnqq4C;3IA2s)aPW.\\e!QoQ+ee
%PocgM<A$*@Ps[sM3#=PtI'USL>^'%m>q7E"\6O4EVMNAP+*q/9X;im3a+hiBaGJ`*(O7T=GM<a]17U-h<G^6tCR>/WUe0uM:U6!2
%:i2WNiI!H!=`IQqB$i30[S`NV,u)ftduk6F8+71WK).VZ*O&3L-l$U0b!k'JE+62X2*4nk!mUM6Dm7+p$38^U\7SBIXK*SUendG+
%,]TrsAr#M;S(]3Ro<oig<0uI"2U?L]WbbkG\HPR&Og<C3P5%Zdm=.I2P`=IrKgcR./G$Bp<GP8C;RiB5\q:d@<VO&jJEpGC)U0s=
%Q:O!SJWIQt[EVUli8eC]`?H^R#g!%qaS03/Jp]g\Wb_R_Xt?ct,N["6ms8PYSlsMHCN&EpQFk^k<?^HQInXa5Q5s!;Fhl0`X6^JD
%"NDL49g1J`UFVP%@O_7.8J'bK>jgScfS=W0r,<qKMBs@T$%@R3K;bhelS&a!Bn[QOmdO2sJJ(To.hafAH!<jA6td/pH?n:tThjrH
%`]>6IQ0)sm`]>J-`G.iP&(u;3S%gRS;:*uGY:U-9%G>Ac0pM;]7RD<$8rN?6:"]\SDHu\mmAoIq24^7K`9R2QbgbUm9nXp^R"^G^
%*q#2Qo#@-"r4qRQD./I'9F#<<>*g'MO_RO7D2q13Jfhk"GqV[L)b,f[G<OV=L7q:,!kaa$C9;L#57CUOiirU^)i.^.23A;OKX(h<
%fo@7mVeLHAg(8:c`/cKQ1'<+k+Ut[u&bLpJboqqEjBQn1`:;%tWsG]UP4WWmqME0]i\Er5m`\!E?NW"?Qphi;b*Hc%Sc7O/Y,59`
%gUce^kWc_>!6;l#AFZG9AEC0=^q^f/+pkn<K]dn"^ge=(X?ceLFZqFihs6^KajZ+VD+8nYh,Q#snp[*U:A:&32(2$_=]M:[,&tBS
%RHhg2p<20\I.d>CN1('n,sA[VXL(qbK,q:MB/jnWEqmXl17V(uGK&621'dE*b9EQHOkoDngl&f26rb-G>K:ZD\qF2bgD6N1@omO#
%>=T+C]7eLE!l_2G3adUp-W]c$L:=Yjq]r"5!>5p\7UX*`<4$dVfSo3cQ1"*AKF'/51(.!d2",^_E#)<@`#\RQb!l$D"A_i!JknW<
%N?iYcmI)?("&g<oO%id`n6uCq'D(TJG6qC3c$U!kQ'q<WM!?1+K]/FlFJ^H)b>S#Kht3aWdWaZ!0A?.d=;&h$9+Ztc#V9??#D![c
%rJOMB,au@V4"i@kYN+)q./#j[26^Puic(DE(@80/`)b<uOCQl^:m7R?nqDeqQpj6@OB>Saj](b1+qO)DF?\u<+Fb$lTB?C'&d\57
%L9k^78_QMANV7IXgUPR\i6qL5a[o+d,kpkd4O*Tid;/=9,:T@P8pZnG_E0tR9\j?c/ddV46b>A:ja*kFK^h%4[ge[&Mt+DL\scb=
%i?D(Wp^o;#_CXZ>jJAM]K@9tHBU9gS=eM=Vg@?Ci;mnmX(4r,nPXBJli(^$bU"@>ID-\TeAI\c+[,k]<j%t^YqN)\cWefRIQ*EA>
%,s6kR]TW[.[9Eu_+l#r-JThg@[Z!@`8U6t(8HdaH_3H/k0'b^Gf<WMRf=i6,pE)NkoRA@S9Hk#POrTdRV"WIlT3]i`Yq876Y$KRD
%8J\+taY3_t[/tY2W=cC0h<e?sUgOITNh%W^%C%O"rW&.%ZS4KgP.IrUU"Di!k5$T914lYD,Q600\1?de;FK:D@$F@ICtC6`%Ltn)
%0G>Fp0`j9cmq.aEaN\<A:SpUX3OtXDQU@!L`mDHe0k<"\/63q1i3j1%;?RKl#WY8OWS"OA`.BR"gCOdcUQQ"`MtDOhK]e8i2DqkQ
%j-lOjN@-SaI,3m[C'[ZO9`8q7?c:^BF)@9fV1bWJGf=bc@Fe$B$fr*hS4J"d'*aCeK$dG)Yt<\fWZ`6u)l5q8QC1-kmr$6.pP"ma
%9]6h(U1MG$Zn!Tcnto@39Ye1g0+tU'VG8;LE_+X^3<Uqq`FWp;dg(XnSSBhl2*dK.XPa-=ma1p<UQP)_FB^WKH>.st+bqS[/iGp"
%jUI-3Zb)p#pk[E@llHF);f]+kl]=Vt883aCqNUEW7T20>[l_b]QB&KZ2&kbcP)2%5%n)0\cWGjBTdX#1>j<eH%1rp./8t0]X2<Rp
%rTYlSR9TW);j(Eml;o@ta56#]+2/SUS%&7E=-r#L^H,6ZrC4MI2s'4^Ho4g8UVrEu`u(Q+e4@'o(K%^]MUY3aC`A_,&ujp6YeC9:
%*er#sU`ntg%?\]j>/p&XO%rZ>&=]Ln-2[t94qdb;m(i+f,o(cJN(DsiQ@`O_>:Iq2e+%I)Aq!&sq6-ZsOe7+!a/(.i&@nHYI`/[A
%B#J_7EWZL=irn4<&(lr1T/]*V1'=q.QNP%KUN;T#lE*_<EF7-==\Wmi*<O^.jNJlh-jNfqHYjaX=S;oc9>"<F+fZ84a*bOeD^6PF
%SERR]SBulr6GT;FRKE);eJc]`OpgnVP9g]GAcWC3V`;=a*po`MjVn2%[dPC=r=E\f^*YlIXmYFTcQNC4nE=nqbOfD_+^OYrWA#Nq
%]:@R,+kAs)+#$^SY/Q?CDl9CYaDR*^7Cbtd18,A;gMjnEhBW.5Lms,G6!*>hV*qo&+4tmAfSZ59/#Y[e+`f]^n3g:gf$\Z!8_?$Q
%qi0smLZ^[cVFSDDce_3'.W\4I8X&nopuI7oH1&S;>G')q*fY"3B#mG+niK2nH_Hu$jpaZfQU4<JOC%:>6:]>:g6N;>@"*;h'a[Ic
%TfeMf8J,",XA.'>;54J"'Tt3\-\9oRFoSOmHQ-`N%TS9uSDGbDjdF+#$)a9gG#&h>#l_U,q)ZB:&T0Q9":0KRk-O+lFs!HLK%S$.
%^30j.XV&#\7?!+(@6SD$mLY1.rEO46aJ-Y?d8`H[c_@;Qb^F$ikkHmE^$CYDCHLC&.(3rfTZ9)jVlO@ZAq.CaTuXl8X(Ub&_Cf5U
%HL.C=Y7BqZ_URo1Us;;_f\s4M):n*cQ/Wn?KV46J=@uPDW"p.sY;o^5L7)X.Us9S7Z:Orp-D`/f>>oamKrb=rJkJFJ23L`Z]:VjW
%0OA/70=>TA$,V]F:3"0f[GEA0K%Yk/lno+D[lMu57UA*l]5ouL&]_f<8#GV5@3:FPaN#Wj!Gd+M8Xm,1[LXA'.K4AS/XjLmVSgP>
%O]OH"SPZuap;uUL2>*'[51>?Y&f^2"#HlPeW9B?3IU7?tHlM:@UGI_;(Q"2gd.'trO,[U+ZtH'N*MPW<BIbcS<gj$ej@SgBQq\W[
%TJ^4=l"'BccG^0S`7BfI??.e'#a9f"J2!\N'L_cM[nKe?2XR`;K/cB&!XR]9a],l4HdF/X29e0&e;uu!U0?C">S_/V,SpNAM8?OO
%C^&.RHXD\+/!=+ZM_\b,9'H3P"[-r2h82=m+%<R`Aa\L:Q,A;G.g;*@2UA>**I`MS:_*mrpc;Le>X6k9'V9is#nT-OrQQA(C,LWF
%ZrmO4,R"Y,g]m)<DKTi2mWd4&Ci5,?qBY.)O&6\4):?^V"9_eD22@bQRB2(#:RS-TZW=]F!]fS9?^PB%RB@\NrV_@4oL6!-k'j>-
%IDq%:MiP36M?-'qglV"Lmk2sUhg:p2YEA;$^l0g!B/!O-]ob_.cq8CY_Vm<]#c!N3aAHP#O[oPXJ5f4PFq;0Q"XHIsbS4.\_2sJi
%h.VfE%O[>6nIphGZM**sDeQ5JW6+Nn[G^nMK/fgo9G%kMOs6Q"Z$3a=FMJD`,C!7TJgg_7Ha@._[eR:>KEXR$T7t/ZnF?WVL8p,-
%X/1UnGn7b5Oqen4cNPBb6,=jW'pk?E-;&G),:JqU3dK59cQtGUHN29g5:IjG4jP/$ba[aX"%O4Jo%jXM_2nqglOX\i>BL.64)S24
%[:>HnQPbl[B=`c<IXI\_-(lTQeh""gYDIlEs/^8^`1]kcN:#+*'ZH!Vg.HCUR&&D0la?:AC'_P'g':F:%DD*BWS2];IZa&ldC1uY
%'@FZYgeWSH2+aRX1-.3p1/T`c_^Ta?3KaO9:aW-O7`Z`n?H6AP_AK&lDmi3Wi7m<Q2;;%I^/5[3LC.;E_dt#/i!?@PnB(AYT2$I$
%;m'heGPi77/%fc%%"Iq+_a3JmVdTQ*1NaJ%+OQ51m>,["_%B0\))?]803&Jp<b/`J5'UMR9s&="AN`=NY^gRF8O=!+@b;tg#%N=l
%]B'6FB@:(g5mN-N>)=06j:r=?N=mBc.;=]^iRK?2LL[aSrc'$,b(6&9d)[i&B[`5NGSpW[_k8d:Sk5U1e<t66&Qg!s=,sSoTG"Z2
%aUe.Wb<8q911=iGcNJ3IX$^AbC)Ea&Cs467MD60R2CYAohPZGiGaA:@Xni53WS'sgc'gD!@RW8(pTtI%9k;Qu!(@mMU3)dOXB$/Q
%C[g9_H#6=<H_k@;FoP*BAhMVEe3d'"fEb.^d]'3JKhpgQmftH[5ZV5BIK;"c6,"IPfdCu8*HL=.m)mr,[K(^7G3+ushC;8mAd'cQ
%RajBCnu/1Lb2]PFGIAc%+k!+&:)I`5"*u[>%T\7[81oF$V2D#`Tr9I(n3Qq8((rt8/WNH5]*(2fs/#/#.59X+BO8*Xa@05k$]O#R
%_k(F'<DG3'P_b3a4gK$GXb3R"k)f:R(:(_:#GbGjbkuS_W"5H@1T\kR<9H%Vb4=hAV?2gE49\T.0ncb3(lX5K,%ae7on;TZ0fn$?
%b/(_c6/eNR!C)U[#53p0`r\aCJ?u@9CVDKhMJLUrXPs\s71X$uAT_R]8=\QkF;<`=KIa2/;5NQtfRZ#c1X:H[9;I2):?d_]mI1EK
%G6F7qig<Y@VeGjGZBu>]keZ1U+XWOY(\X]V"9onYgF/sM`,1=;(,qs&dc^2f1Un\E@8SMfAmT3U'mQk=@_cJ&:k/W_m%tX0U4G7s
%$]Npd_/0aR&KQW;=d''l!jK&Ej11OHG%IE<)\rJ,\cFBRm"p#O$4Y3mp(mH45t8m-fWqI"<.d[1/oPe.=lTrTFTN-HUIa4W,Q_;N
%7=igJd3PW9L]fUf+Xp%1WQmMPW"Q9pe]_<QU*+8;F=b8?NGF<WQ.9H(A0be]4qnPC8EmG:X(u^If`mh6VC@Zd88/D7(#m^ej@<"4
%,+3toi*)KaP%ro0)hM[4DiDhmnO>,'Id;F)2a4ZEcek/Cm*C`+MnskfM5FZ;'boP@<:0>-MB]jrn=Z!eU/ht+qT"0r/KqnT2kBUq
%#AM:M,lmZ>e*S<j:@B\8E^>6^AoGqC%%NJ\[\tm;D7Rmp=l.,M70ma.db$D=\/#g1*a7:a5=%`eINlAEEC=dAWp2pAG?tTcNPWo0
%(2YDU]2(1+U,)"*8hINdK()Ir,5P'm[RFSl\a<KJ654u9$q"']CtB#:%al/-Bl_[a=(qB]U8sAs&H'B40fltg5kJ`CU$i>hkro)h
%am`0n;FKoP&TX=dfMQ$4-8432g]4\)F?=*J=GNj_o&821`"B(3S8>jY/`aWZkOG^McQJ(APaBrt>"26W=Dp;Ze1WY9$KG5aj@^%t
%5=oo1$dT8L31BIY,CBcoNc>okYN*[k[^1&/L\,6J_3#O4"W"?W3Of7$ABo#.I99A]WCJG$e"`&11d]T0#f?oP&$o?2G6ASdR#73L
%&V((TR^eIRhgGo0p--EV:iXI3d^!DT&Z'7\8=gPFl$Ms#?B+[H&#L11(%'P5V<`u5XFbhNTFC-pG=.E?:=01:".TH!9f>p28?E\T
%SJ>aaS[d!s/.tS_cK8Y(OAluG[A>m'ZMUaIYn"I$PLo]aV>1Bb2dh7a)'`79XYC";%f;as*9MC=XZ/Xc]%BQr=ihNjdCWpe\1r&l
%Z4)3io:Q9>bTY/M/l.nQn1rklg+E.-8l-SPM<8#7/4@&h#7UirpCbi1mU$,@#ogI3qOpc;[kF#W;++4c8&TV1'.UZDg*2k@g_5mT
%"Z2YhHF>U4%e4[:Ve>#Y!cika'$Qj/H*NEsAb:VK?donop7ZR/4k)AZd&0PT%/35<]X\K'$=P+cdCE7EZl(R$$kgpt[+k,GO?M#h
%"qd-F*q>%eNi@<ELmfJA2osb6G]Llc`%"SeEelTGh+5EtOVaFR0sp6VZ;Rj<Wg]auLDZ'`Gh.UE1fG1[5ZFHkj<i!/5LOiJ\"P9D
%B.sM,/J\O>G3P8BY7"T?;D+@J+".9+%K(tXWL0l,RPQmt"hL1e>6@ItjTGS#kS0u3BZ:+.'1iR#%@0]l16&^Z/Xns`6`UADR3PA<
%`J(<nUT!dsqD.-H?4R@>ap;_XmPn\r&^UqTf=2E:3_cn<l[H#?e!p2k0k>8boGIZ-R)sFiFkmrj6ZFA#/l?F'R$&S`@UC^=(X&Th
%F+r?81/BWpBXg`l2q4^bTq+qP#nA3PrG:/6VCc%i&tokFdH^.QUCOn*`%nTgCig`0iNdnV)g"F(A2Nm.D-3^gjY_]?[TuV#bWhQW
%-7_=#0N1"X^hY):_/,EZWBfBI6l:nNeacdTm,dK_-.*i,%*"F6Htnq^$9&lTI55D\gf3t0Eh9"q"8WT&#-B>5bO?R30k/0W>E=Re
%#-Bl1oM%`Wh9B9*?/J`U%[*hb]N476l,9'(Ve:!s1)"nQU-@m2Q&A4-2FVc;As:6`)!Ml2K0!c+\0F&o%<o??H=q16fte>jA'DTZ
%/sK%=2.bloi"S*a;ZDFY!$Jfa'_X;XqZtKdS5^X*OY\R.Aa3<1V5qOb!0s]\%o&^McICf3Hc98a[?n]L2dsKEPQF3A(Z,3oLC@Eb
%h*Q+W+@jr^7o#M9G0.s>^pC/DhF`h"B0"Hbp+h<VTeG8Tr$d3P$\o*Q7nq-b/.<%2/epG/fM=-u,==^X%`ja1d*]:3]f'b)1!q2_
%UC9m5;GV7Y73:+`_JBB7\JIan`/'l("_u=jL`';))5V5\3%mtNbRdi.M_^79g=R-s5VWd8h)Rk`&DAMinqIt1fJ$$FOk=Qc3uQN\
%NDNa24ouue9tPr+K4$6A-RK0%'`<LA1Sc[Y%s8F;9AgX;JD$CICptD+2N)JBRR9!lU._IC,iKcf/F@'V'KO@=R;G'UJ"YAtY-gbR
%LFUiB"sOq0@jb]-Do>4UF1dL*3?X3Ic^*+"f*"shjRH=bRU@-Y8^2,;B7pY[ad\Xa&WnpO6VWZUWYOp-LS[#=,U3s?qP?.=&,,;8
%d&&ja:\Pca=X>>VH01Krg[2tm$GE&HHIMS-P_abt'dj[b>T2#i'0gf"$U'4[]9`WcWbpT$?!dQhbm1F>bsQZ<?=$j2ZGV]#5,LY_
%4;82X]er_u.&"[_\r!PADATXf>[?p2fH6dqT-W@2^)3aurFDc2PQr25&7?q!^r"aRU]aF*UP,b44Bu:[J7:c;YH7sE](!5#!Q.@Y
%Ao.Y&4[4:,5f4b3FsDe+Q9_dmD>d`t0O+uC4!b0$$pInFja@Y\Q=;QT)FDC+2B=2Y6&?ki%4WBq`(eomm6JN"Q#@gmLsL1OAb&@T
%_I=7>eXh?70T%mC&^o3^gW[*YB6R0$Y8D6n/'.!$7oM2(oV=7_W<3&RU`?<_Qe`#bI7l^LB.8NO]2)ZqX!(($QO#>nTJ(t#.=8gu
%#O[5\B9SQnmZAODGjUZk-.bE,B@m+_=jPDHMq"Y3I_gE=+q"tD!5+,p$NcumJe\MNb4Xch6#st#"BrH"<!qS.*auW>g)F+pH$98%
%`TaMAMDd^9oqB9!#mYOj^rA)r-X7u[>I]Qkg6jq=nea=$N8s'QN66pL,.Uf"8A0B@]UsR/@id`/s#2*ln7oOOMB3%9`Ht&J&\#Yo
%_.9tlY6J,FVBg_&>Hp-u=P,rrV55a^r;jQ=8TLiS5A>UWf8@2*a\16#a^_%".Um\]4W*"TLC5eL"Bh/^QpCX@JW]%f!R&l@[RL$Y
%F^F\Qi38k[CXHHRoSThpo-L%ABKROqJf-f`D4Pk`%7ZlnL%!Zb]">n8n77hE8+H[/(M6-?n5mk4HV@BZ6%?kX/MAt?F\_=mAFe&c
%Lk!'N*O[NjSCF.TGNLAaEXLq-jo4bKg5"u]A4eAl%$5$,9,+A-Z$B)IPinJbAoM0n'"qH932qhMKW,f>%X(J`k,XBhDAb=k/?6Fd
%/TMbgmZEiKaJk>J1s%HBY=8nu#ST5%@nlC?aY>)IM;.\0Mf-uSR4D4*W"BPO0'8!-+5s/2d2bRu%U_c`7FaF$cKD?#_'cP3#RX/-
%p4\F]XY^r_VH$^#\hk8IYgTFYo$qfhB=eF?TQrHR.hF]cYeiRMq+7/4b%J!VW//`R'd0uk!9r"6N3J<J^snK-pjcZ<<Cm4nFK?'6
%&8i7rL(_J&qj$7"<@SNgN#\$7rV2Y=h+8^QhYTrhj\*DBcQ7:n2\Qr7J)%^PPE<82OEl/XD7R[u6OVW#iLEQHkhak\Y#,U]jG<&4
%E+J]*c%Wgg#*:NMWeWkWP6mm/lH[;PV\sKu2/K)"r3NIpOJ4fLet_>IIC/m,rV/H-eB?SG.Vac#bUL-)akTk[H`t(R[NJ8l<X/Io
%n2_8T&;u!FReg$=cg&]l6M9?n*&f7"9RND6(^K2qRFb&[:&,.@CefD2T-_F\foP^*j^d'1A@63U0ZLUr'>cA1BI+/1_r+/kRjQ`M
%P5Vc]HMA]&QBLONn")?p2R?$A--.FK!s#cUm#)LK3MZ1g(l0&)0RueY-YA/S1>'s)10m*id@VH42?VQ'krQ[">)@qm]<&W.ZUhjC
%eOMKNh6;/>Vm0baXuKFdB2rW@Q0WP7"]CTE0./ds9:uGG$p)LQIbq3)kL9),\&I&8`gE9$qPh_\GWSE7r<S&OID>*CB\`n3c`r/P
%YpFR-P;*?J0_&`i\Le-R_BFdROdf3/#q.66[Gc\h6%YJ.jDmXh_Gi)_giqq7RlDi?;OO@&_"t$Fc+lal;m2\nTgZ:*8VQYkV`l'M
%]'D!<ISAWRN9UHu`DRl.=dBXdS5^/ZW[$alSRa*V&,WU?!\].IT1md*QVW2Gak#2?N,9YFFN%NBh3,\BfR(:L'hL*8_?KhE(q"<e
%@r%Z@MH]cQkXUI2hOn\,plF<8L#taH]XbtZdge'WjE-/6ib+?<!G,BX%)\7GZhS>f9T%mal=r.IZ4`W6+]L?r=bBs38n?=3R$"Bf
%7YbNRUr5kbO^R-Y:kaA0Q!Hcf<7b/df<>R#HA"_m@EMf]fJ-_M#pj^<!/Wj9DVl6WY?JB#U]I=gbLl?:cjR[YfkbijK]mK7P,>4b
%Mp9m;1?lo6NOTf!bb8JMO.!_sR\in"^d;\/BkjgCZ"j\2Mc"Ub+d7^o)\09a8l6uB?q<<k>8D77f:q(iI8*):@M3?3UH=^\^rS^`
%cpG;\hXXpWVcfBMI[d>Z!5dZ>n?_,4UWYQC/tu7pU.:BE%Bbu%]bk'\ABHr3F2#X9pr;OKdYW"'*78u/OF[[r"G+u^K"`!m`u!!@
%;e<#/>Eh-Gdhtk;nd-d<hl^)Wk#q0(>pc4Kg5#ms+UM8pCBL&>?$e-B@Y>Z:6n+OhW<+Q5=E9@8P/9+O/5$R[Z;l99LcVXc$o!%/
%MjR)5=ALZ8bEs#"3oWIQ;mLdhP2-,]%_k[HJH[H=W(1@`\TH>cFPs;rZ-\ADKM!_77I:`WUqihfT!J3ASDBu.`/,kON.c1&8ua.8
%3B(je1h7[i[m0o6?G(Z(Lhk"',>r0`pIP"hUuMi[Djl`=q(^%dbbACbopf7p6o,[oMejU@@/q$8`t-!?N`reTFD2VSgP\c35sGf<
%KiVQXl5b$n]#dXY[Y^c?94O#pklRq?AHJB@_XUAl#$TYI9$7?kT_^(]M@$(>Z])BZ9R*]-H3$U=JF)J/lALAL"?rZNLV#u$PPO_q
%Nn.Jf',Y_`T%_435\hQ'(M&tYQ`FWu:L;2Af2V.p>mTmBWE&;%Bn?@d6!NhbUH2l*O%2'Q_O3fH[jc$N",$QjDZCFu5p`(RWPTt#
%0;tM$/a=,4^rqPAOf<2T7E;f?i)?u(5pc!@hZ]gIK]LUfg-GEE#'pkI?<'.CPb:TCJ^RReCfj'AHr%[!eNeOY[[+6'!*qN+L*L%+
%7`<Z5_QT-7J7e/u5f'69gbHC>5fOq#jQd[m88'><>X_7lPkgkZB>p4G+-bWdI&s6/Aq$11"0Mc(C+-dtYK8"6;R*P8.YAs5!,5D>
%=nLk_loVY<8O>FnF>3tcoVGf!iAP=1/mEY$"c(9qHoscB'>HJ=-!E]/[`>!oiB/l`]*)"V1uV;mACNMmHn&m)n]&CfNoe/BLT.gg
%m<NqDC4<s\N?gPlUCc@&]!FZtWZ'o'ZsYA:Z5@YG5d(0c7JcmD]`hQT&US$\&GNWbSL0,b2sROH.'CEAC<BL*!C<sn"(9GOo"KoQ
%P#.].R:9?-a")^U"PkCBX39KrbSH>[V'W@+JW<RjZC.JGRJ)gbqM>44o9GL]7LG+8Jr7L9d/pO)n5rXO621_5"L['M_a^s>[F+Q$
%Fu;[W`NA(/R*.6Ce!?^UI<Lh"VPkGD8*"VQjF<rFDPNCRV'nMZ<ku@">ek%oAUE=_[pr4$!NWp23k@h]45gU:'`.;28dl>e"M#Ak
%WsMMkEnRA4k\s%HnAAZ^aETa<@ICaJD](W0n"8bcG%SN2J.(P^27r/Wpd+'B$",S`>4`:i.MgY/@8><k!,Z`F[uaZe6U6YE6NPDu
%n-6_gbW2e3jTO2^KN6Jkk$ef&6:+X!.R%g"WTduP+XV"g=3VWG42SW,,N"iV3#p:S63LqZ,GGJ!ak*Yp+F4%a[MFGLbtN;"7Vcs8
%Mb.ctY(]Z8ep\8M'V"47[@#>Qh\9?)<G,^+=GhZlAbHYCZ#4=hBo]+%3<VM$A5l]_A-W6GI^9CPc3mtfAd$^(93Ml.,&j?%]6T?T
%Z:TM_n[&01#oTg+HsQ:,o\K5T#t%8.(QJJPjL@hFq(tH!OeY#[nW`P%.-o"t1k`\/]-Rs6g*LU:^:&-gZnk$:'o8#18XV0q:=I#i
%@/DgDA?rmS3#,&BW;DB?h=Lo-,d]b6>`F@??/79t+Si-9#Q^ddhX/0S'5sQ!XtD"C'$5b7I*KN.0LY\d:Y>6L)8"]M7,?,JbCfW/
%*;X=(CQ@-o6-G0ZgY%:Q3Wn<fr'_;X5C&2pM3Dk%RhaDQn'.<5m;Aeb==WRa#``mT'2I61Jd#Q>gCj1:54BnWJce?A+DbuU\)fcO
%h9b<!m8oldf@qmJ5nCh_J789$4B>8*:nI:<>ILo[:k"PD3AkQ'kk)W>fM?hiLZA$_4af%f,N)RW5J$9<H)?DcDn`u`SsCWq)!d2[
%Y)a8$)[b<D%V8C#iaKp/dMEZh'roiu#gbrA+V$6KjuISE7TX@Mq'gtL!?dH7eW;+Z].6WqPDCKjfa>PNQjGBSo,!lhX\pNmosBdN
%;r#AF']9gKYhj_+TSjuA:%mbKjW":R;:!@\Ct7*HKdLS*'-kMC/le7>BMm8q^``a#N*<lmVaa)g2SGcTbVlD)gd%q\/:dM3,@Xff
%)#9F`-jp3%Z7)p^=u<]epn<n,II(c6OOEeL\$_1@DIH]m0#2@+[kON)fgH)h2Lql[^k#5HK2`VY$TQk[U:X2_!sO]/(dUL7bp\;c
%d5#S8=Z'MH'4nHM(B3X(am!5SVFGah%>O(tCkNLjOVN_i1O2:(i,"PXjo/\<+>[Q2#o]=N%l;]D__O(][FC2GU4*rI[B,a.2sDLl
%+e8`'&QWCT:.84<G1.R20=]X?/]Fu11J>(39:M5k__O$EJT;*MKAYL4lK5IL1u.'4NW@a"k)q;$n`jg1CkcsYB^:AA)[`>ha6CNA
%l+Xa4MpTj^*&9RR9?c2"`6:s3\jlU*g-*D#(KT.])M'gfM8%Qb(U-9FN2G-ih1t)gd"%aI[u%aO^/0)Zg*(M#+Dqsok#CsFai",&
%R\:7@dm*cqQZ)oa(I*9Ca/:$Zk1s+Rq7EPSHM[/-J!&3`O3\m-0>HU98`)afT8!&tH/6C+o\RO]$/9t6cupae9r2t3O6G"k[=u2'
%8<U`Se"0p,ir,hoU(C?peD2$0>HPFnYG2hm4/jRXf2]?7b/)$bY+^adLRH\rlN_bL>[`'8)S,gslX8N(ot/d2S360"F:)!%`,bVQ
%Qcb<[d:^q5k%]H8OP-q^j#=3U*6#ig.DDH-,3[Vs_S8">N]3`^@KG)aX*E@$(U1Xknbe;f@snbU*(uO^]5E@@Ie75/mdBpglPWG=
%p2W1t++FC%]^:"Qr@mhi';a?KGRZGDpdaRPlUV$;D7cMS:s"MWZ^J8oLa*X*]mhat63<kI:=`G[GpnbtS\l:RXM9V%q`9V?Qft<u
%fA-kSmlmd9k0[AgEk/nZ>'hl.`I)sp=m83-i:V`Sa,$o\H/<2Z2+hC@ng93O3HLoKH1O!CpKR6oBfWr"]cqa?=0m,+.;G9[Zfc5F
%gY)2FX4`E>`gbZQfA4`DJ+qL[JKaa+gbjf$[r^`+=*#0"]U:j1fu^RHk"Kl@G[PgS3GF917J.h/.];KrgqPNE"g_9;msV!rZGKk^
%"*dkeTINTk^RUP7pf8Z6,$lc"Ki1;C_(?<B"^G^l/`#3)'8lbaja6U_al@g@ie*hVPF4J&dZ_5VIm9QONH'"e6f70]9N&$k(&:gG
%2fh;pE,$W!a`BdD)<3TrGOON1^Kpf)q&eH3\Tj`S>(6-]5a)aG([.nNM5\[P_\a]r8(`M4&h>5baomc6J!+WeV$KEIh\7b;<XEG9
%_MRmiV-2.T+!a&.(b2PNP$Wa'_1dQI>2ADTS;j..fc-%T1f#X:X@^E6/^9KoC-n8"Q/gAV<-i^+Nq<BDC)(hHm4QF6q2HVe8\Sh%
%L7T4'C)P7>%Kh_>[=HDW05ScJ,'HuH4h`!Z.`n5Pif0F(73m$Kg@>7M^5.B0*Y]Uqa52'Ak$^#PC&oGa8jjGQ/f<lmF<&#!+SpiW
%3,f:h@[AS\mETW-8o^'s-j$r9ZXNUK:h!9+h^;N>0gOo2&-Fp-Ylk=kGcN$VLlJrs&=0:1ZKta3S9E>n&uA`uI<6k&$nQ\'mML<:
%UoP9XDI8Au2"q@P/mq@l.FX^h&^44L24FLKT*'cVjo`':o#2FY%;Kn?d;eEJeCh0u#H>'OCKD9F6X5R;!eS"*m^h;+b&%ice\#u_
%JjV%sG0^0KX8@nMr:)?#EE!onrHi)cnFSup!l\&7YSBmsY(I7q!bNqRiDIs_:_NA7'iJ.f>auu"lUTs\EA"S,f28[s2Cas&,2Kk"
%k=G?t!e%+HC85bp'*j6a53hVK;\*E$cL#6)U4"2-nXIiN8L8A4X6G(+)*%/$pV#+s^"]FYHhlcXkI4T4iu#-)'CK_CX0>D#6E.qu
%H1Hclp&aK\O)7oId!*=oh]!r\%.9),M5e+nM&0=mf=(:h^qM_F[d:1,p:4=UAcMS,GA"m!RJ+o&ao"lcYQU05a@tVI.DC!HnoH's
%dG0,R_ug*%6\k2\gKdcfH+cB0p[J,n^P&/&@2)Hfa1[>gYO6!b59`cIiH2);Rp9_eolI)T9s@)>9$R2H=J#[`J6Wc_2J1D*CuRn'
%oX3qr\$,OLf^OYt2Z'UkO=/'HmKg<a.r5Aq*\0,M,1kqL.MTk=5<"njc6Q[j%@(BUVsDo@b70<WrFjtT],ei2Y(_fX#*4<#Y]5@a
%:$dWd_0Yg<r(YM$^k+8"'[:/;fcF\Tf#TIoF.0P1%0OSid!SmQ+,R'FL(`s,6koDSEg1RcZ3f>G,:"[Ejn-6r#D>1*!-HB:d5+8X
%3uKYA-9q'\Qg45g:aXa()$-\6_DYZO/OIM"'L]0>6!mj)`[#je=?\.NKFY5PC_5WP9RYEuhE>7;b!o\5odT1SF.uKg6:G#kS361o
%nPk1,$obo992jN;B(mG-&X_J<LsDP<$pV3Z7XNUS&?r?VUCCni$^!Y(7sJ)eN'EfKjB'e=MXID>+I)1X$:9.j/#d&P2XP?/jWM%Z
%jH2fqnd?]++e)K:10m*MO[-eUnZuZ"M,39IjZTt1]<e07dq"MhX&2GH_Oq96K&$;i)ApKs)\70+kVnsoCO@d!pqc\ke&Z\<H48$u
%#WcKfT,PWuKKU[X<U$0A*-@jbmK8m40n#mI'UGg)C(:^_N?1(Y7TK[ZMR5mLV_%B*q<K2n,=2NN5"N[bqUW8'.X75Q?,5p7[FmRt
%?*ghlc89g)ZL_5@`A/%_@%GhnXa$fc"E>Y$esJbSp-)5i\jsWcEK,QB]m5e"D9-t<9>RV%<l[QTrt4CSN$k\1YhY0ZaaB/mNRC'/
%AG3WA5?6bBoI\jdC-H@e$/%Nr;:9/BIjsaX<hiP-`<qqY!88(d:uE7'ksJR/b4p*/-fU#<I<Dot5W=Ud:mm6B=hZ]LQOau,CD(OH
%TATY>i@k6'([]g=s8?lmIeE*?YMZuQ#/:#EYC?B:hnT0U^OQ"GlS!_ZgHU,Zc+BmWIfFb>g@,#cr9<IT?bcKes8:jAG>E_bY<Vq<
%7W?bdi6*d'ric@m`K1!/'4R0D~>
%AI9_PrivateDataEnd
