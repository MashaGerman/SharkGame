%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: LevelComplete.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Daniel
%%CreationDate: 5/22/2017
%%BoundingBox: 0 0 439 430
%%HiResBoundingBox: 0 0 438.3985 429.7544
%%CropBox: 0 0 438.3985 429.7544
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">LevelComplete</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2017-05-22T17:27:59+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-05-22T17:28+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-05-22T17:28+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqtlliii&#xA;eWV1jijUtJIxCqqqKkknYADFXluo/wDOSP5eW1xJb2SX2qyISA1nACjEbVBleI0r3pmRHTTLTLUR&#xA;CUzf85H3UrEaZ5Nvrgdmnk9AfhHKPxzIj2dkPQ/Jx5doYh1HzCXzfnn+Z85IsvK1nbA9GuZjIBt3&#xA;o8JO/hl8eyMh6H7HHl2viHUfag5/zQ/O65Pwfomxr2SN2pX/AF2m6ZfHsaXX7/1NEu28Y5fd+tBy&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:A87643EA023FE711860BF351378AC283</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:A87643EA023FE711860BF351378AC283</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0a2dcacb-fe49-4e00-80ac-ea551654d76a</stRef:instanceID>
            <stRef:documentID>xmp.did:88CF4BEDC83EE711B776D525864049CD</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:52793BD7478DE311B8EFE231608A569F</stEvt:instanceID>
                  <stEvt:when>2014-02-04T03:55:44+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9a9d8186-f7e5-2841-93c0-3f761fcf5a16</stEvt:instanceID>
                  <stEvt:when>2014-04-22T12:20:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3C711F08A53DE711A0BF9955A1B623D4</stEvt:instanceID>
                  <stEvt:when>2017-05-20T23:41:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:42A60208C53EE711880B9C849F66AC23</stEvt:instanceID>
                  <stEvt:when>2017-05-22T10:25:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:88CF4BEDC83EE711B776D525864049CD</stEvt:instanceID>
                  <stEvt:when>2017-05-22T10:30:35+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A87643EA023FE711860BF351378AC283</stEvt:instanceID>
                  <stEvt:when>2017-05-22T17:28+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>440.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Standard-Farbfeldgruppe</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Weiß</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Schwarz</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Rot</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Gelb</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Grün</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blau</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -429.754 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 429.754 li
438.398 429.754 li
438.398 0 li
cp
clp
[1 0 0 1 0 0 ]ct
419.299 44.2983 mo
296.6 37.1714 174.895 36.5581 52.1836 42.4722 cv
54.9297 45.6851 61.3789 54.1362 61.3789 54.1362 cv
51.4395 64.9673 li
56.8223 76.0659 li
43.4326 79.7651 li
42.0801 93.6304 li
28.3467 91.0894 li
21.3076 103.738 li
21.3076 103.738 12.8525 97.0698 8.60645 94.7603 cv
8.8291 97.8667 9.0459 100.972 9.25684 104.079 cv
14.7939 205.767 13.833 307.457 6.37598 409.144 cv
5.80371 416.857 11.5791 423.529 19.3076 423.982 cv
152.641 431.681 285.975 431.677 419.307 423.974 cv
427.035 423.521 432.813 416.849 432.238 409.136 cv
423.678 292.47 423.674 175.802 432.23 59.1353 cv
432.803 51.4233 427.025 44.7505 419.299 44.2983 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.478431 .164706 .129412 rgb
f
428.535 59.1353 mo
428.951 53.6392 424.813 48.8589 419.307 48.5327 cv
299.184 41.478 179.059 40.8022 58.9355 46.4585 cv
66.9756 53.9683 li
55.8105 64.397 li
61.3555 78.6353 li
46.7607 83.1665 li
45.5791 98.4019 li
30.4619 96.1753 li
22.7881 109.388 li
12.9482 102.707 li
18.7139 204.849 17.7588 306.994 10.0811 409.136 cv
9.66504 414.632 13.8037 419.412 19.3076 419.738 cv
152.641 427.57 285.975 427.57 419.307 419.738 cv
424.811 419.412 428.951 414.632 428.535 409.136 cv
419.766 292.47 419.766 175.802 428.535 59.1353 cv
cp
.929412 .929412 .929412 rgb
f
57.3945 68.4644 mo
61.5264 65.3169 66.0146 62.5767 70.8887 60.3521 cv
102.814 45.7847 142.608 47.3765 176.968 46.0776 cv
215.924 44.605 255.867 45.3823 294.372 49.9468 cv
323.754 53.4312 353.11 56.9761 381.726 64.5796 cv
398.551 69.0503 412.342 77.6323 420.182 93.231 cv
422.249 97.3442 424.001 101.582 425.501 105.916 cv
426.36 90.3218 427.363 74.728 428.535 59.1353 cv
428.951 53.6392 424.813 48.8589 419.307 48.5327 cv
299.184 41.478 179.059 40.8022 58.9355 46.4585 cv
66.9756 53.9683 li
55.8105 64.397 li
57.3945 68.4644 li
cp
.819608 .819608 .819608 rgb
f
19.3076 419.738 mo
22.9102 419.95 26.5127 420.132 30.1152 420.333 cv
30.6162 413.677 30.9619 407.22 31.2627 401.17 cv
32.71 372 32.7813 342.291 32.8145 313.092 cv
32.8574 275.447 22.1709 238.933 19.166 201.735 cv
16.9072 173.763 15.5176 147.968 23.7793 120.775 cv
26.292 112.504 29.6113 104.325 33.8125 96.6694 cv
30.4619 96.1753 li
22.7881 109.388 li
12.9482 102.707 li
18.7139 204.849 17.7588 306.994 10.0811 409.136 cv
9.66504 414.632 13.8037 419.412 19.3076 419.738 cv
cp
f
423.906 328.829 mo
419.694 349.94 414.261 370.767 408.12 391.568 cv
405.218 401.399 402.19 411.144 399.092 420.851 cv
405.83 420.496 412.568 420.133 419.307 419.738 cv
424.811 419.412 428.951 414.632 428.535 409.136 cv
426.522 382.367 424.995 355.598 423.906 328.829 cv
cp
f
24.6357 113.389 mo
24.6357 113.398 24.6299 113.408 24.6123 113.414 cv
22.2627 112.702 20.0479 111.464 17.6699 110.75 cv
20.0986 112.801 22.7393 114.6 25.5371 116.109 cv
27.335 112.556 28.7559 108.792 29.6699 104.916 cv
27.7041 107.547 26.0146 110.38 24.6279 113.366 cv
24.6338 113.373 24.6348 113.378 24.6357 113.389 cv
cp
1 1 1 rgb
f
49.3066 101.212 mo
48.8887 100.947 41.9766 101.521 40.6699 101.75 cv
44.1025 102.748 47.6709 103.296 51.2461 103.375 cv
51.2197 100.552 50.8574 97.7378 50.1699 94.9995 cv
49.7207 97.0513 49.7158 99.1772 49.3066 101.212 cv
cp
f
65.7744 81.7026 mo
65.4541 82.5815 59.2148 83.6821 58.5029 83.9155 cv
61.7598 83.9038 65.0166 83.6401 68.2314 83.1284 cv
66.585 77.8335 64.459 72.6733 61.7529 67.8315 cv
62.5176 71.9985 63.0664 78.3315 65.7744 81.7026 cv
cp
f
75.4932 55.1909 mo
73.1084 53.2153 70.4785 51.5542 67.6699 50.2495 cv
68.1514 50.8687 72.1133 54.3999 72.04 54.9487 cv
72.0391 54.9565 72.0361 54.9614 72.0332 54.9653 cv
72.0264 54.9712 72.0176 54.9741 72.0088 54.9741 cv
72.0146 54.9771 72.0186 54.9819 72.0186 54.9878 cv
70.0322 56.2983 68.1807 57.812 66.5029 59.4995 cv
69.6768 58.4663 72.7002 57.0181 75.4932 55.1909 cv
cp
f
61.0557 414.318 mo
65.7275 408.875 68.3594 406.886 67.5869 401.166 cv
66.3369 391.916 56.2676 399 50.9297 390.167 cv
45.9072 381.857 59.2988 380.822 61.6855 375.824 cv
64.3818 370.175 55.5166 361.949 50.0508 363.8 cv
49.9697 363.994 49.96 364.191 50.0215 364.394 cv
48.6689 365.761 48.9355 368.669 46.8535 369.701 cv
45.5088 370.365 43.2578 369.638 42.0029 369.166 cv
37.8965 367.621 37.2705 364.535 38.6699 360.667 cv
42.7129 349.505 61.8135 349.791 51.0938 335.595 cv
47.2686 330.527 42.2451 327.988 35.9346 328.4 cv
28.96 328.855 23.7344 331.818 23.6689 338.89 cv
23.6182 344.455 25.6318 353.007 19.083 355.439 cv
17.3057 356.099 15.3828 356.173 13.4648 355.806 cv
12.5361 373.583 11.417 391.359 10.0811 409.136 cv
9.66504 414.632 13.8037 419.412 19.3076 419.738 cv
33.4619 420.57 47.6162 421.292 61.7705 421.949 cv
59.5508 419.507 58.791 416.957 61.0557 414.318 cv
cp
1 .717647 .388235 rgb
f
422.896 300.201 mo
420.461 298.056 417.832 296.63 413.662 296.066 cv
408.498 295.367 405.043 296.027 403.086 299.166 cv
401.229 302.148 400.334 307.632 406.352 310.484 cv
413.457 313.849 412.598 319.972 407.326 325.359 cv
404.463 328.287 398.77 327.232 394.904 327.833 cv
391.891 328.3 388.211 329.292 385.939 331.324 cv
381.09 335.662 379.357 343.146 384.986 347.425 cv
387.396 349.257 392.795 349.636 395.215 348.748 cv
398.906 347.39 405.84 340.855 410.938 348.099 cv
412.717 350.626 413.615 353.173 413.336 356.408 cv
412.668 364.171 405.52 364.951 399.338 367.49 cv
392.563 370.273 390.506 380.484 394.762 386.416 cv
399.287 392.716 407.5 387.953 412.412 391.726 cv
416.945 395.208 414.666 398.736 411.912 402.505 cv
407.283 408.845 415.506 411.552 420.961 413.837 cv
422.77 414.595 424.689 415.224 426.664 415.71 cv
428 413.88 428.721 411.58 428.535 409.136 cv
425.805 372.824 423.928 336.511 422.896 300.201 cv
cp
f
384.553 357.625 mo
384.135 359.873 385.9 362.085 388.498 362.568 cv
391.094 363.05 393.537 361.619 393.955 359.373 cv
394.371 357.126 392.605 354.914 390.01 354.431 cv
387.412 353.949 384.969 355.378 384.553 357.625 cv
cp
f
399.398 280.681 mo
398.561 285.199 401.152 289.468 405.191 290.22 cv
409.23 290.97 413.186 287.916 414.025 283.4 cv
414.863 278.884 412.271 274.613 408.23 273.863 cv
404.193 273.113 400.238 276.166 399.398 280.681 cv
cp
f
376.166 134.575 mo
370.072 122.451 359.354 115.782 346.277 112.307 cv
324.038 106.398 301.222 103.642 278.387 100.935 cv
248.461 97.3862 217.417 96.7827 187.141 97.9272 cv
160.437 98.937 129.509 97.6997 104.696 109.021 cv
85.5723 117.749 73.9834 136.558 68.083 155.982 cv
61.6621 177.117 62.7412 197.165 64.4971 218.904 cv
66.833 247.814 75.1387 276.193 75.1055 305.451 cv
75.0791 328.143 75.0234 351.233 73.8984 373.905 cv
73.1709 388.563 72.1152 406.279 68.0518 422.248 cv
161.562 426.402 255.071 426.695 348.58 423.145 cv
354.919 404.327 361.142 385.582 366.792 366.442 cv
373.755 342.851 379.553 319.218 382.93 294.918 cv
385.243 278.264 384.138 260.314 384.301 243.521 cv
384.642 208.276 392.316 166.71 376.166 134.575 cv
cp
.94902 .94902 .94902 rgb
f
24.2666 313.992 mo
23.6396 317.371 25.958 320.636 29.4502 321.285 cv
32.9404 321.933 36.2783 319.72 36.9072 316.341 cv
37.5342 312.962 35.2148 309.695 31.7236 309.046 cv
28.2334 308.398 24.8945 310.613 24.2666 313.992 cv
cp
1 .717647 .388235 rgb
f
181.738 83.2461 mo
223.724 110.687 li
266.074 83.8135 li
276.359 132.904 li
325.309 143.85 li
297.868 185.835 li
324.742 228.187 li
275.649 238.47 li
264.705 287.42 li
222.719 259.979 li
180.368 286.853 li
170.084 237.76 li
121.135 226.816 li
148.575 184.83 li
121.701 142.48 li
170.794 132.196 li
181.738 83.2461 li
cp
1 1 1 rgb
f
379.307 311.136 mo
379.307 316.636 374.807 321.136 369.307 321.136 cv
69.3076 321.136 li
63.8086 321.136 59.3086 316.636 59.3086 311.136 cv
59.3086 211.135 li
59.3086 205.635 63.8086 201.135 69.3076 201.135 cv
369.307 201.135 li
374.807 201.135 379.307 205.635 379.307 211.135 cv
379.307 311.136 li
cp
f
89.2217 222.809 mo
89.5308 218.964 li
101.457 218.964 li
101.821 222.809 li
97.9209 222.809 li
97.9209 239.365 li
93.3188 239.365 li
93.3188 222.809 li
89.2217 222.809 li
cp
.478431 .164706 .129412 rgb
f
103.585 218.964 mo
108.16 218.964 li
108.16 239.365 li
103.585 239.365 li
103.585 218.964 li
cp
f
118.063 238.383 mo
114.92 229.572 li
114.92 239.365 li
110.487 239.365 li
110.487 218.964 li
115.173 218.964 li
118.063 228.14 li
120.925 218.964 li
125.611 218.964 li
125.611 239.365 li
121.178 239.365 li
121.178 229.572 li
118.063 238.383 li
cp
f
127.852 239.365 mo
127.852 218.964 li
137.055 218.964 li
137.055 222.809 li
132.341 222.809 li
132.341 227.271 li
136.831 227.271 li
136.831 230.918 li
132.341 230.918 li
132.341 235.38 li
137.055 235.38 li
137.055 239.365 li
127.852 239.365 li
cp
f
89.7832 249.631 mo
99.2959 249.631 li
99.2959 253.476 li
94.2446 253.476 li
94.2446 257.938 li
99.0713 257.938 li
99.0713 261.585 li
94.2446 261.585 li
94.2446 270.033 li
89.7832 270.033 li
89.7832 249.631 li
cp
f
101.201 249.631 mo
105.775 249.631 li
105.775 270.033 li
101.201 270.033 li
101.201 249.631 li
cp
f
108.944 264.644 mo
110.319 267.03 114.247 268.041 114.696 265.542 cv
114.865 264.449 114.444 263.326 113.49 262.652 cv
111.609 261.361 108.944 261.53 107.934 258.696 cv
107.232 256.732 107.597 254.066 108.13 252.916 cv
109.14 250.642 111.301 248.958 114.836 249.098 cv
115.734 249.126 117.25 249.519 118.12 250.25 cv
117.474 255.497 li
116.745 253.953 115.707 253.504 114.78 253.476 cv
113.181 253.476 112.199 254.515 112.086 256.058 cv
111.974 257.517 112.676 258.247 113.995 258.808 cv
116.773 259.958 118.821 260.66 119.214 264.308 cv
119.354 265.767 119.018 267.338 118.372 268.32 cv
117.306 269.949 115.342 270.425 113.574 270.425 cv
111.862 270.425 109.786 269.919 108.663 269.162 cv
108.944 264.644 li
cp
f
120.81 249.631 mo
125.355 249.631 li
125.355 257.798 li
129.06 257.798 li
129.06 249.631 li
133.605 249.631 li
133.605 270.033 li
129.06 270.033 li
129.06 261.446 li
125.355 261.446 li
125.355 270.033 li
120.81 270.033 li
120.81 249.631 li
cp
f
141.317 270.033 mo
141.317 249.631 li
150.521 249.631 li
150.521 253.476 li
145.807 253.476 li
145.807 257.938 li
150.296 257.938 li
150.296 261.585 li
145.807 261.585 li
145.807 266.047 li
150.521 266.047 li
150.521 270.033 li
141.317 270.033 li
cp
f
158.655 253.504 mo
157.533 262.456 li
160.535 262.456 li
159.357 253.504 li
158.655 253.504 li
cp
156.972 266.16 mo
156.551 270.033 li
151.78 270.033 li
155.4 249.631 li
162.528 249.631 li
166.147 270.033 li
161.518 270.033 li
161.041 266.16 li
156.972 266.16 li
cp
f
165.217 253.476 mo
165.526 249.631 li
177.452 249.631 li
177.817 253.476 li
173.917 253.476 li
173.917 270.033 li
169.314 270.033 li
169.314 253.476 li
165.217 253.476 li
cp
f
179.497 270.033 mo
179.497 249.631 li
188.701 249.631 li
188.701 253.476 li
183.987 253.476 li
183.987 257.938 li
188.477 257.938 li
188.477 261.585 li
183.987 261.585 li
183.987 266.047 li
188.701 266.047 li
188.701 270.033 li
179.497 270.033 li
cp
f
190.522 270.033 mo
190.522 249.631 li
194.31 249.631 li
198.604 259.65 li
198.604 249.631 li
202.925 249.631 li
202.925 270.033 li
199.333 270.033 li
194.899 260.042 li
194.899 270.033 li
190.522 270.033 li
cp
f
90.625 295.311 mo
92 297.697 95.9282 298.707 96.3774 296.208 cv
96.5459 295.115 96.125 293.992 95.1709 293.319 cv
93.2905 292.028 90.625 292.197 89.6147 289.363 cv
88.9131 287.398 89.2778 284.732 89.811 283.582 cv
90.8213 281.308 92.9819 279.625 96.5176 279.765 cv
97.4155 279.793 98.9312 280.186 99.8008 280.916 cv
99.1553 286.164 li
98.4258 284.62 97.3877 284.171 96.4614 284.142 cv
94.8623 284.142 93.8799 285.181 93.7676 286.724 cv
93.6553 288.183 94.3569 288.914 95.6758 289.474 cv
98.4541 290.625 100.502 291.326 100.895 294.974 cv
101.036 296.433 100.699 298.005 100.053 298.987 cv
98.9868 300.615 97.0229 301.091 95.2549 301.091 cv
93.5435 301.091 91.4668 300.586 90.3442 299.829 cv
90.625 295.311 li
cp
f
110.376 284.086 mo
107.738 284.171 106.644 288.015 106.7 290.906 cv
106.7 293.824 107.542 297.023 109.843 297.303 cv
110.629 297.388 112.088 297.023 113.21 295.395 cv
113.323 300.166 li
112.032 300.867 110.741 301.091 109.787 301.091 cv
104.596 301.12 102.126 296.714 102.042 290.597 cv
101.93 284.985 104.203 279.738 110.264 279.765 cv
111.415 279.765 112.733 280.102 113.688 280.972 cv
113.098 286.191 li
112.116 284.311 111.021 284.086 110.376 284.086 cv
cp
f
118.988 290.484 mo
118.988 293.291 119.549 297.332 122.13 297.444 cv
124.684 297.332 125.246 293.291 125.246 290.484 cv
125.246 287.707 124.684 284.115 122.13 283.947 cv
119.549 284.115 118.988 287.707 118.988 290.484 cv
cp
114.273 290.428 mo
114.273 285.322 116.182 279.738 122.13 279.765 cv
128.051 279.738 129.959 285.322 129.932 290.428 cv
129.932 295.591 128.136 301.12 122.13 301.091 cv
116.098 301.12 114.33 295.591 114.273 290.428 cv
cp
f
140.393 287.37 mo
140.393 285.63 139.776 283.75 137.924 283.75 cv
137.447 283.75 136.914 283.806 136.493 283.89 cv
136.493 291.074 li
139.187 292.083 140.393 289.896 140.393 287.37 cv
cp
144.771 300.699 mo
139.972 300.699 li
136.97 294.414 li
136.493 294.414 li
136.493 300.699 li
132.115 300.699 li
132.115 280.298 li
133.266 280.271 135.987 279.849 137.278 279.849 cv
138.597 279.849 140.141 279.906 141.487 280.607 cv
143.704 281.73 144.911 284.086 144.771 288.324 cv
144.49 291.775 143.255 293.431 141.375 294.105 cv
144.771 300.699 li
cp
f
146.479 300.699 mo
146.479 280.298 li
155.682 280.298 li
155.682 284.142 li
150.968 284.142 li
150.968 288.605 li
155.458 288.605 li
155.458 292.252 li
150.968 292.252 li
150.968 296.714 li
155.682 296.714 li
155.682 300.699 li
146.479 300.699 li
cp
f
304.141 218.964 mo
315.673 218.964 li
315.673 221.967 li
309.416 239.365 li
304.562 239.365 li
310.65 223.23 li
310.65 222.809 li
304.141 222.809 li
304.141 218.964 li
cp
f
316.007 237.373 mo
316.007 235.998 317.102 234.875 318.448 234.875 cv
319.823 234.875 320.946 235.998 320.946 237.373 cv
320.946 238.748 319.823 239.842 318.448 239.842 cv
317.102 239.842 316.007 238.748 316.007 237.373 cv
cp
316.007 227.355 mo
316.007 225.98 317.102 224.885 318.448 224.885 cv
319.823 224.885 320.946 225.98 320.946 227.355 cv
320.946 228.73 319.823 229.852 318.448 229.852 cv
317.102 229.852 316.007 228.73 316.007 227.355 cv
cp
f
321.702 220.873 mo
323.302 219.385 325.547 218.375 328.269 218.404 cv
334.049 218.459 335.34 222.641 333.965 227.665 cv
333.15 230.667 331.243 233.135 329.363 235.38 cv
334.189 235.38 li
334.189 239.365 li
322.797 239.365 li
322.797 236.194 li
324.059 235.072 325.294 233.893 326.305 232.575 cv
327.314 231.255 328.998 229.207 329.672 227.075 cv
330.316 224.998 330.121 222.248 327.174 222.584 cv
325.658 222.752 324.48 223.904 324.088 225.306 cv
321.702 220.873 li
cp
f
342.042 218.431 mo
344.091 218.431 346.448 219.273 347.262 221.49 cv
348.244 224.184 347.515 227.551 344.904 228.673 cv
347.009 229.263 348.104 231.48 348.104 233.668 cv
348.104 235.464 347.627 236.98 346.7 237.962 cv
345.438 239.281 343.417 239.73 341.369 239.758 cv
339.348 239.758 337.244 239.197 335.841 238.13 cv
336.543 233.921 li
337.412 235.184 339.04 236.054 340.61 236.054 cv
342.21 236.054 343.558 235.296 343.502 233.472 cv
343.417 231.2 342.042 230.75 339.741 230.75 cv
337.693 230.75 li
337.693 227.383 li
338.787 227.383 li
340.667 227.383 343.193 226.906 343.249 224.548 cv
343.277 223.034 342.295 222.36 340.864 222.36 cv
339.433 222.36 337.833 223.202 336.991 224.184 cv
336.149 219.834 li
337.861 218.825 339.966 218.431 342.042 218.431 cv
cp
f
314.24 249.631 mo
318.422 249.631 li
318.422 270.033 li
313.764 270.033 li
313.764 253.476 li
311.743 253.476 li
314.24 249.631 li
cp
f
319.963 251.54 mo
321.563 250.052 323.807 249.042 326.529 249.071 cv
332.31 249.126 333.601 253.308 332.226 258.332 cv
331.411 261.333 329.503 263.802 327.623 266.047 cv
332.45 266.047 li
332.45 270.033 li
321.057 270.033 li
321.057 266.861 li
322.319 265.739 323.555 264.56 324.564 263.242 cv
325.575 261.923 327.259 259.875 327.932 257.742 cv
328.577 255.666 328.381 252.916 325.435 253.251 cv
323.919 253.419 322.74 254.571 322.348 255.974 cv
319.963 251.54 li
cp
f
343.361 255.609 mo
343.39 254.177 342.632 252.943 341.032 252.943 cv
339.489 252.943 338.703 254.207 338.731 255.637 cv
338.76 256.732 339.518 258.078 341.032 258.078 cv
342.604 258.078 343.334 256.675 343.361 255.609 cv
cp
343.586 263.943 mo
343.643 261.754 342.407 260.884 341.032 260.884 cv
339.714 260.884 338.479 261.754 338.507 263.943 cv
338.591 265.739 339.602 266.75 341.032 266.75 cv
342.52 266.75 343.529 265.739 343.586 263.943 cv
cp
334.242 265.794 mo
333.849 263.298 334.354 260.408 336.936 259.453 cv
335.195 258.471 334.747 256.759 334.775 254.851 cv
334.859 251.147 337.272 249.071 341.032 249.098 cv
344.849 249.071 347.262 251.147 347.346 254.851 cv
347.374 256.759 347.037 258.471 345.242 259.453 cv
347.852 260.408 348.272 263.298 347.879 265.794 cv
347.431 268.938 344.624 270.425 341.032 270.425 cv
337.496 270.425 334.69 268.938 334.242 265.794 cv
cp
f
294.295 292.87 mo
297.915 292.87 li
297.915 284.423 li
297.69 284.423 li
294.295 292.87 li
cp
302.265 292.87 mo
303.864 292.87 li
303.864 296.517 li
302.265 296.517 li
302.265 300.699 li
297.915 300.699 li
297.915 296.517 li
290.198 296.517 li
290.198 293.066 li
295.698 280.298 li
302.265 280.298 li
302.265 292.87 li
cp
f
311.239 279.765 mo
313.288 279.765 315.645 280.607 316.459 282.824 cv
317.44 285.517 316.711 288.885 314.102 290.007 cv
316.206 290.597 317.301 292.814 317.301 295.002 cv
317.301 296.798 316.823 298.314 315.897 299.296 cv
314.635 300.615 312.614 301.064 310.565 301.091 cv
308.545 301.091 306.44 300.531 305.038 299.464 cv
305.739 295.255 li
306.609 296.517 308.236 297.388 309.809 297.388 cv
311.407 297.388 312.755 296.63 312.698 294.806 cv
312.614 292.533 311.239 292.083 308.938 292.083 cv
306.89 292.083 li
306.89 288.716 li
307.984 288.716 li
309.864 288.716 312.39 288.24 312.446 285.882 cv
312.474 284.367 311.492 283.694 310.061 283.694 cv
308.63 283.694 307.03 284.536 306.188 285.517 cv
305.347 281.168 li
307.059 280.158 309.163 279.765 311.239 279.765 cv
cp
f
323.694 284.142 mo
323.189 288.885 li
324.003 288.408 325.069 288.24 326.08 288.24 cv
329.223 288.24 331.243 290.569 331.327 293.992 cv
331.467 298.482 328.914 300.895 324.368 301.091 cv
322.432 301.12 320.411 300.755 318.98 299.829 cv
319.232 295.255 li
320.383 297.023 321.982 297.724 323.555 297.724 cv
325.014 297.724 326.332 296.911 326.585 295.171 cv
326.894 293.123 325.939 291.607 323.75 291.775 cv
322.713 291.859 321.702 292.308 320.805 293.15 cv
318.644 292.224 li
320.104 280.298 li
329.503 280.298 li
329.503 284.142 li
323.694 284.142 li
cp
f
337.412 290.428 mo
337.412 295.058 338.366 297.444 340.331 297.444 cv
342.295 297.444 343.249 295.058 343.249 290.428 cv
343.249 285.798 342.295 283.947 340.331 283.947 cv
338.366 283.947 337.412 285.798 337.412 290.428 cv
cp
348.02 290.428 mo
348.02 295.367 346.561 301.091 340.331 301.091 cv
334.102 301.091 332.643 295.367 332.643 290.428 cv
332.643 285.49 334.102 279.765 340.331 279.765 cv
346.561 279.765 348.02 285.49 348.02 290.428 cv
cp
f
103.06 189.44 mo
101.313 189.441 99.6504 188.904 98.25 187.888 cv
95.1484 185.642 93.9316 181.578 95.2246 177.775 cv
97.1406 172.099 98.7363 167.009 99.9688 162.652 cv
100.482 160.746 99.5918 159.068 97.6387 158.308 cv
92.8848 156.482 87.7422 154.463 81.8379 151.708 cv
77.5771 149.73 75.6104 145.336 77.2725 141.49 cv
78.2412 139.243 80.3105 137.541 82.9512 136.82 cv
83.873 136.569 84.8398 136.441 85.8203 136.441 cv
85.9863 136.441 86.1543 136.445 86.3223 136.453 cv
88.4785 136.542 90.6074 136.587 92.6465 136.587 cv
95.748 136.587 98.6914 136.487 101.644 136.28 cv
101.851 136.263 102.095 136.22 102.321 136.159 cv
103.667 135.792 104.478 134.733 104.489 133.326 cv
104.509 129.119 104.364 124.187 104.03 117.816 cv
103.782 113.441 105.987 109.845 109.521 108.881 cv
110.149 108.727 110.712 108.66 111.272 108.66 cv
114.429 108.66 117.341 110.798 118.876 114.242 cv
121.483 120.05 123.606 124.503 125.554 128.248 cv
126.091 129.275 126.981 129.843 128.058 129.843 cv
128.354 129.843 128.663 129.8 128.976 129.714 cv
129.144 129.669 129.312 129.613 129.478 129.544 cv
133.927 127.639 138.408 125.4 143.146 122.713 cv
143.953 122.251 144.818 121.891 145.707 121.648 cv
146.582 121.41 147.461 121.29 148.324 121.29 cv
150.293 121.29 152.082 121.908 153.496 123.078 cv
156.723 125.722 156.98 130.529 154.086 134.249 cv
150.115 139.367 146.453 143.524 143.043 147.342 cv
141.656 148.901 141.641 150.806 143.008 152.312 cv
146.127 155.658 149.865 159.45 154.096 163.552 cv
156.973 166.343 157.748 170.509 156.021 173.921 cv
155.07 175.759 153.498 177.16 151.582 177.891 cv
151.295 177.998 151.059 178.074 150.816 178.138 cv
150.068 178.343 149.287 178.447 148.494 178.447 cv
147.574 178.447 146.65 178.308 145.75 178.033 cv
140.334 176.378 134.776 174.298 128.759 171.674 cv
127.964 171.339 127.11 171.163 126.257 171.163 cv
125.714 171.163 125.175 171.235 124.649 171.378 cv
123.417 171.714 122.306 172.442 121.431 173.483 cv
117.302 178.532 113.315 182.913 109.267 186.847 cv
108.147 187.942 106.772 188.737 105.3 189.138 cv
104.565 189.338 103.813 189.44 103.06 189.44 cv
cp
.819608 .819608 .819608 rgb
f
103.06 185.44 mo
101.313 185.441 99.6504 184.904 98.25 183.888 cv
95.1484 181.642 93.9316 177.578 95.2246 173.775 cv
97.1406 168.099 98.7363 163.009 99.9688 158.652 cv
100.482 156.746 99.5918 155.068 97.6387 154.308 cv
92.8848 152.482 87.7422 150.463 81.8379 147.708 cv
77.5771 145.73 75.6104 141.336 77.2725 137.49 cv
78.2412 135.243 80.3105 133.541 82.9512 132.82 cv
83.873 132.569 84.8398 132.441 85.8203 132.441 cv
85.9863 132.441 86.1543 132.445 86.3223 132.453 cv
88.4785 132.542 90.6074 132.587 92.6465 132.587 cv
95.748 132.587 98.6914 132.487 101.644 132.28 cv
101.851 132.263 102.095 132.22 102.321 132.159 cv
103.667 131.792 104.478 130.733 104.489 129.326 cv
104.509 125.119 104.364 120.187 104.03 113.816 cv
103.782 109.441 105.987 105.845 109.521 104.881 cv
110.149 104.727 110.712 104.66 111.272 104.66 cv
114.429 104.66 117.341 106.798 118.876 110.242 cv
121.483 116.05 123.606 120.503 125.554 124.248 cv
126.091 125.275 126.981 125.843 128.058 125.843 cv
128.354 125.843 128.663 125.8 128.976 125.714 cv
129.144 125.669 129.312 125.613 129.478 125.544 cv
133.927 123.639 138.408 121.4 143.146 118.713 cv
143.953 118.251 144.818 117.891 145.707 117.648 cv
146.582 117.41 147.461 117.29 148.324 117.29 cv
150.293 117.29 152.082 117.908 153.496 119.078 cv
156.723 121.722 156.98 126.529 154.086 130.249 cv
150.115 135.367 146.453 139.524 143.043 143.342 cv
141.656 144.901 141.641 146.806 143.008 148.312 cv
146.127 151.658 149.865 155.45 154.096 159.552 cv
156.973 162.343 157.748 166.509 156.021 169.921 cv
155.07 171.759 153.498 173.16 151.582 173.891 cv
151.295 173.998 151.059 174.074 150.816 174.138 cv
150.068 174.343 149.287 174.447 148.494 174.447 cv
147.574 174.447 146.65 174.308 145.75 174.033 cv
140.334 172.378 134.776 170.298 128.759 167.674 cv
127.964 167.339 127.11 167.163 126.257 167.163 cv
125.714 167.163 125.175 167.235 124.649 167.378 cv
123.417 167.714 122.306 168.442 121.431 169.483 cv
117.302 174.532 113.315 178.913 109.267 182.847 cv
108.147 183.942 106.772 184.737 105.3 185.138 cv
104.565 185.338 103.813 185.44 103.06 185.44 cv
cp
.741176 .380392 .121569 rgb
f
150.031 171.244 mo
148.949 171.539 147.77 171.512 146.623 171.164 cv
141.318 169.542 135.87 167.502 129.958 164.924 cv
127.983 164.092 125.868 163.937 123.86 164.484 cv
122.034 164.982 120.399 166.044 119.134 167.554 cv
115.06 172.535 111.144 176.839 107.175 180.695 cv
106.411 181.443 105.489 181.978 104.511 182.244 cv
102.933 182.674 101.292 182.389 100.012 181.459 cv
97.9805 179.989 97.1992 177.289 98.0645 174.74 cv
99.9883 169.041 101.603 163.9 102.856 159.468 cv
103.778 156.041 102.122 152.832 98.7246 151.512 cv
94.0273 149.707 88.9434 147.713 83.1074 144.99 cv
80.3066 143.69 79.0088 141.036 80.0254 138.679 cv
80.6309 137.275 81.9863 136.193 83.7402 135.714 cv
84.5195 135.501 85.3457 135.412 86.1895 135.449 cv
91.7441 135.679 96.8691 135.622 101.854 135.273 cv
102.272 135.24 102.7 135.166 103.112 135.052 cv
105.747 134.334 107.466 132.095 107.489 129.351 cv
107.509 125.057 107.362 120.068 107.026 113.66 cv
106.86 110.724 108.181 108.357 110.31 107.776 cv
112.608 107.216 114.907 108.708 116.136 111.462 cv
118.767 117.326 120.915 121.83 122.894 125.632 cv
124.241 128.21 126.94 129.382 129.769 128.609 cv
130.052 128.531 130.339 128.434 130.626 128.316 cv
135.198 126.358 139.785 124.068 144.627 121.323 cv
145.221 120.982 145.852 120.718 146.496 120.542 cv
148.439 120.013 150.293 120.322 151.582 121.389 cv
153.559 123.008 153.619 125.963 151.719 128.406 cv
147.801 133.457 144.18 137.566 140.805 141.344 cv
138.387 144.063 138.377 147.675 140.785 150.328 cv
143.949 153.722 147.73 157.558 152.006 161.707 cv
153.936 163.577 154.475 166.333 153.346 168.566 cv
152.744 169.728 151.742 170.619 150.512 171.087 cv
150.344 171.15 150.189 171.201 150.031 171.244 cv
cp
.960784 .913725 .470588 rgb
f
150.832 124.859 mo
149.721 123.937 147.803 124.042 146.139 124.992 cv
140.656 128.1 136.022 130.335 131.919 132.091 cv
127.878 133.77 123.61 132.246 121.644 128.486 cv
119.626 124.607 117.446 120.025 114.835 114.207 cv
114.042 112.426 112.638 111.326 111.413 111.623 cv
110.187 111.917 109.438 113.537 109.55 115.486 cv
109.886 121.852 110.036 126.925 110.015 131.297 cv
109.978 135.541 106.882 138.845 102.522 139.198 cv
98.0664 139.51 92.9238 139.639 86.627 139.376 cv
84.7148 139.293 82.959 140.076 82.3887 141.402 cv
81.8164 142.724 82.6758 144.269 84.4805 145.107 cv
90.3535 147.847 95.5137 149.863 99.9746 151.578 cv
104.28 153.25 106.519 157.443 105.308 161.944 cv
104.011 166.521 102.388 171.675 100.484 177.314 cv
99.9023 179.027 100.381 180.808 101.708 181.769 cv
101.884 181.896 102.095 182.109 102.327 182.373 cv
103.04 182.473 103.782 182.443 104.511 182.244 cv
105.489 181.978 106.411 181.443 107.175 180.695 cv
111.144 176.839 115.06 172.535 119.134 167.554 cv
120.399 166.044 122.034 164.982 123.86 164.484 cv
125.868 163.937 127.983 164.092 129.958 164.924 cv
135.87 167.502 141.318 169.542 146.623 171.164 cv
147.77 171.512 148.949 171.539 150.031 171.244 cv
150.189 171.201 150.344 171.15 150.512 171.087 cv
151.037 170.888 151.506 170.598 151.936 170.256 cv
151.984 169.935 152.031 169.696 152.086 169.591 cv
152.826 168.13 152.439 166.33 151.141 165.07 cv
146.869 160.925 143.068 157.076 139.83 153.601 cv
136.694 150.148 136.767 145.395 139.84 141.941 cv
143.021 138.376 146.693 134.228 150.666 129.107 cv
151.887 127.54 151.945 125.771 150.832 124.859 cv
cp
.960784 .772549 .164706 rgb
f
133.331 157.924 mo
131.958 157.139 130.505 156.443 129.097 155.757 cv
126.511 154.501 123.892 153.095 120.884 153.617 cv
117.638 154.178 116.831 157.299 115.837 159.958 cv
114.03 164.792 110.821 169.095 107.841 173.236 cv
105.952 175.865 103.931 178.98 101.548 181.605 cv
101.608 181.654 101.646 181.724 101.708 181.769 cv
101.884 181.896 102.095 182.109 102.327 182.373 cv
103.04 182.473 103.782 182.443 104.511 182.244 cv
105.489 181.978 106.411 181.443 107.175 180.695 cv
111.144 176.839 115.06 172.535 119.134 167.554 cv
120.399 166.044 122.034 164.982 123.86 164.484 cv
125.868 163.937 127.983 164.092 129.958 164.924 cv
135.87 167.502 141.318 169.542 146.623 171.164 cv
147.77 171.512 148.949 171.539 150.031 171.244 cv
150.189 171.201 150.344 171.15 150.512 171.087 cv
150.709 171.012 150.891 170.914 151.072 170.816 cv
147.773 168.63 144.947 165.755 141.537 163.755 cv
138.625 162.044 136.269 159.611 133.331 157.924 cv
cp
.8 .52549 .133333 rgb
f
84.4805 145.107 mo
90.3535 147.847 95.5137 149.863 99.9746 151.578 cv
102.263 152.468 103.96 154.074 104.876 156.053 cv
106.13 154.343 107.501 152.691 108.993 151.195 cv
110.155 150.034 111.72 148.966 112.644 147.642 cv
109.222 147.311 105.509 147.447 102.021 147.375 cv
98.6934 147.303 95.2109 146.67 91.9883 145.75 cv
89.1074 144.929 86.1914 143.908 83.377 142.982 cv
82.9902 142.855 82.6211 142.714 82.25 142.565 cv
82.3965 143.549 83.1895 144.507 84.4805 145.107 cv
cp
f
138.365 135.53 mo
136.392 137.183 134.185 138.144 131.813 139.132 cv
130.071 139.861 127.946 140.404 129.147 142.345 cv
130.147 143.965 131.403 145.601 132.708 147.064 cv
134.116 148.64 135.577 149.982 137.317 151.207 cv
137.785 151.537 138.303 151.916 138.848 152.312 cv
136.759 149.031 137.136 144.987 139.84 141.941 cv
143.021 138.376 146.693 134.228 150.666 129.107 cv
151.887 127.54 151.945 125.771 150.832 124.859 cv
150.662 124.715 150.467 124.609 150.262 124.515 cv
149.24 125.933 148.154 127.306 146.943 128.517 cv
144.328 131.132 141.176 133.167 138.365 135.53 cv
cp
f
112.563 114.917 mo
113.374 118.273 114.183 121.625 114.995 124.981 cv
115.849 128.5 116.378 132.509 117.737 135.854 cv
118.421 137.542 118.938 137.71 120.323 136.441 cv
121.931 134.97 123.397 133.35 125.009 131.884 cv
123.622 131.16 122.44 130.009 121.644 128.486 cv
119.626 124.607 117.446 120.025 114.835 114.207 cv
114.079 112.517 112.78 111.455 111.603 111.601 cv
111.954 112.696 112.29 113.792 112.563 114.917 cv
cp
f
115.532 135.845 mo
113.905 136.239 114.515 138.761 116.142 138.366 cv
117.767 137.976 117.157 135.453 115.532 135.845 cv
cp
.960784 .913725 .470588 rgb
f
118.915 139.831 mo
115.853 140.57 116.999 145.313 120.06 144.574 cv
123.122 143.833 121.976 139.091 118.915 139.831 cv
cp
f
123.337 144.594 mo
120.28 145.333 121.427 150.08 124.483 149.341 cv
127.544 148.601 126.397 143.857 123.337 144.594 cv
cp
f
111.546 156.03 mo
109.917 156.421 110.526 158.943 112.151 158.548 cv
113.778 158.156 113.171 155.637 111.546 156.03 cv
cp
f
117.069 147.689 mo
113.841 148.468 115.052 153.472 118.276 152.692 cv
121.505 151.911 120.296 146.908 117.069 147.689 cv
cp
f
125.489 136.429 mo
123.866 136.824 124.474 139.341 126.099 138.948 cv
127.728 138.554 127.116 136.037 125.489 136.429 cv
cp
f
128.556 147.53 mo
126.929 147.921 127.54 150.441 129.163 150.048 cv
130.792 149.654 130.183 147.134 128.556 147.53 cv
cp
f
114.3 139.644 mo
112.677 140.037 113.284 142.556 114.909 142.164 cv
116.536 141.769 115.927 139.251 114.3 139.644 cv
cp
f
114.149 143.244 mo
112.526 143.638 113.138 146.156 114.759 145.764 cv
116.388 145.371 115.778 142.852 114.149 143.244 cv
cp
f
108.497 140.92 mo
106.872 141.313 107.481 143.83 109.106 143.437 cv
110.733 143.044 110.126 140.525 108.497 140.92 cv
cp
f
131.944 151.546 mo
130.321 151.939 130.931 154.459 132.554 154.068 cv
134.183 153.673 133.573 151.154 131.944 151.546 cv
cp
f
112.683 150.857 mo
111.056 151.25 111.667 153.768 113.29 153.375 cv
114.917 152.98 114.31 150.464 112.683 150.857 cv
cp
f
129.583 136.291 mo
127.958 136.683 128.567 139.207 130.192 138.815 cv
131.817 138.42 131.21 135.898 129.583 136.291 cv
cp
f
132.417 134.469 mo
130.79 134.863 131.399 137.38 133.026 136.99 cv
134.651 136.595 134.044 134.074 132.417 134.469 cv
cp
f
137.836 132.164 mo
136.208 132.554 136.819 135.075 138.443 134.682 cv
140.07 134.289 139.463 131.769 137.836 132.164 cv
cp
f
142.221 129.109 mo
140.592 129.503 141.201 132.023 142.83 131.629 cv
144.457 131.236 143.848 128.716 142.221 129.109 cv
cp
f
113.845 131.737 mo
112.222 132.13 112.829 134.648 114.454 134.255 cv
116.081 133.862 115.472 131.343 113.845 131.737 cv
cp
f
113.513 125.572 mo
111.886 125.966 112.495 128.487 114.122 128.093 cv
115.747 127.701 115.138 125.179 113.513 125.572 cv
cp
f
112.015 121.306 mo
110.39 121.699 111.001 124.22 112.626 123.83 cv
114.253 123.435 113.642 120.913 112.015 121.306 cv
cp
f
337.859 192.443 mo
337.352 192.478 336.832 192.465 336.322 192.406 cv
336.016 192.367 335.775 192.325 335.535 192.273 cv
333.879 191.913 332.342 191.07 331.084 189.833 cv
327.049 185.865 323.082 181.452 318.957 176.341 cv
318.041 175.234 316.822 174.477 315.453 174.179 cv
314.893 174.057 314.316 174.015 313.736 174.054 cv
313.025 174.103 312.314 174.272 311.625 174.557 cv
305.631 177.125 300.07 179.166 294.66 180.783 cv
293.988 180.986 293.289 181.115 292.588 181.162 cv
291.738 181.219 290.896 181.159 290.084 180.982 cv
287.592 180.44 285.525 178.847 284.41 176.614 cv
282.697 173.189 283.498 169.022 286.402 166.248 cv
290.734 162.091 294.502 158.317 297.6 155.033 cv
298.938 153.579 298.924 151.679 297.541 150.102 cv
294.176 146.288 290.549 142.123 286.584 136.944 cv
283.721 133.22 284.008 128.416 287.26 125.773 cv
288.5 124.763 290.061 124.167 291.771 124.052 cv
292.65 123.993 293.553 124.062 294.453 124.257 cv
295.549 124.497 296.611 124.911 297.611 125.489 cv
302.326 128.201 306.797 130.47 311.279 132.42 cv
311.471 132.501 311.707 132.577 311.938 132.626 cv
312.24 132.693 312.541 132.716 312.832 132.697 cv
313.832 132.629 314.662 132.068 315.168 131.117 cv
317.127 127.404 319.277 122.964 321.932 117.152 cv
323.377 113.949 326.102 111.828 329.035 111.628 cv
329.672 111.585 330.309 111.632 330.93 111.767 cv
334.719 112.701 337.025 116.341 336.746 120.846 cv
336.373 127.195 336.197 132.125 336.193 136.353 cv
336.195 137.859 337.055 138.912 338.551 139.236 cv
338.717 139.272 338.889 139.3 339.068 139.316 cv
343.9 139.684 348.908 139.771 354.352 139.579 cv
355.279 139.542 356.213 139.623 357.113 139.819 cv
360.051 140.458 362.326 142.232 363.359 144.687 cv
364.998 148.524 363.006 152.906 358.719 154.865 cv
352.83 157.568 347.662 159.561 342.873 161.371 cv
340.922 162.111 340.027 163.793 340.545 165.76 cv
341.764 170.17 343.328 175.261 345.18 180.854 cv
346.441 184.659 345.201 188.712 342.094 190.938 cv
340.83 191.826 339.375 192.341 337.859 192.443 cv
cp
.819608 .819608 .819608 rgb
f
337.59 188.453 mo
337.08 188.487 336.563 188.474 336.053 188.416 cv
335.746 188.375 335.506 188.333 335.266 188.283 cv
333.609 187.921 332.07 187.079 330.814 185.843 cv
326.779 181.875 322.813 177.46 318.688 172.35 cv
317.771 171.244 316.551 170.486 315.182 170.189 cv
314.623 170.066 314.047 170.025 313.467 170.064 cv
312.756 170.112 312.045 170.281 311.355 170.566 cv
305.361 173.132 299.801 175.174 294.391 176.792 cv
293.719 176.996 293.02 177.124 292.318 177.171 cv
291.469 177.228 290.627 177.167 289.813 176.991 cv
287.322 176.449 285.254 174.857 284.139 172.623 cv
282.428 169.198 283.229 165.031 286.131 162.256 cv
290.463 158.101 294.232 154.326 297.33 151.041 cv
298.668 149.587 298.654 147.689 297.271 146.111 cv
293.906 142.296 290.279 138.132 286.314 132.953 cv
283.451 129.23 283.738 124.425 286.988 121.782 cv
288.229 120.772 289.791 120.177 291.502 120.061 cv
292.381 120.001 293.283 120.071 294.184 120.267 cv
295.279 120.505 296.342 120.919 297.342 121.498 cv
302.055 124.21 306.527 126.478 311.01 128.429 cv
311.201 128.511 311.438 128.585 311.668 128.636 cv
311.971 128.703 312.271 128.726 312.561 128.707 cv
313.561 128.638 314.391 128.078 314.898 127.126 cv
316.857 123.414 319.008 118.972 321.662 113.161 cv
323.107 109.958 325.832 107.835 328.766 107.638 cv
329.402 107.595 330.039 107.642 330.658 107.777 cv
334.449 108.709 336.756 112.351 336.477 116.855 cv
336.104 123.204 335.928 128.134 335.924 132.363 cv
335.926 133.868 336.785 134.92 338.279 135.246 cv
338.445 135.281 338.619 135.309 338.797 135.324 cv
343.631 135.693 348.639 135.78 354.082 135.587 cv
355.01 135.551 355.941 135.632 356.844 135.828 cv
359.779 136.467 362.057 138.242 363.09 140.697 cv
364.729 144.533 362.736 148.914 358.449 150.874 cv
352.561 153.577 347.391 155.57 342.602 157.379 cv
340.652 158.12 339.758 159.802 340.273 161.769 cv
341.494 166.179 343.057 171.271 344.91 176.863 cv
346.172 180.667 344.932 184.72 341.824 186.947 cv
340.561 187.835 339.104 188.35 337.59 188.453 cv
cp
.741176 .380392 .121569 rgb
f
335.9 185.35 mo
334.805 185.112 333.771 184.542 332.916 183.703 cv
328.963 179.814 325.074 175.486 321.021 170.466 cv
319.656 168.816 317.854 167.699 315.82 167.257 cv
313.971 166.854 312.029 167.041 310.209 167.794 cv
304.295 170.327 298.83 172.333 293.531 173.917 cv
292.508 174.227 291.441 174.275 290.451 174.06 cv
288.854 173.712 287.531 172.701 286.824 171.283 cv
285.703 169.04 286.26 166.285 288.205 164.425 cv
292.545 160.261 296.354 156.449 299.514 153.099 cv
301.918 150.486 301.932 146.875 299.527 144.133 cv
296.197 140.36 292.613 136.244 288.697 131.129 cv
286.814 128.683 286.891 125.729 288.883 124.109 cv
290.068 123.144 291.77 122.811 293.545 123.198 cv
294.336 123.371 295.109 123.672 295.842 124.095 cv
300.658 126.867 305.23 129.185 309.813 131.18 cv
310.197 131.345 310.611 131.476 311.029 131.568 cv
313.697 132.148 316.256 130.958 317.545 128.535 cv
319.551 124.737 321.725 120.246 324.391 114.408 cv
325.6 111.728 327.865 110.238 330.021 110.708 cv
332.318 111.275 333.668 113.661 333.482 116.67 cv
333.105 123.086 332.928 128.074 332.924 132.36 cv
332.928 135.269 334.779 137.554 337.645 138.177 cv
337.934 138.24 338.232 138.287 338.539 138.314 cv
343.5 138.692 348.625 138.783 354.188 138.585 cv
354.873 138.559 355.555 138.618 356.207 138.759 cv
358.174 139.187 359.676 140.318 360.324 141.861 cv
361.328 144.21 360.016 146.859 357.201 148.145 cv
351.393 150.812 346.281 152.782 341.543 154.573 cv
338.141 155.865 336.463 159.064 337.371 162.53 cv
338.609 167.002 340.188 172.152 342.063 177.806 cv
342.908 180.357 342.111 183.05 340.076 184.508 cv
339.006 185.261 337.705 185.587 336.4 185.435 cv
336.221 185.412 336.061 185.385 335.9 185.35 cv
cp
.960784 .913725 .470588 rgb
f
358.055 144.591 mo
357.496 143.259 355.748 142.465 353.834 142.539 cv
347.533 142.76 342.391 142.601 337.939 142.259 cv
333.582 141.88 330.504 138.555 330.498 134.312 cv
330.502 129.94 330.688 124.869 331.061 118.501 cv
331.18 116.557 330.445 114.932 329.223 114.629 cv
328 114.324 326.586 115.414 325.783 117.193 cv
323.137 122.994 320.926 127.561 318.887 131.429 cv
316.893 135.174 312.617 136.672 308.588 134.97 cv
304.494 133.187 299.875 130.924 294.412 127.781 cv
292.754 126.822 290.838 126.705 289.717 127.616 cv
288.6 128.524 288.646 130.292 289.859 131.869 cv
293.801 137.013 297.443 141.187 300.607 144.77 cv
303.652 148.244 303.697 152.996 300.543 156.427 cv
297.277 159.886 293.455 163.705 289.16 167.826 cv
287.852 169.076 287.453 170.876 288.186 172.343 cv
288.283 172.536 288.371 172.823 288.455 173.164 cv
289.041 173.583 289.713 173.898 290.451 174.06 cv
291.441 174.275 292.508 174.227 293.531 173.917 cv
298.83 172.333 304.295 170.327 310.209 167.794 cv
312.029 167.041 313.971 166.854 315.82 167.257 cv
317.854 167.699 319.656 168.816 321.021 170.466 cv
325.074 175.486 328.963 179.814 332.916 183.703 cv
333.771 184.542 334.805 185.112 335.9 185.35 cv
336.061 185.385 336.221 185.412 336.4 185.435 cv
336.957 185.5 337.508 185.46 338.045 185.355 cv
338.236 185.093 338.391 184.903 338.486 184.835 cv
339.818 183.882 340.309 182.106 339.738 180.389 cv
337.867 174.738 336.277 169.57 335.012 164.99 cv
333.828 160.479 336.09 156.298 340.412 154.656 cv
344.881 152.966 350.053 150.984 355.945 148.281 cv
357.752 147.455 358.621 145.914 358.055 144.591 cv
cp
.960784 .772549 .164706 rgb
f
327.252 165.82 mo
326.396 164.488 325.43 163.198 324.498 161.939 cv
322.785 159.63 321.111 157.173 318.205 156.245 cv
315.066 155.242 312.908 157.636 310.797 159.535 cv
306.959 162.986 302.127 165.318 297.57 167.612 cv
294.68 169.07 291.445 170.896 288.121 172.123 cv
288.15 172.193 288.15 172.273 288.186 172.343 cv
288.283 172.536 288.371 172.823 288.455 173.164 cv
289.041 173.583 289.713 173.898 290.451 174.06 cv
291.441 174.275 292.508 174.227 293.531 173.917 cv
298.83 172.333 304.295 170.327 310.209 167.794 cv
312.029 167.041 313.971 166.854 315.82 167.257 cv
317.854 167.699 319.656 168.816 321.021 170.466 cv
325.074 175.486 328.963 179.814 332.916 183.703 cv
333.771 184.542 334.805 185.112 335.9 185.35 cv
336.061 185.385 336.221 185.412 336.4 185.435 cv
336.609 185.458 336.814 185.456 337.021 185.453 cv
335.105 181.99 333.93 178.132 331.83 174.784 cv
330.039 171.919 329.074 168.673 327.252 165.82 cv
cp
.8 .52549 .133333 rgb
f
289.859 131.869 mo
293.801 137.013 297.443 141.187 300.607 144.77 cv
302.223 146.617 302.986 148.826 302.885 151.004 cv
304.787 150.068 306.768 149.238 308.779 148.599 cv
310.348 148.107 312.229 147.883 313.66 147.138 cv
310.777 145.261 307.424 143.666 304.363 141.99 cv
301.447 140.388 298.652 138.216 296.219 135.91 cv
294.045 133.851 291.932 131.595 289.865 129.475 cv
289.58 129.183 289.316 128.888 289.057 128.583 cv
288.732 129.524 288.992 130.74 289.859 131.869 cv
cp
f
342.068 148.289 mo
339.553 148.843 337.152 148.673 334.594 148.455 cv
332.711 148.294 330.576 147.793 330.742 150.072 cv
330.881 151.97 331.238 154 331.719 155.9 cv
332.238 157.951 332.914 159.814 333.891 161.707 cv
334.152 162.214 334.438 162.791 334.736 163.394 cv
334.402 159.518 336.605 156.106 340.412 154.656 cv
344.881 152.966 350.053 150.984 355.945 148.281 cv
357.752 147.455 358.621 145.914 358.055 144.591 cv
357.971 144.384 357.848 144.2 357.709 144.022 cv
356.146 144.807 354.551 145.523 352.914 146.037 cv
349.389 147.146 345.652 147.494 342.068 148.289 cv
cp
f
328.721 118.083 mo
327.887 121.433 327.055 124.779 326.223 128.13 cv
325.352 131.645 323.969 135.446 323.625 139.039 cv
323.453 140.852 323.834 141.241 325.648 140.756 cv
327.754 140.196 329.805 139.437 331.91 138.881 cv
331.016 137.597 330.5 136.032 330.498 134.312 cv
330.502 129.94 330.688 124.869 331.061 118.501 cv
331.172 116.655 330.512 115.113 329.4 114.699 cv
329.207 115.832 328.996 116.958 328.721 118.083 cv
cp
f
321.676 138.013 mo
320.051 137.609 319.426 140.127 321.051 140.529 cv
322.672 140.934 323.299 138.416 321.676 138.013 cv
cp
.960784 .913725 .470588 rgb
f
322.832 143.109 mo
319.775 142.35 318.6 147.085 321.654 147.845 cv
324.713 148.604 325.889 143.869 322.832 143.109 cv
cp
f
324.551 149.378 mo
321.498 148.621 320.32 153.359 323.375 154.118 cv
326.428 154.876 327.605 150.14 324.551 149.378 cv
cp
f
308.809 154.068 mo
307.184 153.662 306.559 156.179 308.182 156.582 cv
309.805 156.984 310.43 154.47 308.809 154.068 cv
cp
f
317.563 149.224 mo
314.34 148.423 313.1 153.419 316.32 154.218 cv
319.543 155.019 320.785 150.024 317.563 149.224 cv
cp
f
330.234 143.134 mo
328.613 142.733 327.988 145.246 329.611 145.648 cv
331.236 146.052 331.859 143.539 330.234 143.134 cv
cp
f
327.82 154.394 mo
326.199 153.989 325.574 156.505 327.195 156.909 cv
328.822 157.312 329.447 154.796 327.82 154.394 cv
cp
f
318.828 140.81 mo
317.205 140.408 316.58 142.924 318.201 143.327 cv
319.826 143.729 320.449 141.214 318.828 140.81 cv
cp
f
317.029 143.933 mo
315.408 143.533 314.785 146.047 316.404 146.45 cv
318.031 146.854 318.654 144.339 317.029 143.933 cv
cp
f
313.092 139.26 mo
311.469 138.857 310.846 141.37 312.467 141.773 cv
314.092 142.177 314.719 139.662 313.092 139.26 cv
cp
f
328.971 159.523 mo
327.348 159.121 326.725 161.636 328.344 162.04 cv
329.971 162.443 330.594 159.927 328.971 159.523 cv
cp
f
312.209 150.005 mo
310.584 149.603 309.961 152.117 311.582 152.52 cv
313.209 152.922 313.832 150.41 312.209 150.005 cv
cp
f
333.93 144.904 mo
332.305 144.5 331.68 147.019 333.303 147.423 cv
334.926 147.826 335.551 145.307 333.93 144.904 cv
cp
f
337.283 144.599 mo
335.658 144.195 335.035 146.709 336.658 147.115 cv
338.281 147.517 338.908 145 337.283 144.599 cv
cp
f
343.154 145.059 mo
341.531 144.654 340.908 147.17 342.527 147.574 cv
344.154 147.977 344.779 145.46 343.154 145.059 cv
cp
f
348.455 144.378 mo
346.828 143.974 346.205 146.491 347.83 146.894 cv
349.455 147.298 350.078 144.781 348.455 144.378 cv
cp
f
322.078 133.589 mo
320.459 133.188 319.832 135.701 321.455 136.103 cv
323.08 136.507 323.703 133.992 322.078 133.589 cv
cp
f
324.635 127.969 mo
323.01 127.567 322.387 130.083 324.008 130.488 cv
325.633 130.89 326.256 128.372 324.635 127.969 cv
cp
f
325.279 123.494 mo
323.656 123.09 323.031 125.609 324.654 126.015 cv
326.277 126.416 326.902 123.897 325.279 123.494 cv
cp
f
251.486 194.482 mo
249.205 194.482 246.936 193.812 244.924 192.543 cv
238.434 188.449 231.902 183.745 224.961 178.16 cv
223.414 176.947 221.563 176.29 219.645 176.29 cv
217.898 176.29 216.168 176.849 214.641 177.909 cv
207.436 183.041 200.656 187.349 193.953 191.054 cv
192.105 192.083 190.035 192.628 187.977 192.628 cv
184.537 192.628 181.357 191.125 179.248 188.5 cv
176.012 184.478 175.871 178.757 178.904 174.267 cv
183.436 167.523 187.344 161.429 190.516 156.164 cv
191.887 153.818 191.314 151.267 188.996 149.552 cv
183.43 145.466 177.42 140.99 170.676 135.275 cv
165.834 131.19 164.834 124.779 168.355 120.369 cv
170.412 117.79 173.709 116.31 177.4 116.31 cv
178.914 116.31 180.436 116.55 181.922 117.027 cv
188.955 119.263 195.541 120.98 202.049 122.274 cv
202.33 122.328 202.668 122.359 202.994 122.359 cv
204.918 122.359 206.381 121.244 206.906 119.374 cv
208.438 113.875 210.008 107.367 211.848 98.9038 cv
213.076 93.1216 217.219 89.2241 222.152 89.2241 cv
222.262 89.2261 li
227.408 89.3667 231.488 93.5034 232.414 99.5229 cv
233.754 108.052 234.943 114.64 236.156 120.244 cv
236.596 122.242 238.1 123.441 240.18 123.441 cv
240.43 123.441 240.672 123.425 240.904 123.396 cv
247.416 122.49 254.084 121.158 261.246 119.333 cv
262.461 119.017 263.717 118.856 264.961 118.856 cv
269.014 118.856 272.521 120.541 274.588 123.478 cv
277.846 128.06 276.475 134.402 271.387 138.212 cv
264.361 143.496 258.086 147.628 252.262 151.407 cv
249.857 152.973 249.148 155.497 250.416 157.989 cv
253.309 163.487 256.852 169.787 260.92 176.666 cv
263.676 181.319 263.205 187.015 259.75 190.841 cv
257.857 192.894 255.316 194.159 252.564 194.43 cv
252.15 194.466 251.82 194.482 251.486 194.482 cv
cp
.819608 .819608 .819608 rgb
f
251.486 188.482 mo
249.395 188.482 247.311 187.865 245.457 186.697 cv
239 182.625 232.5 177.941 225.588 172.38 cv
223.854 171.021 221.789 170.29 219.645 170.29 cv
217.693 170.29 215.766 170.912 214.07 172.087 cv
206.887 177.204 200.139 181.494 193.469 185.179 cv
191.768 186.126 189.865 186.628 187.977 186.628 cv
184.842 186.628 181.945 185.26 180.029 182.875 cv
177.066 179.195 176.947 173.951 179.732 169.827 cv
184.275 163.067 188.193 156.959 191.371 151.679 cv
193.004 148.888 192.313 145.762 189.59 143.749 cv
184.035 139.669 178.041 135.207 171.322 129.511 cv
166.902 125.784 165.961 119.97 169.137 115.992 cv
171.002 113.652 174.016 112.31 177.4 112.31 cv
178.811 112.31 180.229 112.535 181.617 112.98 cv
188.688 115.227 195.309 116.953 201.854 118.255 cv
202.203 118.322 202.607 118.359 202.994 118.359 cv
205.355 118.359 207.225 116.935 207.869 114.644 cv
209.406 109.125 210.98 102.598 212.824 94.1167 cv
213.953 88.8032 217.703 85.2241 222.152 85.2241 cv
226.883 85.353 230.576 89.1499 231.428 94.6743 cv
232.77 103.227 233.961 109.833 235.18 115.457 cv
235.719 117.911 237.635 119.441 240.18 119.441 cv
240.473 119.441 240.758 119.423 241.031 119.388 cv
247.592 118.474 254.295 117.136 261.494 115.301 cv
262.631 115.007 263.801 114.856 264.961 114.856 cv
268.684 114.856 271.895 116.386 273.77 119.052 cv
276.707 123.186 275.43 128.935 270.787 132.412 cv
263.785 137.677 257.527 141.798 251.717 145.568 cv
248.848 147.437 248.006 150.457 249.525 153.443 cv
252.432 158.966 255.982 165.281 260.061 172.175 cv
262.59 176.449 262.168 181.672 259.008 185.171 cv
257.289 187.037 254.975 188.187 252.467 188.435 cv
252.096 188.467 251.793 188.482 251.486 188.482 cv
cp
.741176 .380392 .121569 rgb
f
251.486 185.482 mo
249.965 185.482 248.432 185.025 247.057 184.16 cv
240.691 180.144 234.287 175.529 227.469 170.042 cv
225.18 168.25 222.467 167.29 219.645 167.29 cv
217.078 167.29 214.559 168.098 212.361 169.622 cv
205.252 174.685 198.586 178.923 192.018 182.553 cv
190.75 183.258 189.352 183.628 187.977 183.628 cv
185.758 183.628 183.713 182.669 182.367 180.996 cv
180.234 178.345 180.176 174.532 182.219 171.505 cv
186.771 164.732 190.719 158.58 193.941 153.226 cv
196.375 149.069 195.352 144.278 191.373 141.336 cv
185.869 137.295 179.93 132.873 173.262 127.223 cv
170.061 124.523 169.309 120.585 171.48 117.864 cv
172.773 116.242 174.934 115.31 177.4 115.31 cv
178.498 115.31 179.611 115.487 180.703 115.836 cv
187.889 118.121 194.619 119.875 201.268 121.197 cv
201.828 121.303 202.416 121.359 202.994 121.359 cv
206.697 121.359 209.748 119.042 210.758 115.458 cv
212.318 109.845 213.906 103.263 215.756 94.7534 cv
216.584 90.853 219.158 88.2241 222.152 88.2241 cv
225.361 88.312 227.84 91.0864 228.461 95.1304 cv
229.813 103.746 231.016 110.408 232.248 116.091 cv
233.094 119.947 236.207 122.443 240.186 122.441 cv
240.584 122.441 240.996 122.417 241.412 122.363 cv
248.098 121.433 254.918 120.074 262.234 118.208 cv
263.135 117.975 264.055 117.856 264.961 117.856 cv
267.693 117.856 270.01 118.921 271.316 120.779 cv
273.324 123.603 272.35 127.494 268.988 130.011 cv
262.057 135.223 255.852 139.31 250.084 143.051 cv
245.947 145.746 244.646 150.47 246.852 154.803 cv
249.783 160.376 253.363 166.747 257.479 173.703 cv
259.336 176.839 259.057 180.64 256.781 183.16 cv
255.578 184.466 253.947 185.275 252.172 185.45 cv
251.93 185.47 251.709 185.482 251.486 185.482 cv
cp
.960784 .913725 .470588 rgb
f
269.096 125.053 mo
267.969 123.45 265.422 122.902 262.904 123.55 cv
254.619 125.663 247.756 126.935 241.756 127.767 cv
235.867 128.522 230.828 125.002 229.596 119.379 cv
228.34 113.582 227.121 106.806 225.779 98.2573 cv
225.377 95.644 223.932 93.7026 222.223 93.6538 cv
220.514 93.6011 218.957 95.4536 218.406 98.0454 cv
216.572 106.499 214.957 113.192 213.371 118.908 cv
211.807 124.449 206.574 127.668 200.74 126.574 cv
194.797 125.392 188.021 123.726 179.873 121.134 cv
177.398 120.341 174.822 120.739 173.602 122.271 cv
172.383 123.796 172.955 126.126 175.016 127.867 cv
181.725 133.551 187.76 138.033 192.988 141.869 cv
198.027 145.595 199.459 151.883 196.268 157.342 cv
192.934 162.87 188.971 169.037 184.465 175.738 cv
183.092 177.773 183.084 180.275 184.479 182.007 cv
184.662 182.236 184.863 182.59 185.072 183.017 cv
185.971 183.404 186.951 183.628 187.977 183.628 cv
189.352 183.628 190.75 183.258 192.018 182.553 cv
198.586 178.923 205.252 174.685 212.361 169.622 cv
214.559 168.098 217.078 167.29 219.645 167.29 cv
222.467 167.29 225.18 168.25 227.469 170.042 cv
234.287 175.529 240.691 180.144 247.057 184.16 cv
248.432 185.025 249.965 185.482 251.486 185.482 cv
251.709 185.482 251.93 185.47 252.172 185.45 cv
252.93 185.375 253.648 185.164 254.332 184.869 cv
254.51 184.466 254.658 184.169 254.768 184.053 cv
256.256 182.405 256.395 179.909 255.143 177.796 cv
251.031 170.846 247.432 164.452 244.432 158.747 cv
241.563 153.107 243.354 146.912 248.609 143.488 cv
254.047 139.958 260.332 135.837 267.361 130.554 cv
269.52 128.938 270.227 126.643 269.096 125.053 cv
cp
.960784 .772549 .164706 rgb
f
234.385 162.085 mo
232.865 160.567 231.213 159.136 229.615 157.737 cv
226.678 155.169 223.75 152.394 219.629 152.002 cv
215.178 151.579 213.008 155.376 210.758 158.503 cv
206.666 164.184 200.932 168.67 195.553 173.027 cv
192.143 175.793 188.383 179.148 184.328 181.734 cv
184.389 181.82 184.412 181.925 184.479 182.007 cv
184.662 182.236 184.863 182.59 185.072 183.017 cv
185.971 183.404 186.951 183.628 187.977 183.628 cv
189.352 183.628 190.75 183.258 192.018 182.553 cv
198.586 178.923 205.252 174.685 212.361 169.622 cv
214.559 168.098 217.078 167.29 219.645 167.29 cv
222.467 167.29 225.18 168.25 227.469 170.042 cv
234.287 175.529 240.691 180.144 247.057 184.16 cv
248.432 185.025 249.965 185.482 251.486 185.482 cv
251.709 185.482 251.93 185.47 252.172 185.45 cv
252.457 185.42 252.729 185.357 253.002 185.292 cv
249.465 181.255 246.791 176.482 243.041 172.648 cv
239.84 169.367 237.625 165.342 234.385 162.085 cv
cp
.8 .52549 .133333 rgb
f
175.016 127.867 mo
181.725 133.551 187.76 138.033 192.988 141.869 cv
195.664 143.851 197.313 146.56 197.805 149.477 cv
200.057 147.686 202.441 146.013 204.928 144.587 cv
206.865 143.483 209.293 142.643 210.975 141.242 cv
206.613 139.585 201.705 138.437 197.166 137.099 cv
192.836 135.817 188.504 133.745 184.613 131.389 cv
181.137 129.288 177.684 126.908 174.332 124.693 cv
173.871 124.388 173.438 124.073 173.004 123.744 cv
172.846 125.085 173.539 126.622 175.016 127.867 cv
cp
f
248.967 134.569 mo
245.795 136.029 242.563 136.498 239.105 136.946 cv
236.564 137.277 233.59 137.23 234.469 140.2 cv
235.201 142.677 236.26 145.267 237.445 147.646 cv
238.725 150.214 240.158 152.49 242 154.716 cv
242.492 155.315 243.035 155.996 243.607 156.708 cv
242.045 151.668 243.982 146.509 248.609 143.488 cv
254.047 139.958 260.332 135.837 267.361 130.554 cv
269.52 128.938 270.227 126.643 269.096 125.053 cv
268.922 124.804 268.705 124.595 268.473 124.398 cv
266.629 125.89 264.717 127.3 262.697 128.453 cv
258.342 130.941 253.49 132.48 248.967 134.569 cv
cp
f
222.555 98.3765 mo
222.416 103.059 222.279 107.736 222.145 112.418 cv
222.004 117.329 221.268 122.766 221.85 127.628 cv
222.145 130.083 222.762 130.488 225.027 129.322 cv
227.656 127.97 230.154 126.373 232.787 125.029 cv
231.23 123.585 230.094 121.659 229.596 119.379 cv
228.34 113.582 227.121 106.806 225.779 98.2573 cv
225.393 95.7769 224.072 93.9214 222.48 93.6948 cv
222.549 95.2524 222.598 96.8081 222.555 98.3765 cv
cp
f
218.967 126.832 mo
216.699 126.765 216.596 130.284 218.867 130.347 cv
221.133 130.417 221.236 126.898 218.967 126.832 cv
cp
.960784 .913725 .470588 rgb
f
221.971 133.254 mo
217.701 133.13 217.508 139.747 221.777 139.871 cv
226.051 139.996 226.244 133.378 221.971 133.254 cv
cp
f
226.061 141.069 mo
221.795 140.945 221.602 147.566 225.867 147.691 cv
230.137 147.816 230.33 141.197 226.061 141.069 cv
cp
f
206.545 151.828 mo
204.271 151.759 204.17 155.278 206.438 155.341 cv
208.707 155.408 208.811 151.894 206.545 151.828 cv
cp
f
216.752 142.881 mo
212.246 142.75 212.045 149.732 216.545 149.861 cv
221.051 149.992 221.254 143.011 216.752 142.881 cv
cp
f
231.793 131.15 mo
229.527 131.087 229.424 134.598 231.691 134.664 cv
233.963 134.73 234.064 131.216 231.793 131.15 cv
cp
f
231.844 146.775 mo
229.574 146.706 229.475 150.222 231.74 150.289 cv
234.014 150.355 234.113 146.837 231.844 146.775 cv
cp
f
216 131.363 mo
213.734 131.296 213.631 134.812 215.896 134.878 cv
218.166 134.943 218.268 131.429 216 131.363 cv
cp
f
214.518 136.021 mo
212.252 135.958 212.152 139.471 214.414 139.538 cv
216.688 139.603 216.789 136.089 214.518 136.021 cv
cp
f
207.949 130.962 mo
205.68 130.896 205.58 134.408 207.846 134.474 cv
210.117 134.54 210.221 131.026 207.949 130.962 cv
cp
f
234.846 153.243 mo
232.58 153.176 232.479 156.693 234.742 156.759 cv
237.016 156.826 237.117 153.309 234.846 153.243 cv
cp
f
209.879 145.462 mo
207.609 145.396 207.51 148.91 209.775 148.976 cv
212.045 149.041 212.148 145.529 209.879 145.462 cv
cp
f
237.201 132.43 mo
234.934 132.365 234.83 135.883 237.098 135.953 cv
239.365 136.015 239.469 132.497 237.201 132.43 cv
cp
f
241.561 131.058 mo
239.289 130.992 239.188 134.505 241.457 134.574 cv
243.725 134.638 243.83 131.121 241.561 131.058 cv
cp
f
249.475 129.974 mo
247.207 129.905 247.105 133.421 249.371 133.488 cv
251.643 133.554 251.746 130.038 249.475 129.974 cv
cp
f
256.307 127.542 mo
254.033 127.475 253.932 130.992 256.203 131.058 cv
258.475 131.125 258.574 127.607 256.307 127.542 cv
cp
f
218.225 120.85 mo
215.963 120.787 215.855 124.298 218.125 124.365 cv
220.395 124.43 220.496 120.917 218.225 120.85 cv
cp
f
219.992 112.662 mo
217.721 112.599 217.621 116.115 219.889 116.181 cv
222.156 116.248 222.258 112.728 219.992 112.662 cv
cp
f
219.555 106.543 mo
217.287 106.477 217.186 109.996 219.455 110.065 cv
221.723 110.128 221.822 106.61 219.555 106.543 cv
cp
f
218.131 323.605 mo
192.631 323.605 171.887 344.349 171.887 369.847 cv
171.887 395.347 192.631 416.091 218.131 416.091 cv
243.629 416.091 264.373 395.347 264.373 369.847 cv
264.373 344.349 243.629 323.605 218.131 323.605 cv
218.131 323.605 li
cp
.819608 .819608 .819608 rgb
f
218.238 317.183 mo
192.738 317.183 171.994 337.927 171.994 363.425 cv
171.994 388.923 192.738 409.667 218.238 409.667 cv
243.736 409.667 264.48 388.923 264.48 363.425 cv
264.48 337.927 243.736 317.183 218.238 317.183 cv
218.238 317.183 li
cp
.478431 .164706 .129412 rgb
f
259.342 362.14 mo
259.342 384.843 240.938 403.246 218.238 403.246 cv
195.537 403.246 177.133 384.843 177.133 362.14 cv
177.133 339.439 195.537 321.035 218.238 321.035 cv
240.938 321.035 259.342 339.439 259.342 362.14 cv
cp
.317647 .686275 .27451 rgb
f
259.342 358.769 mo
259.342 379.785 240.938 396.824 218.238 396.824 cv
195.537 396.824 177.133 379.785 177.133 358.769 cv
177.133 337.75 195.537 320.712 218.238 320.712 cv
240.938 320.712 259.342 337.75 259.342 358.769 cv
cp
.392157 .819608 .278431 rgb
f
218.238 328.417 mo
239.533 328.417 255.301 355.933 255.301 355.933 cv
257.408 359.611 259.227 361.472 259.342 360.068 cv
259.342 360.068 259.342 360.068 259.342 358.769 cv
259.342 337.75 240.938 320.712 218.238 320.712 cv
195.537 320.712 177.133 337.75 177.133 358.769 cv
177.133 360.068 177.133 360.068 177.133 360.068 cv
177.248 361.472 179.064 359.611 181.174 355.933 cv
181.174 355.933 196.943 328.417 218.238 328.417 cv
cp
.54902 .901961 .384314 rgb
f
235.514 358.794 mo
236.078 359.218 236.078 359.912 235.514 360.333 cv
209.309 379.99 li
208.744 380.414 208.281 380.181 208.281 379.474 cv
208.281 339.654 li
208.281 338.947 208.744 338.716 209.309 339.14 cv
235.514 358.794 li
cp
1 1 1 rgb
f
208.783 336.359 mo
208.783 336.359 li
207.033 336.359 205.713 337.775 205.713 339.654 cv
205.713 379.474 li
205.713 381.353 207.033 382.769 208.783 382.769 cv
209.502 382.769 210.219 382.519 210.85 382.042 cv
237.055 362.388 li
237.977 361.699 238.508 360.667 238.508 359.564 cv
238.508 358.46 237.977 357.431 237.055 356.74 cv
210.85 337.085 li
210.219 336.609 209.502 336.359 208.783 336.359 cv
208.783 336.359 li
cp
208.783 338.927 mo
208.938 338.927 209.117 338.996 209.309 339.14 cv
235.514 358.794 li
236.078 359.218 236.078 359.912 235.514 360.333 cv
209.309 379.99 li
209.117 380.134 208.938 380.201 208.783 380.201 cv
208.484 380.201 208.281 379.941 208.281 379.474 cv
208.281 339.654 li
208.281 339.187 208.484 338.927 208.783 338.927 cv
208.783 338.927 li
cp
.203922 .611765 .215686 rgb
f
108.946 332.211 mo
88.5469 332.211 71.9497 348.807 71.9497 369.206 cv
71.9497 389.605 88.5469 406.201 108.946 406.201 cv
129.344 406.201 145.939 389.605 145.939 369.206 cv
145.939 348.807 129.344 332.211 108.946 332.211 cv
108.946 332.211 li
cp
.819608 .819608 .819608 rgb
f
108.946 327.074 mo
88.5469 327.074 71.9497 343.669 71.9497 364.068 cv
71.9497 384.466 88.5469 401.061 108.946 401.061 cv
129.344 401.061 145.939 384.466 145.939 364.068 cv
145.939 343.669 129.344 327.074 108.946 327.074 cv
108.946 327.074 li
cp
.478431 .164706 .129412 rgb
f
141.83 363.04 mo
141.83 381.202 127.105 395.924 108.946 395.924 cv
90.7842 395.924 76.0615 381.202 76.0615 363.04 cv
76.0615 344.878 90.7842 330.155 108.946 330.155 cv
127.105 330.155 141.83 344.878 141.83 363.04 cv
cp
.94902 .6 .0784314 rgb
f
141.83 360.342 mo
141.83 377.155 127.105 390.787 108.946 390.787 cv
90.7842 390.787 76.0615 377.155 76.0615 360.342 cv
76.0615 343.527 90.7842 329.897 108.946 329.897 cv
127.105 329.897 141.83 343.527 141.83 360.342 cv
cp
.956863 .729412 .168627 rgb
f
108.946 336.061 mo
125.982 336.061 138.597 358.074 138.597 358.074 cv
140.283 361.016 141.737 362.505 141.83 361.381 cv
141.83 361.381 141.83 361.381 141.83 360.342 cv
141.83 343.527 127.105 329.897 108.946 329.897 cv
90.7842 329.897 76.0615 343.527 76.0615 360.342 cv
76.0615 361.381 76.0615 361.381 76.0615 361.381 cv
76.1538 362.505 77.6069 361.016 79.2944 358.074 cv
79.2944 358.074 91.9092 336.061 108.946 336.061 cv
cp
1 .823529 .25098 rgb
f
116.025 344.149 mo
115.154 343.811 114.218 344.338 113.961 345.232 cv
112.579 350.084 li
112.324 350.98 112.851 351.904 113.697 352.294 cv
114.785 352.799 115.788 353.485 116.645 354.341 cv
120.711 358.409 120.758 364.985 116.688 369.055 cv
112.618 373.124 106.09 373.03 102.021 368.959 cv
97.9497 364.893 97.4355 358.785 102.207 354.013 cv
105.585 357.393 li
106.243 358.049 106.885 357.834 107.018 356.917 cv
108.927 343.557 li
109.057 342.638 108.413 341.993 107.496 342.125 cv
94.1343 344.035 li
93.2168 344.165 93 344.808 93.6592 345.464 cv
96.2437 348.05 li
89.0874 355.207 88.6968 367.568 96.0547 374.925 cv
103.413 382.284 115.201 382.471 122.56 375.112 cv
129.918 367.753 129.922 355.774 122.564 348.417 cv
120.702 346.55 118.466 345.092 116.025 344.149 cv
cp
1 1 1 rgb
f
107.73 340.053 mo
107.73 340.053 li
107.555 340.053 107.379 340.066 107.202 340.091 cv
93.8438 342 li
92.625 342.172 91.6953 342.885 91.356 343.904 cv
91.0171 344.924 91.3359 346.05 92.2075 346.919 cv
93.4121 348.125 li
90.4375 351.79 88.7231 356.514 88.6514 361.381 cv
88.5669 367.13 90.6797 372.457 94.6016 376.378 cv
98.6094 380.386 103.897 382.592 109.49 382.592 cv
114.968 382.592 120.125 380.452 124.013 376.565 cv
127.96 372.618 130.135 367.362 130.137 361.763 cv
130.138 356.167 127.965 350.909 124.018 346.963 cv
121.966 344.909 119.458 343.271 116.766 342.232 cv
116.354 342.071 115.921 341.991 115.48 341.991 cv
113.873 341.991 112.435 343.092 111.986 344.669 cv
110.602 349.522 li
110.077 351.37 111.016 353.321 112.835 354.162 cv
113.727 354.574 114.52 355.124 115.191 355.794 cv
118.458 359.061 118.477 364.358 115.235 367.602 cv
113.684 369.152 111.629 370.003 109.446 370.003 cv
107.205 370.003 105.085 369.118 103.474 367.506 cv
101.816 365.85 100.886 363.794 100.853 361.719 cv
100.828 360.102 101.336 358.516 102.336 357.05 cv
104.13 358.846 li
104.946 359.659 105.771 359.829 106.321 359.829 cv
107.493 359.829 108.791 359.019 109.052 357.208 cv
110.961 343.847 li
111.105 342.834 110.836 341.88 110.208 341.155 cv
109.601 340.456 108.697 340.053 107.73 340.053 cv
107.73 340.053 li
cp
107.73 342.108 mo
108.52 342.108 109.046 342.717 108.927 343.557 cv
107.018 356.917 li
106.937 357.475 106.668 357.774 106.321 357.774 cv
106.098 357.774 105.843 357.651 105.585 357.393 cv
102.207 354.013 li
97.4355 358.785 97.9497 364.893 102.021 368.959 cv
104.079 371.019 106.766 372.06 109.446 372.06 cv
112.064 372.06 114.676 371.066 116.688 369.055 cv
120.758 364.985 120.711 358.409 116.645 354.341 cv
115.788 353.485 114.785 352.799 113.697 352.294 cv
112.851 351.904 112.324 350.98 112.579 350.084 cv
113.961 345.232 li
114.165 344.522 114.794 344.045 115.48 344.045 cv
115.662 344.045 115.844 344.079 116.025 344.149 cv
118.466 345.092 120.702 346.55 122.564 348.417 cv
129.922 355.774 129.918 367.753 122.56 375.112 cv
118.927 378.745 114.215 380.538 109.49 380.538 cv
104.643 380.538 99.7813 378.652 96.0547 374.925 cv
88.6968 367.568 89.0874 355.207 96.2437 348.05 cv
93.6592 345.464 li
93 344.808 93.2168 344.165 94.1343 344.035 cv
107.496 342.125 li
107.576 342.113 107.654 342.108 107.73 342.108 cv
107.73 342.108 li
cp
.94902 .6 .0784314 rgb
f
328.632 332.211 mo
308.231 332.211 291.639 348.806 291.639 369.205 cv
291.639 389.605 308.231 406.201 328.632 406.201 cv
349.03 406.201 365.625 389.605 365.625 369.205 cv
365.625 348.806 349.03 332.211 328.632 332.211 cv
328.632 332.211 li
cp
.819608 .819608 .819608 rgb
f
328.889 327.074 mo
308.489 327.074 291.894 343.669 291.894 364.068 cv
291.894 384.466 308.489 401.061 328.889 401.061 cv
349.288 401.061 365.883 384.466 365.883 364.068 cv
365.883 343.669 349.288 327.074 328.889 327.074 cv
328.889 327.074 li
cp
.478431 .164706 .129412 rgb
f
361.772 363.04 mo
361.772 381.202 347.049 395.923 328.889 395.923 cv
310.729 395.923 296.006 381.202 296.006 363.04 cv
296.006 344.878 310.729 330.155 328.889 330.155 cv
347.049 330.155 361.772 344.878 361.772 363.04 cv
cp
.94902 .6 .0784314 rgb
f
361.772 360.342 mo
361.772 377.155 347.049 390.787 328.889 390.787 cv
310.729 390.787 296.006 377.155 296.006 360.342 cv
296.006 343.527 310.729 329.897 328.889 329.897 cv
347.049 329.897 361.772 343.527 361.772 360.342 cv
cp
.956863 .729412 .168627 rgb
f
328.889 336.061 mo
345.924 336.061 358.54 358.074 358.54 358.074 cv
360.226 361.016 361.68 362.505 361.772 361.381 cv
361.772 361.381 361.772 361.381 361.772 360.342 cv
361.772 343.527 347.049 329.897 328.889 329.897 cv
310.729 329.897 296.006 343.527 296.006 360.342 cv
296.006 361.381 296.006 361.381 296.006 361.381 cv
296.098 362.505 297.551 361.016 299.238 358.074 cv
299.238 358.074 311.853 336.061 328.889 336.061 cv
cp
1 .823529 .25098 rgb
f
347.385 366.548 mo
347.385 365.983 346.923 365.521 346.356 365.521 cv
340.19 365.521 li
339.627 365.521 339.165 365.983 339.165 366.548 cv
339.165 372.714 li
339.165 373.279 339.627 373.741 340.19 373.741 cv
346.356 373.741 li
346.923 373.741 347.385 373.279 347.385 372.714 cv
347.385 366.548 li
cp
332.999 366.548 mo
332.999 365.983 332.536 365.521 331.971 365.521 cv
325.806 365.521 li
325.239 365.521 324.777 365.983 324.777 366.548 cv
324.777 372.714 li
324.777 373.279 325.239 373.741 325.806 373.741 cv
331.971 373.741 li
332.536 373.741 332.999 373.279 332.999 372.714 cv
332.999 366.548 li
cp
318.611 366.548 mo
318.611 365.983 318.148 365.521 317.585 365.521 cv
311.419 365.521 li
310.854 365.521 310.391 365.983 310.391 366.548 cv
310.391 372.714 li
310.391 373.279 310.854 373.741 311.419 373.741 cv
317.585 373.741 li
318.148 373.741 318.611 373.279 318.611 372.714 cv
318.611 366.548 li
cp
347.385 350.107 mo
347.385 349.542 346.923 349.08 346.356 349.08 cv
340.19 349.08 li
339.627 349.08 339.165 349.542 339.165 350.107 cv
339.165 356.272 li
339.165 356.837 339.627 357.3 340.19 357.3 cv
346.356 357.3 li
346.923 357.3 347.385 356.837 347.385 356.272 cv
347.385 350.107 li
cp
332.999 350.107 mo
332.999 349.542 332.536 349.08 331.971 349.08 cv
325.806 349.08 li
325.239 349.08 324.777 349.542 324.777 350.107 cv
324.777 356.272 li
324.777 356.837 325.239 357.3 325.806 357.3 cv
331.971 357.3 li
332.536 357.3 332.999 356.837 332.999 356.272 cv
332.999 350.107 li
cp
318.611 350.107 mo
318.611 349.542 318.148 349.08 317.585 349.08 cv
311.419 349.08 li
310.854 349.08 310.391 349.542 310.391 350.107 cv
310.391 356.272 li
310.391 356.837 310.854 357.3 311.419 357.3 cv
317.585 357.3 li
318.148 357.3 318.611 356.837 318.611 356.272 cv
318.611 350.107 li
cp
1 1 1 rgb
f
317.585 363.464 mo
311.419 363.464 li
309.719 363.464 308.335 364.849 308.335 366.548 cv
308.335 372.714 li
308.335 374.415 309.719 375.797 311.419 375.797 cv
317.585 375.797 li
319.285 375.797 320.668 374.415 320.668 372.714 cv
320.668 366.548 li
320.668 364.849 319.285 363.464 317.585 363.464 cv
317.585 363.464 li
cp
331.971 363.464 mo
325.806 363.464 li
324.105 363.464 322.723 364.849 322.723 366.548 cv
322.723 372.714 li
322.723 374.415 324.105 375.797 325.806 375.797 cv
331.971 375.797 li
333.671 375.797 335.054 374.415 335.054 372.714 cv
335.054 366.548 li
335.054 364.849 333.671 363.464 331.971 363.464 cv
331.971 363.464 li
cp
346.356 363.464 mo
340.19 363.464 li
338.491 363.464 337.11 364.849 337.11 366.548 cv
337.11 372.714 li
337.11 374.415 338.491 375.797 340.19 375.797 cv
346.356 375.797 li
348.057 375.797 349.439 374.415 349.439 372.714 cv
349.439 366.548 li
349.439 364.849 348.057 363.464 346.356 363.464 cv
346.356 363.464 li
cp
317.585 347.024 mo
311.419 347.024 li
309.719 347.024 308.335 348.407 308.335 350.107 cv
308.335 356.272 li
308.335 357.972 309.719 359.355 311.419 359.355 cv
317.585 359.355 li
319.285 359.355 320.668 357.972 320.668 356.272 cv
320.668 350.107 li
320.668 348.407 319.285 347.024 317.585 347.024 cv
317.585 347.024 li
cp
331.971 347.024 mo
325.806 347.024 li
324.105 347.024 322.723 348.407 322.723 350.107 cv
322.723 356.272 li
322.723 357.972 324.105 359.355 325.806 359.355 cv
331.971 359.355 li
333.671 359.355 335.054 357.972 335.054 356.272 cv
335.054 350.107 li
335.054 348.407 333.671 347.024 331.971 347.024 cv
331.971 347.024 li
cp
346.356 347.024 mo
340.19 347.024 li
338.491 347.024 337.11 348.407 337.11 350.107 cv
337.11 356.272 li
337.11 357.972 338.491 359.355 340.19 359.355 cv
346.356 359.355 li
348.057 359.355 349.439 357.972 349.439 356.272 cv
349.439 350.107 li
349.439 348.407 348.057 347.024 346.356 347.024 cv
346.356 347.024 li
cp
317.585 365.521 mo
318.148 365.521 318.611 365.983 318.611 366.548 cv
318.611 372.714 li
318.611 373.279 318.148 373.741 317.585 373.741 cv
311.419 373.741 li
310.854 373.741 310.391 373.279 310.391 372.714 cv
310.391 366.548 li
310.391 365.983 310.854 365.521 311.419 365.521 cv
317.585 365.521 li
317.585 365.521 li
cp
331.971 365.521 mo
332.536 365.521 332.999 365.983 332.999 366.548 cv
332.999 372.714 li
332.999 373.279 332.536 373.741 331.971 373.741 cv
325.806 373.741 li
325.239 373.741 324.777 373.279 324.777 372.714 cv
324.777 366.548 li
324.777 365.983 325.239 365.521 325.806 365.521 cv
331.971 365.521 li
331.971 365.521 li
cp
346.356 365.521 mo
346.923 365.521 347.385 365.983 347.385 366.548 cv
347.385 372.714 li
347.385 373.279 346.923 373.741 346.356 373.741 cv
340.19 373.741 li
339.627 373.741 339.165 373.279 339.165 372.714 cv
339.165 366.548 li
339.165 365.983 339.627 365.521 340.19 365.521 cv
346.356 365.521 li
346.356 365.521 li
cp
317.585 349.08 mo
318.148 349.08 318.611 349.542 318.611 350.107 cv
318.611 356.272 li
318.611 356.837 318.148 357.3 317.585 357.3 cv
311.419 357.3 li
310.854 357.3 310.391 356.837 310.391 356.272 cv
310.391 350.107 li
310.391 349.542 310.854 349.08 311.419 349.08 cv
317.585 349.08 li
317.585 349.08 li
cp
331.971 349.08 mo
332.536 349.08 332.999 349.542 332.999 350.107 cv
332.999 356.272 li
332.999 356.837 332.536 357.3 331.971 357.3 cv
325.806 357.3 li
325.239 357.3 324.777 356.837 324.777 356.272 cv
324.777 350.107 li
324.777 349.542 325.239 349.08 325.806 349.08 cv
331.971 349.08 li
331.971 349.08 li
cp
346.356 349.08 mo
346.923 349.08 347.385 349.542 347.385 350.107 cv
347.385 356.272 li
347.385 356.837 346.923 357.3 346.356 357.3 cv
340.19 357.3 li
339.627 357.3 339.165 356.837 339.165 356.272 cv
339.165 350.107 li
339.165 349.542 339.627 349.08 340.19 349.08 cv
346.356 349.08 li
346.356 349.08 li
cp
.94902 .6 .0784314 rgb
f
37.4282 277.103 mo
36.8979 278.062 36.4238 279.023 36.0532 279.949 cv
35.2739 282.119 36.52 283.66 38.6426 284.109 cv
41.5156 284.607 44.7119 283.882 47.0654 282.099 cv
47.6104 283.517 49.0391 284.103 50.75 283.818 cv
53.9395 283.164 56.959 280.951 58.3555 277.968 cv
70.4131 276.472 78.335 271.292 78.3447 264.357 cv
78.333 256.844 69.0479 251.39 55.2754 250.445 cv
54.6738 249.839 53.9619 249.207 53.1484 248.564 cv
49.9219 246.033 45.1729 243.251 39.5996 241.41 cv
36.688 240.47 33.8267 239.892 31.1606 240.031 cv
31.1099 240.033 li
31.0786 240.035 li
30.5396 240.087 30.1431 240.697 30.1919 241.386 cv
30.3657 243.863 30.8657 245.939 31.1997 247.74 cv
31.5474 249.537 31.7505 251.074 31.6196 252.244 cv
31.5933 252.466 31.5493 252.662 31.5054 252.857 cv
26.8955 254.064 22.8696 255.633 19.9224 257.431 cv
19.3276 257.792 18.1797 258.773 17.6299 259.378 cv
17.3115 259.156 16.9956 258.947 16.6978 258.763 cv
16.646 258.732 16.5967 258.703 16.5454 258.669 cv
16.5083 262.509 16.4463 266.347 16.3901 270.187 cv
16.605 270.035 16.7944 269.898 16.9224 269.792 cv
17.1533 269.619 17.3813 269.439 17.6064 269.257 cv
18.2563 270.117 19.0747 270.83 20.02 271.335 cv
22.5571 272.65 28.6772 275.455 37.4282 277.103 cv
cp
.819608 .819608 .819608 rgb
f
49.8574 268.832 mo
49.25 273.955 47.7881 277.476 50.3887 277.783 cv
52.9863 278.095 58.6621 275.076 59.2695 269.955 cv
59.877 264.833 58.2656 260.429 55.668 260.121 cv
53.0703 259.812 50.4648 263.712 49.8574 268.832 cv
cp
.65098 .427451 .109804 rgb
f
58.3008 262.369 mo
58.0117 262.509 58.5703 264.912 58.5938 265.175 cv
58.7598 267.066 58.7285 269.257 58.0742 271.066 cv
57.4668 272.746 56.2402 274.136 54.793 275.15 cv
53.791 275.851 51.498 277.265 50.2031 276.607 cv
49.8398 276.652 50.7813 268.48 50.8965 267.677 cv
51.1133 266.169 51.498 264.687 52.1055 263.291 cv
52.2012 263.07 53.2168 261.443 53.0176 261.22 cv
52.8672 260.947 51.9004 261.935 51.832 262.011 cv
50.7988 263.123 50.0938 264.537 49.627 265.97 cv
48.627 268.935 47.8447 272.755 47.8213 275.888 cv
47.8877 278.193 49.6094 279.173 51.75 278.818 cv
55.623 278.023 59.2539 274.929 60.0195 270.949 cv
60.3535 269.064 60.2559 266.99 59.7676 265.142 cv
59.7266 264.974 58.7148 262.044 58.3008 262.369 cv
58.0059 262.511 58.5234 262.195 58.3008 262.369 cv
cp
.478431 .164706 .129412 rgb
f
16.6528 255.466 mo
12.5005 252.908 8.40674 250.455 3.6333 247.97 cv
2.22119 247.24 1.59814 247.548 2.27393 248.666 cv
2.45361 248.656 8.13721 256.373 8.10596 259.355 cv
8.13721 262.335 2.45361 270.054 2.27393 270.042 cv
1.59814 271.162 2.22119 271.468 3.6333 270.742 cv
3.89893 270.734 14.0122 265.414 16.6528 263.246 cv
19.8735 260.808 21.7466 258.587 16.6528 255.466 cv
cp
.8 .52549 .133333 rgb
f
2.42627 245.574 mo
1.51611 245.574 .723145 246.017 .303223 246.759 cv
-.0307617 247.353 -.257324 248.345 .562988 249.701 cv
.668457 249.876 .80127 250.033 .949707 250.166 cv
2.16846 251.564 6.12549 257.619 6.10596 259.333 cv
6.12549 261.091 2.17236 267.146 .95166 268.542 cv
.80127 268.675 .668457 268.832 .562988 269.009 cv
-.257324 270.367 -.0307617 271.357 .303223 271.949 cv
.723145 272.691 1.51611 273.134 2.42627 273.134 cv
3.05127 273.134 3.74463 272.933 4.54736 272.521 cv
4.53174 272.486 li
7.50439 271.277 16.3286 266.099 17.9224 264.792 cv
19.979 263.236 21.9224 261.419 21.8052 258.998 cv
21.6802 256.484 19.4009 254.806 17.6978 253.763 cv
13.145 250.957 9.16846 248.595 4.55713 246.195 cv
3.74658 245.775 3.05127 245.574 2.42627 245.574 cv
2.42627 245.574 li
cp
2.42627 247.574 mo
2.70557 247.574 3.11768 247.701 3.6333 247.97 cv
8.40674 250.455 12.5005 252.908 16.6528 255.466 cv
21.7466 258.587 19.8735 260.808 16.6528 263.246 cv
14.0122 265.414 3.89893 270.734 3.6333 270.742 cv
3.11768 271.007 2.70752 271.134 2.42627 271.134 cv
1.93994 271.134 1.84619 270.751 2.27393 270.042 cv
2.27393 270.042 li
2.46338 270.042 8.13721 262.333 8.10596 259.355 cv
8.13721 256.373 2.46143 248.666 2.27393 248.666 cv
2.27393 248.666 li
1.84619 247.958 1.93994 247.574 2.42627 247.574 cv
2.42627 247.574 li
cp
.478431 .164706 .129412 rgb
f
3.48486 250.232 mo
3.48682 250.236 3.48877 250.236 3.48877 250.238 cv
7.41846 252.353 15.7954 255.748 16.6528 255.466 cv
12.5005 252.908 8.40674 250.455 3.6333 247.97 cv
2.22119 247.24 1.59814 247.548 2.27393 248.666 cv
2.27393 248.667 2.79346 249.289 3.48486 250.232 cv
cp
.960784 .913725 .470588 rgb
f
44.915 247.689 mo
34.8755 248.689 26.5962 251.312 21.9634 254.138 cv
21.5962 254.33 20.2544 255.501 20.0376 255.802 cv
20.0376 255.802 li
18.063 258.601 18.8794 262.919 21.9634 264.572 cv
26.7778 267.066 34.8794 270.011 44.915 271.019 cv
61.8691 272.896 77.333 267.849 77.3447 259.355 cv
77.333 250.857 61.8691 245.814 44.915 247.689 cv
cp
.960784 .772549 .164706 rgb
f
51.9297 245.298 mo
49.543 245.298 47.1084 245.433 44.6943 245.701 cv
35.1685 246.65 26.2739 249.166 20.9224 252.431 cv
20.9224 252.431 li
20.2329 252.849 18.7974 254.101 18.4146 254.634 cv
17.0864 256.517 16.645 258.919 17.1938 261.242 cv
17.7192 263.457 19.1138 265.314 21.02 266.335 cv
24.1274 267.945 32.606 271.792 44.7158 273.009 cv
47.1104 273.275 49.5449 273.41 51.9336 273.41 cv
68.0615 273.41 79.332 267.632 79.3438 259.357 cv
79.332 251.078 68.0596 245.298 51.9297 245.298 cv
51.9297 245.298 li
cp
51.9297 247.298 mo
65.9072 247.298 77.335 252.052 77.3447 259.355 cv
77.335 266.656 65.9111 271.41 51.9336 271.41 cv
49.6504 271.41 47.2959 271.283 44.915 271.019 cv
34.8794 270.011 26.7778 267.066 21.9634 264.572 cv
18.8794 262.919 18.063 258.601 20.0376 255.802 cv
20.2544 255.501 21.5962 254.33 21.9634 254.138 cv
26.5962 251.312 34.8755 248.689 44.915 247.689 cv
47.2959 247.423 49.6465 247.298 51.9297 247.298 cv
51.9297 247.298 li
cp
.478431 .164706 .129412 rgb
f
77.3447 259.355 mo
77.3447 252.248 66.126 247.318 52.3223 247.359 cv
52.3223 247.359 52.3223 247.359 52.3203 247.359 cv
53.8672 248.347 54.9316 249.328 55.2383 250.13 cv
66.5947 251.248 75.1006 256.011 75.0166 262.103 cv
75.001 263.33 74.583 264.5 73.8916 265.599 cv
73.8916 265.599 73.8936 265.599 73.8955 265.599 cv
76.0732 263.792 77.3447 261.65 77.3447 259.355 cv
cp
.960784 .913725 .470588 rgb
f
21.9634 254.138 mo
21.5962 254.33 20.2544 255.501 20.0376 255.802 cv
19.5669 256.47 19.2622 257.23 19.1021 258.015 cv
22.3833 255.564 28.1841 252.951 31.2856 251.451 cv
31.9692 251.119 32.5356 250.515 32.9888 249.812 cv
28.3872 251.023 24.5786 252.542 21.9634 254.138 cv
cp
f
66.8506 257.894 mo
66.8506 262.103 63.4414 265.513 59.2305 265.513 cv
55.0254 265.513 51.6152 262.103 51.6152 257.894 cv
51.6152 253.687 55.0254 250.277 59.2305 250.277 cv
63.4414 250.277 66.8506 253.687 66.8506 257.894 cv
cp
.8 .52549 .133333 rgb
f
66.542 256.984 mo
66.542 260.507 63.6895 263.361 60.166 263.361 cv
56.6465 263.361 53.793 260.507 53.793 256.984 cv
53.793 253.464 56.6465 250.613 60.166 250.613 cv
63.6895 250.613 66.542 253.464 66.542 256.984 cv
cp
1 1 1 rgb
f
63.1426 256.984 mo
63.1426 258.628 61.8105 259.96 60.166 259.96 cv
58.5254 259.96 57.1934 258.628 57.1934 256.984 cv
57.1934 255.343 58.5254 254.011 60.166 254.011 cv
61.8105 254.011 63.1426 255.343 63.1426 256.984 cv
cp
0 0 0 rgb
f
64.2314 254.757 mo
64.2314 255.886 63.3184 256.8 62.1895 256.8 cv
61.0605 256.8 60.1465 255.886 60.1465 254.757 cv
60.1465 253.628 61.0605 252.716 62.1895 252.716 cv
63.3184 252.716 64.2314 253.628 64.2314 254.757 cv
cp
1 1 1 rgb
f
41.5215 269.121 mo
39.0879 273.669 36.4419 276.416 38.752 277.65 cv
41.0566 278.888 47.4443 278.146 49.877 273.599 cv
52.3105 269.052 52.416 264.365 50.1094 263.128 cv
47.8037 261.894 43.9561 264.576 41.5215 269.121 cv
cp
.8 .52549 .133333 rgb
f
51.7402 266.183 mo
51.4199 266.208 51.0645 268.648 50.9902 268.902 cv
50.4551 270.724 49.627 272.753 48.3584 274.199 cv
47.1807 275.541 45.5322 276.388 43.8135 276.804 cv
42.625 277.091 39.9746 277.572 39.0078 276.488 cv
38.6543 276.396 42.5098 269.13 42.9102 268.425 cv
43.6631 267.101 44.5615 265.861 45.6377 264.781 cv
45.8057 264.611 47.3447 263.466 47.2412 263.187 cv
47.2002 262.876 45.9404 263.445 45.8486 263.49 cv
44.4814 264.148 43.3096 265.208 42.3516 266.373 cv
40.3379 268.769 38.2178 272.041 37.0532 274.949 cv
36.2739 277.119 37.52 278.66 39.6426 279.109 cv
43.54 279.783 48.0479 278.226 50.2129 274.798 cv
51.2109 273.166 51.875 271.199 52.0957 269.3 cv
52.1172 269.128 52.2441 266.031 51.7402 266.183 cv
51.4141 266.208 52.0117 266.101 51.7402 266.183 cv
cp
.478431 .164706 .129412 rgb
f
31.3813 250.49 mo
31.2896 250.546 31.2192 250.593 31.145 250.638 cv
35.5962 249.289 40.7969 248.421 46.4111 248.279 cv
50.6797 248.171 54.7422 248.494 58.4375 249.142 cv
57.1719 245.087 41.2266 236.064 32.1958 236.326 cv
32.4673 242.085 35.4165 247.884 31.3813 250.49 cv
cp
.8 .52549 .133333 rgb
f
53.7695 248.539 mo
55.375 248.687 56.9414 248.88 58.4375 249.142 cv
57.3281 245.595 44.9854 238.244 35.8657 236.634 cv
34.563 236.406 33.3247 236.291 32.1958 236.326 cv
32.2388 237.244 32.354 238.16 32.4946 239.068 cv
39.5098 239.841 49.0918 244.642 53.7695 248.539 cv
cp
.960784 .913725 .470588 rgb
f
57.7148 247.138 mo
56.9844 246.078 55.7617 244.837 54.1484 243.564 cv
50.9219 241.033 46.1729 238.251 40.5996 236.41 cv
37.688 235.47 34.8267 234.892 32.1606 235.031 cv
32.1099 235.033 li
32.0786 235.035 li
31.5396 235.087 31.1431 235.697 31.1919 236.386 cv
31.3657 238.863 31.8657 240.939 32.1997 242.74 cv
32.5474 244.537 32.7505 246.074 32.6196 247.244 cv
32.3442 249.593 30.9517 250.339 31.145 250.638 cv
31.1919 250.757 31.5317 250.74 32.0903 250.376 cv
32.6294 250.025 33.4458 249.154 33.8032 247.615 cv
34.4731 244.853 33.6079 241.382 33.2935 237.689 cv
35.3989 237.849 37.7056 238.384 40.0898 239.156 cv
45.4307 240.919 50.1445 243.332 53.418 245.322 cv
55.0547 246.322 56.332 247.244 57.1484 247.958 cv
57.9844 248.666 58.2891 249.197 58.4375 249.142 cv
58.5938 249.103 58.4688 248.187 57.7148 247.138 cv
cp
.478431 .164706 .129412 rgb
f
419.307 48.5327 mo
299.184 41.478 179.059 40.8022 58.9355 46.4585 cv
66.9756 53.9683 li
55.8105 64.397 li
61.3555 78.6353 li
54.1914 80.8589 li
47.8467 85.6636 li
79.3496 97.4556 li
81.4277 97.0308 li
89.4629 95.3862 103.946 91.8081 105.138 91.48 cv
108.64 90.5132 111.532 86.8423 110.312 82.3745 cv
110.309 82.3608 110.304 82.3442 110.298 82.3228 cv
147.892 78.0132 185.977 75.6284 223.563 75.2319 cv
227.352 75.1929 231.143 75.1724 234.936 75.1724 cv
270.418 75.1724 306.313 76.9292 341.689 80.396 cv
341.357 82.1538 341.678 84.0034 342.596 85.5435 cv
343.604 87.2358 345.279 88.4722 347.193 88.9351 cv
372.895 95.1538 399.295 98.9858 425.811 100.371 cv
426.336 91.2183 426.93 82.0659 427.564 72.9136 cv
425.074 69.5796 422.633 66.2339 420.295 62.8745 cv
422.834 60.064 425.295 57.2202 427.711 54.3628 cv
426.264 51.1147 423.113 48.7593 419.307 48.5327 cv
cp
.819608 .819608 .819608 rgb
f
66.0811 35.519 mo
51.8281 42.1802 li
69.8564 47.7192 li
62.3926 56.1304 li
72.8291 58.104 li
58.3359 66.5903 li
78.6875 70.2817 li
64.7373 80.8462 li
81.5449 87.1362 li
89.2646 85.5571 96.9434 83.7651 104.576 81.7476 cv
98.9316 62.1323 93.2559 42.5073 87.5752 22.8726 cv
76.7588 25.7271 65.8066 28.0347 54.7451 29.8296 cv
66.0811 35.519 li
cp
.168627 .576471 .956863 rgb
f
90.248 85.2612 mo
85.334 65.4546 80.4404 45.6343 75.6006 25.8003 cv
76.1885 25.6675 76.7744 25.521 77.3623 25.3853 cv
78.3359 25.1587 79.3096 24.9312 80.2813 24.6978 cv
82.25 24.2241 84.2148 23.7319 86.1758 23.2241 cv
86.6406 23.1021 87.1104 22.9956 87.5752 22.8726 cv
93.2559 42.5073 98.9316 62.1323 104.576 81.7476 cv
99.8184 83.0054 95.041 84.1724 90.248 85.2612 cv
cp
.133333 .403922 .94902 rgb
f
90.4473 17.8062 mo
86.5137 18.8452 li
75.9932 21.6196 65.0801 23.9331 54.0771 25.7163 cv
41.3691 27.7788 li
52.876 33.5532 li
56.5264 35.3862 li
50.0645 38.4058 li
40.2637 42.9858 li
50.6045 46.1616 li
62.4395 49.7983 li
59.2754 53.3667 li
54.4004 58.8608 li
61.1211 60.1304 li
56.2314 62.9946 li
46.5186 68.6812 li
57.5918 70.6899 li
68.6084 72.688 li
62.2217 77.5239 li
56.1855 82.0942 li
63.2764 84.7476 li
80.0859 91.0386 li
81.207 91.4585 li
82.3809 91.2183 li
90.2373 89.6108 104.513 86.0854 105.642 85.7749 cv
107.361 85.3003 109.337 83.3706 108.579 80.5952 cv
108.218 79.2671 97.1162 40.8589 91.5781 21.7144 cv
90.4473 17.8062 li
90.4473 17.8062 li
cp
87.5752 22.8726 mo
93.2559 42.5073 98.9316 62.1323 104.576 81.7476 cv
96.9434 83.7651 89.2646 85.5571 81.5449 87.1362 cv
64.7373 80.8462 li
78.6875 70.2817 li
58.3359 66.5903 li
72.8291 58.104 li
62.3926 56.1304 li
69.8564 47.7192 li
51.8281 42.1802 li
66.0811 35.519 li
54.7451 29.8296 li
65.8066 28.0347 76.7588 25.7271 87.5752 22.8726 cv
87.5752 22.8726 li
cp
.129412 .235294 .360784 rgb
f
434.232 29.4673 mo
410.227 28.7261 386.598 25.5347 363.508 19.9624 cv
358.244 39.7104 352.982 59.4497 347.754 79.1812 cv
375.408 85.8735 403.553 89.7104 432.201 90.6577 cv
423.871 80.6011 416.15 70.2983 409.1 59.8101 cv
418.256 50.0073 426.668 39.8706 434.232 29.4673 cv
cp
.168627 .576471 .956863 rgb
f
363.461 15.7944 mo
361.635 15.814 359.975 17.0435 359.482 18.8882 cv
354.352 38.1401 349.045 58.0444 343.727 78.1138 cv
343.439 79.1978 343.6 80.3501 344.174 81.313 cv
344.746 82.2769 345.684 82.9673 346.773 83.23 cv
374.633 89.9722 403.328 93.8716 432.063 94.8218 cv
432.125 94.8237 432.186 94.8237 432.246 94.8237 cv
433.814 94.8071 435.246 93.9097 435.941 92.4917 cv
436.664 91.02 436.455 89.2622 435.41 87.9995 cv
427.904 78.937 420.848 69.603 414.406 60.2085 cv
422.848 50.9956 430.641 41.4917 437.602 31.9165 cv
438.51 30.6675 438.652 29.019 437.973 27.6343 cv
437.295 26.2476 435.902 25.3501 434.361 25.3022 cv
410.797 24.5747 387.287 21.4155 364.486 15.9116 cv
364.143 15.8296 363.799 15.7915 363.461 15.7944 cv
363.461 15.7944 li
cp
363.508 19.9624 mo
386.598 25.5347 410.227 28.7261 434.232 29.4673 cv
426.668 39.8706 418.256 50.0073 409.1 59.8101 cv
416.15 70.2983 423.871 80.6011 432.201 90.6577 cv
403.553 89.7104 375.408 85.8735 347.754 79.1812 cv
352.982 59.4497 358.244 39.7104 363.508 19.9624 cv
363.508 19.9624 li
cp
.129412 .235294 .360784 rgb
f
362.152 82.3921 mo
366.646 62.4858 371.121 42.5679 375.541 22.6343 cv
374.951 22.5142 374.363 22.3804 373.773 22.2573 cv
372.793 22.0522 371.816 21.8452 370.84 21.6323 cv
368.859 21.1997 366.885 20.7495 364.914 20.2817 cv
364.447 20.1714 363.977 20.0747 363.508 19.9624 cv
358.244 39.7104 352.982 59.4497 347.754 79.1812 cv
352.539 80.3384 357.338 81.4048 362.152 82.3921 cv
cp
.133333 .403922 .94902 rgb
f
355.914 72.0854 mo
269.77 62.4526 182.344 63.1226 95.5117 74.3296 cv
93.2305 74.6245 91.1406 73.021 90.8418 70.7397 cv
88.5605 53.269 86.3066 35.7944 84.084 18.314 cv
83.7949 16.0327 85.4082 13.9351 87.6904 13.6401 cv
179.518 1.79248 272 1.09717 363.146 11.3237 cv
365.434 11.5796 367.061 13.647 366.785 15.9321 cv
364.672 33.4243 362.59 50.9214 360.539 68.4194 cv
360.27 70.7046 358.201 72.3413 355.914 72.0854 cv
cp
.25098 .686275 1 rgb
f
360.539 68.4194 mo
361.414 60.9526 362.316 53.4897 363.203 46.0249 cv
344.662 43.5874 326.484 36.4429 307.811 35.3403 cv
288.234 34.1831 268.393 39.7124 248.753 39.439 cv
229.148 39.1655 209.467 33.0864 189.833 33.6968 cv
170.238 34.3062 150.973 41.5962 131.384 43.0894 cv
116.796 44.2007 101.872 42.0972 87.1309 41.9438 cv
88.3662 51.5425 89.5889 61.144 90.8418 70.7397 cv
91.1406 73.021 93.2305 74.6245 95.5117 74.3296 cv
182.344 63.1226 269.77 62.4526 355.914 72.0854 cv
358.201 72.3413 360.27 70.7046 360.539 68.4194 cv
cp
.168627 .576471 .956863 rgb
f
366.785 15.9321 mo
364.672 33.4243 362.59 50.9214 360.539 68.4194 cv
360.289 70.5308 358.504 72.0894 356.428 72.1108 cv
356.258 72.1128 356.088 72.105 355.914 72.0854 cv
312.063 67.1831 267.873 64.9487 223.604 65.4146 cv
180.908 65.8657 138.143 68.8276 95.5117 74.3296 cv
95.3457 74.3511 95.1797 74.3628 95.0156 74.3638 cv
92.9336 74.3862 91.1172 72.855 90.8418 70.7397 cv
88.5605 53.269 86.3066 35.7944 84.084 18.314 cv
83.7949 16.0327 85.4082 13.9351 87.6904 13.6401 cv
132.696 7.8335 177.868 4.70557 222.954 4.22803 cv
269.859 3.73486 316.672 6.10889 363.146 11.3237 cv
365.434 11.5796 367.061 13.647 366.785 15.9321 cv
cp
369.189 10.2788 mo
367.807 8.53076 365.826 7.43311 363.611 7.18311 cv
317.1 1.96436 269.762 -.430176 222.916 .0629883 cv
177.706 .540527 132.031 3.71826 87.1563 9.50928 cv
82.6055 10.0972 79.3721 14.2827 79.9512 18.8394 cv
82.166 36.2554 84.4395 53.8979 86.7109 71.2798 cv
87.2559 75.4575 90.8457 78.5747 95.0586 78.5308 cv
95.3867 78.5269 95.7197 78.5034 96.0469 78.4604 cv
138.232 73.0171 181.164 70.0288 223.648 69.5815 cv
267.537 69.1187 311.883 71.355 355.451 76.2261 cv
355.791 76.2642 356.133 76.2808 356.473 76.2769 cv
360.662 76.2339 364.188 73.064 364.676 68.9048 cv
366.719 51.4858 368.82 33.8315 370.922 16.4312 cv
371.189 14.2134 370.576 12.0269 369.189 10.2788 cv
cp
.129412 .235294 .360784 rgb
f
358.506 34.5903 mo
357.979 34.5903 359.533 19.978 359.363 16.937 cv
355.424 16.3511 327.965 12.1362 327.951 12.1958 cv
327.984 11.3071 357.102 14.3657 361.465 15.4556 cv
360.615 21.853 359.631 28.2358 358.506 34.5903 cv
358.506 34.5903 li
cp
.219608 .909804 1 rgb
f
113.901 15.6245 mo
106.277 17.2788 98.4629 18.4429 90.6729 18.7769 cv
90.8086 22.271 90.9014 25.7915 90.8555 29.2944 cv
89.9609 25.2827 89.2148 21.2378 88.6953 17.1597 cv
97.0449 16.0298 105.474 15.4487 113.901 15.6245 cv
113.901 15.6245 li
cp
f
261.311 9.35303 mo
234.75 9.81787 208.189 10.2222 181.627 10.5679 cv
187.717 5.29053 214.001 8.0835 221.438 7.96826 cv
234.777 7.72412 252.695 6.44482 261.311 9.35303 cv
261.311 9.35303 261.32 9.35303 261.311 9.35303 cv
cp
f
182.633 51.0522 mo
182.553 49.6143 182.472 48.1768 182.392 46.7383 cv
180.166 46.8623 177.939 46.9937 175.714 47.1333 cv
175.256 39.8418 174.796 32.5503 174.333 25.2593 cv
172.325 25.3853 170.316 25.5171 168.308 25.6558 cv
168.285 25.3237 168.262 24.9922 168.239 24.6602 cv
170.271 24.52 172.302 24.3867 174.333 24.2593 cv
174.796 31.5503 175.256 38.8418 175.714 46.1333 cv
177.939 45.9937 180.166 45.8623 182.392 45.7383 cv
182.491 47.5088 182.59 49.2788 182.688 51.0488 cv
182.67 51.0498 182.651 51.0513 182.633 51.0522 cv
cp
167.613 52.0088 mo
167.51 50.5718 167.408 49.1343 167.305 47.6973 cv
165.193 47.8481 163.083 48.0059 160.972 48.1704 cv
160.817 46.1909 160.662 44.2119 160.507 42.2324 cv
160.533 42.2305 160.559 42.2285 160.585 42.2266 cv
160.714 43.8745 160.843 45.5225 160.972 47.1704 cv
163.083 47.0059 165.193 46.8481 167.305 46.6973 cv
167.432 48.4658 167.558 50.2349 167.684 52.0034 cv
167.66 52.0054 167.637 52.0073 167.613 52.0088 cv
cp
165.731 24.8364 mo
165.854 26.5425 165.978 28.249 166.1 29.9551 cv
166.076 29.9565 166.052 29.9585 166.028 29.9604 cv
165.93 28.5859 165.831 27.2109 165.731 25.8364 cv
161.544 26.1357 157.357 26.4619 153.174 26.8149 cv
153.146 26.4839 153.118 26.1528 153.089 25.8218 cv
157.301 25.4658 161.516 25.1377 165.731 24.8364 cv
cp
166.575 40.7764 mo
166.551 40.7778 166.527 40.7803 166.503 40.7817 cv
166.41 39.4941 166.317 38.2065 166.224 36.9185 cv
164.19 37.0645 162.158 37.2168 160.125 37.376 cv
159.97 35.3965 159.814 33.417 159.659 31.4375 cv
159.685 31.4355 159.711 31.4336 159.737 31.4316 cv
159.866 33.0796 159.996 34.728 160.125 36.376 cv
162.158 36.2168 164.19 36.0645 166.224 35.9185 cv
166.341 37.5381 166.458 39.1572 166.575 40.7764 cv
cp
150.847 27.0146 mo
148.744 27.1968 146.641 27.3853 144.539 27.5811 cv
144.153 33.939 143.785 40.2964 143.434 46.6538 cv
143.419 47.4204 143.404 48.187 143.389 48.9536 cv
143.216 48.2056 143.042 47.457 142.868 46.7085 cv
141.303 40.5366 139.718 34.3677 138.113 28.2026 cv
136.064 28.4072 134.016 28.6196 131.968 28.8374 cv
131.861 28.5151 131.758 28.1924 131.651 27.8701 cv
133.805 27.6406 135.958 27.418 138.113 27.2026 cv
139.718 33.3677 141.303 39.5366 142.868 45.7085 cv
143.042 46.457 143.216 47.2056 143.389 47.9536 cv
143.404 47.187 143.419 46.4204 143.434 45.6538 cv
143.785 39.2964 144.153 32.939 144.539 26.5811 cv
146.682 26.3813 148.826 26.189 150.97 26.0034 cv
150.928 26.3403 150.888 26.6772 150.847 27.0146 cv
cp
132.572 55.166 mo
132.416 53.7324 132.26 52.2988 132.104 50.8652 cv
129.999 51.0933 127.895 51.3286 125.792 51.5708 cv
125.564 49.5981 125.335 47.6255 125.107 45.6528 cv
125.145 45.6484 125.183 45.6445 125.221 45.6401 cv
125.412 47.2837 125.602 48.9272 125.792 50.5708 cv
127.895 50.3286 129.999 50.0933 132.104 49.8652 cv
132.295 51.6279 132.487 53.3906 132.679 55.1538 cv
132.644 55.1577 132.607 55.1621 132.572 55.166 cv
cp
117.803 56.8872 mo
117.625 55.4551 117.446 54.0229 117.268 52.5913 cv
115.054 52.8662 112.841 53.1494 110.629 53.4404 cv
109.676 46.1968 108.721 38.9531 107.764 31.71 cv
105.789 31.9702 103.815 32.2363 101.842 32.5083 cv
101.797 32.1812 101.752 31.854 101.707 31.5269 cv
103.725 31.248 105.744 30.9761 107.764 30.71 cv
108.721 37.9531 109.676 45.1968 110.629 52.4404 cv
112.841 52.1494 115.054 51.8662 117.268 51.5913 cv
117.487 53.3511 117.706 55.1108 117.925 56.8711 cv
117.884 56.876 117.844 56.8823 117.803 56.8872 cv
cp
129.728 28.0767 mo
129.914 29.7778 130.1 31.4785 130.286 33.1797 cv
130.25 33.1836 130.214 33.188 130.178 33.1919 cv
130.028 31.8198 129.878 30.4487 129.728 29.0767 cv
125.565 29.5283 121.405 30.0073 117.247 30.5117 cv
117.207 30.1826 117.167 29.854 117.127 29.5254 cv
121.325 29.0156 125.525 28.5327 129.728 28.0767 cv
cp
131.157 43.9751 mo
131.121 43.979 131.085 43.9834 131.049 43.9873 cv
130.909 42.7026 130.768 41.418 130.628 40.1333 cv
128.601 40.354 126.574 40.5811 124.548 40.8145 cv
124.32 38.8423 124.092 36.8701 123.863 34.8975 cv
123.901 34.8931 123.939 34.8892 123.978 34.8848 cv
124.168 36.5278 124.358 38.1714 124.548 39.8145 cv
126.574 39.5811 128.601 39.354 130.628 39.1333 cv
130.804 40.7471 130.98 42.3613 131.157 43.9751 cv
cp
186.385 45.5146 mo
186.266 43.3853 184.502 41.7383 182.395 41.7383 cv
182.32 41.7383 182.245 41.7402 182.169 41.7446 cv
181.265 41.7949 180.36 41.8467 179.456 41.8994 cv
179.081 35.9346 178.704 29.9702 178.326 24.0063 cv
178.191 21.8877 176.431 20.2593 174.337 20.2593 cv
174.253 20.2593 174.168 20.2617 174.083 20.2671 cv
172.043 20.395 170.003 20.5288 167.964 20.6694 cv
167.533 20.6992 167.113 20.7983 166.721 20.9595 cv
166.405 20.8789 166.074 20.8364 165.735 20.8364 cv
165.64 20.8364 165.543 20.8398 165.446 20.8467 cv
161.207 21.1494 156.936 21.4824 152.752 21.8359 cv
152.39 21.8667 152.036 21.9463 151.7 22.0708 cv
151.461 22.0264 151.216 22.0034 150.97 22.0034 cv
150.855 22.0034 150.74 22.0083 150.625 22.0186 cv
148.472 22.2046 146.32 22.3979 144.168 22.5981 cv
142.856 22.7207 141.734 23.4697 141.099 24.54 cv
140.354 23.7065 139.276 23.2026 138.116 23.2026 cv
137.983 23.2026 137.85 23.209 137.715 23.2227 cv
135.552 23.4385 133.39 23.6621 131.228 23.8926 cv
130.899 23.9277 130.581 24.0024 130.277 24.1138 cv
130.099 24.0889 129.917 24.0762 129.733 24.0762 cv
129.589 24.0762 129.443 24.084 129.296 24.1001 cv
125.091 24.5566 120.834 25.0459 116.645 25.5547 cv
115.591 25.6826 114.631 26.2241 113.977 27.0601 cv
113.323 27.896 113.028 28.9575 113.157 30.0112 cv
113.882 35.9414 114.607 41.8721 115.33 47.8022 cv
114.911 47.855 114.493 47.9082 114.074 47.9614 cv
113.293 42.0361 112.512 36.1108 111.729 30.186 cv
111.463 28.1738 109.745 26.7095 107.769 26.7095 cv
107.595 26.7095 107.418 26.7207 107.241 26.7441 cv
105.213 27.0112 103.186 27.2847 101.159 27.5645 cv
100.108 27.7095 99.1577 28.2666 98.5176 29.1123 cv
97.877 29.9585 97.5986 31.0244 97.7441 32.0752 cv
98.9893 41.0679 100.231 50.0605 101.471 59.0537 cv
101.747 61.0571 103.461 62.5083 105.428 62.5083 cv
105.61 62.5083 105.794 62.4961 105.979 62.4702 cv
110.092 61.9038 114.277 61.3555 118.419 60.8403 cv
118.846 60.7876 119.257 60.6665 119.638 60.4858 cv
119.893 60.5366 120.155 60.5635 120.421 60.5635 cv
120.583 60.5635 120.745 60.5537 120.909 60.5337 cv
124.952 60.0425 129.057 59.5703 133.111 59.1304 cv
134.166 59.0161 135.132 58.4873 135.797 57.6602 cv
136.188 57.1738 136.456 56.6074 136.587 56.0088 cv
137.23 57.4385 138.659 58.3638 140.23 58.3638 cv
140.364 58.3638 140.498 58.3574 140.633 58.3438 cv
143.103 58.0952 145.575 57.8569 148.047 57.6279 cv
149.865 57.4595 151.328 56.0845 151.624 54.3003 cv
152.18 55.8696 153.678 56.9619 155.39 56.9619 cv
155.502 56.9619 155.616 56.957 155.73 56.9473 cv
159.789 56.6045 163.907 56.2837 167.969 55.9932 cv
168.384 55.9634 168.788 55.8696 169.167 55.7183 cv
169.472 55.7935 169.791 55.833 170.118 55.833 cv
170.21 55.833 170.303 55.8301 170.396 55.8237 cv
174.57 55.5361 178.781 55.2729 182.911 55.0425 cv
185.117 54.9194 186.805 53.0317 186.682 50.8262 cv
186.4 45.7749 li
186.385 45.5146 li
cp
.129412 .235294 .360784 rgb
f
347.941 31.4683 mo
347.801 30.3638 347.121 28.998 344.734 28.731 cv
341.414 28.3638 340.806 30.7905 340.779 31.7656 cv
340.654 33.3589 340.606 34.8135 340.597 36.1807 cv
340.586 34.5278 340.623 32.7534 340.779 30.7656 cv
340.804 29.8584 341.333 27.6934 344.082 27.6934 cv
344.287 27.6934 344.504 27.7056 344.734 27.731 cv
347.954 28.0913 348.073 30.4497 347.941 31.4683 cv
cp
345.272 53.1284 mo
345.267 53.1768 345.25 53.2212 345.242 53.269 cv
345.022 51.8408 343.873 50.6504 342.327 50.4775 cv
340.532 50.2778 338.954 51.5322 338.688 53.2407 cv
338.646 52.9634 338.625 52.6812 338.656 52.3926 cv
338.834 50.7271 340.261 49.4565 341.951 49.4565 cv
342.075 49.4565 342.2 49.4634 342.327 49.4775 cv
344.177 49.6841 345.478 51.3423 345.272 53.1284 cv
cp
338.428 28.6909 mo
334.245 28.2534 330.063 27.8413 325.877 27.457 cv
325.084 36.1685 324.288 44.8804 323.489 53.5913 cv
323.459 53.5889 323.429 53.5854 323.398 53.5825 cv
324.228 44.541 325.054 35.499 325.877 26.457 cv
330.097 26.8442 334.314 27.2593 338.531 27.7012 cv
338.497 28.0313 338.463 28.3608 338.428 28.6909 cv
cp
336.974 39.6899 mo
334.975 39.481 332.975 39.2773 330.974 39.0811 cv
331.006 38.751 331.038 38.4209 331.07 38.0908 cv
333.073 38.2876 335.075 38.4907 337.076 38.7002 cv
337.042 39.0303 337.008 39.3599 336.974 39.6899 cv
cp
336.154 50.4897 mo
334.076 50.272 331.999 50.061 329.92 49.8574 cv
329.952 49.5273 329.984 49.1973 330.017 48.8672 cv
332.098 49.0713 334.178 49.2822 336.258 49.5005 cv
336.224 49.8301 336.188 50.1602 336.154 50.4897 cv
cp
323.096 31.3584 mo
323.083 29.9731 323.071 28.5879 323.058 27.2021 cv
317.588 26.7158 312.116 26.2754 306.643 25.8813 cv
306.431 27.248 306.22 28.6147 306.009 29.9814 cv
305.957 29.978 305.906 29.9741 305.855 29.9702 cv
306.117 28.2739 306.38 26.5776 306.643 24.8813 cv
312.116 25.2754 317.588 25.7158 323.058 26.2021 cv
323.074 27.9214 323.09 29.6406 323.104 31.3594 cv
323.102 31.3589 323.099 31.3589 323.096 31.3584 cv
cp
306.965 36.7637 mo
307.016 36.0166 li
307.064 35.3105 306.927 34.6348 306.645 34.0376 cv
306.82 34.0503 306.996 34.063 307.172 34.0762 cv
307.103 34.9722 307.033 35.8672 306.965 36.7637 cv
cp
306.319 45.1328 mo
306.153 44.7007 305.912 44.2964 305.603 43.9404 cv
305.508 43.8315 305.408 43.7285 305.304 43.6318 cv
305.309 43.6274 305.313 43.623 305.318 43.6187 cv
305.978 43.0444 306.427 42.2739 306.605 41.4277 cv
306.51 42.6631 306.415 43.8975 306.319 45.1328 cv
cp
311.467 31.3882 mo
310.928 38.4038 310.387 45.4189 309.844 52.4341 cv
309.818 52.4321 309.793 52.4297 309.768 52.4277 cv
310.311 45.4131 310.851 38.3979 311.391 31.3823 cv
311.416 31.3843 311.441 31.3862 311.467 31.3882 cv
cp
340.704 47.5273 mo
340.68 47.5244 340.655 47.522 340.631 47.519 cv
340.727 46.4341 340.767 45.3901 340.776 44.3579 cv
340.785 45.4014 340.77 46.4478 340.704 47.5273 cv
cp
304.024 25.6958 mo
299.822 25.4043 295.621 25.1392 291.417 24.9014 cv
290.931 33.6343 290.44 42.3667 289.947 51.0991 cv
289.929 51.0981 289.91 51.0967 289.892 51.0957 cv
290.403 42.0313 290.912 32.9663 291.417 23.9014 cv
295.644 24.1406 299.868 24.4067 304.093 24.7002 cv
304.07 25.0322 304.047 25.3638 304.024 25.6958 cv
cp
302.957 36.7378 mo
300.941 36.5986 298.927 36.4658 296.912 36.3398 cv
296.933 36.0078 296.953 35.6758 296.975 35.3438 cv
298.99 35.4702 301.008 35.603 303.025 35.7422 cv
303.003 36.0742 302.979 36.4058 302.957 36.7378 cv
cp
302.516 47.5615 mo
300.424 47.416 298.331 47.2773 296.238 47.1455 cv
296.259 46.8135 296.279 46.4814 296.301 46.1494 cv
298.396 46.2817 300.49 46.4204 302.585 46.5659 cv
302.562 46.8979 302.539 47.2295 302.516 47.5615 cv
cp
287.604 46.6421 mo
285.392 46.5234 283.179 46.4116 280.966 46.3081 cv
280.981 45.9756 280.997 45.6431 281.012 45.3105 cv
283.228 45.4146 285.443 45.5259 287.658 45.645 cv
287.641 45.9775 287.622 46.3101 287.604 46.6421 cv
cp
275.873 23.147 mo
277.91 23.2295 279.946 23.3188 281.983 23.4146 cv
281.968 23.7471 281.952 24.0801 281.938 24.4126 cv
279.915 24.3179 277.895 24.229 275.873 24.147 cv
275.524 32.8862 275.172 41.625 274.817 50.3638 cv
274.804 50.3633 274.791 50.3623 274.777 50.3618 cv
275.146 41.2905 275.511 32.2188 275.873 23.147 cv
cp
273.131 33.5654 mo
273.111 31.7178 272.817 29.8267 272.125 28.1616 cv
270.814 25.0024 267.849 23.2466 264.441 23.1479 cv
260.493 23.0337 257.695 23.5737 255.724 23.5337 cv
255.554 32.2778 255.38 41.022 255.204 49.7661 cv
255.197 49.7661 255.191 49.7656 255.185 49.7656 cv
255.367 40.6885 255.547 31.6108 255.724 22.5337 cv
255.794 22.5352 255.866 22.5356 255.939 22.5356 cv
257.702 22.5356 260.098 22.1318 263.336 22.1318 cv
263.694 22.1318 264.063 22.1372 264.441 22.1479 cv
267.849 22.2466 270.814 24.0024 272.125 27.1616 cv
272.942 29.1279 273.229 31.4136 273.131 33.5654 cv
cp
261.399 37.605 mo
261.787 38.0874 262.552 38.4692 263.479 38.4692 cv
263.63 38.4692 263.784 38.459 263.941 38.438 cv
265.534 38.1206 266.883 36.2798 266.99 33.2368 cv
267 33.4673 267.01 33.6978 267.009 33.9463 cv
266.983 37.1699 265.586 39.1104 263.941 39.438 cv
262.793 39.5918 261.815 39.1538 261.374 38.5806 cv
261.383 38.2554 261.391 37.9302 261.399 37.605 cv
cp
252.61 23.4751 mo
250.463 23.439 248.315 23.4092 246.169 23.3867 cv
244.813 27.4565 243.475 31.5293 242.152 35.605 cv
240.865 31.5127 239.562 27.4229 238.241 23.3359 cv
236.091 23.3306 233.938 23.3325 231.788 23.3413 cv
231.786 23.0078 231.785 22.6748 231.783 22.3413 cv
233.137 22.3359 234.49 22.333 235.844 22.333 cv
236.644 22.333 237.442 22.334 238.241 22.3359 cv
239.562 26.4229 240.865 30.5127 242.152 34.605 cv
243.475 30.5293 244.813 26.4565 246.169 22.3867 cv
248.321 22.4092 250.474 22.439 252.627 22.4756 cv
252.621 22.8091 252.616 23.1421 252.61 23.4751 cv
cp
246.233 49.627 mo
246.276 45.6118 246.318 41.5967 246.36 37.5815 cv
246.364 37.5713 246.367 37.5615 246.371 37.5518 cv
246.33 41.5767 246.287 45.6021 246.244 49.627 cv
246.24 49.627 246.237 49.627 246.233 49.627 cv
cp
229.356 36.4844 mo
229.254 29.7813 226.527 22.605 218.506 22.7739 cv
210.847 22.8828 208.243 29.4556 208.091 35.8618 cv
207.988 29.1587 210.447 21.8882 218.506 21.7739 cv
218.599 21.772 218.691 21.771 218.783 21.771 cv
226.746 21.771 229.366 29.145 229.366 35.8804 cv
229.367 36.0811 229.359 36.2827 229.356 36.4844 cv
cp
214.498 36.1328 mo
214.499 36.1445 214.498 36.1567 214.499 36.1685 cv
214.584 39.915 215.463 45.2876 218.934 45.3735 cv
222.106 45.1807 222.93 40.5464 222.995 36.8857 cv
222.996 36.9297 222.998 36.9751 222.999 37.019 cv
223.05 40.7666 222.362 46.165 218.934 46.3735 cv
215.463 46.2876 214.584 40.915 214.499 37.1685 cv
214.491 36.8315 214.492 36.4839 214.498 36.1328 cv
cp
219 36.0708 mo
219.017 37.3535 218.934 38.4146 218.807 39.2563 cv
218.649 38.4204 218.527 37.3623 218.498 36.0771 cv
218.467 34.7227 218.559 33.686 218.692 32.9209 cv
218.853 33.6831 218.982 34.7168 219 36.0708 cv
cp
207.136 49.3159 mo
207.039 47.519 206.942 45.7227 206.844 43.9258 cv
205.397 46.144 203.453 46.6958 202.393 46.6206 cv
199.289 46.3555 197.985 42.1362 197.829 38.2417 cv
197.801 37.7798 197.797 37.2983 197.814 36.8086 cv
197.818 36.9536 197.82 37.1001 197.829 37.2417 cv
197.985 41.1362 199.289 45.3555 202.393 45.6206 cv
202.453 45.625 202.517 45.627 202.583 45.627 cv
203.674 45.627 205.48 45.0171 206.844 42.9258 cv
206.96 45.0464 207.075 47.167 207.189 49.2876 cv
207.171 49.2979 207.154 49.3057 207.136 49.3159 cv
cp
204.405 39.7554 mo
204.054 40.0249 203.745 40.3555 203.494 40.7407 cv
203.244 41.1245 203.003 41.3452 202.82 41.4712 cv
202.449 40.8667 201.919 39.4028 201.826 37.0815 cv
201.825 37.0547 201.823 37.0278 201.822 37.0015 cv
201.694 34.8877 202.193 33.1104 202.637 32.3022 cv
202.701 32.3965 202.772 32.5083 202.849 32.6416 cv
203.168 33.1973 203.606 33.6533 204.117 33.9893 cv
204.078 34.7671 204.07 35.564 204.095 36.377 cv
204.144 37.5542 204.248 38.6812 204.405 39.7554 cv
cp
202.147 22.1992 mo
202.243 22.1958 202.339 22.1943 202.436 22.1943 cv
203.95 22.1943 205.646 22.6035 206.913 23.6577 cv
206.886 23.9712 206.86 24.2852 206.833 24.5986 cv
205.493 23.5259 203.701 23.1455 202.147 23.1992 cv
194.563 23.4326 191.566 29.3442 191.447 36.0098 cv
191.275 28.9458 194.185 22.4443 202.147 22.1992 cv
cp
350.544 26.5723 mo
349.697 25.4663 348.08 24.0801 345.179 23.7559 cv
344.804 23.7144 344.437 23.6934 344.082 23.6934 cv
342.822 23.6934 341.718 23.9482 340.774 24.3887 cv
340.247 24.0308 339.626 23.7939 338.948 23.7231 cv
334.707 23.2783 330.433 22.8584 326.242 22.4736 cv
326.12 22.4624 325.998 22.457 325.877 22.457 cv
325.513 22.457 325.152 22.5068 324.805 22.6035 cv
324.379 22.396 323.909 22.2622 323.412 22.2178 cv
317.937 21.731 312.391 21.2847 306.93 20.8916 cv
306.832 20.8848 306.735 20.8813 306.64 20.8813 cv
306.295 20.8813 305.959 20.9253 305.637 21.0093 cv
305.244 20.8447 304.818 20.7407 304.37 20.71 cv
300.157 20.417 295.875 20.1475 291.644 19.9077 cv
291.567 19.9033 291.492 19.9014 291.417 19.9014 cv
290.437 19.9014 289.486 20.2617 288.752 20.9189 cv
287.96 21.626 287.482 22.6191 287.423 23.6787 cv
287.091 29.6436 286.757 35.6089 286.422 41.5737 cv
285.997 41.5513 285.572 41.5298 285.147 41.5078 cv
285.426 35.5386 285.703 29.5693 285.979 23.5996 cv
286.081 21.394 284.377 19.5225 282.171 19.4189 cv
280.125 19.3228 278.081 19.2329 276.035 19.1504 cv
275.98 19.1479 275.927 19.147 275.873 19.147 cv
274.869 19.147 273.9 19.5244 273.16 20.207 cv
272.887 20.4595 272.652 20.7466 272.462 21.0581 cv
270.338 19.2852 267.585 18.2373 264.558 18.1494 cv
264.139 18.1377 263.731 18.1318 263.336 18.1318 cv
261.304 18.1318 259.587 18.2769 258.207 18.3936 cv
257.302 18.4697 256.52 18.5356 255.939 18.5356 cv
255.804 18.5347 li
255.777 18.5342 255.75 18.5337 255.724 18.5337 cv
255.213 18.5337 254.712 18.6313 254.246 18.8169 cv
253.771 18.6064 253.247 18.4854 252.695 18.4761 cv
250.533 18.4395 248.372 18.4097 246.211 18.3867 cv
246.196 18.3867 246.183 18.3867 246.169 18.3867 cv
244.448 18.3867 242.919 19.4878 242.374 21.1226 cv
242.319 21.2861 242.266 21.4492 242.211 21.6123 cv
242.156 21.4438 242.102 21.2749 242.048 21.1064 cv
241.516 19.4585 239.982 18.3403 238.251 18.3359 cv
237.449 18.334 236.646 18.333 235.844 18.333 cv
234.485 18.333 233.126 18.3359 231.767 18.3413 cv
230.705 18.3457 229.689 18.772 228.942 19.5259 cv
228.482 19.9897 228.147 20.5547 227.959 21.168 cv
225.554 18.979 222.435 17.771 218.783 17.771 cv
218.664 17.771 218.543 17.7725 218.422 17.7749 cv
215.064 17.8223 212.086 18.873 209.741 20.8291 cv
209.656 20.7437 209.566 20.6616 209.472 20.583 cv
207.621 19.0425 205.122 18.1943 202.436 18.1943 cv
202.292 18.1943 202.15 18.1968 202.009 18.2017 cv
197.809 18.3311 194.231 19.8896 191.677 22.709 cv
188.573 26.1357 187.09 31.3423 187.5 37.3701 cv
188.168 48.2041 193.591 54.6875 202.004 54.6875 cv
202.219 54.6875 202.438 54.6831 202.658 54.6738 cv
204.857 54.5981 207.19 53.9131 209.199 52.7461 cv
209.704 52.4521 210.129 52.0576 210.455 51.5972 cv
212.702 53.3271 215.485 54.2466 218.713 54.2466 cv
218.846 54.2466 218.981 54.2451 219.116 54.2422 cv
222.723 54.1992 225.77 53.001 228.109 50.8335 cv
228.305 51.4263 228.639 51.9712 229.091 52.4189 cv
229.84 53.1621 230.853 53.5786 231.907 53.5786 cv
231.913 53.5786 231.918 53.5786 231.924 53.5786 cv
233.247 53.5732 234.569 53.5703 235.893 53.5703 cv
237.84 53.5723 li
237.843 53.5723 237.845 53.5723 237.848 53.5723 cv
239.091 53.5723 240.201 53.0054 240.935 52.1157 cv
241.29 52.2207 241.664 52.2773 242.048 52.2793 cv
242.055 52.2793 242.061 52.2793 242.067 52.2793 cv
242.429 52.2793 242.782 52.2305 243.12 52.1387 cv
243.844 53.0347 244.948 53.6133 246.19 53.6265 cv
248.162 53.6479 250.136 53.6753 252.108 53.7085 cv
252.132 53.709 252.154 53.709 252.177 53.709 cv
252.683 53.709 253.166 53.6152 253.611 53.4434 cv
254.08 53.6436 254.586 53.7544 255.104 53.7646 cv
257.053 53.8037 259 53.8491 260.948 53.8999 cv
260.983 53.9009 261.02 53.9014 261.055 53.9014 cv
263.216 53.9014 264.994 52.1787 265.052 50.0063 cv
265.059 49.7207 li
265.111 47.7095 li
267.228 47.6782 269.221 47.0698 270.952 45.9741 cv
270.895 47.3828 270.838 48.791 270.78 50.1997 cv
270.691 52.4067 272.407 54.2686 274.614 54.3584 cv
278.791 54.5283 283.011 54.728 287.157 54.9512 cv
287.229 54.9551 287.301 54.957 287.372 54.957 cv
287.729 54.957 288.082 54.9092 288.422 54.8169 cv
288.809 54.9697 289.227 55.0645 289.665 55.0894 cv
293.752 55.3208 297.881 55.5815 301.938 55.8643 cv
302.03 55.8706 302.123 55.874 302.216 55.874 cv
303.178 55.874 304.11 55.5273 304.841 54.8921 cv
305.303 54.4902 305.661 53.9927 305.896 53.4399 cv
306.316 55.0435 307.713 56.2803 309.458 56.4155 cv
311.503 56.5742 313.549 56.7393 315.593 56.9102 cv
315.706 56.9199 315.819 56.9243 315.932 56.9243 cv
317.502 56.9243 318.892 56.0054 319.54 54.6421 cv
319.969 56.2026 321.326 57.4092 323.033 57.5659 cv
327.086 57.9375 331.209 58.3428 335.286 58.77 cv
335.426 58.7847 335.564 58.792 335.703 58.792 cv
336.271 58.792 336.829 58.6714 337.342 58.4409 cv
338.397 59.3037 339.703 59.8828 341.152 60.0444 cv
341.422 60.0747 341.692 60.0898 341.96 60.0898 cv
345.685 60.0898 348.816 57.2949 349.246 53.5889 cv
349.433 51.9634 349.075 50.3589 348.233 48.981 cv
348.276 48.8223 348.31 48.6587 348.333 48.4912 cv
348.669 46.0991 349.237 43.9434 349.84 41.6606 cv
350.542 38.9976 351.339 35.9795 351.89 32.127 cv
352.197 30.1357 351.709 28.0952 350.544 26.5723 cv
cp
f
341.169 46.0752 mo
341.351 43.6416 341.272 41.3979 341.19 39.0317 cv
341.095 36.2612 340.996 33.3965 341.277 29.8047 cv
341.291 29.3472 341.48 27.1934 344.082 27.1934 cv
344.27 27.1934 344.469 27.2046 344.68 27.228 cv
345.742 27.3467 346.513 27.71 346.97 28.3071 cv
347.572 29.0938 347.496 30.0923 347.436 30.4849 cv
346.921 34.084 346.193 36.8438 345.488 39.5127 cv
344.891 41.7808 344.323 43.9307 343.947 46.3848 cv
343.021 46.2803 342.095 46.1772 341.169 46.0752 cv
cp
251.685 48.2007 mo
250.036 48.1738 248.387 48.1514 246.738 48.1323 cv
246.871 35.5571 li
246.874 35.314 246.701 35.1045 246.462 35.0601 cv
246.432 35.0542 246.401 35.0518 246.371 35.0518 cv
246.165 35.0518 245.977 35.1792 245.902 35.3774 cv
244.613 38.8472 243.338 42.3193 242.074 45.7939 cv
240.845 42.3027 239.601 38.8135 238.342 35.3271 cv
238.269 35.1265 238.079 34.9971 237.871 34.9971 cv
237.843 34.9971 237.814 34.9995 237.785 35.0044 cv
237.546 35.0459 237.371 35.2534 237.371 35.4961 cv
237.349 48.0718 li
237.349 48.0718 233.567 48.0723 232.405 48.0767 cv
232.368 39.3311 232.329 30.585 232.286 21.8394 cv
233.473 21.835 234.659 21.833 235.846 21.833 cv
237.877 21.8354 li
239.159 25.8062 240.425 29.7793 241.676 33.7549 cv
241.74 33.9624 241.933 34.104 242.15 34.105 cv
242.15 34.105 242.151 34.105 242.152 34.105 cv
242.369 34.105 242.562 33.9653 242.628 33.7593 cv
243.912 29.8003 245.213 25.8442 246.528 21.8906 cv
248.392 21.9106 250.255 21.9365 252.119 21.9673 cv
251.977 30.7114 251.832 39.4565 251.685 48.2007 cv
cp
263.432 25.7056 mo
262.844 25.7056 262.19 25.8135 261.488 26.0264 cv
261.282 26.0889 261.14 26.2764 261.134 26.4917 cv
260.874 36.5674 li
260.871 36.6826 260.908 36.7944 260.978 36.8857 cv
261.492 37.5537 262.451 37.9692 263.479 37.9692 cv
263.651 37.9692 263.827 37.9575 264.008 37.9336 cv
266.121 37.5137 267.483 35.167 267.509 31.9502 cv
267.516 29.4751 267.012 27.7114 266.01 26.7061 cv
265.348 26.0425 264.48 25.7056 263.432 25.7056 cv
cp
260.566 48.3887 mo
258.942 48.3467 257.318 48.3091 255.694 48.2759 cv
255.87 39.5283 256.044 30.7808 256.214 22.0327 cv
256.915 22.0186 257.696 21.9526 258.585 21.8774 cv
259.948 21.7622 261.493 21.6318 263.336 21.6318 cv
263.689 21.6318 264.053 21.6367 264.427 21.6479 cv
267.776 21.7446 270.481 23.5039 271.663 26.353 cv
273.23 30.123 272.757 35.1973 271.393 37.9253 cv
270.027 40.6484 267.675 42.2109 264.938 42.2109 cv
263.79 42.2109 262.614 41.9399 261.444 41.4058 cv
261.378 41.3755 261.307 41.3604 261.236 41.3604 cv
261.144 41.3604 261.052 41.3857 260.972 41.4365 cv
260.829 41.5254 260.741 41.6797 260.736 41.8477 cv
260.566 48.3887 li
cp
218.569 25.8569 mo
215.491 26.1089 213.867 29.4199 213.999 35.1797 cv
214.064 38.0596 214.675 44.7681 218.922 44.8735 cv
223.174 44.6167 223.538 37.8916 223.499 35.0122 cv
223.425 29.252 221.697 26 218.634 25.856 cv
218.626 25.8555 218.618 25.8555 218.61 25.8555 cv
218.597 25.8555 218.583 25.856 218.569 25.8569 cv
cp
218.713 48.7466 mo
210.394 48.7466 208.802 40.2813 208.593 35.2354 cv
208.507 32.4106 208.828 27.1772 211.938 23.9263 cv
213.584 22.2051 215.796 21.3125 218.514 21.2739 cv
218.783 21.271 li
228.139 21.271 228.866 31.688 228.866 34.8804 cv
228.891 39.0151 227.98 48.6367 219.015 48.7432 cv
218.713 48.7466 li
cp
202.004 49.1875 mo
196.154 49.188 192.504 44.4058 191.99 36.0674 cv
191.664 31.2676 192.737 27.2422 195.013 24.73 cv
196.75 22.8115 199.156 21.7915 202.163 21.6987 cv
202.436 21.6943 li
203.339 21.6943 205.017 21.853 206.392 22.8833 cv
205.938 28.2095 li
204.981 27.0459 203.873 26.4575 202.629 26.4575 cv
202.485 26.4604 li
198.762 26.7041 197.055 31.6973 197.33 36.272 cv
197.494 40.3501 198.898 44.8237 202.35 45.1187 cv
202.429 45.1245 202.505 45.127 202.583 45.127 cv
203.669 45.127 205.146 44.6211 206.417 43.2773 cv
206.673 48.0039 li
204.915 48.9561 203.303 49.1489 202.477 49.1777 cv
202.315 49.1841 202.159 49.1875 202.004 49.1875 cv
cp
286.899 49.4312 mo
283.058 49.2261 279.159 49.042 275.297 48.8828 cv
275.651 40.1445 276.004 31.4053 276.353 22.667 cv
278.056 22.7368 279.758 22.8115 281.461 22.8906 cv
280.467 44.2847 li
280.453 44.5605 280.667 44.7944 280.942 44.8076 cv
283.005 44.9043 285.069 45.0073 287.132 45.1177 cv
286.899 49.4312 li
cp
168.773 24.1245 mo
170.47 24.0083 172.168 23.897 173.866 23.7896 cv
174.318 30.9141 174.767 38.0396 175.215 45.1646 cv
175.232 45.4297 175.452 45.6333 175.714 45.6333 cv
175.725 45.6333 175.735 45.6328 175.746 45.6323 cv
177.803 45.5034 179.862 45.3813 181.92 45.2656 cv
182.161 49.5776 li
178.338 49.793 174.449 50.0356 170.586 50.2998 cv
169.984 41.5752 169.38 32.8496 168.773 24.1245 cv
cp
301.752 50.3408 mo
298.002 50.0815 294.194 49.8408 290.419 49.625 cv
290.912 40.8936 291.402 32.1611 291.889 23.4292 cv
295.771 23.6509 299.692 23.8979 303.56 24.1646 cv
303.276 28.2886 li
301.289 28.1509 299.302 28.02 297.313 27.8945 cv
297.303 27.894 297.293 27.8936 297.282 27.8936 cv
297.161 27.8936 297.043 27.938 296.951 28.0186 cv
296.852 28.1064 296.791 28.23 296.783 28.3628 cv
296.413 34.3091 li
296.396 34.5845 296.605 34.8218 296.881 34.8389 cv
298.751 34.9561 300.621 35.0786 302.492 35.2065 cv
302.227 39.0688 li
300.365 38.9404 298.503 38.8184 296.64 38.7007 cv
296.629 38.7002 296.619 38.6997 296.608 38.6997 cv
296.487 38.6997 296.369 38.7441 296.277 38.8247 cv
296.178 38.9126 296.117 39.0361 296.109 39.1689 cv
295.739 45.1143 li
295.722 45.3896 295.932 45.627 296.207 45.6445 cv
298.155 45.7671 300.104 45.896 302.052 46.0303 cv
301.752 50.3408 li
cp
315.471 51.3843 mo
313.749 51.2412 312.026 51.1025 310.305 50.9678 cv
310.86 43.7876 311.414 36.6074 311.965 29.4263 cv
311.986 29.1514 311.78 28.9111 311.505 28.8896 cv
309.814 28.7588 308.124 28.6323 306.433 28.5103 cv
307.066 24.4131 li
312.205 24.7856 317.412 25.2046 322.562 25.6602 cv
322.6 29.8125 li
321.003 29.6709 319.405 29.5327 317.809 29.3989 cv
317.795 29.3975 317.78 29.397 317.767 29.397 cv
317.648 29.397 317.534 29.4385 317.443 29.5151 cv
317.343 29.6011 317.279 29.7231 317.269 29.8555 cv
316.671 37.0322 316.071 44.208 315.471 51.3843 cv
cp
153.63 25.2778 mo
157.47 24.9556 161.38 24.6509 165.269 24.3711 cv
165.565 28.4922 li
163.583 28.6353 161.601 28.7847 159.62 28.939 cv
159.487 28.9492 159.365 29.0117 159.279 29.1128 cv
159.192 29.2134 159.15 29.3442 159.16 29.4766 cv
159.627 35.415 li
159.647 35.6772 159.867 35.876 160.125 35.876 cv
160.138 35.876 160.151 35.8755 160.165 35.8745 cv
162.03 35.7285 163.895 35.5879 165.761 35.4531 cv
166.04 39.3135 li
164.182 39.4482 162.325 39.5884 160.468 39.7339 cv
160.192 39.7554 159.987 39.9961 160.008 40.2715 cv
160.474 46.2095 li
160.494 46.4712 160.713 46.6704 160.972 46.6704 cv
160.985 46.6704 160.998 46.6699 161.011 46.6689 cv
162.954 46.5176 164.897 46.3716 166.842 46.2319 cv
167.15 50.5405 li
163.396 50.8105 159.6 51.1064 155.85 51.4214 cv
155.113 42.7065 154.373 33.9922 153.63 25.2778 cv
cp
140.587 52.8257 mo
137.89 44.3257 135.11 35.7441 132.321 27.3018 cv
134.125 27.1104 135.931 26.9243 137.737 26.7427 cv
139.305 32.769 140.854 38.7988 142.383 44.8315 cv
142.902 47.0664 li
142.955 47.2949 143.159 47.4536 143.389 47.4536 cv
143.406 47.4536 143.424 47.4526 143.441 47.4507 cv
143.692 47.4248 143.884 47.2153 143.889 46.9634 cv
143.934 44.6636 li
144.276 38.4673 144.636 32.2534 145.012 26.0391 cv
146.807 25.8726 148.602 25.7114 150.397 25.5552 cv
149.299 34.3809 148.233 43.3345 147.227 52.1846 cv
145.013 52.3906 142.799 52.604 140.587 52.8257 cv
cp
335.258 53.2427 mo
331.492 52.8501 327.69 52.4766 323.942 52.1304 cv
324.74 43.4209 325.536 34.7104 326.329 26.001 cv
330.177 26.356 334.093 26.7407 337.982 27.1465 cv
337.554 31.2573 li
335.57 31.0498 333.586 30.8491 331.602 30.6543 cv
331.585 30.6528 331.569 30.6519 331.553 30.6519 cv
331.438 30.6519 331.325 30.6919 331.235 30.7656 cv
331.133 30.8496 331.068 30.9712 331.055 31.1035 cv
330.476 37.0322 li
330.449 37.3071 330.65 37.5518 330.925 37.5786 cv
332.793 37.7622 334.66 37.9512 336.527 38.1455 cv
336.128 41.9946 li
334.269 41.8018 332.409 41.6138 330.55 41.4316 cv
330.533 41.4302 330.518 41.4292 330.501 41.4292 cv
330.386 41.4292 330.273 41.4692 330.184 41.543 cv
330.081 41.627 330.017 41.7485 330.003 41.8804 cv
329.422 47.8086 li
329.409 47.9404 329.449 48.0723 329.533 48.1748 cv
329.618 48.2773 329.739 48.3423 329.871 48.355 cv
331.817 48.5459 333.763 48.7427 335.708 48.9458 cv
335.258 53.2427 li
cp
341.96 54.5894 mo
341.858 54.5894 341.755 54.584 341.65 54.5723 cv
340.107 54.3999 338.986 52.9976 339.153 51.4463 cv
339.305 50.0269 340.507 48.9565 341.951 48.9565 cv
342.057 48.9565 342.164 48.9624 342.271 48.9746 cv
343.031 49.0591 343.71 49.4331 344.184 50.0273 cv
344.649 50.6128 344.859 51.3384 344.775 52.0713 cv
344.612 53.4834 343.376 54.5894 341.961 54.5894 cv
341.961 54.5894 341.961 54.5894 341.96 54.5894 cv
cp
117.684 28.9614 mo
121.53 28.4966 125.428 28.0483 129.285 27.6279 cv
129.734 31.7368 li
127.758 31.9517 125.782 32.1738 123.806 32.4009 cv
123.674 32.416 123.554 32.4829 123.472 32.5869 cv
123.389 32.6909 123.352 32.8232 123.367 32.9551 cv
124.051 38.8721 li
124.081 39.1265 124.297 39.3145 124.547 39.3145 cv
124.566 39.3145 124.585 39.3135 124.605 39.311 cv
126.465 39.0972 128.325 38.8882 130.185 38.6846 cv
130.605 42.5322 li
128.752 42.7349 126.901 42.9429 125.05 43.1563 cv
124.918 43.1714 124.797 43.2383 124.715 43.3423 cv
124.633 43.4463 124.595 43.5786 124.61 43.7104 cv
125.295 49.6284 li
125.325 49.8828 125.541 50.0708 125.792 50.0708 cv
125.811 50.0708 125.83 50.0698 125.849 50.0674 cv
127.786 49.8447 129.723 49.6274 131.661 49.4165 cv
132.128 53.7109 li
128.385 54.1187 124.601 54.5542 120.862 55.0063 cv
119.806 46.3247 118.747 37.6426 117.684 28.9614 cv
cp
102.271 30.9541 mo
103.958 30.7217 105.645 30.4941 107.333 30.271 cv
108.269 37.3486 109.202 44.4272 110.133 51.5059 cv
110.167 51.7573 110.381 51.9404 110.628 51.9404 cv
110.65 51.9404 110.672 51.939 110.694 51.936 cv
112.74 51.667 114.786 51.4048 116.833 51.1494 cv
117.367 55.4365 li
113.534 55.9155 109.668 56.4219 105.86 56.9443 cv
104.667 48.2808 103.47 39.6167 102.271 30.9541 cv
cp
level3{
gsave
clp
[-1.55933e-6 -35.6733 35.6733 -1.55933e-6 224.873 56.9443 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .6 .0784314 ]
/C1 [.94902 .6 .0784314 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .6 .0784314 ]
/C1 [1 .823529 .25098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .823529 .25098 ]
/C1 [1 .823529 .25098 ]
/N 1 
>>
]
/Bounds [.5 .502994 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.55933e-6 -35.6733 35.6733 -1.55933e-6 224.873 56.9443 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o)Jais8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
RF9O3daHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRl
daHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRl
~>
<~'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
'L4oK5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
341.951 48.4565 mo
340.261 48.4565 338.834 49.7271 338.656 51.3926 cv
338.464 53.1816 339.763 54.8647 341.596 55.0693 cv
341.719 55.083 341.84 55.0894 341.961 55.0894 cv
343.642 55.0894 345.079 53.7959 345.272 52.1284 cv
345.478 50.3423 344.177 48.6841 342.327 48.4775 cv
342.2 48.4634 342.075 48.4565 341.951 48.4565 cv
341.951 48.4565 li
cp
107.764 29.71 mo
105.744 29.9761 103.725 30.248 101.707 30.5269 cv
102.952 39.52 104.194 48.5137 105.433 57.5078 cv
109.594 56.9346 113.758 56.3892 117.925 55.8711 cv
117.706 54.1108 117.487 52.3511 117.268 50.5913 cv
115.054 50.8662 112.841 51.1494 110.629 51.4404 cv
109.676 44.1968 108.721 36.9531 107.764 29.71 cv
107.764 29.71 li
cp
129.728 27.0767 mo
125.525 27.5327 121.325 28.0156 117.127 28.5254 cv
118.23 37.5376 119.33 46.5503 120.426 55.563 cv
124.508 55.0669 128.592 54.5972 132.679 54.1538 cv
132.487 52.3906 132.295 50.6279 132.104 48.8652 cv
129.999 49.0933 127.895 49.3286 125.792 49.5708 cv
125.564 47.5981 125.335 45.6255 125.107 43.6528 cv
127.123 43.4204 129.139 43.1948 131.157 42.9751 cv
130.98 41.3613 130.804 39.7471 130.628 38.1333 cv
128.601 38.354 126.574 38.5811 124.548 38.8145 cv
124.32 36.8423 124.092 34.8701 123.863 32.8975 cv
126.003 32.6514 128.145 32.4116 130.286 32.1797 cv
130.1 30.4785 129.914 28.7778 129.728 27.0767 cv
129.728 27.0767 li
cp
344.082 26.6934 mo
341.333 26.6934 340.804 28.8584 340.779 29.7656 cv
340.234 36.7163 341.108 41.1074 340.631 46.519 cv
341.878 46.6558 343.125 46.7944 344.372 46.936 cv
345.147 41.4053 346.943 37.4624 347.93 30.561 cv
348.078 29.5986 348.052 27.1021 344.734 26.731 cv
344.504 26.7056 344.287 26.6934 344.082 26.6934 cv
344.082 26.6934 li
cp
325.877 25.457 mo
325.054 34.499 324.228 43.541 323.398 52.5825 cv
327.502 52.959 331.604 53.3623 335.703 53.792 cv
335.888 52.0283 336.073 50.2642 336.258 48.5005 cv
334.146 48.2788 332.033 48.0645 329.92 47.8574 cv
330.114 45.8813 330.308 43.9053 330.501 41.9292 cv
332.525 42.1274 334.549 42.3325 336.573 42.5439 cv
336.741 40.9292 336.909 39.3149 337.076 37.7002 cv
335.043 37.4873 333.009 37.2808 330.974 37.0811 cv
331.167 35.1045 331.36 33.1279 331.553 31.1519 cv
333.702 31.3628 335.851 31.5811 337.999 31.8066 cv
338.177 30.1045 338.354 28.4028 338.531 26.7012 cv
334.314 26.2593 330.097 25.8442 325.877 25.457 cv
325.877 25.457 li
cp
150.97 25.0034 mo
148.826 25.189 146.682 25.3813 144.539 25.5811 cv
144.153 31.939 143.785 38.2964 143.434 44.6538 cv
143.419 45.4204 143.404 46.187 143.389 46.9536 cv
143.216 46.2056 143.042 45.457 142.868 44.7085 cv
141.303 38.5366 139.718 32.3677 138.113 26.2026 cv
135.958 26.418 133.805 26.6406 131.651 26.8701 cv
134.568 35.6895 137.429 44.521 140.233 53.3638 cv
142.713 53.1143 145.195 52.875 147.678 52.645 cv
148.724 43.4302 149.821 34.2163 150.97 25.0034 cv
150.97 25.0034 li
cp
306.643 23.8813 mo
306.38 25.5776 306.117 27.2739 305.855 28.9702 cv
307.727 29.104 309.597 29.2437 311.467 29.3882 cv
310.902 36.7349 310.336 44.0815 309.768 51.4277 cv
311.82 51.5869 313.874 51.7524 315.927 51.9243 cv
316.542 44.582 317.155 37.2397 317.767 29.897 cv
319.546 30.0464 321.325 30.2007 323.104 30.3594 cv
323.09 28.6406 323.074 26.9214 323.058 25.2021 cv
317.588 24.7158 312.116 24.2754 306.643 23.8813 cv
306.643 23.8813 li
cp
165.731 23.8364 mo
161.516 24.1377 157.301 24.4658 153.089 24.8218 cv
153.86 33.8682 154.629 42.9146 155.394 51.9614 cv
159.489 51.6157 163.585 51.2964 167.684 51.0034 cv
167.558 49.2349 167.432 47.4658 167.305 45.6973 cv
165.193 45.8481 163.083 46.0059 160.972 46.1704 cv
160.817 44.1909 160.662 42.2119 160.507 40.2324 cv
162.529 40.0737 164.552 39.9219 166.575 39.7764 cv
166.458 38.1572 166.341 36.5381 166.224 34.9185 cv
164.19 35.0645 162.158 35.2168 160.125 35.376 cv
159.97 33.3965 159.814 31.417 159.659 29.4375 cv
161.805 29.27 163.953 29.1089 166.1 28.9551 cv
165.978 27.249 165.854 25.5425 165.731 23.8364 cv
165.731 23.8364 li
cp
174.333 23.2593 mo
172.302 23.3867 170.271 23.52 168.239 23.6602 cv
168.87 32.7178 169.497 41.7754 170.122 50.833 cv
174.309 50.5444 178.498 50.2827 182.688 50.0488 cv
182.59 48.2788 182.491 46.5088 182.392 44.7383 cv
180.166 44.8623 177.939 44.9937 175.714 45.1333 cv
175.256 37.8418 174.796 30.5503 174.333 23.2593 cv
174.333 23.2593 li
cp
291.417 22.9014 mo
290.912 31.9663 290.403 41.0313 289.892 50.0957 cv
294.001 50.3286 298.109 50.5879 302.216 50.874 cv
302.339 49.1045 302.462 47.3354 302.585 45.5659 cv
300.47 45.4189 298.354 45.2788 296.238 45.1455 cv
296.362 43.1636 296.485 41.1816 296.608 39.1997 cv
298.637 39.3276 300.664 39.4614 302.691 39.6021 cv
302.803 37.9819 302.914 36.3623 303.025 34.7422 cv
300.987 34.6016 298.949 34.4673 296.912 34.3398 cv
297.035 32.3579 297.159 30.3755 297.282 28.3936 cv
299.436 28.5293 301.589 28.6719 303.741 28.8218 cv
303.858 27.1147 303.976 25.4072 304.093 23.7002 cv
299.868 23.4067 295.644 23.1406 291.417 22.9014 cv
291.417 22.9014 li
cp
275.873 22.147 mo
275.511 31.2188 275.146 40.2905 274.777 49.3618 cv
278.976 49.5327 283.174 49.731 287.372 49.957 cv
287.467 48.1865 287.563 46.4155 287.658 44.645 cv
285.428 44.5249 283.196 44.4126 280.966 44.3081 cv
281.307 37.0103 281.646 29.7124 281.983 22.4146 cv
279.946 22.3188 277.91 22.2295 275.873 22.147 cv
275.873 22.147 li
cp
235.848 21.333 mo
234.493 21.333 233.138 21.3359 231.783 21.3413 cv
231.828 30.4204 231.869 39.4995 231.907 48.5786 cv
233.238 48.5732 234.568 48.5703 235.898 48.5703 cv
236.548 48.5703 237.198 48.5708 237.848 48.5723 cv
237.856 44.2139 237.864 39.8555 237.871 35.4971 cv
239.288 39.4214 240.687 43.3491 242.067 47.2793 cv
243.485 43.3672 244.92 39.458 246.371 35.5518 cv
246.326 39.9102 246.28 44.2686 246.233 48.627 cv
248.214 48.6484 250.195 48.6758 252.176 48.709 cv
252.329 39.6313 252.479 30.5537 252.627 21.4756 cv
250.474 21.439 248.321 21.4092 246.169 21.3867 cv
244.813 25.4565 243.475 29.5293 242.152 33.605 cv
240.865 29.5127 239.562 25.4229 238.241 21.3359 cv
237.443 21.334 236.646 21.333 235.848 21.333 cv
235.848 21.333 li
cp
202.436 21.1943 mo
202.339 21.1943 202.243 21.1958 202.147 21.1992 cv
193.776 21.457 190.982 28.6274 191.491 36.0981 cv
191.982 44.0605 195.396 49.6875 202.004 49.6875 cv
202.165 49.6875 202.329 49.6841 202.494 49.6772 cv
203.771 49.6333 205.487 49.2764 207.189 48.2876 cv
207.075 46.167 206.96 44.0464 206.844 41.9258 cv
205.48 44.0171 203.674 44.627 202.583 44.627 cv
202.517 44.627 202.453 44.625 202.393 44.6206 cv
199.289 44.3555 197.985 40.1362 197.829 36.2417 cv
197.597 32.3906 198.888 27.1968 202.502 26.96 cv
202.543 26.9585 202.585 26.9575 202.629 26.9575 cv
203.526 26.9575 204.964 27.2944 206.317 29.6484 cv
206.514 27.3179 206.713 24.9878 206.913 22.6577 cv
205.646 21.6035 203.95 21.1943 202.436 21.1943 cv
202.436 21.1943 li
cp
263.479 37.4692 mo
262.535 37.4692 261.755 37.0752 261.374 36.5806 cv
261.461 33.2217 261.547 29.8633 261.634 26.5049 cv
262.27 26.312 262.874 26.2056 263.432 26.2056 cv
265.563 26.2056 267.021 27.7578 267.009 31.9463 cv
266.983 35.1699 265.586 37.1104 263.941 37.438 cv
263.784 37.459 263.63 37.4692 263.479 37.4692 cv
263.479 37.4692 li
cp
263.336 21.1318 mo
260.098 21.1318 257.702 21.5356 255.939 21.5356 cv
255.866 21.5356 255.794 21.5352 255.724 21.5337 cv
255.547 30.6108 255.367 39.6885 255.185 48.7656 cv
257.141 48.8047 259.097 48.8501 261.053 48.9014 cv
261.114 46.5542 261.176 44.207 261.236 41.8604 cv
262.491 42.4331 263.742 42.7109 264.938 42.7109 cv
267.809 42.7109 270.355 41.1108 271.84 38.1489 cv
273.274 35.2798 273.757 30.0854 272.125 26.1616 cv
270.814 23.0024 267.849 21.2466 264.441 21.1479 cv
264.063 21.1372 263.694 21.1318 263.336 21.1318 cv
263.336 21.1318 li
cp
218.934 44.3735 mo
215.463 44.2876 214.584 38.915 214.499 35.1685 cv
214.414 31.4614 215.071 26.645 218.61 26.3555 cv
222.117 26.5205 222.951 31.3115 222.999 35.019 cv
223.05 38.7666 222.362 44.165 218.934 44.3735 cv
218.934 44.3735 li
cp
218.783 20.771 mo
218.692 20.771 218.599 20.772 218.506 20.7739 cv
210.289 20.8906 207.887 28.4473 208.093 35.2559 cv
208.375 42.063 210.896 49.2466 218.713 49.2466 cv
218.815 49.2466 218.917 49.2456 219.021 49.2432 cv
227.044 49.1479 229.407 41.7813 229.366 34.8804 cv
229.366 28.145 226.747 20.77 218.783 20.771 cv
218.783 20.771 li
cp
341.951 49.4565 mo
342.038 49.4565 342.127 49.4614 342.216 49.4712 cv
342.843 49.5415 343.402 49.8496 343.792 50.3389 cv
344.175 50.8193 344.348 51.4146 344.279 52.0132 cv
344.145 53.1777 343.126 54.0894 341.961 54.0894 cv
341.876 54.0894 341.791 54.085 341.707 54.0757 cv
340.457 53.936 339.516 52.7563 339.65 51.4985 cv
339.774 50.3345 340.764 49.4565 341.951 49.4565 cv
341.951 49.4565 li
cp
106.903 30.8325 mo
107.816 37.7446 108.728 44.6582 109.637 51.5708 cv
109.704 52.0742 110.133 52.4404 110.627 52.4404 cv
110.671 52.4404 110.715 52.4375 110.759 52.4321 cv
112.639 52.1846 114.519 51.9429 116.399 51.7075 cv
116.626 53.5298 li
116.81 55.0024 li
113.302 55.4424 109.772 55.9048 106.287 56.3813 cv
105.139 48.0474 103.988 39.7144 102.834 31.3813 cv
104.19 31.1953 105.546 31.0127 106.903 30.8325 cv
106.903 30.8325 li
cp
128.843 28.1792 mo
129.183 31.2939 li
127.371 31.4922 125.56 31.6958 123.749 31.9038 cv
123.485 31.9341 123.245 32.0684 123.08 32.2759 cv
122.915 32.4839 122.839 32.749 122.87 33.0127 cv
123.555 38.9292 li
123.613 39.439 124.046 39.8145 124.547 39.8145 cv
124.585 39.8145 124.624 39.8125 124.662 39.8081 cv
126.355 39.6128 128.049 39.4224 129.742 39.2363 cv
129.898 40.6626 li
130.054 42.0898 li
128.366 42.2754 126.679 42.4648 124.992 42.6592 cv
124.729 42.6899 124.488 42.8237 124.323 43.0317 cv
124.159 43.2393 124.083 43.5044 124.114 43.7681 cv
124.157 44.1406 li
124.799 49.6855 li
124.857 50.1953 125.29 50.5708 125.791 50.5708 cv
125.829 50.5708 125.868 50.5688 125.906 50.5645 cv
127.676 50.3604 129.447 50.1616 131.218 49.9678 cv
131.577 53.2681 li
128.16 53.6426 124.711 54.0391 121.298 54.4502 cv
120.282 46.0991 119.263 37.7485 118.241 29.3979 cv
121.759 28.9746 125.316 28.5654 128.843 28.1792 cv
128.843 28.1792 li
cp
344.082 27.6934 mo
344.082 27.6934 li
344.253 27.6934 344.436 27.7041 344.623 27.7246 cv
345.546 27.8281 346.202 28.126 346.572 28.6108 cv
347.071 29.2627 346.981 30.1519 346.939 30.4194 cv
346.431 33.9844 345.706 36.73 345.005 39.3853 cv
344.442 41.52 343.906 43.5508 343.529 45.8345 cv
342.919 45.7661 342.31 45.6982 341.7 45.6309 cv
341.841 43.3555 341.768 41.2393 341.69 39.0142 cv
341.596 36.2578 341.497 33.4077 341.776 29.8438 cv
341.777 29.8267 341.778 29.8096 341.779 29.7925 cv
341.792 29.3003 341.998 27.6934 344.082 27.6934 cv
344.082 27.6934 li
cp
326.782 26.5449 mo
330.304 26.8716 333.877 27.2231 337.433 27.5923 cv
337.108 30.708 li
335.289 30.519 333.471 30.3354 331.65 30.1567 cv
331.618 30.1533 331.585 30.1519 331.553 30.1519 cv
331.322 30.1519 331.098 30.2314 330.918 30.3794 cv
330.713 30.5479 330.583 30.791 330.558 31.0552 cv
329.979 36.9839 li
329.925 37.5332 330.326 38.0225 330.876 38.0762 cv
332.577 38.2432 334.278 38.415 335.979 38.5913 cv
335.682 41.4458 li
333.987 41.2705 332.293 41.1001 330.599 40.9341 cv
330.565 40.9307 330.533 40.9292 330.501 40.9292 cv
330.271 40.9292 330.046 41.0088 329.866 41.1567 cv
329.661 41.3247 329.531 41.5679 329.506 41.8315 cv
329.489 42.0049 li
328.925 47.7598 li
328.898 48.0234 328.979 48.2871 329.147 48.4922 cv
329.315 48.6973 329.559 48.8267 329.822 48.8525 cv
331.602 49.0269 333.381 49.2065 335.159 49.3911 cv
334.986 51.042 li
334.813 52.6938 li
331.373 52.3369 327.908 51.9961 324.485 51.6787 cv
325.254 43.3008 326.019 34.9233 326.782 26.5449 cv
326.782 26.5449 li
cp
149.825 26.1069 mo
148.771 34.6001 147.746 43.2075 146.776 51.7246 cv
144.831 51.9063 142.885 52.0942 140.94 52.2881 cv
138.344 44.1104 135.672 35.8594 132.99 27.7339 cv
134.447 27.5806 135.903 27.4302 137.361 27.2832 cv
138.895 33.1841 140.42 39.124 141.894 44.9346 cv
142.415 47.1792 li
142.521 47.6367 142.928 47.9536 143.388 47.9536 cv
143.423 47.9536 143.458 47.9517 143.493 47.9482 cv
143.995 47.8955 144.379 47.4775 144.389 46.9727 cv
144.433 44.709 li
144.763 38.7246 145.117 32.6021 145.485 26.4976 cv
146.932 26.3643 148.378 26.2339 149.825 26.1069 cv
149.825 26.1069 li
cp
307.49 24.9453 mo
312.325 25.2983 317.219 25.6919 322.066 26.1182 cv
322.076 27.1675 322.086 28.2168 322.095 29.2661 cv
320.68 29.1411 319.266 29.0195 317.851 28.9004 cv
317.822 28.8979 317.794 28.897 317.767 28.897 cv
317.531 28.897 317.302 28.98 317.121 29.1333 cv
316.918 29.3047 316.792 29.5498 316.77 29.814 cv
316.187 36.8247 315.601 43.835 315.014 50.8447 cv
313.623 50.73 312.232 50.6177 310.842 50.5083 cv
311.384 43.4946 311.925 36.4795 312.464 29.4648 cv
312.506 28.9146 312.095 28.4336 311.544 28.3911 cv
310.032 28.2744 308.521 28.1606 307.01 28.0508 cv
307.49 24.9453 li
307.49 24.9453 li
cp
164.806 24.9058 mo
165.031 28.0298 li
163.214 28.1616 161.397 28.2988 159.581 28.4404 cv
159.316 28.4609 159.071 28.5859 158.898 28.7876 cv
158.726 28.9893 158.641 29.2515 158.662 29.5161 cv
158.895 32.4849 li
159.128 35.4546 li
159.17 35.9785 159.608 36.376 160.125 36.376 cv
160.15 36.376 160.177 36.375 160.204 36.373 cv
161.901 36.2397 163.6 36.1118 165.298 35.9878 cv
165.401 37.4126 li
165.505 38.8511 li
163.813 38.9746 162.121 39.1025 160.429 39.2354 cv
159.878 39.2788 159.467 39.7603 159.51 40.3105 cv
159.543 40.7378 li
159.975 46.2485 li
160.016 46.7725 160.454 47.1704 160.971 47.1704 cv
160.997 47.1704 161.023 47.1694 161.05 47.1675 cv
162.826 47.0288 164.602 46.8955 166.379 46.7666 cv
166.497 48.4214 li
166.615 50.0776 li
163.189 50.3262 159.73 50.5962 156.306 50.8813 cv
155.597 42.4985 154.885 34.1167 154.171 25.7344 cv
157.684 25.4414 161.252 25.1631 164.806 24.9058 cv
164.806 24.9058 li
cp
173.399 24.3203 mo
173.84 31.2788 174.279 38.2373 174.716 45.1963 cv
174.75 45.7261 175.19 46.1333 175.713 46.1333 cv
175.734 46.1333 175.756 46.1328 175.777 46.1313 cv
177.667 46.0127 179.558 45.8999 181.449 45.793 cv
181.634 49.1064 li
178.133 49.3057 174.582 49.5273 171.05 49.7671 cv
170.472 41.3745 169.89 32.9824 169.306 24.5894 cv
170.67 24.4971 172.035 24.4072 173.399 24.3203 cv
173.399 24.3203 li
cp
292.359 23.957 mo
295.91 24.1616 299.489 24.3872 303.026 24.6289 cv
302.813 27.7554 li
300.99 27.6304 299.168 27.5103 297.345 27.3955 cv
297.324 27.394 297.303 27.3936 297.282 27.3936 cv
297.039 27.3936 296.804 27.4819 296.621 27.6436 cv
296.422 27.8193 296.301 28.0669 296.284 28.3315 cv
296.099 31.3047 li
295.914 34.2778 li
295.88 34.8291 296.299 35.3032 296.85 35.3379 cv
298.553 35.4443 300.256 35.5557 301.959 35.6714 cv
301.86 37.1035 li
301.763 38.5356 li
300.065 38.4199 298.369 38.3086 296.671 38.2017 cv
296.65 38.2002 296.629 38.1997 296.608 38.1997 cv
296.365 38.1997 296.13 38.2881 295.947 38.4497 cv
295.748 38.6255 295.627 38.873 295.61 39.1377 cv
295.24 45.083 li
295.206 45.6343 295.624 46.1089 296.176 46.1436 cv
297.957 46.2559 299.737 46.3726 301.518 46.4946 cv
301.287 49.8076 li
297.863 49.5728 294.394 49.3535 290.946 49.1543 cv
291.42 40.7554 291.892 32.3564 292.359 23.957 cv
292.359 23.957 li
cp
276.832 23.187 mo
278.201 23.2441 279.569 23.3042 280.938 23.3672 cv
280.615 30.332 280.292 37.2964 279.967 44.2617 cv
279.941 44.813 280.367 45.2813 280.919 45.3071 cv
282.814 45.396 284.71 45.4902 286.605 45.5903 cv
286.428 48.9053 li
282.911 48.7197 279.351 48.5513 275.817 48.4038 cv
276.158 39.9985 276.496 31.5933 276.832 23.187 cv
276.832 23.187 li
cp
235.848 22.333 mo
236.403 22.333 236.958 22.3335 237.513 22.3345 cv
238.75 26.1699 239.988 30.0586 241.198 33.9048 cv
241.329 34.3198 241.713 34.603 242.147 34.605 cv
242.149 34.605 242.15 34.605 242.152 34.605 cv
242.586 34.605 242.97 34.3262 243.104 33.9136 cv
244.344 30.0908 245.615 26.2192 246.888 22.3945 cv
248.462 22.4121 250.036 22.4336 251.611 22.459 cv
251.474 30.8706 251.335 39.2813 251.192 47.6929 cv
249.877 47.6719 248.561 47.6538 247.244 47.6382 cv
247.287 43.6128 247.329 39.5874 247.371 35.562 cv
247.376 35.0762 247.031 34.6567 246.553 34.5684 cv
246.492 34.5571 246.431 34.5518 246.37 34.5518 cv
245.959 34.5518 245.581 34.8062 245.434 35.2036 cv
244.313 38.2217 243.189 41.2749 242.082 44.312 cv
240.993 41.2329 239.897 38.1641 238.812 35.1572 cv
238.667 34.7559 238.286 34.4971 237.872 34.4971 cv
237.814 34.4971 237.757 34.502 237.699 34.5117 cv
237.222 34.5952 236.872 35.0103 236.871 35.4956 cv
236.865 39.5205 236.857 43.5459 236.85 47.5713 cv
235.898 47.5703 li
234.9 47.5703 233.901 47.5718 232.903 47.5752 cv
232.867 39.1621 232.829 30.7505 232.788 22.3379 cv
233.808 22.3345 234.828 22.333 235.848 22.333 cv
235.848 22.333 li
cp
202.436 22.1943 mo
203.732 22.1943 204.954 22.5303 205.869 23.1284 cv
205.756 24.4434 205.644 25.7588 205.532 27.0742 cv
204.665 26.332 203.694 25.9575 202.629 25.9575 cv
202.574 25.9575 202.52 25.959 202.437 25.9619 cv
197.885 26.2603 196.59 32.3091 196.83 36.2817 cv
197.002 40.5835 198.532 45.2944 202.322 45.6182 cv
202.405 45.624 202.492 45.627 202.583 45.627 cv
203.553 45.627 204.801 45.2666 205.974 44.3535 cv
206.156 47.709 li
204.598 48.4878 203.197 48.6523 202.453 48.6782 cv
202.302 48.6841 202.152 48.6875 202.004 48.6875 cv
194.121 48.6875 192.724 39.8403 192.489 36.0303 cv
192.171 31.3706 193.199 27.4766 195.383 25.0654 cv
197.026 23.2515 199.313 22.2871 202.182 22.1987 cv
202.266 22.1958 202.351 22.1943 202.436 22.1943 cv
202.436 22.1943 li
cp
263.479 38.4692 mo
263.676 38.4692 263.876 38.4556 264.074 38.4292 cv
264.095 38.4263 264.116 38.4229 264.137 38.4189 cv
266.462 37.9556 267.981 35.418 268.009 31.9492 cv
268.017 29.3022 267.479 27.4717 266.363 26.353 cv
265.604 25.5918 264.618 25.2056 263.432 25.2056 cv
262.794 25.2056 262.092 25.3208 261.344 25.5479 cv
260.931 25.6729 260.646 26.0483 260.634 26.479 cv
260.501 31.6338 li
260.374 36.5547 li
260.368 36.7842 260.441 37.0088 260.582 37.1904 cv
261.188 37.979 262.299 38.4692 263.479 38.4692 cv
263.479 38.4692 li
cp
263.336 22.1318 mo
263.685 22.1318 264.043 22.1367 264.412 22.1475 cv
267.559 22.2388 270.097 23.8823 271.201 26.5454 cv
272.714 30.1826 272.259 35.0742 270.946 37.7007 cv
269.668 40.2495 267.479 41.7109 264.938 41.7109 cv
263.862 41.7109 262.757 41.4551 261.651 40.9507 cv
261.52 40.8901 261.378 40.8604 261.236 40.8604 cv
261.052 40.8604 260.868 40.9116 260.707 41.0122 cv
260.422 41.1899 260.245 41.499 260.236 41.8345 cv
260.079 47.876 li
258.788 47.8433 257.496 47.8135 256.204 47.7861 cv
256.374 39.3628 256.54 30.9399 256.705 22.5161 cv
257.291 22.4883 257.926 22.4351 258.627 22.3755 cv
259.98 22.2617 261.515 22.1318 263.336 22.1318 cv
263.336 22.1318 li
cp
218.934 45.3735 mo
218.955 45.3735 218.975 45.373 218.995 45.3716 cv
222.262 45.1729 224.086 41.3945 223.999 35.0063 cv
223.921 28.9419 222.023 25.5151 218.657 25.3564 cv
218.642 25.356 218.626 25.3555 218.61 25.3555 cv
218.583 25.3555 218.556 25.3564 218.529 25.3589 cv
215.147 25.6353 213.361 29.1274 213.499 35.1914 cv
213.645 41.5806 215.617 45.2915 218.909 45.373 cv
218.917 45.3735 218.926 45.3735 218.934 45.3735 cv
218.934 45.3735 li
cp
218.784 21.771 mo
227.675 21.771 228.366 31.8052 228.366 34.8862 cv
228.39 38.8687 227.525 48.1421 218.998 48.2437 cv
218.902 48.2456 218.807 48.2466 218.713 48.2466 cv
210.811 48.2466 209.294 40.0815 209.093 35.2256 cv
209.01 32.4736 209.315 27.3911 212.299 24.272 cv
213.849 22.6509 215.942 21.8105 218.527 21.7739 cv
218.613 21.772 218.699 21.771 218.783 21.771 cv
218.784 21.771 li
218.784 21.771 li
cp
1 .823529 .25098 rgb
f
341.951 48.4565 mo
340.261 48.4565 338.834 49.7271 338.656 51.3926 cv
338.464 53.1816 339.763 54.8647 341.596 55.0693 cv
341.719 55.083 341.84 55.0894 341.961 55.0894 cv
343.642 55.0894 345.079 53.7959 345.272 52.1284 cv
345.478 50.3423 344.177 48.6841 342.327 48.4775 cv
342.2 48.4634 342.075 48.4565 341.951 48.4565 cv
341.951 48.4565 li
cp
107.764 29.71 mo
105.744 29.9761 103.725 30.248 101.707 30.5269 cv
102.952 39.52 104.194 48.5137 105.433 57.5078 cv
109.594 56.9346 113.758 56.3892 117.925 55.8711 cv
117.706 54.1108 117.487 52.3511 117.268 50.5913 cv
115.054 50.8662 112.841 51.1494 110.629 51.4404 cv
109.676 44.1968 108.721 36.9531 107.764 29.71 cv
107.764 29.71 li
cp
129.728 27.0767 mo
125.525 27.5327 121.325 28.0156 117.127 28.5254 cv
118.23 37.5376 119.33 46.5503 120.426 55.563 cv
124.508 55.0669 128.592 54.5972 132.679 54.1538 cv
132.487 52.3906 132.295 50.6279 132.104 48.8652 cv
129.999 49.0933 127.895 49.3286 125.792 49.5708 cv
125.564 47.5981 125.335 45.6255 125.107 43.6528 cv
127.123 43.4204 129.139 43.1948 131.157 42.9751 cv
130.98 41.3613 130.804 39.7471 130.628 38.1333 cv
128.601 38.354 126.574 38.5811 124.548 38.8145 cv
124.32 36.8423 124.092 34.8701 123.863 32.8975 cv
126.003 32.6514 128.145 32.4116 130.286 32.1797 cv
130.1 30.4785 129.914 28.7778 129.728 27.0767 cv
129.728 27.0767 li
cp
344.082 26.6934 mo
341.333 26.6934 340.804 28.8584 340.779 29.7656 cv
340.234 36.7163 341.108 41.1074 340.631 46.519 cv
341.878 46.6558 343.125 46.7944 344.372 46.936 cv
345.147 41.4053 346.943 37.4624 347.93 30.561 cv
348.078 29.5986 348.052 27.1021 344.734 26.731 cv
344.504 26.7056 344.287 26.6934 344.082 26.6934 cv
344.082 26.6934 li
cp
325.877 25.457 mo
325.054 34.499 324.228 43.541 323.398 52.5825 cv
327.502 52.959 331.604 53.3623 335.703 53.792 cv
335.888 52.0283 336.073 50.2642 336.258 48.5005 cv
334.146 48.2788 332.033 48.0645 329.92 47.8574 cv
330.114 45.8813 330.308 43.9053 330.501 41.9292 cv
332.525 42.1274 334.549 42.3325 336.573 42.5439 cv
336.741 40.9292 336.909 39.3149 337.076 37.7002 cv
335.043 37.4873 333.009 37.2808 330.974 37.0811 cv
331.167 35.1045 331.36 33.1279 331.553 31.1519 cv
333.702 31.3628 335.851 31.5811 337.999 31.8066 cv
338.177 30.1045 338.354 28.4028 338.531 26.7012 cv
334.314 26.2593 330.097 25.8442 325.877 25.457 cv
325.877 25.457 li
cp
150.97 25.0034 mo
148.826 25.189 146.682 25.3813 144.539 25.5811 cv
144.153 31.939 143.785 38.2964 143.434 44.6538 cv
143.419 45.4204 143.404 46.187 143.389 46.9536 cv
143.216 46.2056 143.042 45.457 142.868 44.7085 cv
141.303 38.5366 139.718 32.3677 138.113 26.2026 cv
135.958 26.418 133.805 26.6406 131.651 26.8701 cv
134.568 35.6895 137.429 44.521 140.233 53.3638 cv
142.713 53.1143 145.195 52.875 147.678 52.645 cv
148.724 43.4302 149.821 34.2163 150.97 25.0034 cv
150.97 25.0034 li
cp
306.643 23.8813 mo
306.38 25.5776 306.117 27.2739 305.855 28.9702 cv
307.727 29.104 309.597 29.2437 311.467 29.3882 cv
310.902 36.7349 310.336 44.0815 309.768 51.4277 cv
311.82 51.5869 313.874 51.7524 315.927 51.9243 cv
316.542 44.582 317.155 37.2397 317.767 29.897 cv
319.546 30.0464 321.325 30.2007 323.104 30.3594 cv
323.09 28.6406 323.074 26.9214 323.058 25.2021 cv
317.588 24.7158 312.116 24.2754 306.643 23.8813 cv
306.643 23.8813 li
cp
165.731 23.8364 mo
161.516 24.1377 157.301 24.4658 153.089 24.8218 cv
153.86 33.8682 154.629 42.9146 155.394 51.9614 cv
159.489 51.6157 163.585 51.2964 167.684 51.0034 cv
167.558 49.2349 167.432 47.4658 167.305 45.6973 cv
165.193 45.8481 163.083 46.0059 160.972 46.1704 cv
160.817 44.1909 160.662 42.2119 160.507 40.2324 cv
162.529 40.0737 164.552 39.9219 166.575 39.7764 cv
166.458 38.1572 166.341 36.5381 166.224 34.9185 cv
164.19 35.0645 162.158 35.2168 160.125 35.376 cv
159.97 33.3965 159.814 31.417 159.659 29.4375 cv
161.805 29.27 163.953 29.1089 166.1 28.9551 cv
165.978 27.249 165.854 25.5425 165.731 23.8364 cv
165.731 23.8364 li
cp
174.333 23.2593 mo
172.302 23.3867 170.271 23.52 168.239 23.6602 cv
168.87 32.7178 169.497 41.7754 170.122 50.833 cv
174.309 50.5444 178.498 50.2827 182.688 50.0488 cv
182.59 48.2788 182.491 46.5088 182.392 44.7383 cv
180.166 44.8623 177.939 44.9937 175.714 45.1333 cv
175.256 37.8418 174.796 30.5503 174.333 23.2593 cv
174.333 23.2593 li
cp
291.417 22.9014 mo
290.912 31.9663 290.403 41.0313 289.892 50.0957 cv
294.001 50.3286 298.109 50.5879 302.216 50.874 cv
302.339 49.1045 302.462 47.3354 302.585 45.5659 cv
300.47 45.4189 298.354 45.2788 296.238 45.1455 cv
296.362 43.1636 296.485 41.1816 296.608 39.1997 cv
298.637 39.3276 300.664 39.4614 302.691 39.6021 cv
302.803 37.9819 302.914 36.3623 303.025 34.7422 cv
300.987 34.6016 298.949 34.4673 296.912 34.3398 cv
297.035 32.3579 297.159 30.3755 297.282 28.3936 cv
299.436 28.5293 301.589 28.6719 303.741 28.8218 cv
303.858 27.1147 303.976 25.4072 304.093 23.7002 cv
299.868 23.4067 295.644 23.1406 291.417 22.9014 cv
291.417 22.9014 li
cp
275.873 22.147 mo
275.511 31.2188 275.146 40.2905 274.777 49.3618 cv
278.976 49.5327 283.174 49.731 287.372 49.957 cv
287.467 48.1865 287.563 46.4155 287.658 44.645 cv
285.428 44.5249 283.196 44.4126 280.966 44.3081 cv
281.307 37.0103 281.646 29.7124 281.983 22.4146 cv
279.946 22.3188 277.91 22.2295 275.873 22.147 cv
275.873 22.147 li
cp
235.848 21.333 mo
234.493 21.333 233.138 21.3359 231.783 21.3413 cv
231.828 30.4204 231.869 39.4995 231.907 48.5786 cv
233.238 48.5732 234.568 48.5703 235.898 48.5703 cv
236.548 48.5703 237.198 48.5708 237.848 48.5723 cv
237.856 44.2139 237.864 39.8555 237.871 35.4971 cv
239.288 39.4214 240.687 43.3491 242.067 47.2793 cv
243.485 43.3672 244.92 39.458 246.371 35.5518 cv
246.326 39.9102 246.28 44.2686 246.233 48.627 cv
248.214 48.6484 250.195 48.6758 252.176 48.709 cv
252.329 39.6313 252.479 30.5537 252.627 21.4756 cv
250.474 21.439 248.321 21.4092 246.169 21.3867 cv
244.813 25.4565 243.475 29.5293 242.152 33.605 cv
240.865 29.5127 239.562 25.4229 238.241 21.3359 cv
237.443 21.334 236.646 21.333 235.848 21.333 cv
235.848 21.333 li
cp
202.436 21.1943 mo
202.339 21.1943 202.243 21.1958 202.147 21.1992 cv
193.776 21.457 190.982 28.6274 191.491 36.0981 cv
191.982 44.0605 195.396 49.6875 202.004 49.6875 cv
202.165 49.6875 202.329 49.6841 202.494 49.6772 cv
203.771 49.6333 205.487 49.2764 207.189 48.2876 cv
207.075 46.167 206.96 44.0464 206.844 41.9258 cv
205.48 44.0171 203.674 44.627 202.583 44.627 cv
202.517 44.627 202.453 44.625 202.393 44.6206 cv
199.289 44.3555 197.985 40.1362 197.829 36.2417 cv
197.597 32.3906 198.888 27.1968 202.502 26.96 cv
202.543 26.9585 202.585 26.9575 202.629 26.9575 cv
203.526 26.9575 204.964 27.2944 206.317 29.6484 cv
206.514 27.3179 206.713 24.9878 206.913 22.6577 cv
205.646 21.6035 203.95 21.1943 202.436 21.1943 cv
202.436 21.1943 li
cp
263.479 37.4692 mo
262.535 37.4692 261.755 37.0752 261.374 36.5806 cv
261.461 33.2217 261.547 29.8633 261.634 26.5049 cv
262.27 26.312 262.874 26.2056 263.432 26.2056 cv
265.563 26.2056 267.021 27.7578 267.009 31.9463 cv
266.983 35.1699 265.586 37.1104 263.941 37.438 cv
263.784 37.459 263.63 37.4692 263.479 37.4692 cv
263.479 37.4692 li
cp
263.336 21.1318 mo
260.098 21.1318 257.702 21.5356 255.939 21.5356 cv
255.866 21.5356 255.794 21.5352 255.724 21.5337 cv
255.547 30.6108 255.367 39.6885 255.185 48.7656 cv
257.141 48.8047 259.097 48.8501 261.053 48.9014 cv
261.114 46.5542 261.176 44.207 261.236 41.8604 cv
262.491 42.4331 263.742 42.7109 264.938 42.7109 cv
267.809 42.7109 270.355 41.1108 271.84 38.1489 cv
273.274 35.2798 273.757 30.0854 272.125 26.1616 cv
270.814 23.0024 267.849 21.2466 264.441 21.1479 cv
264.063 21.1372 263.694 21.1318 263.336 21.1318 cv
263.336 21.1318 li
cp
218.934 44.3735 mo
215.463 44.2876 214.584 38.915 214.499 35.1685 cv
214.414 31.4614 215.071 26.645 218.61 26.3555 cv
222.117 26.5205 222.951 31.3115 222.999 35.019 cv
223.05 38.7666 222.362 44.165 218.934 44.3735 cv
218.934 44.3735 li
cp
218.783 20.771 mo
218.692 20.771 218.599 20.772 218.506 20.7739 cv
210.289 20.8906 207.887 28.4473 208.093 35.2559 cv
208.375 42.063 210.896 49.2466 218.713 49.2466 cv
218.815 49.2466 218.917 49.2456 219.021 49.2432 cv
227.044 49.1479 229.407 41.7813 229.366 34.8804 cv
229.366 28.145 226.747 20.77 218.783 20.771 cv
218.783 20.771 li
cp
341.951 49.4565 mo
342.038 49.4565 342.127 49.4614 342.216 49.4712 cv
342.843 49.5415 343.402 49.8496 343.792 50.3389 cv
344.175 50.8193 344.348 51.4146 344.279 52.0132 cv
344.145 53.1777 343.126 54.0894 341.961 54.0894 cv
341.876 54.0894 341.791 54.085 341.707 54.0757 cv
340.457 53.936 339.516 52.7563 339.65 51.4985 cv
339.774 50.3345 340.764 49.4565 341.951 49.4565 cv
341.951 49.4565 li
cp
106.903 30.8325 mo
107.816 37.7446 108.728 44.6582 109.637 51.5708 cv
109.704 52.0742 110.133 52.4404 110.627 52.4404 cv
110.671 52.4404 110.715 52.4375 110.759 52.4321 cv
112.639 52.1846 114.519 51.9429 116.399 51.7075 cv
116.626 53.5298 li
116.81 55.0024 li
113.302 55.4424 109.772 55.9048 106.287 56.3813 cv
105.139 48.0474 103.988 39.7144 102.834 31.3813 cv
104.19 31.1953 105.546 31.0127 106.903 30.8325 cv
106.903 30.8325 li
cp
128.843 28.1792 mo
129.183 31.2939 li
127.371 31.4922 125.56 31.6958 123.749 31.9038 cv
123.485 31.9341 123.245 32.0684 123.08 32.2759 cv
122.915 32.4839 122.839 32.749 122.87 33.0127 cv
123.555 38.9292 li
123.613 39.439 124.046 39.8145 124.547 39.8145 cv
124.585 39.8145 124.624 39.8125 124.662 39.8081 cv
126.355 39.6128 128.049 39.4224 129.742 39.2363 cv
129.898 40.6626 li
130.054 42.0898 li
128.366 42.2754 126.679 42.4648 124.992 42.6592 cv
124.729 42.6899 124.488 42.8237 124.323 43.0317 cv
124.159 43.2393 124.083 43.5044 124.114 43.7681 cv
124.157 44.1406 li
124.799 49.6855 li
124.857 50.1953 125.29 50.5708 125.791 50.5708 cv
125.829 50.5708 125.868 50.5688 125.906 50.5645 cv
127.676 50.3604 129.447 50.1616 131.218 49.9678 cv
131.577 53.2681 li
128.16 53.6426 124.711 54.0391 121.298 54.4502 cv
120.282 46.0991 119.263 37.7485 118.241 29.3979 cv
121.759 28.9746 125.316 28.5654 128.843 28.1792 cv
128.843 28.1792 li
cp
344.082 27.6934 mo
344.082 27.6934 li
344.253 27.6934 344.436 27.7041 344.623 27.7246 cv
345.546 27.8281 346.202 28.126 346.572 28.6108 cv
347.071 29.2627 346.981 30.1519 346.939 30.4194 cv
346.431 33.9844 345.706 36.73 345.005 39.3853 cv
344.442 41.52 343.906 43.5508 343.529 45.8345 cv
342.919 45.7661 342.31 45.6982 341.7 45.6309 cv
341.841 43.3555 341.768 41.2393 341.69 39.0142 cv
341.596 36.2578 341.497 33.4077 341.776 29.8438 cv
341.777 29.8267 341.778 29.8096 341.779 29.7925 cv
341.792 29.3003 341.998 27.6934 344.082 27.6934 cv
344.082 27.6934 li
cp
326.782 26.5449 mo
330.304 26.8716 333.877 27.2231 337.433 27.5923 cv
337.108 30.708 li
335.289 30.519 333.471 30.3354 331.65 30.1567 cv
331.618 30.1533 331.585 30.1519 331.553 30.1519 cv
331.322 30.1519 331.098 30.2314 330.918 30.3794 cv
330.713 30.5479 330.583 30.791 330.558 31.0552 cv
329.979 36.9839 li
329.925 37.5332 330.326 38.0225 330.876 38.0762 cv
332.577 38.2432 334.278 38.415 335.979 38.5913 cv
335.682 41.4458 li
333.987 41.2705 332.293 41.1001 330.599 40.9341 cv
330.565 40.9307 330.533 40.9292 330.501 40.9292 cv
330.271 40.9292 330.046 41.0088 329.866 41.1567 cv
329.661 41.3247 329.531 41.5679 329.506 41.8315 cv
329.489 42.0049 li
328.925 47.7598 li
328.898 48.0234 328.979 48.2871 329.147 48.4922 cv
329.315 48.6973 329.559 48.8267 329.822 48.8525 cv
331.602 49.0269 333.381 49.2065 335.159 49.3911 cv
334.986 51.042 li
334.813 52.6938 li
331.373 52.3369 327.908 51.9961 324.485 51.6787 cv
325.254 43.3008 326.019 34.9233 326.782 26.5449 cv
326.782 26.5449 li
cp
149.825 26.1069 mo
148.771 34.6001 147.746 43.2075 146.776 51.7246 cv
144.831 51.9063 142.885 52.0942 140.94 52.2881 cv
138.344 44.1104 135.672 35.8594 132.99 27.7339 cv
134.447 27.5806 135.903 27.4302 137.361 27.2832 cv
138.895 33.1841 140.42 39.124 141.894 44.9346 cv
142.415 47.1792 li
142.521 47.6367 142.928 47.9536 143.388 47.9536 cv
143.423 47.9536 143.458 47.9517 143.493 47.9482 cv
143.995 47.8955 144.379 47.4775 144.389 46.9727 cv
144.433 44.709 li
144.763 38.7246 145.117 32.6021 145.485 26.4976 cv
146.932 26.3643 148.378 26.2339 149.825 26.1069 cv
149.825 26.1069 li
cp
307.49 24.9453 mo
312.325 25.2983 317.219 25.6919 322.066 26.1182 cv
322.076 27.1675 322.086 28.2168 322.095 29.2661 cv
320.68 29.1411 319.266 29.0195 317.851 28.9004 cv
317.822 28.8979 317.794 28.897 317.767 28.897 cv
317.531 28.897 317.302 28.98 317.121 29.1333 cv
316.918 29.3047 316.792 29.5498 316.77 29.814 cv
316.187 36.8247 315.601 43.835 315.014 50.8447 cv
313.623 50.73 312.232 50.6177 310.842 50.5083 cv
311.384 43.4946 311.925 36.4795 312.464 29.4648 cv
312.506 28.9146 312.095 28.4336 311.544 28.3911 cv
310.032 28.2744 308.521 28.1606 307.01 28.0508 cv
307.49 24.9453 li
307.49 24.9453 li
cp
164.806 24.9058 mo
165.031 28.0298 li
163.214 28.1616 161.397 28.2988 159.581 28.4404 cv
159.316 28.4609 159.071 28.5859 158.898 28.7876 cv
158.726 28.9893 158.641 29.2515 158.662 29.5161 cv
158.895 32.4849 li
159.128 35.4546 li
159.17 35.9785 159.608 36.376 160.125 36.376 cv
160.15 36.376 160.177 36.375 160.204 36.373 cv
161.901 36.2397 163.6 36.1118 165.298 35.9878 cv
165.401 37.4126 li
165.505 38.8511 li
163.813 38.9746 162.121 39.1025 160.429 39.2354 cv
159.878 39.2788 159.467 39.7603 159.51 40.3105 cv
159.543 40.7378 li
159.975 46.2485 li
160.016 46.7725 160.454 47.1704 160.971 47.1704 cv
160.997 47.1704 161.023 47.1694 161.05 47.1675 cv
162.826 47.0288 164.602 46.8955 166.379 46.7666 cv
166.497 48.4214 li
166.615 50.0776 li
163.189 50.3262 159.73 50.5962 156.306 50.8813 cv
155.597 42.4985 154.885 34.1167 154.171 25.7344 cv
157.684 25.4414 161.252 25.1631 164.806 24.9058 cv
164.806 24.9058 li
cp
173.399 24.3203 mo
173.84 31.2788 174.279 38.2373 174.716 45.1963 cv
174.75 45.7261 175.19 46.1333 175.713 46.1333 cv
175.734 46.1333 175.756 46.1328 175.777 46.1313 cv
177.667 46.0127 179.558 45.8999 181.449 45.793 cv
181.634 49.1064 li
178.133 49.3057 174.582 49.5273 171.05 49.7671 cv
170.472 41.3745 169.89 32.9824 169.306 24.5894 cv
170.67 24.4971 172.035 24.4072 173.399 24.3203 cv
173.399 24.3203 li
cp
292.359 23.957 mo
295.91 24.1616 299.489 24.3872 303.026 24.6289 cv
302.813 27.7554 li
300.99 27.6304 299.168 27.5103 297.345 27.3955 cv
297.324 27.394 297.303 27.3936 297.282 27.3936 cv
297.039 27.3936 296.804 27.4819 296.621 27.6436 cv
296.422 27.8193 296.301 28.0669 296.284 28.3315 cv
296.099 31.3047 li
295.914 34.2778 li
295.88 34.8291 296.299 35.3032 296.85 35.3379 cv
298.553 35.4443 300.256 35.5557 301.959 35.6714 cv
301.86 37.1035 li
301.763 38.5356 li
300.065 38.4199 298.369 38.3086 296.671 38.2017 cv
296.65 38.2002 296.629 38.1997 296.608 38.1997 cv
296.365 38.1997 296.13 38.2881 295.947 38.4497 cv
295.748 38.6255 295.627 38.873 295.61 39.1377 cv
295.24 45.083 li
295.206 45.6343 295.624 46.1089 296.176 46.1436 cv
297.957 46.2559 299.737 46.3726 301.518 46.4946 cv
301.287 49.8076 li
297.863 49.5728 294.394 49.3535 290.946 49.1543 cv
291.42 40.7554 291.892 32.3564 292.359 23.957 cv
292.359 23.957 li
cp
276.832 23.187 mo
278.201 23.2441 279.569 23.3042 280.938 23.3672 cv
280.615 30.332 280.292 37.2964 279.967 44.2617 cv
279.941 44.813 280.367 45.2813 280.919 45.3071 cv
282.814 45.396 284.71 45.4902 286.605 45.5903 cv
286.428 48.9053 li
282.911 48.7197 279.351 48.5513 275.817 48.4038 cv
276.158 39.9985 276.496 31.5933 276.832 23.187 cv
276.832 23.187 li
cp
235.848 22.333 mo
236.403 22.333 236.958 22.3335 237.513 22.3345 cv
238.75 26.1699 239.988 30.0586 241.198 33.9048 cv
241.329 34.3198 241.713 34.603 242.147 34.605 cv
242.149 34.605 242.15 34.605 242.152 34.605 cv
242.586 34.605 242.97 34.3262 243.104 33.9136 cv
244.344 30.0908 245.615 26.2192 246.888 22.3945 cv
248.462 22.4121 250.036 22.4336 251.611 22.459 cv
251.474 30.8706 251.335 39.2813 251.192 47.6929 cv
249.877 47.6719 248.561 47.6538 247.244 47.6382 cv
247.287 43.6128 247.329 39.5874 247.371 35.562 cv
247.376 35.0762 247.031 34.6567 246.553 34.5684 cv
246.492 34.5571 246.431 34.5518 246.37 34.5518 cv
245.959 34.5518 245.581 34.8062 245.434 35.2036 cv
244.313 38.2217 243.189 41.2749 242.082 44.312 cv
240.993 41.2329 239.897 38.1641 238.812 35.1572 cv
238.667 34.7559 238.286 34.4971 237.872 34.4971 cv
237.814 34.4971 237.757 34.502 237.699 34.5117 cv
237.222 34.5952 236.872 35.0103 236.871 35.4956 cv
236.865 39.5205 236.857 43.5459 236.85 47.5713 cv
235.898 47.5703 li
234.9 47.5703 233.901 47.5718 232.903 47.5752 cv
232.867 39.1621 232.829 30.7505 232.788 22.3379 cv
233.808 22.3345 234.828 22.333 235.848 22.333 cv
235.848 22.333 li
cp
202.436 22.1943 mo
203.732 22.1943 204.954 22.5303 205.869 23.1284 cv
205.756 24.4434 205.644 25.7588 205.532 27.0742 cv
204.665 26.332 203.694 25.9575 202.629 25.9575 cv
202.574 25.9575 202.52 25.959 202.437 25.9619 cv
197.885 26.2603 196.59 32.3091 196.83 36.2817 cv
197.002 40.5835 198.532 45.2944 202.322 45.6182 cv
202.405 45.624 202.492 45.627 202.583 45.627 cv
203.553 45.627 204.801 45.2666 205.974 44.3535 cv
206.156 47.709 li
204.598 48.4878 203.197 48.6523 202.453 48.6782 cv
202.302 48.6841 202.152 48.6875 202.004 48.6875 cv
194.121 48.6875 192.724 39.8403 192.489 36.0303 cv
192.171 31.3706 193.199 27.4766 195.383 25.0654 cv
197.026 23.2515 199.313 22.2871 202.182 22.1987 cv
202.266 22.1958 202.351 22.1943 202.436 22.1943 cv
202.436 22.1943 li
cp
263.479 38.4692 mo
263.676 38.4692 263.876 38.4556 264.074 38.4292 cv
264.095 38.4263 264.116 38.4229 264.137 38.4189 cv
266.462 37.9556 267.981 35.418 268.009 31.9492 cv
268.017 29.3022 267.479 27.4717 266.363 26.353 cv
265.604 25.5918 264.618 25.2056 263.432 25.2056 cv
262.794 25.2056 262.092 25.3208 261.344 25.5479 cv
260.931 25.6729 260.646 26.0483 260.634 26.479 cv
260.501 31.6338 li
260.374 36.5547 li
260.368 36.7842 260.441 37.0088 260.582 37.1904 cv
261.188 37.979 262.299 38.4692 263.479 38.4692 cv
263.479 38.4692 li
cp
263.336 22.1318 mo
263.685 22.1318 264.043 22.1367 264.412 22.1475 cv
267.559 22.2388 270.097 23.8823 271.201 26.5454 cv
272.714 30.1826 272.259 35.0742 270.946 37.7007 cv
269.668 40.2495 267.479 41.7109 264.938 41.7109 cv
263.862 41.7109 262.757 41.4551 261.651 40.9507 cv
261.52 40.8901 261.378 40.8604 261.236 40.8604 cv
261.052 40.8604 260.868 40.9116 260.707 41.0122 cv
260.422 41.1899 260.245 41.499 260.236 41.8345 cv
260.079 47.876 li
258.788 47.8433 257.496 47.8135 256.204 47.7861 cv
256.374 39.3628 256.54 30.9399 256.705 22.5161 cv
257.291 22.4883 257.926 22.4351 258.627 22.3755 cv
259.98 22.2617 261.515 22.1318 263.336 22.1318 cv
263.336 22.1318 li
cp
218.934 45.3735 mo
218.955 45.3735 218.975 45.373 218.995 45.3716 cv
222.262 45.1729 224.086 41.3945 223.999 35.0063 cv
223.921 28.9419 222.023 25.5151 218.657 25.3564 cv
218.642 25.356 218.626 25.3555 218.61 25.3555 cv
218.583 25.3555 218.556 25.3564 218.529 25.3589 cv
215.147 25.6353 213.361 29.1274 213.499 35.1914 cv
213.645 41.5806 215.617 45.2915 218.909 45.373 cv
218.917 45.3735 218.926 45.3735 218.934 45.3735 cv
218.934 45.3735 li
cp
218.784 21.771 mo
227.675 21.771 228.366 31.8052 228.366 34.8862 cv
228.39 38.8687 227.525 48.1421 218.998 48.2437 cv
218.902 48.2456 218.807 48.2466 218.713 48.2466 cv
210.811 48.2466 209.294 40.0815 209.093 35.2256 cv
209.01 32.4736 209.315 27.3911 212.299 24.272 cv
213.849 22.6509 215.942 21.8105 218.527 21.7739 cv
218.613 21.772 218.699 21.771 218.783 21.771 cv
218.784 21.771 li
218.784 21.771 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.2
%%For: (Daniel) ()
%%Title: (LevelComplete.eps)
%%CreationDate: 5/22/2017 5:28 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Blb4`Q7i)@&c*%5iWsnf+hBEZ/$l6=E?h^8mG%1EQJLSJV^E04#tZ+8TIr[eD?'J,Cq18fA9!_4d)?Vd+Ap5&orQJ"q8k#5
%MsL'#g%rtcia70U*?"WR<[7N*Wh)HPjHI?LICK'7hc#Oc]ZZ7>AXX4FW1+^>=H/650F`JHIW9E,DRI4Tp@@3Rp#3gTir%g,_d>p?
%hj3TU=3EPla`@$'<p/W^^Q,2SbEJRW4-M=u=3"t:X5f,]GK[%L*>_[W^7m:\n,^6,(#WjWGH\`.#=U:I='*a&W#K[TjL[(Bkp)md
%Y##)`gZ=2$/#`76kLKFD5Jp\Q?WsW/jm)g8Ed;eNZ%gF#3`9pF$6P;jX4PP\o.,:P.,G+\Y<En6('!1TS+g%UJ\G^S6&Mg3/q0_`
%:uJN%L&^.LS$2=h*gItfch[:h3Bfh%%CR+A$9m&3"h!k#/GYMKM'MfolJ;@/jjf6c:I@L1Zn>`!j%FkHN'GXndl>HMgTf:_)H?r9
%\uPS.g`7bfoul%Rf>!@F[T]9*/nHX_QWGidIYTp>'f=MV;Z,ADq<IO+p":&gR\d<EVr=\7e($I#14K2sHq>!@oTB->42,'.^0+aX
%lF]*k```*&W%S!\?XLQpZ2AHmCJMu=^3RIsIt-u!C?SN3Z%#5E1oQZY.;`ib;[-R--CI/,.oq39po5?0cF:"b^UZIRF12(K;As^E
%AS$FAEHu^Gf;I)mRfB-XN9fQ6n\<LQkkWcZC@)tDoW-YHa\"5+?[[in?E?q8([l;M52b2[$5rrgs8:l9HlCnhB2HS?Hg(nQ]__I+
%^2UO#MP!-1RQmi[I=$DP++A3TEW,m[p$7P!cT[ni?Mq/KI=JdiJNHBZr:E4S'A*DZI_@jhqto[FjR%9$L:?aLbNlL8eTcB5rj,ho
%K5P"u7f4]_S_h6@fD)i$pL/gYZ%s-6l/2JC3cfba=s*_#lOV1>hqq_0?D#-5MtJa(o8E@Dd;jXrqTn9bq`^)9p3aDW?B44Os+Ic9
%d?j1"e`HAbX0Z/&n!<,n$nonTJM/Wa=F313QI:*s:APUZP<\H3)j68.4_f98(?k.#IJP,:5$>W\`u2Nr^Y'GYl3Q;)Vtuap^&.'R
%r9V>5:jH4W?MA7b%.!bZ2)k@%qSV(8pD4Y/U#rP]5JR`scdj1=kH.bejl#UpeUt``>n<?pSY$tA,A,-jo<UBBbP,r$::d%fGPV10
%frFXP>JB!1Fe-lYFZoEZqpk.JbOa",DLQG`*eqT3qJ6U7F$rDP49V]R_Z"0?@<M8?'p)$1FL^;g$cg@*@eJ8%T_Blu5<=,i9T>q8
%Phpn0\NE"WG4F23Va%97bBL#9d2OMQBaYYu('D1sUZq%7BE.Z&fmc,6<g7]?\@V[:-1O-)$82>%ha-_17[;e`(]VS6kKj,D4khtu
%3TE`0?"&f]_TqPu:2FEUCMdXB/O<oEeT&!qk1-Q%<)$@o[]6@5;H7.cc.pOee4`PQS?W:Z*Y;\d;<;f..-K]nS<Qb48m@ai//:!`
%U$)F.a2N&'3/.fjk)1*_e&@!CAl13$>gT98[4l^=QPXC6b`Cop]&rT%>Z8-ZDum/72tM@`i.>jjX1=XbF$3Ur@U@9=iEFIBZ\q?Q
%ku2*U\#-3jbK*\;bKAr-Wo\!423D[3(XtE-SqUr4f0V+dn]u*AB$sAB=Yjt3:e`ZA'0RclAl;@i`(fMg1RUq6P8Oem!idoNC9"2n
%e4f8Z:$ZLLSP5s1)%?<B*a-]PS=8\F3A\!VAnQ!^c^NNt2P&*#@M[=T!_-PoB.K`,A`7[0<fM]$X/VO:\4&"!0e?<.Qe%u;0bQ+>
%SZ^pdoL)J44@[Y*!?BQ(:o,efkKdO1JRSe`$Pm\a_b-D_craCmF'*hu(g7u%1]$1_oTHXeJLXZPWl8(#>8`1t@o:drYV82BF]iDm
%*Hb@=2=+6Q[OZUS1fVXkf_qup<6=b7[6h\H^^[M\l3^lTd-1aMKW<4iU6;D#n<XJfD+`n?8fR>oHE]!MGpIU*SD>aE6H?Q5_66oV
%lUrLhs#>A3"p'()1iTc4[/fA]?nk+p<#^-`'h.6R<Rm=nVH6KcCAtSZVGd''\>!a%<JB7eEt%An<[+`b3Db55BYai8`-f9!qG@kO
%EBmgp5\jt":6(GX_7o!Da?,L__Z%DXM*',-s7'%&A#ns%I*_]Da?D9A(Rf[Z$Qaa)qCV3i64&^0(+uOSSg(%2Oft4"&EtFd?(mFg
%n:aaAXX%Y,//4:tOCHLgAcgMYX/:g>-;mUKJ=7CNTI!H49pAU'eF],t#<SK+VK>O?jRK6Y%e-cG<Bq^8#2t'aS@FhsYjl?0Ofnpb
%'E7P:W!cosTRbTQ\:>HBl@F0=\)]2iQYKFh[t%?cT?Zm@e2;e\VtC"JC7L%YCT+Y/_TJ<J5V+CXD&RlHW<.CDVo<1t^H_gtoK.X(
%-U8D^qVM=E`*WVrdK&*&oSZ\UBGNj=OfH^#q=r]$2>u7+U>M,_F]73O&G#shi4PZ0DaV:B[dXZH"NXmU^Tc5HrrSMA*2\#l"#=p2
%f)X."iR\G*ej0-IEGspq1RPrqEH((!%XnlVE9-&5Kc5f7c\.e>^s=%jEsE]@!7<*q%X`[*;a5sb6b_CgB?-Xm-rZLb3'6_TTXd=A
%OhZ5QYCO%>ns]a+#1`k*gArV05gM_I!8=T4c3I\.3#WqJIi\Kq5d'n!Z-kI8^aqSUjFmr9`Rb5^Xf6(Q2+JkrX-Uc/jRK8Y)Ef'%
%*5*e[*f_?!CumDtrSRr2OapO<nkr<_r#(J;$kd^r])jOb^oLXp<!8+M,bpete'_oq1n&kUEC=e?5un%reW@F3&eeLra\8/Cp,J$!
%'ZQK9-QM"NDrM?5.I(#))7L6;oCHTK:rk0c8E15>Z3'RuA:QS-U1&_u@\[n:i)0`@+5##WlAJ5"!sTR#@tDnPM<*;^$K>27RY4WG
%WR%)J9au1JW<q"53GeBnBL;qb(\]`R<7m>?+)(r]@@G>VKDj=?e'=E(DPB8sHY3Ph?c*!ag*7!X)cPE+($l5qF#g'WXCqheR4XS0
%@3;-NX2A-8'!+C`<Rs.T5m'd%dHHo>F7@8sH.698*Na3af-$'+&P"T:,P_O6gl]fZJb3GceFBH0EBc)<FFbP\it#Z'Y+"MSk.oA5
%M[c!b?)\=,>1XuiWS;&cQ-#l3>ha]cR]<#eC@^n\CU)uiG@!7`1[*_4j-jkr-<mW"]qEC?Y2430/XPk9TZ1`iA[Yk*Q:j%sW):%,
%Y2O9#O.Zg(B`&VgMVp(DB!EUa]b4J]6Wt:O?&Q@56s^+TSS6CrQe=rF="L`m*NP!+YftBjq^e#dEN;@$GcN!Y&iMH1cC28jKW+)C
%FtHVB@i@Bs]W20EMEf2.C>s(q5_(c=8>'+95_]rF/;tEc6pjr0&gO?+;?0W#MD6=s\f_0X!3VuO_]lXoM!#uV7<UO3IQSk3%(m\3
%ZiZ#?GW.OgW\*c4RX!>8psfdt(Q+g)[%J+01)p9]&qVE9=Gqn<=rh<k?;G'*c0K+N>@W*+CM]ZMKj!O5<+.DSf#=u*#W#S;fo*G-
%f<kI7_&S.(RKO(XB1hbHaUI_;nE_-MR5&,N)F#H3JU'^aQjXkq@I!#@AtTR-?\acaET](>&P(^Ha*SH=qDaEiO0T-<gd;<qriDq"
%=53B*gU1GII>4P4$c5FD'0@?t*4->TeI.Jh=Z<=1GG8p2J@%Nebli-?9T)>B(^6-R\P0NUjO3!bF@FX@%1'%9?pEi$h\f"u;j)GS
%,k!W:q:62lS0kU/B_A&%N:JW.\1/4b^hB0E"_B;+HNrMhPr-FkSOe#@?&$ooEcX[f'rAMG8TutRlm="2eKbl6RU&:DS^&KBPjN',
%gGL823KX>EY1&eD2[aXHaE0ZNJq]+bm.#fmk7UomMo?(cKpgh26u3Z[c"Lb[?oN+g?qI`4,//n\;:@%-M[SKe9SGcqKB\d9\%tf-
%Lqcp+4-17\i<`\(I`6/OIlFg=5H`"3>4`k8UM@K[pRZRRDti_C0\=\RN%7/eh`1MWb6kmKWpi&$X286DR7[CD,53%f0<LZ.aP5Y?
%ccY"5@3u=G)2`;g[!6R.j+<lN1;='0JrOpUF1Mlt!qp[;F1Mlt!YO>pk&_]r"D#'XJ[WOdr3d^Ln#aQ&rg?)uf"eA=R>5E&V#QSY
%`d(:JN&"3g0V8Y7JUc<k1RDlC(KmSer6<qCab"($.>^n?@[;7A1>#`=S;rtL9am7>k">1]0f5$C?]7bgZ$EYk^]l:@(1OLWj->ab
%Ud-YS3P!e6d)a0Q1%'u_L2CO!,J+r.D4Pe]VYaOL2SHArU65m"8l1D+o4siP'/"G!'c[P7Y4@n%ZnJ@40<&j%ln'%CB;j56E7HmR
%:"KP+DRr-B?.8^dMbtF&l6\)RWPQjO!%7nF!)F9N:3FBO#,Vi'*B)FOV@l9E5j4UlX_=[B9J\/l)bt':6c.E=[LT>JGTD^(9*teu
%";]aN-k_f$FY)OW9$rGu0bJDe[im1;S+Hh3_Br:1R33Eedo:!TN4U1"ea@X@bkaJl2i3nLG"+2AGiQ`$N#-=&&5rlCP@C96A8K+a
%/9\<)l31(WW&]uO:V_j$ONecgpbs+]U'P->(UZgC;r%LD.We(2LB$!\M`(Cpk:Q2c%e&C0jL'Kh(5I7(0DB7i,\!#57+`Gf8^AnY
%Rk%$RRu<&r+Uu\Z<`YAA<feXd(]B870@7<r.l1Ml&oDD2<clp!.abJ"Ya`s,Z`4\@.dC!K(iu5teYj+/Wi]!,\eJ:SRfl#b(dek9
%iG8m79<8T2=LNi8Ji0t[HS!pdb@(?V-tjj:N=p#C'eHVD=MK,S271UZ/]j0A?Y[usJZ5-)Vp0SCPSbg0';&M$]$1:[@6+WJ.e15A
%s-jD["nBG5iFUIKVo8'R^,Q\!]K^;jo#XTpN,!r_Y&='uX9`;eR#.2"^4#IN;o+uM/7,plH1(Iur]C+9?G%V@O2V"8Ea`0qMqhKu
%fIBc\76jYUR/3pO5c5H]#o#=V+ZB]]WAceA:h*gPZP^(nL:&Yd"An,QK&"U[i&9OK^:QfFD%!M;egMog7jG>^<J-"("'uF-'nBQY
%(Qffj>qYQS"as_UD%SuKmo.'Zn$]4j^A0.4o0JVeL%le+PFoN(WuPJC,=t4#n^#Ma6bpE_p>[7$?XJ3Ym-iPX!:X*@8e;'.7L3Q:
%=%aK0OJ@F&s+iQ%lO<+011rlH#X^;.QIaOjVHd<O;\Pl]-$ePujHHp,AIBo"B&?)tZ+',HM<l7H<?IKF[c\lpSra9h8iZ?`74Pf%
%:bU1>V",1np`Og>jW:r5MV[WS7QrO=s"oVhBUNB![1R>#9lAsI"lYh"HI5WOS-d/P-^J43@Q/<]p7J,,X[OPf,]^63]b(c;N#;BN
%([Rb1?[XB;HhQLOin'f[T-(W1Je8!7"t0Wq5Y(ne[iGe(XLQSEH,neG@h!s2*<Wu*"c'm\":+hF_L@r8B@QsB]*T5A.K5$F$_YL\
%fNT8$iQd&,9)c\V,MTTb^\8;H=eoNCc&!`e6=bAe<_G:.!,pC3BNjp?2<&Q"]gR;QjbU'.jrGZ'd.:lNdFF>U1A0siN&h,fb43JD
%$p-*3$I.6S,V)Nm8k6U%RsB^^@^coXS0H9C0&nF[G@&+TH3K@1)6>Vjo[kDL;$=:oITX^]#P4!8!3lj/U(uip5,"sW4="$8o2T<7
%BDb+7&.pff8q9V0Ok$A<pFt;>;gY5b".os:U^kuA.2i')Z4/\:`MudsY/82n9gg+N)#_T+M>E$@0pquS`P=P)k!(d'M<ReEIn#BG
%P<`n[_8g\K.tHcRjrBY3SEHjT#m4cVeT^Ir6?R]B1rI+<W+!DP8/l5;QkH'\I8#"%U4#3o'cHa&mpaqM%II3OLF)FO`2-1Zg*.V+
%Y%;%iOY=t9$R,8D(>VUQ2NMb1o;f3#at>suDt>`&o1F4QZ$F%c66X%NH-)O-=6=pd)WSGHT)25(s3.[Qc&6tCh:FQsgU=q!6-X<I
%CdUQ8Ll'%m3tIe7,l#umGh'GkXU$s-CN3[AX(D$Pru"Yki'1EKN@mXh=jcQJAu@E1fkf,Y#1UnRSu364fpm`'.9VR2g[hp'PN&<)
%lgoEEBmr<u^%Re<dmOH5>+jIL=VF2>PS%_r$JHWgK>@@Q-hLSN6qHPN,;o34WLtEG%#l$A;D>-Z61.DKG/rp,?=VKDA.bq`?Ha&B
%/n<P3!P?XeoeO@bcNSOG#hCasW&$K*1cCT9@)PSpX%42YJsBlBj?5'rYYI5r!r'/0;"R#.:#Q!d!K[mTD$'I@#_3oLBbS#0,*6Lu
%*s%s<&la!Cdtk:8[MG]]e=7(`MKW)9,I)r9^R`2oi>tE2!8EGO*PFul69l>qW_g&f0a%<*dtD1$,;;VT+An[q*-j&1"X]*ld0/H"
%n/)nKo<A99dk*^+j"gcY4ld2&dVj"DTT?%8^jlalOu5J=ebQ3I(m<j>-JA)Q,]ZA?!eNiB!N<?,T5OQq[dggEL3O$o!\d0<@0%&F
%b$uiq'1:-$"Yi?,Ja7QA(+QPeZ6%K`0l?6>i9-QYdo7nf,nsc0$@h"aM=FYXAho4c=U-'?<%]!'GGKh:WC5/.?6A3YkD:W3pY*,F
%R<2ZiD8'ZC7f2VC%3i?tW5JBB]M=s9OIH\!RIMI[:e4->^H@ULY6^r-',\#";Wr>W0`ara`(G)?=p8k"PJgr3(XE4h9T0ZVUF"n:
%!QO=<.L;=I3tV,ES9EkCPRIJ]Og<qSB_WAI;ocWU6`u%KN.3@0G#tIV)qqoYe//+"7%Nl+Db]5o@Mh*$ZOdJ(qjW,[a.s-g_`j]V
%Ji!pER&THJ8[@M"M:74Q4mdZrYm`=,N@GeAeqCjmaP4_-ngP#)%Lp=J%B4Fl\>,3WHQ@h97_n+Cm;Wj5$!p@mA.)9=-3V2&(a76]
%eDd&d9(*4o1GX/JB`D3:,9&B\+W&2\0dBM86`-f>TZJKpYnVG%9L_eTW@<4f,(l^)W:Gn_b&q+$'F[7hJOs7TT#JR$#'rG-<E7Lo
%.KdV=-AH[oY^RmKrb2YY,7m)a'iX+\Jbq.h)TS;dGY/\#d^\QBf4QLQ'A0-oQ78'O;b2N'#<'-KD!hbq*k5I5q7IBB*2"dj!gXM0
%nKS#M,;t3C`^^"]7Vi@sa[Z@a7Vi>JTH4-D(pP6gINJa'(h&?KTCi@?-4o2i"mnd%XBY?i'X4]sQ5CCcX3*&a>pL1OND?XfFZ%i0
%af]@DR`12T:@mgU['%UshpUERma2Q$ZLOj:/sBR@la#4*i^L_(h7B'ARdcTXMAK]E]]*-";be&se;p+AV-/>/01'U9X4!n$(n%GO
%7c+t>2g[7S4>@_"83-*[%kD:cZ4@66n8]Tdl4&RX&sA+P2"sgf,=Y+?<^`qf4:%Vn!]ls!'-df7hTVo#HGfp4/b)@i2gQ>;P^I:g
%JNb_X,\#541d7?.9)#Q3Dsh4),_ORb*(a+a9TgN:k^Y`\MGoZ(_<;Pn59]&tgNiCQ9S_J<<Ff^A1;O331H$socpiX"Kj].Xcm1=I
%9`s3bRrUi0[s9;.A_E^b6'A06LntWaPQ5fFnLd-fjWl8I?ENsZ]iXSMoK9)H*$/h5jdI[o?G18-pee_s#r!;4r9)BO%'e";hkf+T
%\\h:sPZR/aV4KB"?D[DM,-1=.bQla]URbR$AV,>(+\rK/'j.5G87$6lU5#V!VHG<t>nf+SF5dBdT/a_GaU\j*]Hd',V6s4CMCHLj
%mt%_nXKL;ZiBr'Ys'II^7H"h*&L6>0YCC^8e!<d@2f8Q<Dn0I=>u5%2dquiH[p7dd$`btqDI)q;Qg;5U`q[ifYHXK;&_2j<LpV_'
%6T$+_!35OEW+M8uJTBQh\VB/j8UqPl7:Uk5GGnYaV^7_P(h=q0$"6l-k>rUr<Y7"<`_)OgYgm?q(#^;r5Y,F&-)a<I0[rjZdh*-G
%hZ-&h3!=jW@*JuVGp8FH9[M&fIV<e@O^V00[QR$B"&=l12fA1[147Ltdj/aM&jdnn5Y*Cj.=5PQ,>`5t3i/9P01=[7kmab2?It)8
%&)]=9Bk#2!p1nqGQCl_h-6(>jrQDBQG4A*$X,Y?tg)'![0[inrMY^DSJU&9[CLLN[o)WBc!,!H'$dbA01bp(:/A[Y)6?r>EM299u
%ruYZ5[erPmm1Gjc3ohCt%T$S*J>IiE8-upY=b\nJR0#Fc1'Yo@Q>j$nE3HYNrIlM\);-j,"k\FpAX$[g[N#0qCWrkpq:3UWP3YSd
%.FRlIIN,KF\9Hm&:uaG?i'o^N5drX(Jku2Xj!V?XmfgYcmW<gTm!_4Tm7oT3q/L$imWPLtV#8m)G4QplPAU[HFXeN`>-oAC$R7*/
%nq8^g,U!SK86ll%C'65j`:8*mSEcS]p#oL2gOZ@D6)po24ZM(3N$I;\4BLnM<@=@=i-$'rJ],rbX7!)8@a5;0C/1'1/JJYr.Vo:E
%@KR(Fj=J+<d]iTcFC05q7D)&7Z%bMb2s_]07=3)r/Kt<$BS&/d%F=LOLj3]k[tJuV8-!1OSB+"m*fu*R*W;TYX5Z6LLN.KPK((TR
%HUrO'?El;"*gsenJ2KXY_bc:#Xr`8`i=\OFK177oHcX6?#eGY>95Oip?KH8VV]f@9?Rg<i_Ni&_F[p6/^9Xo_XB(iliX*9NDjU@i
%DX[p0NSWK/7u2GXWsRWF'g-`2reg\IN8,UKJ`Yi)d2'V@d`fTr?Ch='@a[YFYUh49YTc:_aA>9cfL%_H)W[U[70H/E+/C'afnAQ,
%MGf-.?'4"&U9"ZkfFUKib(2a>YIZ";)+,&X_-PH73":u$R<ZRa89;m;Xoe[TmhPi0!>*FT7.51%$4].2RX"#X@K5ic0gZe2B?pZn
%^$j97C!5u^IOPibHOij1<NHgOUF"1ur/i712ZXDAIqR/q#rT#4Et8,)/X=,N`![KWP:h)LfKM;/n75bTX!G5C9W'VA4j7rXho@.C
%]3@O_gV@mdTZ10pQHAD?WDXKj`%S%fWK].Ci1fH0U>5nnD)1$Y6*qFW/lLCPXd<OlV@8Qh"2-f4=EGj>B[LmS(8cE'/-);8d[-_`
%ZNqJ0f@))UBbi*QC$._hCB?E>"PTf1pJqDmY/r&Kh"mD3`jD3b!]iBjAPeRV,)?^Nbt&+4JRN8b:+.jSbX:o!/4:76ql%jkd]jl/
%>"&at*Yhj)#_GR"<airDj$KffJ(,-8Q.WYp!l[g9[L^Ml=73iGHs9EWeae1NT!@ubDA('4-63I&d/2nXrjpmS2p8A4-SY''6B.1p
%(U<@;FP2rV-Ze/k3NOWoWkWT#kKV,YEn>YIr;kW\R;f2O_,^\$-L(.^Tq2q191>o4@pT:\(-nZ'nm6V6fd%gmj>;39i6Y0U;;71G
%*gs;KM+20C%P1e86t74jj;&Gu^eZ\Q/;[ho/j('>Qs,[GiP+i$e<1Rk+k)UmI<3E+_>9],E,$';^0g&P4o:LKKTpqDYQh!+Y"J"P
%4P>2Fp_DdiK:hnW`s4W15nh;lMRpi?c%_$/7N="CF:Qcm.#PVfA/L<RNQ78Fd&WBpoB9H=*+ooK3#0mk/"?OAOFE%5A4*D]<`Wa_
%@s/EK;&)D+fkB]H*%+$$FT_mU.OcdE._+b'LZ((gU,M(+nk,ig]+ZkAXpA:cW*s.RTVho:eATXoWB'h:W.B[?hON6]>hE[\^M*Ot
%.?\mg%Q*`,T1NaE'n8kcX@>D8dXn!\=<mc5fS;FOO2^`N&'iN^R3XeL7RM-qL<Po@MeeT6<_:dQo?-q)eN@HO%^Tb-O)+g`EPBe_
%`#+PcT*<bMEe4WPeh^H)\8$#+<^-O2V/OEmD2r^NP2sa4,%7u&()ISN\:5CBHn=>*U>'2/:IU]"4ljk#qdb5C:&nH,J_V`t18tGi
%g.3hlcJlsk<%")b[[Zf7?Hr`!<("!$85-mKP\0$I8Zl;C3B:`8!S>*o`mm.f)Oc;9`dTNXCo`YWZ_@<(RM:8i.1N4d0RR_(=l^%R
%ho)d6#RUjt5pUV+,>hm`;]:9;&P#K^9iV2^2BKF[A)IB%0oiji#K4'@R6:tN8X,CmR^YE(KXdG\I%$L6TRYf@PFH+:Gn?%C4GY=D
%r4L5!48n:ef#91rhXsreMg*?BR<UZ`G6F'ZOCJ(X*/NGtQmXbZ"?4KYj^9_Pmn09?h-cpo\535DU:?-fOA]Mgb671]"WH)%)hL*6
%KFW^haIttli1V,S7&M*q/9O:8_Mi%;U*3Uuh%O8Z##nI02F4eC/uVF9s"0Ti;(+L"!`jb4q80149]J-/[ZR)r`uA06$#D+A<)fN0
%/rWWt7A;j=/Bt7QV(,D?H99X*<'a7/dmYdY/?5V)'1.Z6dnE3dVPL)(C:BoE^SD"NZ"tqk1#l_>=V&<q(=#EAhP\-T3`R-fe*M:>
%Kp(pB$,Ut1j*U6Om=jZ0"l6d"gZtc?K2gWd1:_s<:p?W`/)H#C^3p](*,e"$A1QM)clXE4<gG,VL@:uWZDJ3Ai\P(uCflM,:@md?
%</ASKG[s@67rK"/+e'o:?mT>T1[9K-R"U,14u]&YbNM3MUo_Nk(1o(ZWA$um8U0o]Cu*<+R#MXj+a!'-YRk+USB)jW.Xdtt%BEls
%0eaQTasd]2jL<g\AB_Mb/8#j_UBsKE\IbI)0sqT9h.r"A$VW$GgtZ4Sl+YtYDf'k8X;9I1d>mM>+mIk>fY%T+6O6BuEOGW>/k"c$
%+a5#aE'c<%C=6r<FCFKP1[3aPHPV1QmUX\X!?uL[o566)e$=pMkF7#([i:Gqg4?AIZQXSr/eFTO_9JT5qPTmq]+$ctZ;Y._gOFce
%&S9Xkib:+*4ID3h.V=['Hr2&^FbBh3Lr9"s1Kd4EJ<uD:-H"2\%OlH?g`i>TnCF`E/"(\f5d2o,_#Wf*`UTBo?FQ?TPigiF'G@7.
%@YZ^JQa4KD>p/tr=ONT+K-$W:]V^5t9SM="/4psSfWqU_b8S,>(..`'Bp),Jhr/5)Q=e+=`tgk^WEb)BC-%as[nKn'/!j2'a2qt6
%ZF'ArA2eGsRZbj-.^l4bfY7:`a)%5S4-f_N,do9Veub*O=h3?]$2'-5ZtMBs_,ck(d)ZDL-cbg`_P.r/l,8F\c;K.rDi2OMk6&a,
%pAq8rg[juTi^4Mi+H"T.1@o)XLaMnc-%._`(H"!cK'9_[[caHk.a#cl1[!8U"umFo7[F:0?lG[?VAXGOFY=D60L%k>Mg1C<#;4>I
%l^/tG&X5FH,Dp^ZG#:jQ-:KJP(iCuI@XHCh.S3/OdnqV%$8DT"oH5(gNE@m'dKj?KU.Rmu:1IIjZbO=RV"$7*@qJ&21C?>m\^;@<
%d)($@b"pQ@bVGIET:/\C.fu,6M:Q@50hrjfS5[E="KJ?S:ME99fTih-%'@0sG/n&JT8]:m1eZ+[MRi:@O6Fa\dA4E!3+`kD%A3*a
%q])E]()jN-6u/`F6[D7unY\m744629]h>YF"oNRur(hs*9d-Y"+S79Y*F("^R6Fkp<[R7WXj3YYGL;/_8?b1l@0F1t\r=4k7\+Fl
%9uiB?)j*e$bB;>!4PJdYg?(ZcFs1El,juXF<2^t\aGt>#,Y'>EI!$Z@gW3GSP.F,sWfaK!UdqR+gHnmb=,oRJd`I'(O'=7ZLAA&7
%X(#&?1%;L>d@-J&.4nLQ]m/<[0ZSoDZH"3Q/KXOe@\'__X%L*/O&]bs0tYK8q7.F;OO\Gs6"bDi9?6d*<uO`0Ic@W(-I`$bc6^ed
%81jT"Il#ZY0_atLI/C0L7PhJBf8mKuUrl2B@8i-N`n8=JTs'V_Lu2+QdODFlK4q,Z7+.NY*e3Z($T6lTZ%cnF.oKk_QcW2j7V-T?
%D@LY^-eB,F;t,@G(4&_+,HOEYmi'Bh[DFbK;NW#9jjF`fKZY?"<dO+_#s?X<8S*sj`lbOf_=^[WQrNl`/MuK#7,^XQTiB,c[*Vp5
%?ZpC(=U>B9p9.F)0?U#hCH<c0O)FYKJ9[50["m0%n9#8c'1@[I>5(qJ"%L=k;.t=?kX[:dZ&UZj"gT-!=f^QP88>cna'/)Z(kgm=
%?1M61T4>Qu1V:E6pokasgZ:Geet'MqiE>.=R-pnrlQf)6(<dGH@d[u.T;-V(9RI6/Y*Ri`PVu]#4F&<$l<c6@=F2=c9[^F+aMBs;
%?19r#]\a%FdcbVR&dR^H'(ZPt6Q==$b"!u9R%eotGiSEea*+Ph:YArD_J"ES96)LTn25KQB\V:kp,I3jRPJdpJ^=6#/@j(UHCatJ
%:/0kto%p9Iie<gs(M#j>"S6/qCK1OZAU^qK:[K4LGEPmrn7nNdjKJ:SoGjgT.l.42Of-Ds3uMoXRd2^*7?W*ZJh7&2LQK)GM%ksF
%C?Bn18s50h<GV%ZErnCj#0=nQ+=G4&)Z'*W*h]21DIQ#q\)^iT"NG8ZS,&Ea1,!WHJ<Itd6\h?j^a-dJ@Q`3u`*t;D&h?G>(eT>&
%YpG\M@nO3/r#,=q6?\eZkGIeHCFWsg/1CA4kIEYi"L&Y/TI*[1i<!$#<+ElaeVK'dOVf^2$:1W,9[$QN;^]t8`rST1P?3/%1#Uoq
%kV(,G`09tk_u8,-?BacCpL,L7SDs<gEBHIWdBOAp*?JW8mKoYZMNB1Yk%KM-r-J>n\A-`-YhTDJ3l-CeX:%&j]/i!j9GU(-#]?[,
%7Kd:(r1p,8#$Nq0NqhssSkRQG7t=0$r$9T+*IAk=q=HD+5$`.mgj+W:a4/r`qE3c`!s2bYSo!PJ.!.@kQ6?6Z/Rq4'INA`!3[<*:
%3o)%14\C,8Yj+qJXS[no&,X]W%"!;CrKutR3%/@m>23AB1!4BT2$R,5*MUr7pc?/.;ho2@HAlap#\=Xh/=e*>"P;MmMMsQV[O'+7
%X[rRSonhqX&"S\W]c6:#kX;^7AS(RBS,)>+Ed0jX6BgVhp'OOGB\+`1FXdXL`jON,XX`IMDlqZ6eKuf5S3:ljDQ`"kkF18;1*bt3
%ObQSsU.^P>2(fhEH;-2M@Bca%I,fW]>6f.N(F1C2LMRrY!u)1R.L.FAAJC,TpLgN%h7e/)M>H>UgL$;6^]2bCo@*!qc#Wbpo_\=F
%n&tCS$75&.5)+fV6/iqI?.<]Y[B;@Mc@?,N+?%aAB`hj2Y7t-dk`l>uYMiOtKqCgJoA`i:1iDBT)u82W^9Wm)CZMN78PL4Hni50V
%CA-#SW^go.ok<`=e7RN^=oY^40Aim,7rP2:Ui828Pep`6MtfLt&*dg/P(Q/p67U/tb+B$Ohh#X(jSYAYAjZ';'6;JqMb/LQlG*n;
%O@(0X_C$)iWPR#uF#s1MYh(uk^3uFdS_DUTDY.PrFc*iG3FQ![i:KrDHQ.>!_gf;DU9U,i>l\cXm+M](H8X8r5i!2]ag/bdPtBuL
%8reae.3>OOlHcATo\nBsK_i':HntODUjhAQ"!;52O%CEba\s?'O<U<$)%m%>&:\'n%(SN4l%JtY*D&mMrd`M6cs(C!9SXV:B?`b(
%/`5]YGYQZ=0g./'>0qOTq<-5XG@D1j^10Itr.o<<`T5LD`bG30Q+rg7BdWnUhdfACB(RqF&cp4+PLK;%#??YOocTT@+:J1a7t9#u
%bQ6u2hnmd$Ei`aknptBrDgZ@AO<bq=[LG@.$(pMbcNX*6=DMC.S/aZC%A.Eek5o@5BAN#9.PStTd[eiAAlhTG1Nhbam*)1@o1VS=
%eV(!!i'r4\E5c5P(rUgW3fZ!9agiRaN\QM]9h+c\<ld-+=C>]7<pU`!enBSNLk3EM195?!jTea/5$t4h+VV%/Maio4\$0\tGC2XN
%pXlG$@#^%Z5UfiI:6^Oc-2mpQ);:0;!B3mMJ;?6R'p[48k[u"G;4!79Y^.?AY*cM!@"ImudN)&?Cf[nL=tG`a9&m9@?Ao>GXU$L8
%"QmfjmLc(VKjBeN+:YrM#IBs[fm.XENm2@_$R)C.P5hCVI>`X%CF@qs#F21eq=[,9GW&Q:$;Z^3T6@*fe0.Z+"6\u$ciOkuqV[^-
%EmmPj9KUL.=0g(-*!S-s1ISfH.#]>!Ak`P0`6TTQc7PKN\QO\fi=[s</78e5oBg!<?P='GLT"'P'AI!m[O:QbS^F1;IXn$SC^m4R
%,IS8.V9u#$d86#pMoJ`XIT>JaUFqB@SV5MRH"(fbXYGu3@?i\nr'I4.6pB.hX(=q5f-IK!OgM9?FlbBY&'/F>A9<P,`>&Pe-4Qt!
%X>[2S;R.0V>8)HS9Q+&CPMdYVZ(8N?0YY.L_K2<=PGpWEK6Nrq'=kq_T_#NbLe2GP&+b*<d^I,jD>i'S>SZ#F`VcTU5q"rF2L)tt
%6=b)E6Mqb4,lo]jVn)<"\Nl@Q<o[ml9Ej4)FMQ?jSS#]P2]'qPHF7cnI\c0s7;DA$1EX4A=4u/-S2#H+cmdBHHusNn0&(9;=Z8en
%_n&Pkeg?`A4>'MZcei3qQp73a8g[(ms-I$%5+O>gE&G1f*4^s(+i0EMl)j*4(5t!.27[$BH<<r-Zn5Oj5B4/\;Wi^B'pq(I`#BWW
%%2<6Dd2"teJs65VTdQ)O&(C2[3kXTUA,J5`r%1LC5_6Fd9[q=%g5sI!>FMV)@=';c&ndr+,e5>u!!<sW9+5TF=;/T@(tQWbCZ5Q]
%)/7'"(uMH5ZZl_UnVttmCl^;^K16U1WhqBT?j6_kjQdj0LsWFqH,%\7+0;bL>?#bo:L.Oab!)cjK??BVm"<GEW9f/Z5,dh#b!(X@
%K6fGWM.'*eCLU?pqgZtLP)`H.(6g.X6C<jl:7bOOmWc0khX<W98PXsKkktstFMQQt"Fh4o>)2pN'9E?@'@T:V1&RmN/NqFC7!brA
%h0K:R,$>f<dZ4+@bB_fQ6/g9QlT/ErN^F<O/M#rV[6eS^]9>?n>:F!OK_302NQ;D2+gj[26L<;.ARPtgOW$f\<73>hc;"%M*g<js
%338D#'6\S^`aaZbS>HlS0c&f(F0*e-Ce%lXKY'a`a5g\VAGXXDr6OA=8n-=5Og\focXo!\O_I-Os"'"ccf#DhbU8RADBtD88Q^k3
%I&3B%-Dq8/iuem0,ViRQ6q/Du+_aPD-R?M5am:gW'qNhuY)/-jn(N*24N',$_LA&1(l+t/k5[B.NX-UHmGRa.eoT%n,98Hg@hS)]
%9iaS%L"!^Vk4s>=eIYK'W0.m8QSi44I"u[P6^Fr(9e^++Jt]\0!l(+XPWYEc6W:R6T6t:cKm/bF_+n)OgGm84*n%SGJ4-.XJT:lc
%&RL3*7#%X"0q"PZ25+";'qKDG,QR"pc5fjL9ju.'TeL1QGGHW51`345N"RU5>('L+F%N0dBp:JP"&>Q6B@Km;f/UrpInI4HSkLr]
%WKV+dZ'[T*e)e)HAZrsqcYoJt[r_"t]h.IICeX41&fLKZ7e6cNR\"TD]!rE0ZAkd9$FI@fFF)KKmdtS4r?8FEFBLD@gXR=mL]bo6
%+d)PJCu-;Th2k2*5&%rfNVh*uTLOspapHj7=)=McHUDsf3jgt2\bD-;Q,Oq%nJ6rb[#qF&Rd:Y%=XIl?\YEjYZQ(#.%r5WV'>p7U
%ejQ]!Ol>*ajN&pmWbChf#*s1#]OonYD2YYJS*aXVaXq^\?l/QRo-<2;D;FTdL@Q,*4D^RuEGe";j+_Cq3Cc"e:4)<6j2GKurI"Jj
%$HDOTnAVcuH2<`-W3OR_8*WiknYQ&GUQ[?P+a56a:Xbhqo5@iZI@jns5+Ooi];IHu\e*X`"MkqZkee0a*1Y,W<S8l<0N$1"YnLkg
%69JK]ClImp0bS<2-2t#;U>JQu;##*UI'f@f'd\obRh72<U>A_FQJA1&in[5K/;g0G/PMk#>bj/IHudG$k#*g@9_&ia2GFqp(o%,B
%he?>g%EVlQ4%JEIQak2."G&JIBf69LH[O?hj4J0qhIPN5d&8m3be4XN^WJc:CN/pG%Y:Tu;&a!q?)T9bqr1sik"$f*e74uX#\j40
%7NO]El`+d#+gMI(nCL17+fDasi/<Y(6V]5S5\(qPL7DG/.BC^GD9/\6+P6a5d6^4Ei&kOrR3jY,1!VA('ME7N(1#RM0:^@$0TWOO
%@@5(PDFPM0iF'?.,K_^Y)+rWX4OS1)ehBbIT-im]Lc321*pn(J2^Ia.V<h!@p5AS^<Z.Gmm-UBigAWXCJ$>A\\uJ>B2;tRQ[<_1c
%IV*m3jG"RI3.jARM<p1Yg_(D`:ZEWFaP<tXIZ]aO`^Z+e4,]0d)]cI84qbeiH2O(aCRSKb@@OPKnsl-N$k$Ws`cL(5C4MgOi1hRM
%89<%QP1olK0Bj41.PZHM(BoUN'SEB-9aPHB!X-k^3.kOCD93:Y^j7%O4mHq'UF*cd.Q_O!=VVrKkW7h0"N3f&%W&NeCuqKI:-(<I
%kt?lgeHYM;;RK"iZN-.+O"LbN^8W(ZIOrW;<..m=REksAm5TI>$L"F2qV\JpZtTRr3c;d]G`5=BLfA/kg:7^1-kUaqJB(B\d)\N;
%.DV'RC#R.-Qo]*PTm5PO"GU1#@uI(O*dccG>X8mY%`"?pjCV_5pX%5T)udAS[A#H@lPAEY$ZZti<uub^^LGb%YJn_l"7620BFAWi
%&R[sa_M5"ES%p2<!/K\j=8i2H8')E_JdpD+Pg;C@6ZWbX9%7c[^6;RnnAEpXYlr)5-GcM0dHnD?6AM#eRZW'JYoQm0U\9`Y%GTaS
%hT*s?I0<iO=4[=n+2]'^_T;jn0;4/^E3_a_7tMf>UQ:lq\p!R&atd`]8J"it'qC'8C.%pEZeL'fp#6A=Freft0kt4l?'VqW7qD+g
%1o3'1VQ00U+T@_YnjcmR$V@/pK<*.T4:I9JgI#+hg!.[_NH>99O9YM;hh!WIj/3BFV3d7SQ^:Wffk?p65/7TUq?b3)os($Mh6a@3
%IICsq1RL-*7#/][bSj-22G2()?/W([H$/]^>AQ#eGZ1FF9cgF^/QUe1C;-j3+1`%Yk<:_>M-=_AH!gW_9ZUWT",Jj@-(X3S;[AM0
%PAFEKqjkfufm98T]CD9=]'Ud-4I%pJPL+<=]s<9%qF,/\NNNpTNcQG(,7P6B5sihlS^dKqBGm50+i,2m7`(90I[M:?WJ'ncS`K+q
%qK^dT/Hj8OEB!9ngN&`_/6?q*22cY!/@Sd'YiTq[q93He[`cIK/?bJ)=$@0<j>E/$/Zi#GjLM-FRq=S]!_t,DcT/=77t.dBdTl\@
%eWD^4KCUCj:XZT";0FB'RE,XlPKd#I#2r)*#`Kt:#?Qbqe(]3%lH9t#e8cHZ\c2V#YfHUl*n2o9!$4>5fd),^7>q"!aj([\+nHo(
%a-M4dO=YKpb-RCHA;f%7G.tEW^:`m8[$A2(4,7%/c&GfQKZ&M1&i#DBn1GtEiW7$2h^IUiD151@`Au2o/6G!/L""d5]bN>,0#^kZ
%==<9BVs[0'=a/SuF_[].aFHbr6BZ:GF5UnI_,E;T^e9]L,m?H>9Q*-`p3:?g]Z_iW%`=csO^2eUV#;IB*QQ6anI0)?2G_B@(`^f%
%1i'EOGAV^"(2NS4_U2+oobLbSBDt)^q3rqcZOSMY/_U#o`h*#'DR<.dp1[W%>P%T+[7sH6's1?@^PFMY[4+1!&@NL?F$X)CZYrDi
%liif/q:r?^opT?\BSnD5n\Zj1+sl+p,<oF"Xu[liW\#A)3GaHj[R1PZ+c#HH_fegsf^;P4eq[e./KQ3nmDHK/mGs/5D8%%#ikQ96
%XuLC>JLg.;=54<]ZqoKQ+^EE;E^b2I2e>P$2C)fP'!_rQfnP/r6UJ4)+kr*?D+MbAjBRp:nuZ=p$u9<S'7728mN)4s/)>FJk&)0L
%h4a$)7tWip4pZ^gh&GS1$ejcPH^iBr14/Hl@4;Vn"memUHsOP%e<"O*2WV(]b2rf>2kb%7X\5=',ZmZHYYCd,BlNShODPV:Mp_Im
%Tj)oW]*!BR+DTL9WYC(>gJF_);!HW%+)a01G8$q)1?\'.RaVA+ZUpoaAW7l1U=P?t,d<@qMJ#SWO$KdP_=7qnWJ[S@,$>GXBK$X,
%l(h_3]d[&u>`?g,2d!\bPQbC`b"[dQ:p@mkQ_``q!nK!!8T?92gIsDs2X"I+>qDB1-$Q2-Z-6O"qNiP.n.[EL92SR_L2)p47H^8?
%8:MJJoRZfH5R=tj"M9eXh+#OFLfqZ%-Fj0Ri%?qog+Bi9RP$6nMtlB:Y_s35P/K!43:2[7h^"SYKX3`Uhih!nE<W)J8MCT)5RKP&
%9&3GU;l-blnRh=H>m05V/kUEH)ZC9\q4Gh@+'+_!(?H91;'i$"<YEGO(BUYfPZ4Y.k@@$OeQ,R:e<FF"A$)XL;7\QHl!pN,,\_)4
%S-4F5jNQ3uG1-W$3,^f'P)2ENP2;!@4kNL3&WG9tDsd5k?5N1^bf"Fl>'s$g%(/4>2lT.rKuc45(3SsJAZVI$3M[_eDNmS/V*nr'
%LW:A)!L''UZ>bm7<ZEY(18A9lN[]7:)=e[NmT9mZbjcP6J-0pFO9S)2)]Z:@'*Db*FJtG/M,B5hQlT<TG2d`iVJss=A/7b8#eK>l
%,R!\3+ib5pKR*[u+BN-,]0cr]4GOSqLtTIsnTWH4)bme%InC-Y">G]#V+%[p"N6BWJopk<"V@"cWfs=g!L<fGCm*l%+m?,DRgn>Z
%(52D0l]\[@7XKUV16OM%dY,q&?R$eK]N<0ena_.L1s.>gH-O9+Zlo(3B(YXs]op$7ig$U.ls;U2q!r^EI'0Z-P0Zh]ooXV.4jp`%
%W(+P;I:ai?nn.!g;/N]qU67KJ-q5$S<=N0b8NPXqlm]@'!Fm:`Oir[,1;1MZi@cN2'Nto&Ellgt,_,"JDC,s.o?MQ^pJBmDr-It[
%^Y<MmIp4Lh2Fd%7W]E@V`[Na,&YS'"7^?52!`2qg#FNTD&d!0E9`o"Lj-F/g.)mpZa;g7NRKWXs/XMAUUju[gGb%I:SBiV&32_RT
%8omZ$.%Zf9MNL]=1^*gmnkFhjSgKO#:E"&4IEEe0@_<3rUbpT"_n%It@4XHY95X<!)oL/p11cS#$*$S+0%IOjo\'ksdgSt<=I=8"
%b\#.t4?B>S,6Kf8Yqg0^,/gIA^>5&EG+64:3oVBOVqYhIPK;hSg,(e#-N;IALMT&1lt1e?_u],TJD'4@I'b<1VqNl.eZ7%/%;S=k
%^IYnfH&p=L&Smg[94^Nt)O?SRZb0Q<^RTa=?;ZY8*D<(0-d.l[J!gEu>=mVSO]Rf9&6jJB,DkZ5i$"\Q^q1bMFMmp[@67R:g2q3s
%BJM_1C:^8eH;d\Thc:.uLG`M'+Y[sNBe/3dcmBcI:I]!&\B^)XK5'biLkLJ-JiVSAn_@l,m5D^k2MNe!"WB7snP8oX[[LY-()CYt
%4el@C*d11G5<9%JKo57gb>U8./[T(f.#JQeJQOarSHd"8$mSFZetgtVl>c3m8Q51BYU7Ai_CATOj`EL?VW8]^ZDfAmOfJh&(=c>$
%V&\?'.3Ta6jP77sI?6AOiKZup^Tsdi@;r8:)1oX>^]J7hY\>fG&4KS[bY^\a<-kX*dqOX#")<s/76jKb[\ErteqRP#VCj9>?k'fO
%Ym0Dq?&61m;Ic@4ktF79QB,L#Js'2B?`_#U4Bl0`Xkt*=V&$'&PNU9+ISZT$r7SR&X/je4qQHYi^KY#OXk(8ddlDLFH?G6KX*2n3
%N[p2W7nSb6>No!j_%Kc@a>II0$l0e3brnnOLED$+p\u1=rst@n3\mJ67fW/=`TZqSQN-_#Ibq*u>uE"LO'Z3slZmcLs7VA2)Q@Q/
%<Q2R3<RJEUC[UmTP)?.<(4uu^;/0Lo7ECV4_#n.J6/faG0;X:1?Ju(j"q:X`kf4uM@]FEH_T&eG(g.T_]54-WN>fWg"t0X>>$G8#
%XhmuR<jqPa0=pGE_Un$"V1J:KNQIch2=A@3Ip,n:TB<ofU8uT71g>r:g^A8Oe#EU1H0OnipN:##Yebn0lb!Pk3]E\na!Z3P29p?P
%fGFC^A]*9*1Hqp(54g\^!%BVqp@Y<*Z-m3E&V&Uoo@^IU:<9cI13qI<CFNI2[-DFrY7OpUP1M%a,:iC:`.._S=.Ph%7WjqBT<m;(
%[%F\+$10e6e,56Op6r&&c4k]hh<D0GFX1ll]?\[!AUDZdmIiF)T9a>pG+G*ubN@&6D>X,'6N=E/MV<2jY"2ni[N`&OO;41Kabm`Z
%28'd.$p'q+\]L-paXC>DPf-ug%^`/W2SibG6OY^PO^0<>rL;Q6aDPqcmG$1;>^ms0IDbb+7/kIUIno/iRma2>lf_-g\$M+oCp?2Z
%hp*!9ZK\u%[.\0/.c.1?iu)!TMAFb,8\Mb0<43P\9[$enq-(j_EI[!(Y4FiYU-J29aXZpWXJ.rLmNdKLKaBuSrJC8l@A:N0jR4Yj
%kB,Re\VL'gUe]%B;<-B!ZMVr7/Eq>$S(6J!^40>LSK3&ZHC_0d5DIj3lH]IbFl%o0G.-&tXn0hu[@aBFc?e3,F7l,P[T-=T`XgCf
%/Y99M#th+oO3d9qL"?1To^_jrgJCrOO\tWSb"(a'kJ[_oXJ6keIK&RO?_f/`WaMhNBUGl.*]`O)kXe>b#2YX9mR?]LP]s:j*Sh%h
%;PV?\I+C6#^a#U^&KYDW!QL+gasaD3hH098?hg<CY5"a<#W)<Am8(q#h,:tVe4cL#n[gK%5KK504QRf:ce25#J,&RV?Q>]/6WMI)
%r?])tr>"2fpsk;+02>U@H@C$XF`t#r?N,,k8"Yi+rR\[Q210WO%D4h#l2#/fiNpqH_i9l'b@URBPIG2fVjFGAh4[>gq/Ulu5K*T)
%IXAi(%mN5*`@%:;rpg[O?,+L"qIOr$/U.//b:U4Pkmi)#[qC1PnQV&Lr3j44.+>(-Dc^RihHom=M8+&F]CY@Al.+N0]oi28eX=OG
%Y9lKI=hR"+T"Ma?rI)5j>((O:p%%/qP)Ju`FaHX):4)UGDu03WrRa%io((f:nmjU<J,a]F@kcJ^#%P?Yq>TXVqXX>t>cp7qTD.#s
%rl/5da5#O<%p,\#eLtQ.Cep*5jgXthZeHD%DJK*O/UtJ1@X7q2_qB&nh*,UGgM`[:I@["Z52>IGL[;';+8Ud*V`U+fqJH,CVd:1C
%?[l0`h67h>8AfV]f>"#n*TSh;7tD*!Lm*bgMp&m7qY'8jeV>jYG/!@PS0HF1_q'*02a4l]SU>LlD1*EKn#q$gZ0TTbbELK"P@_Lo
%QJK82rM&N'0pp5OoB#)n?gfZ!X*('!gAK+=3nV2sZ]"L3X6#oK(Vb!`$HEbT[LV286/dq2DnA!WrOVNGO)Fm0EuF#mMmN*,Mgfi8
%J,ac<GUZkiKua]..J2EC/tdR5#PnE'KL+,`_gAb5aHOnS]O+qsY:b.R$'JM:9TNd%n(qE!fWHgm2[/Cga8F_*g]+q(?/L:BrOf8)
%=Wc."bEG/WIJQe.pH37J6tLd##=*JDJ/^7fs5J(prpAC\'B"`1B33tCcaG<$LWC0rQY0B<hlX'Xbg2oM3?Fn-Hl#HE>rLRm-hOIi
%jdR!Fj?ZC"r@,h:S<&`bMI!Z@&3RE\i%O]Pld=nApDikt">E&9!V')N/]:GgmMlet#E;cFNU>DYR./T)XA5pq(Y@tOB]J_ogXb5S
%G<`1TY!2LA>]t<eI^O)Nn`ouAVsEs)qP8mFQG7S.Y_:/CetFIeaD=e0PJ4-%hgKQd[JXUdB?d;4mu3*_M]VlNT9^R"a-Wk,G7BJ:
%%ng]o^T5Y^04%tU?(GdVp)1jNn,*+N][t)5GOJWnrr+gMZ/=8-58#[fUAjZ]%'GOTPoE]56'^3jmMqZFf)qa0W,b["Q$[qi"NgZ@
%l\i([K/2'3R9_=a4gs>N.W[ah7>!3Ok]2;.2s>:a:(4_hTZ`In3a]R+YL]nc!O;Vl&]Hnf!&HfFpL,lW`dspK:4H$bcBis2f+*qE
%I<BQ*rp@]#`L@q.fg+0W8D!2nf6RkA5h?4O2UJjaTPKJ/Mpo#_jWLi<,27R1[M:@CJ[,`Lm2hL/&D@>^D4k\IAU>nkm>L*!5KhK'
%3-i-Ir6NpHakP_C^\-m_Ys$$\8Ekk6EPnAoe32oJ4k4$JL-7E\WGKg!W@*5_ldpuAa7`M/$es:64,8IUqqK*cn*cPa<gVEB;^;eP
%^F'6THYP$Hcg7(s^35:=fhYdfgG^T9Us0t/Aj:SsPp\hO@oeu?eS3@ZMaJQT5;#"Ur8Q^8P(<RS^-)5eo+;dE]O.8#?2aKK@bcn5
%*(4+PlK/c4;a("tB\V_f(Z%IGUAGM4!s$+1h(SZN9L$0qSmM=UHQp*%O5d**I)8'Z"rr<]qfh)mm.K]15#I\o:BPq;jBslpO)RPP
%oGnF/f_EIhHIqb9SbuHY*Z]'H@?5&^(KfR9?*_(deZ1pm\=,cAGcS-j^ast"H[";hCD6-keMP`%lB0J0n%"&;Ock*7%e"^ILm*10
%/3_>)Lk+sn*0`I)P_2.(jbZNLrq*.eF`,9!QP>0!i.`K73r4'i8&.8ZTkKOE#+=]KL(%_4D%hqQHo>5Jl"H1O#%RC8m$@A>3S/'(
%c\Un.^=p;n&_CY:[KUqhI44j%&,UfF>^rs!rc?&VL=I<iL`;`AhD(=EB9'k1WWR=tOd`]P%.`Eu)7\j8)0k1?j,Jh-6,"Fs[/VK.
%jhqYlW#kMWI+21:jGJ26LH=5<!5@X?s47,DLWKJlpm;T[Ul+-\6..!4P:C`37IQO=?&uW&#=68XW0"(G<@GDk\+HuP9(Y%`!hJ4q
%VY(+?qnilAVZVtHUYr2VDVAn'9dZHtFS%tRa+bQOqn7iHH:W@/T-WI\.:gQqGZL]4FQ],:ai$C3qtj(5!Vf:T+Kk,1%RS?#:=/`2
%lY+TF@CM<ii,4J?T_;-A0Z&Iq4DNY!=D&2DGIN^+)@--/p$2,CluImTO+!MVX6!-*B(mFLPBt`rImG+S7pkjtG5%#ramo'#jL^$i
%,>W$9NSUNM4nWC[`N[R0^!,!T-YChuJjW)J_3!jK0:1u8YPT<:Y_R#nc2e/sDtUW0S9>HQ-Vr12'0HNKa'eb*p(QM(Edg2c3;;6Z
%"2scj5V,,t$_Gp08C])s0@5,3#0Au]@uu"Zic'oDl?+r6i>dLBpOALS]KKUr072ZQpHFGXE"5d<76L"ur&Cd1M4Y,?U/)m)I1ndj
%UtY(dq6Eeb^I(uImW_M!5fRu\nb8T!ot^q#47RVhTULFVm4Ikn"]!ltK^D^R"T?gpaCbI/<q!Ep",qC/3rWgIAFK9h;`Hks8Kems
%i"chU::fYaQOIl^6_*ehRA+Q?`6u3\S$7CORJM8mli"k44:Tlp@p/1`lg3#UK41=7*koJDgZ<ap3e+\$?_-i<ml/"eX8Zs'kb\jF
%]D$78.m)lOo<Strc^-#[GH:De=3L=Ca`<tPC6"[1A$kc(AM7ujnA/YukXFA&Sk&IXWU2p2lHtGU1Z]U&:6AijC[ZI;%paP^G=R]h
%*/k$PkFetB+D>iRG2)?+e`ulMG15&U>LBu5`6S2Hk'21NlghN%&jX0EYEkM<="W=?X"O(tJl`b:`4V!K$@+e3jJUOt?:8)egLD`(
%qXWWOT:J<Xm;,quR$,o^iST%7Y.AV%[U(P4SD&:p4?rZ,U(?HM\TLuE>$n@X&EMrpan<:3)^#B"Vp_&YeZI"0WSTdaG'\IXFnSJ3
%IYD!MeZ0`H6eXEtn?8f)\+_PjJ#AaSEddYaf4t3WO4Ah0OIG1-*fqdsTqIr="XH^4:)o_u@R-[SPC9mk2VIu@rY1GBI6)@-`gEZk
%ZG.5spAb#?7G/^Ykoj4O#Ss6Q_;9Ymb0sai:B?C%V\9<Q49mF[J48-)QLhJg.-aTY7Hm7tpRXl<"Y<9<:)o]WkKpI^]b]2UmuF;r
%7Hr9XK9>*c"H.:+?CF7"eF_I6GG#kdSBJf6U:;!JDjZC!bIDOO'Ceq(Z-*nFW>()N040-Sp93$BL\GG^o2e`(2d@)mWe[=ke+d3%
%>rB0:=1oMMcLi$MbLO4_Xmi:je%9Zpmo.*@p?Ba$!(k^3IBJKjWo3nd"M^SHC\[ceI*gp/N.WkZSZP[hYKteSo7Ua<lMYIC2=EDJ
%ah>=Og5#EY"s1"a!u?,_]t-q(q@`p]pJ!Jj>5;r`g2::[,ZU[J2\*j=lNZ\C!RQ@pFSJ[.3jA)6m)5N)o?Hs:I=@"E?oW1?+/qL9
%)rJti2ZD#ah"NtuHTuH7B@[<q6d<55+1>TWZ9FNM4V-;/"BchjmeUlmaa!9"in^!D61MsU'_SjQoBt_ne_>;KX$2^!T:/=mU*JZX
%Mfs%>%h@OrDu`+VJAK&&SFpi?!-aIIhuFf<^k2_kW$T$*Fn'`QauMG0GOP/E&jQn$hneRS#A?8Qds#.M6%dX1MbH&hI0Z\=;g4@q
%T"TT$r?Mj`n(j1[+TX_WSC6ZT`>US[Fe;EGHt-6kqe^J)Iduak>s(>uoC`N/3'+n.h]=psIpnD9O&suWSk4%0]6C.(p>ATqQ`i\-
%n(XuBp7?YGhq5bQ+WDtCIhZ16,.Y.M!IXn/Ej])#%cZ"'o<\,SfpdoGIlY,#?X8)/\N9]eic;TdlBE2\B7oGb0V&ZMZXa75&/>HI
%g!59t<VQ!;/:Tm2GC?kN5A2r,rm"fO456MlX)iO;do)Cb]43YAr/A#$(V$_n$;R"qgA4-Zpd$P0-Xnk-n:#K]m-F4VJa,PTI*/mR
%5<s)Chi>g1?2X"O89;JGA=HrZ=U0<C(>mh-QiT.\1)O=%_okR6dU7=alH)d104JO%_i%W*aSmq3?3\<j@!EOt08&4p0YABYiT9tA
%]>Pk$(Bst>fJ4PL+YQ:C3G8fK;i@WgP::3"N"+Gep+_YPD_hO_Ha\bpR2Yc^gI.ZZ(pZm&&c2)!\Dj(N8aSNF4?pISG'UOH/:E=J
%EQBo?ccgB"`O$`2ECe'U+3a88C=_5taSlV0@!L^nK'?(P*"UHSIYS(gUgG%g0C<MB:;2,Ko&MB%\lq=Tds$O'7D0H!5?D+h_+4_m
%;P4I"m5s)c4\hk;rN-U;l*oKNYs*U"EH!Vf[,9Ven#=pXldm4Z=1B2%=/S2QntDUDr=/Gic_q$&B6KoE3j<NYo+@MuLGLB3Nck[h
%g6&C!\UB2*iR^/%fDRbX7r[1Ugn`)e7jm/rqOtF9NB?Hdl-l21cVAh\*9Fn?FXFM,4G>W?K-b$3A/r$(_[_uk]bZ1b-Xb'[dtbc&
%Z+%=4@*(AB:-2Q5p6CRIQAiYCE?LPUeBtEaHM_Ze9q`O`ZmV`E]tRaC>V4::^,YG23p5tf3\[9(STO,WOYK#2l,6N)On@nV_5PP*
%1>&\3hgGU]l'G_U,gr0+eZ!$5,Os,Vb7CZ6bLQX)?EI$".%IF:GLa1q`QP<gX$3WO"5W_Mfm0cHbO.PjZ9P-(\rG;-38Mrka2&Wp
%(O^Pu`L^"pf9[<BqCFA4D-&lG3[p8Ilp4#4THS[/a66MF1$MK$4Qp:CI_NS2r9=%t`qkeAJkma!8hYm@hmMkq8]XEWYtrMAg'=%P
%kE)l2?.aA:=7NWt?bO$l3.S2^X=euc]DQAcI_C4%C0QAh+W3*AQU6a!]"1Ti4#D]oG3B5MZ?ou"%a^5A%#4+5_N6ooF+4O6Xrkb)
%oXR8[)t^[,T,[F55G:9m6f&aR\Yl+H4[FnV'@Z/kjGPu_NNPdT#)-qkkQZ`Y;!8+;D?gO)-^-2`nS5<m%>l0k<ESnYl\kGF:^`hk
%F<osH4SLK,jS?-chtq``_jA-Oqs!)[L!Ar8^]2b#o+jd>&&5<n:>W/)UX@KQ*uC9YiWkem:d$I$PNU8Ld>u%+Is+QdT\r!4rset*
%7Km'^reBn@2n\u/./S._MU>M#s8)1nF:&c\ptbOS8$8h\EA_crWCQF@I:L::C;WL8^8B4,4YB?>dh4U.nMg5k?&`0$n!e<L'kMMG
%oNn*qDn$"Pr-PT?ZJu96k3n(\[qbO]Q.-rFThR2GpT`8R:@=H2'Agr:irCr1J&6csC\eg5f;Cj7E?Uj4hHV[/cW7:$lt?+`fU+u?
%#%"=7e_4aUI/\U&'<U60Y3,IKrXD!:<SYN%m&J3eVD.qOnYt"%o4S)X1HK]=WXB3\-ro:7a6eEf<>pUg(g$JKl5eK1X%bVNEL@8J
%.2,mqEDb<s(ZG8>&#N2rV'TP(bLU'eIP<:R.'(fRl!QEO_/0%4.)uc\bhq<fG)a3]/1T7T<3G'B==<jd0<2=cW(O/M)!>k0Puf_)
%rd3Tqnd]$L7kiN9gFuCn5)b\TYN0jF!gg:=\@cZ*N3Ec#<[t/g^\-KKpL.=f]l,)p`/TiVS@/4lJl^U?rUBa<&%p,94FR4QN^!DX
%o](F1_-@8&c3T7EIJ#]T>?d0SZ>0:SC4'ZWEpe&*<-31;[asrL=o,^.A)5X`Wh_=D[_.C,Whtp#0(C7#dck<.<p-h3(,r\+0uNsT
%C"MQA_P/tl_d<+Q<FJVY"mD\d[`U\d)O;8iO=n-'5/U+]$E]F51dj;qCGlL>&_r+*d"0W)S&3%k%?^g#)TWoBId,!io]*RY/\"q&
%,^EDa\*?9thE]PRq`JY?LM,!V@pM[P$</Wj<61SKJ^m)HJ93='A:[nA+PJiE+IO1ZY6(RtgG1GS?[f8.)K\RB@"EPPR>>>-BHZK,
%B&O"g<Rk&.gEd>"X^H$(:Q9u!<?g,j!t\c=KeIO:9ZgCGVeJZ<Ehl1Q"I[u(<Jcd1n*&%M)[@l5L+W3Vc-nft4RN)T*5XK2DE;F&
%]E45b.MmCqH1gD6lp"lT9q#3p3h7DQp:H6`Qkfe<SpknUQ`i'F^0@.5>b8gfd-!?JrEm9C/^M18_?9dkpPqG.9tpNlB(YuP(ROUc
%1O0Z?Mj)VJT2r-B?T,*\eM"+T4(#[YchFp-J%Q\^&E8;hG?cihXik2h8?*k"/R^'!pJ`S9Npf]#UU8qMrTe=,!Q+?uio1r(s.ua0
%4o<jrr7fc`lda)l$^lKKY#"/tpX&^X[aq9FV8[pV;suVV!1m&:Mogr2f?MM11HnSUk5U@_ZdZ[mr"rKZT-ni4#@d.WX%QV8hg86!
%f#BAobFd']5DP-FgO7=ocPP2GVkV.Xnk*ga+&@X+]LnbH6db[3Mc.:1k5E9lUX@]:PIDbRLS)24og):OUVq9Ifa-50=doc;`+#gK
%_SEXCm4),iH=QC^BT,tCD'/R4/:sfi)<NQ:/uh3J+%5h?'A6)0Z<NNWH]d.?,dQ$M7!A1c,.kBcA?Spo]rcF=aBhklB3W8oZcJ0$
%DQ.@^@D1$*S1<>qTcG1Y)VB&F3O]=CHL/ecg^r0kLu5es.^VR@9M9'fs/`ZUIabVCMI3dn>1l8VG>)qFhk;s@J!%IS<o1IVp[CRP
%2aP<i5UU\$oZMY*UM<dcGp,E=(4"ff$J%Kt@d-UPVPmYQ`-s/9Q";^"Ea4]eosdE#mmoNb!H!^H(fmpo`jTkE9dkGVTS64=L2p4^
%mGBLGQQ4No244fi/0+))4a;;)#P1J%"]4tX6N3b%ptZ%d#Jto@l?M$g]u,=l%C5q<AU@O*lTqm"7/K9W+%5u.'^\P?T[rn<eV-;r
%s2^p_?1:r#?OsoTK(Q0+hqKK8rjkZ/E,l:;e<]/n&bk,6WVk?Bm/'BJ"j6Pk.;dmC(Bu22U8a5V4.]B6YNo%@E`)HEWVM>Yl3`=g
%Dge'SAQ;SMRjmG<XtUmRXe?c^(o'PoVGYj@q7XgiVg!A<%qenXU?:q<&FY/V)?m57&PVsYN;=[Ys3X`Y)Pm:X9DOpTPIFVGQp6E&
%K:"lZq$/>1%i5(/bjT8^kIhofpiUi],(1Obp>,1Y$beJ`ECg@o(4;f)\HP3GfKJ<nm;qLYk?TER=jO)'55AYFY-"^BqBATNJ\CWB
%]YbD\GCAI@Z.=i_1l/Yk:(d5HI5P-4#8).kE<d)"&9.pepF2$14IJsflB:nLT3SWZ\)07f7:91R=V4>g_7A]OTVrfhhR-;8XX^=;
%?FK2+N&Im[C?.NM6Q8\!37:>CcV86N;/-oM`lM5dUP@o2+o!"q;7YM+IBNj<kdMR[%nHL<O.5ik*0$V*#lGp.]+ooMeJ+&O6/N[H
%_14[>pBMkts53.cIl_4;INF1>+]*7lkQcZfLB@Dc-oqKgp3;n89;&5Kaj1#W6/8Q3c7I7]?QLWLqXX"tq:7f./?DN&XpI^l7Yu$$
%C*pCG,i6t.[4<3M].lpB@l77(@l6?^>T3oqV5VPtb;aJ8IIOW4K5(7b.<c^Xg-,"R+J00!U4[uf#jB=P?S3tW\mQf`(.</8YhD(l
%ZEA@OK6B2^$MY"?JJnb=d1a=W9ldl!'\b3sI8EWI)gH2a?s9Uml%4-sbE'`#d?IWWKr(n>L22mj:gkeHM\i*>/#jIjXVm.5bda`)
%7hRi/Kp&Gn+;YfNk\\Fq>XMC!bX-)@S?W]4C?DB'=sOMC4&(qZj+:B8-S-Fk?pLqn7RpIrPsojP1_XPgUEfo7=st)1;&XslO+l$9
%(L.5Q=&.paKABR3.*MkrKTMpJDI^U'i&9/SI!?SE*Qfk(#[j52-'D@ioC<Pc8h.U/JZS0>)Qc=%0i^Cmcl.ge_-&HZC#-?<UliOD
%F^FItb*hA^Z$ai3>?k;H7`SPP;U53W+Z#hSB\$slO(I]\=BG"?\$5G)RDq&8idf.8iT?6k!L?>Te7lV3^n=g[J%d#O==@)Lp!uR\
%\f"L)B;EmV;B'$7N2g%ZKK3t8YFu$*91aD+>JD_(AZ/G1bP$`mLo`(1CZUmdiRa]%F[EtpEf6g<B^K$#9niP_OU")+g&NfZ`Wdm"
%6#Ems2`FcZ"OIH*?Z!o"?BK%jC4k#4,b*B9b!uB*l8j*J#tHk]luu&+!N8Ri=3\a@6/+Z@Y4CP*Ah'oeZaRE_Am:SXc)Sp0el@\K
%Zq_NpJ'3tjbSg'ZMRCk"O5X]iNnMn=cH]e#g<>C6e,5uI-_Tb4o5oOA?!pH#ZdK=f$'m=u#7"J8+Au>H?&IL/0JU@sg;M<GJ_#i5
%)R0ntHV1msH/]-I6j6lEZt2Ob<+S@"2AY;8_^1i'?u"84q!mlo7`-8E38Z(@2lZc]Dtlu>:]Bt<nYD=-9)0,piHJ2J]N?"3dP]<$
%Y*1:7FGO,,/YU!^mt.QE3$bU1H"cT_/Tb8s92beS0n'I[C+Ihfcd<6OBUr3+S$m'2SNN%4TW!CJ2alVTfTnegZ9h6AA!pb&%D$./
%ZbX.I]T#B%f2V)Cce?mu8Xg\!-0c."N*u29N[L+1;9GMeq?Jg<Uj94!FJN]B:BJpQ%]M&-[+`??JFgJGXYZ8P!,@bD'U*s@hkk"/
%BVgR40B1urOIPJ'*V$l)AltD"es<AEKe1d^R`J_L)Ja1,<fi(FWJ\K0W=qd<,69:9lc_EOD)keIfK!'5A`7?P?1:`;XHtO@XN]YC
%<&2'BXB\jO9qea.-/nuFPL;Z*Ur1P@:j+?eJRP-aV-ou+2euAQ4h8ojKD7d4TgWsAe%-Ej<]l`lGZk\<2/FjZ/U#guINQFKOK:e1
%Kk8ID'UF^n`i:c!,qFXDWi@bX#%%kG=CqHkPU:t`rFmtc'fV)iDX%`h<r![#R/2Qbn@%H_iPO;:acj9@_s(3&9N\,_<_6GUh&D=\
%](.XS)^?PJV:]13h*J(NXj*k^Hje;.>#>_oe>eE#3YXWm2a[\J<fmDC-cdiA3J^XkkHq[.e(H9RCifas9Zt)BM4p0sQ/:_ZKTIL0
%a6QRu%-5*roo9Zh<m5-JVoEZq&r9N@$L;[H8OMtfg?(^`nB$ol$\m<Di4F)bU-cbd^_'Fq7T,ViGL3B>28CKl7OHg"b**rL;_N)M
%W62OU@BSnBMcc"(c77]UD&Tifo$Zg!0nB]tUWAD3XJBsp@Z/F+%P.h-72feSK5PVFX">cR\pt40A`:h;9m&>9WWcj6<'cn:2Yb.n
%6$7$ElXkCp&<TMaNJ1LSP4I8`=DcKoc#MYbg+G_G&J/FH#;?&jo&AO[/q<.!(Y)"l(J,8DTaYSSP\b>hkK?.!-YF\e!OeLH@EoKK
%.T'j.[J(bGdd;Ejn7C"%LugqY!Cb,kQ%6#;C6jJ2j.K5iU2QN'3Lo8r5V+BiKjmi.],^(WXn%H8^(AJ&d(<``Yd9+/f"6)c#RZSp
%#S`T+.A=SuM+%XY#'H1Fnh)(:%?\R#B%Kms;CHCLH$>.1UBmZdNG]M=DLb`uC6Ujk3_D>DD=`H/^3A"fjQ>+VUtVV@g+_8:DD)(]
%KB6#hH=KL0o%8.o!)60OXCRRBQm$Zc6OGB?/DE,<\tduT0H8GBSe#O5T(G0./fCM<[X:VU8(*l,8$tos2Pci&(5<N5HOUj)nf^`M
%A)BkHZ;j(\a>`2*Ce17i3+>)N9h2T_@5apd4<N"I4SCp%/fCM<[X:VU8(*lL=1,WqL=ql4$U]e`75iu`6^j7[^,K/Te+kCL_>'?-
%BnHEm[Vjo+FB)PPgCW^b;P"D5;BG]V+.%paCg0*!Yp8MXAQQ9N]+)(uj7XZs]MLK%/>K:]<L$Xu8C]F@MfoE8&*,1m:*;e=,C\dt
%Mk)!]R>Nl9U_$ksT^sPmQF"6deN/rA\HZjP]/.i<>6Rm79U'!j$=o9`j_D+5jN=2fDiQ/^=#9%q.<0`2AdLtq)!0Bd=^fS5a6XBd
%qNJi:)WOJ&?Cn7ag*Pj#mo<oh6rCS$hQlMe/^Gp3dVm4XI*MR!0mWL\0!\A4ASYC]U8ih,I&n]_R\@B;-9P7SF*\-2P]'mtjZ@,"
%7NY@]n`\IfLJ'BjliB[J16sb"Kk3/"0=!o/KBXVt6uS"jO&_:nR,YoAPbkE[;+Jac))@+8@qlrq$@"QM,bVfK)0pqI9>b4[;@'S8
%Wgff=BNhRkHs<j*00O(JGW$=n/h;$8T`]S226<U.RMG5jcG6TW"]2P<+S#d*\;L255R_Dh%5P>"2bd0UA#sO4e1b[!''S=dE6#gj
%FJ-`p\[&MXA"hlChDrlf9Wj"fFf:>L/!s1pb<d,`jNEn]ck>MbBN-IMX9](<=r^=i2oRJQK'ud9]L$EIe#MKn;L%2&6"=`a]"%iI
%Q8W_dD(Nn8&Bg9W`bL]4D2c8%C=^-srrU?'#rU)&O19j-LF.3CAp$9u)GSPEf56L@`</EU>n$9.h-?f/T/@7IGHLGA#'F-840Tqe
%@D^4GFQ>A.T(>#:fo!*nG_AC0Bq^$N=G(+oKlZ_#Kc5q!$LtC8jM\)=d^J5^Uj')hbq>X\6["dWB6&dE81gTPJR7UK9n4(l"hVN!
%8!QGUh*>`eq,&?DdC_r0*0*DFU`2e=JComZbd!bqbPsJn9[@n\;5fn)8@oEifoY'LR)olQkm[?KFeQg/ZT:_%QD&W=SC\\4$Ah^2
%7Cs,1*1ES=_N](_k_i<f=%fi\Mp'P`%uV(_eY[Q,>[%tVP1jARqWP:KZnkaOoOt#gZ^u`([cT9<65bFL)`2c*N*8->G+3IU-1WfW
%jraCXo)+6D*jGUa8=V8DmpZF"D9u6c&A>Oe("-ct)'!<AJKMuIh,o=a3t8c'iuuWdKW>AfY"If'+V._n],U]i27&oWkf7o0a&gF*
%IV?l$;C@H9WS?H+,sg!6Q<e,%:0K8=mFN-*R22Y/8B[4JqJ'N<dZ3Lh%0)0BbM>0g\1",PYhW205.4:td@)OAh3u3@OrDI;<O[]M
%8nO1g)k5_&WGPOG/DQU'.1`P?e^fk#8sa1m+h/7%YYjQ9AqW'pY1a2"G$96J!d`2Lq+(>Q!p+8H$4H&R2>>amik5@V('^)X'SXYI
%DT!-L<LX[p)l/3bNijL;oI-aU'emVl<G[:@$l0UmE,p$d>#ObM3:paPb1o8GPo;`X./_N&2>5V0![2NSl=?L])eDHu/ppZd!"k7Q
%d/&X92<Y0CUhHOGN@nbM;[@p.(C!CE;s]ZADV![WQrKOh8fN@Z_j;aeW1dCBY]qp5)gn@';.sohF4.HumH-Aj`Z44tk-h<:>".<C
%p4a&Mg:At48*!gMeO/1Unisj(QRat]F"]'""H0YX6NZggPn\tT;^0X=^DRc1_AX]M-A<f>JL9K7D`42n9==!OC`8eP_&%i?OTm0l
%-XDY\DN;VE9FCp(0V3h/"3?tY?N76Q(srrk+CNh]2?Lf9*P;`Q*3g7<(5BPg$u^c$/mRnYC=s>"GiJ*>MU?P1c(GEpS>[Q2)[h'5
%Jns,-=$^S^eY5\A4.!@k(C#\N1cW$+l#NkKEuZ62>+g>Fb)3+9^QJ6T_M+nqM-;CZ*g$e9BO\Y4!_Z6q40cF(efZBB$F6t3_nHbI
%'tTWs(eA(SZ!,H&PMQ^8ll+KU2ASn(i\ZG]'W`G-+t%$*0kl7ST(lXe"t)@->n5D&N5MEp*E\jL&Aa;qhY?eZje#RkOu.m^(pUAt
%7,rFPUqGj+3F[q=aei9MA2PTda^@M3#%)W7D9u!eg,Gdb\h74;`^4B,YVf'6_E1Ea?cHj.@A,]e0"/S4#"Y(;35%=o/Zj2+*$0ma
%J3HepT%!1uI*CYc[n-_"oL'X8F[b=n:Fo:8ZW1u7:qA!&-:1e7Z:YH+MN?\>g!-`G`!Vl2)[h'5_Y0+4QlN/"%sX=RaZC[hrQkaU
%GiGj*dbs3KfX7O/c#Iumm8Liu'bVmtZe"-B0EO/%-!&p8#bA+;Ys"<@7^s&o^T%hQ2q<7C/pbQ+Zpp6CDd!86U@LsI^bW_F?^9\X
%a44A!E+okNAu3k3RUO8Jd;U7#%OW;0i/AKELq4UhPG+o]'8e1dW>5eqXopSWZ*&UU`KMs"[<Snl8.GfU+q9EQiY4-h,EI:+'-pD5
%9PD*!4.u=?=9)B>2RW6<5?g4[P<p!r?JL]c%f!P#6q&6'Xq7r?Tu9"TiadDCS>nOOWW:W4BI1G6+\o\DN+S'7`5P9hp^cU-DH*=h
%VdZ#DKM:Bl.C?>_Ob"3:HpIe\$;C[X&GW_Cb`9Lq7"joWas>"Y<]+GU):9smT\5@o)BAGX(iO7`oHZ8)bg/s@6[3#HN!/P<>gC\i
%?M0adQNBl#?/Ho(-_X-^bI::E\!cHNna:X(,Q/7l_0A$H>r<-'^:ViVmP5pR`oVH'I1[?QaiP14.kIIo'^JgDjJAkin('f^\<(kA
%H'/L\Lm<_^EDS&RRKeu]q2)Vo&6ZAPi%>`Wm$e@hLrk?#+q[I+(XV2Iah+1.YEttr(00=iG:bd@A/(ks18&6s:5/7i<C.=3(<I=j
%f>?aR#B1oa8T;N^Q^H`PWgO6G`b8/KR&Ie[.1W5l_E%gl'*ViLVI<,"-<d,I:"]MhalhZtA-l2<fnL8_K*a,j,[pr])kcU+&T"-&
%_g&,S#5nP9<JP'l*K]((OX6aZN"f)m"SIB3<G:b^plpG7R]reC-%ii6XTnl<0[j4U^`Y%5BX7b?TrS6=^4oLc&.IOY/6Kj6U,Z1W
%:63cjksT5N#B:SnNEp3OlX\Uk&PubY?[[PEl)&Z=\JT05n\IJ54UDiU3=DqRi<N*5B4_[B?Fc@=Kj0Va!2pc>rQZ@dZiCn!90Rqh
%XNBa_hKmo?*5KYS.Ho:#9dl<9`2b\O*/>!&%EAc1O<367"N[IW8s-12RAa-tQ"lg)(kEG-,$K7,"0uE1!CdK://pY5iU_kq/m3kD
%`$7V(0FZ6(YQlLiW1=_/j_+tE!eAjV'/'btX$dLDH6e3'\gP]FUQ)O_@!G;[1?QeJ(2CjCTJ`4i^IY>_]e[FdZoJp5TNBKE?Hnk:
%#3!"JfWii$**!_B9`X?R%L*c')U3_$BFN6_7FF2P^m_]H8U4;Mb*`m;W7Y2?OQ]5iYQiF:"6g22!<j"/@SuB+Ip5"I%G2%d'*I5)
%7Fg=V09IL<kVbDa]&UCC:SqZ2G"ege_>Wk2dqjJqBG3p(N_ODF@2hhb-?Dj+#Am>XZ+B4g>dl7<T?h"DW&r>ei=`)tQKQnF_dU'7
%9hpbNRHU<I#t5T#W*5DEL3@UT7X*X:Nc8VRAX$5\agP_`7V:5%,\e"oE(E`<6=Ekc%:gmo>+XjnNWuW?[25_jPhnAT9Il0oWAq<d
%WE0K\_'id4k[DOf3GjQjHGdKadG;ml-\78"A<?4AM$-#]TsfcQ16p`EQD4u<q-o<RTuE9-$3GdPM:';:csb:cR.YF&.tWVO:oH?[
%A90BkYN;H*Qh*ri-<Ajq;HV9g[?e&1O"a]OLD#e%`PKZtBYfQ2@ZC]A3(oX18kED2bc@VN5ICDt`%K/05\Mi/$#K8Q;[OY`h=r`H
%L;W22es2L_K-WpO$KK+a%MH+pV:b+MXR)).f]#stH,nK[I$\<o$\:08"V[h@D.Xn10.t2..\IJ=-)f7d@Gqet]t7&%Ti*8phEH9A
%W'WD>?n&cc<.!)e/Y"4]VK>!sU/J'@8[(R(Jh&?p*>#-:Qsi+LO[AWaE?Rcg;.1)I#4I@OYt-,%U8m]KM\sCp1JTCfIB!`\Tn6jh
%BT0_QaXkHKH%AFGdL=LS:[?8M)@:Uc]Pd4tWS6O&W%cI5(Rdt<c"(&<6<@9LVIad-o57WMI50I(L(LGl-:JO_\ugq#V7!2Z!KrVn
%0O?0/U+$87Mt`t2U:!G.23.DC$krtckeQgKVZqiV%fN@r)QSK^<p8-eI3(Ia,$JA.5m*_d<hn5L_KsT6aM1$KGN7F#E5GY,]n=Fb
%cphDBYW3;#[`#/a3r1t*aUf)/i'p7t&38V;9sc/]50OShYs2$c:Q*m\C74m4cKNl<$u(g%JF#IWQuofo4CBXld1J8+CdQn]gG^I:
%iUeuE#jt%g5jYI0V2T$6JaJ)C\>65r!M:ON(6_'WH)!\_DdAT48FQU3X>H^*b04l8Z?Fdn9jETp)*qt?"<Gr.?`8qR+QFr).6#Cb
%<u;H$:-K)BO>N(4'R)sj/MYBe1i3sNCoQRc;7S+_+4[Ho%i[=]:$?uG/Jbnt&45Ai/12n)i*.7GEj-.p/kd-,<V!\FJ5fKIMWK5-
%"N)<RcA>JUaicAR:5.7cN=ma2.'cKDKDJN0JI)Scgo7OPb_fh&>ig*$O(?iZ0d0^>#$doAhiq]si<rpuY8'&W@=7#;iWU8U0GWf6
%;CJ96JVgauIS]-Za@k\MJ=\;c8D(D"(\>J&3&]G<YJ'UE3m5<mk%q/iOKf=)U-.\OW#e;g]&Tk5.UhVH/n':DU$W$##iR/fH,)XU
%+<W"B@Q^)GYTJ-b.T&5tM^&$@k']Y`aNR9r"_VhnXC$Z(CsgVjI+Ai8[7>L2ZaiR0WsV'dco'/SXc*c<OotsP!S%2S;DYrjF+%*j
%7TX#Nahh&O`3060PRX)BnC'SULTW.!=(\4#f2S:5Lh4Vi?#2JGQGc'jYWC*aQ/cuV0Tn&aVFB>mYT;5!,k5[7JM3:unN5pn!AY><
%;3@qu0UXWA=EJ1*<#%\Xd3,<+H8a='-n:m&K?Qu%/]0u3a<Q47TlWmH-30l`I_r4,![n5kM/D4o;TaZ-"AAeifeD!H?cHmd%4=ot
%+?kf+%QPDnY_@rSA//]=kkA=+1Uq[;Oe?9lL3gJGBe^>:#C_g(6-N4i)GF(,ZI2;>#>DmR=;=#s<"D3Koj0G"W:VMFH0GY>J8(@s
%+uJIN0PE#@SYRW!B3n:U-C@QGfJEoD0+%&!,@JQ:-Xt3!Z"]3&a?Md8<PBH\^rF"0W)DWPPk30b5*h]AY9Pq^]//\bXE1`B2c'b"
%&.d&G>j<5+_:i'*PJ`8I-p01ra4<!gjdNTm<[qQq$*6qC'2dCgHCc!,4H/um9og`[(&?'rfjL:fpc<5(gqAZJC#p\Uj27d=IX(7^
%FiYbQm-<=/M*=;>bK[T./8j.'5I<#V>lafbeeEQ,MN%H#ji_g4>S.(t5$g93d*,0X3B_od)g"*SCR#hXZ>O-)LG>OE'EuB))pCk:
%o3>+#YQYEd%l][beugn_oPK[.@Q?I.]]n)W'6QeaHstCXUqt0t8XFk5?/r_)ABX-1nZ*HjHoZtAn`e0KjU!J9rT^`:k7fXRi6$`a
%o>SibO.bT+isXi&(u<>*/78CnQTGqNA-GBVYVV?*^++Z9N2>$2(3-3Kq/+d:7kU^6@/g6GB_aK3'_7,Zb7kY\3threKaI9+Tc@'S
%:p+7=Yu8So2go"]oLG"\&>:,!ULuK34kh_1+`.?+hGh$G:`)+1BsmM_676Qj6>+Po_P0XYL]\k0C<,/[kgUC[2^&?:_6qJJ^k6%F
%KZJ-Uf#e?7!u>6ihe[-TSH=?N3nldOd[(cZA7n6%>WFR<0n:[4Ih<,[`>-9XT7!$qbEKEYo;gL+GY$'#gXVU?iHlUS"4@<AdONX7
%jSW-,MCZWq\PRU*d>Ioml_3*JTdtM\A6.E'6N=.0g.IY#fj)IrUd-I_a"1%9XhG^Q)EZm=lQGfNrl4GpX>%"0/Id\8X-?AVcfUs)
%k8<#oh>ddgK!ncY68@H.%][&'i!7Jc;PAQ<@&JT%g3AaVVCl$/.*PbPaXtpS+Rn]QH)PWV2Kbc\lI;!*meZG;4W_m/*-<fKE<n#7
%8!kfW%a+j+$susN@56c_dAEe9&27qU@,2:4P"H!/bSM.UrMk+_CW-K;DceNLcQ5[?<PnO-KkQ)$op:o[3i3UN>c$RZ3L%P<CSg<$
%/!XJTYk[0`7lYtn3c#E46E2g*A(&6HU9)j'5-=DLrKM/r,ht60C+aE'U`,SA!PrP_*D1UL9=lkY]B.\t=I=4s-b]3@oN5[t1@;3p
%-4+)_o)9@;ZerO-caE+\s-U/IS*!Nc)P:%ZS_P3[%3joSk_<3i4<8Kp_3]kGNHlYafi-=JUG9'1V7^F+ZLNcUs*sb![B5E6BcGjR
%I9ldnj>/\`<+_[1[ZNQ%f\"i,cUT,]a9W)FU3gK9]YAmTNl\<EWfdMQmci=d]DM$FK0spCN/YCo1,;Jn__hucYGV)kOT.'Pn2)jp
%XAJKY0JV%GWE_3i6mXFlZPG=@C\$^L>K#s@MCL8tO^,^uPin4bo1)a%>K"\pSXduteVe6PZbnNJ^c#u3"i(opjP*@"4IOHC/&M\q
%041(QCUInCbY/\l3MF9W:]gYWVG6$0>#q/0735<$#8)N)=is`?/iRgF8@>*qLDn>LJO6,'IS#cb^_13q!W'YY//1iW';FYJlOre$
%37N>[:8?+AW]XCsr&<;J#EU;!]FXO!?,!f7-)n&=Zl56+XN_\0o+)GZ7&"9+\=(go"27"kGrCGiY/`#c6W>"cQ*rm8"BkITmR@hV
%j:WK8PuFGCns("0`P[a.gl2_d+Uguk_%d=;:-4Xne#YoY7c71N_)dS<e!e()e`,iR8tb4p;u)Wbgi'?YXP5"I9BQlB&LPe6I.I>%
%Dj8$0>2`?<n-J"lR5!-l0EaIM]kQ%@(02l^AqP4EFf&1#_<M`k>^4+"%N.)H+)$>h*;Y5O^I1CNm<H+qU(K`?ZK-M3qD1D*O*rto
%+_"tF_V+A#CG*XlLJu,$0TlrG\6p*\_;SB1eAf0C*a6WZkRVmjqu^6I?'J]VnM5Afi^dD/i8]rWogV:;KTWCr5XGu?&;]C4\kf)!
%8B,+Rc`34G4nr"&oLZ-]Y%L/>kJ\+cZ]"u"S"WS'=WD','`:^;bK>m;g7PK3NHe;UYTNYW=Q]=im'f<1]^9gh.4u_=P,*#</=94J
%nl:5l8.n"[/XJjr6<g[(.S_*t(&skdJ,S$/\:-2?M#PSg+gH^D^l@K$66ptU(`Vu.Rs`S=c3^6i0ig:S[A63nD[MIqim#-N/E"nH
%/RhFZf8&E58h<r&,kZ91FFgB2P\s%F:u0,:$8Cp%ZjskQ(M9WE<0Bu7`]Np;GR0:un]?*:n,gOZW&U#HmKJ)+Ckms+/9j-WqUhXJ
%KKQkmii-$h0M<Lms3]\mJ#%8uNoEGB'2F.H5_tJ?$r&-,2(oZ+;*csJd4p321n9mPSe%n!?)bo8*'3TL9I^SSPt=CU<f"n-PDfX(
%'BlZ$B^F/F@8&TV["l,AQfUiK9tS?r3mo%3*NIlHXM#3X)oFhQEpc?HLQU2K*!_4c_hm3VFqgo$UaQjUDALr/iR(RBed@Cn#&q'c
%<H`C"3?AS"'[g1KFtIOZ/hpQdLLc2*2C=KT$='MXPN_"J>0)_(TfWLNgr?ZR-d6k\Ss1pAFS>1M1>\6Ks'*YG/]V+h72[VHRQnZX
%$NA9J_*@92QFl2.Yjr+D^ZVp6P!70PZ@',2bl[L=A(":Ip8nAQ`_(3iBTk#T:ErJ*7$;s1)GiT&&[c/M>'*1;J-jfb1&+>3Enb+@
%a#h9`[H0RI:+O';"#I#DoM]rN5rtRXeUrg:(F)LLl>%#^[L0!fbr;^!8[Y2(ZAK"-/XOQ+D&G&7VA"m<dn+E1:O+0Y/rCW,f-E"L
%jP'gap=n;TP$t13UP)%?=Ik'505#u7/Rtg(*dAEKS*CZDL$F-uVT-ks(t:l7gRpnS=/6,:<?-RUr]R`Vs"n,EVP^-a+,9?SKSK8d
%=I]P8i:H@LWLh6IOkC2+I?"F(<tneSK(h/a[%7:D#r1O!12E>+N..F_d^IMc:>K_Y6p?B7V/Ve*\J?-F!rE/Nia?.kq!r:<_Ve'C
%h7@,P+ElG"L.l(MD8p,;ZO8Y;5u^;B)M'#^:#fd`YomA'P[bms"=&d&3Z"f--7Rb!Z=cXk#Yl"EL/F$gfqc7Cc_^k;:=hP%dsUas
%-41CW%Pp_j+D3mT.E1`fGZiaJ7-hh_.5cLNcO4f?+Hh6f3qJ0cRQ9JbWM([_-J;jRINSp#SqN@t7!?eU&\K'BjSSG#_Bd-mI/BSh
%320Oj+*,?:+=L+11Ut<[O[[>:9Irjqjd_O7_ApKc`dU`mB#=9MBnc?h!cYg;@[0u;X-s*Vh[X_Qg$H=,I$fi6Mp!V,dPUQP-/&$:
%NP>YK%sVr&8g5t82p_*J(Kb3q-pd*0p$a@_XqioZRUXJ&PO?CEfIpQq#@*_R1uaRAHL[!)cnePEr7:#[dR0Rm:[dg8`@X_Y-&N`;
%@qh1LQ"Mbcp_/2;TuQg0j4N,fqBc\9beDTKT0DnK_1C?XF0uk+pC]6)E!@;-DM%W8L7W"FK-P[-SC,U%=:r,tgW5m`k-N(,>Y^]L
%/,T;(@X2Jj9;8fA509":L0YWlRXJ_P3;t1dI47?[S\qB5k@aQ_@YkQABe4.B`4Bqr#T7@O5%e$]iin;[fcS"6J,k-#q;>a.@S#KT
%*a^&q=V.J$SSoOsWkr6iZ#4g>C^cnl<N-ZrKML)KqkN6riudWqH.cL9<Zg($*1SUZi$FcuX1TF!Gd[8'oPAL'5H'R%>A'M\l/83;
%5;%t%r@<3)3<&UN3j:Y`+*[RF*MhluA]mk)S0nA@i#>=j;q8cuP8!P<>2C5SOX5kS9cQTaq(tq[aF-%BJO1`QPLC\sXU@Bl:Zr'Y
%9Pq(A0@,k'=CPqb#9q;Ua]EreZf017b3[q+*OB0^>K2FpHp1fQ"Q,WO?WcDh>Oj,rKV]l&J0_p\+&GJ\/*o6RnjH4R@Va;a9_5gL
%^r5iead./h0bLT&&k)ror=&:+qXtUepF[2E0^8<N?d?"XY]t-,\B>9$NA&`r?@M]k92BCu=a^&,cRlo=0hDB?QTlo#gr;`*OC/!W
%(eimM\'D85Y@L(5\Slk8(As4H1S3fF@o!\YLs.WpP-E6/QIfO:<mF*nXc]+]Z1>5.dd.X;FFI?e3i/GVIQ8)]31D)g)s/(;6,/`(
%?3[4nr3oZKMd1^/Ef-hI99)`FT^pT286\GODLSZ>YcMi-.UMj78+rFME&i[nrLVG4n`=l3JL_8<&N?B]fK<!KF"qZ*l.E?AFFJ>t
%S*W]d_S..i7Vp\sVM3r2pn:(!&g%;YLV>j(O]*lpch5<QU9RE3D:02S83u4fE0LJ[32-0#]$:#hIO/PiLR%"i#gJ.=,;Jmc$[CUO
%ee%8X4PtT6T'rY4]n&9YYHC;K+N==t?6#iq=-PN,_pUu64o*G]o!'LXC#nM5)&i['j1(O\:*/G#jPj4_-Kkg=Ac."I^.1!bIsd`4
%%Dj[S&F\lD^rH$pT)I_*6B+Ej7HQ$]&@nT?6FQY;HT09s>PYN0A1pQ\*6#WMrk[l7>G=FX=`u^$0NlhY&,<T)0,Z-(:Vm/N7r*^h
%H"JF26j"3u(YV[Rnm.^"EYI./X3+uLj`&9,)f`T?[7<QHAT*DN9#mb)2fCoDS!,kOeP`hoQnAuqTP%Vd7)m\,:V@jmF"smq:*sW<
%X)bL,7=MZt'D0)+WRC$<+7u5Y*7JjmqKTf5Zm0gAYP>`mlMhe6./$jA;`otU9^[u:(-V1KK[r4nrlka.Z^V4nN3Wu;/#8Tm#K<ZT
%ip22\<?hBGmM^N2-IF3(Gd3CW`f!P?gbc$?]/diPDm!l@*TL17bVLg"O=aGM<<bLrd8qc=aK3u$80il4>KW#nKt,o/MB`<ID:#7h
%H*tF0gBaZUj"O\W.(9.PDrkU=1OEVMX;<61A+[F@-qP2K(gI#1k4(_A<Cr;qBr9+>"EJoXaZC241;T>c75&#\fIiI9dWY:0]+eHC
%-%f?(.h3](aA.o\ZK"H;.CC:A^>!O#1#3f%.1UI#5d^-Ff&\?_K_$#T[!JDf"CI8so/AEJXk^"n&VQOK*.o%Af.XDS`#+=E9(=)T
%OQ1G'2$V8c2(?%b]X-a]F='lOIQ>Nl`=Hf5?\"Li0n*MIiuUHX'"asZF^(MKnKg5f`?WLDUEDk'\Y/g\(FgYe^*AMA<l?n%+I[:\
%iZ8rOpdEC!O3jaMcHf=cJNUQ1a=%SMh/kgF,N2h.W1Kq8htC;ST4BoW.;Jd*QZ'BZabCBfUsl[p^8gh-Ni=`YAarctg#=`$euC8<
%',Ekojo:XI?/Mj5r,kj5;n'::Yh0Q):X]@ss(:WYQZbH?+JcO%"aq21HfY34fEjS*;PZV@*=p0kB.TUYj^\;Fg=36-O3)Dlm<anX
%MG;q)0H-.\!k:o_boc0Sn'),39`Rfj-56q8_r/Vb,qP1.;:@JlK>LJ2d=?qG8A5C/3/Vh:-n;T.J61sKJ@YZB'BoIV9Y,WNs,Wc[
%NZ[jA:fg;X%tQ3OFdp(Y;jiFjgfW6F5)13AO,j?ie!*o`.5$+5<0fbR!GD1PZhaA;Vs&o:dhK&](PinuCgSUeW?#n8Y5I1`iAR)t
%8SZU1Ija!OVLWY2SWPEAfr((<--LB2c_d,+L\41aPq[("jPYXTU`GSn2+l$\qaZ!OrfQ%`5m[%='dTfhC^#Ge(,n&E!h30@(jorM
%ic1>Fmk"^b\UmNNA@pTQgp"_Yc(_sR]%hIMMO'0QJm@h2,9*LqM0;([FjJ@C`2<tP^)rS)aTX1M:gQ@*4bCX')gln)"XiBLC(g$(
%k_d&taj/$5hos@kJ4GlC\0mtY)[?,aK>^URaEJBt04WuQs8MS:d!me:p;]#bK`shVW9jNSlS$T1ppWY?HdOpQs).:TUU^r'k*02[
%k4!b?>^P&e[uNMeg@k$/1VA.`O#?`U[FOScBkNtWGMB"Y*cYYo[aAluNsV_>[27m"U+&eE[b[jL+4C]f)fC@A[s)fBm>j<ARTd@0
%X.)u89T*E[0?epg,V[K[1dFn0B4t^IC;Ut'^N[I2+%rAOGpn;NXBG3D-)hN^[q>X^[f'[[jF50l^gB<o<.;0!j$pf_ZM:dkpq>#R
%_Tm9V6PlBDGd/,%)mm)(lXXQB=%r\=7^km7LT@Nu\%;O,'G7WYbXGG7bqrY"DVM-84P\mlRao6Yh\jiH<Q.ROS%[Z=h]<2\p!1<c
%G:j4IW(=r=E,N@;dco@eqa5+ue#+sJh/Q614u5X"8\S8q_i]$nl=$[3F_[]PW3=ckbfrhKo'X$<55E#DmuE0UPKrMeRfCdi*h'q^
%c=0WXRe<ZYJDk?"n`!a8YdRN+):(<[c!X%e?E8_X_0L5eD+_,bA%!3CET[2*S"s,\cMDIMrq=//&"VDKf5N$OBf]%%c`u0hOHfd%
%8M5#kIpb1[/Fk-":4qi5s/XU4a'dsuDPF-]50t)/+1-b-T3Q6<gH@^cjk=09EZ;3jo-<c?N?<0h.?jIgAjm'20F(X1Uc9A0Gd/lL
%dHYi[-HJ;Um/Ol:k<?OlNCKJtBkp6hlI0V4_;#!?H,UkSrT-Ip&te=CFLiQ(5IL`E,U*C&UOR1ks-#BJ:P4I5l;PY.q^kUSoZj3Y
%C#a3aP=Lp8aNri1BrFqDQ'(Ye/,lKrgX"#46&a`0c[kP1_;Rni=8Q-']Xdb_R?n9ZcjW"*1odYV]9S^YrP1cMeTr3gpc)d/W3!XV
%,#*?1hDJ%g6Wb$mfm'%HcNm&6a/uFtMNTekGcmW5i+bfEE]]Eu('m+q3*[RUk$j,kKUbT6pJpM1*o/4)hn1%a7BT/OKq/dC;4*"@
%1r&Q<\]e$GOK7%kKc$@NpGLX>p\i0I.]/e)*aKC'e4c<$68Ug#aG*]2MeJ1>'1aU\'maC:qu!I]/OOE6B#qN&6^\gA64_t(c.^%E
%&A:_rGtqj511]o&&P*m//WD'-cY4sTcHh7.c+_%b)Jrt-#0+3nmtYU0GYo=LgMpgB$*%\JR5",cO8lE'INS&5CJ9@j5-rJZ)P\?P
%H!F6C;XOA8Zn!+hn?bS`gJZ7DI#>m[/(B.+&IBL>Y\f!qjdm5b'93Zc@/jE(#WtcnT,50_j__uTHc,FXJL;WW>4_Kok[uC]>$,DU
%$^pn!':S[U+DWJ61t#c?h0mi`WK,u"r>Spo,6(2f.(SoUACNCeo&'SN5a8H;6FL@I07^E)@t&[*_j$eTd,ZCgK0UL?&5?SC'O&F6
%_=*.f5$^B0\N/ugdA-qWQSP&5LpCa:&$jk<jg5akMAbdb@E?u=oq+c%-bRjRE?L.D19:b.P?=!W7>c]S3g$PI!m0E<8Z-fXOiJ]K
%7lCZ^K&%$m-3FieN)/afk8qWudK/b+coN?7T)k`0Zh7gU+i,09)9aqA,fqoMba6=OMboR9_3'h`)GtIkYjt>i^A6dBECJAf^f(^/
%YZU3]\4u-dPq3+6e>jj]_>Mqg@5iim:"p,nqZ.U'H!\e/O?^Vfl0srJm3"Q0+NW*.LMo[JXk55a@B1R_!t?qkf?d=(1#LHZI1DRD
%+fj?a=d3`H`E)*[6h[r;TD"CXZfVcGG`k!5p>rfC4HW#rc_Q2jBW3'/`uJ%83<]/qE)8b_50q,EYPAb!["g;#i0c2J24&SDfM%cJ
%bIuD*RAh9S&.dL'3fa-d\KGXR57nR/ij%G56>2W73R+0r`no9D^deDS43;I`.=?UPGejY[Pi=@oOe5i,$Za+R_r5'\YFTWJ;8g)=
%%Pj+<!M*^TLGSFDjG[[W+@Q%RKK'DQoRQ=uDn.!Hr'Y.OCO#h.&YHE!rS_RrBBP[_q0q9b,@,ik$u;HQNq@uglesPE!UjQHPuK+t
%_%\%.<X"qGd\=BK_[-OkgH!EQ;L8G=,4RiCMA?*r8O<O9/4kr-E+Z*lhZ3gU_WQfHAV9\(<eM''TNoh&,>B4pMF_OF$$G2]&%!-'
%c+0MV1BLE:Qio:2+"n3a]AfS8dEVq%jO9ltcYqC-28+Old+96VSKD+N4f6Kg;`M;^gi=)Ul#FsANP&)E:(3iOH.c0<MV#oM%PK&A
%WjI;<@QsL,5_<nb#@&drL15RbpgmdR=K+iW^`9Uk'@W7gfURO._W76-pr!gBq?7lQX:'G_`gBkHKYS!tg!/]:VDc[SLOE4MG0?;,
%q?C=0g[99?8$2bfm6BdAVlfs.F5)9:7;oX0HY:pS40_$e%sFqikFFm\Z(MK.]17;%,StW&X\kJ%)n&'cCrI*X3j,$iW)\HdV:E2^
%/[qf<34I?t+*[RrK,;GCNbLgk"s<j%#H+t*[Bg1)reQ7RV_?Q!F/mVo9Y"=@#6J7pKU>1UM$<q6`'!-GXI=m^BF(=7$O?lj$k!=I
%Bob2\R)Z5f,<G-n7WnES(@V?6KMY6KY3mP%q2$M+f"iLnp8;&g`k:Pa407upVU_(.+#&*/.*sXW=KM`MhnhWW-XeDQ,>.`5$*sR]
%*9HrK1g@,4#l==9@ZCr<BRV/H(,%*SC4pbHjZdS1R[#5S5kNsHBmeO'8#9*G_WB61@2PeR)8+Ih8l=Q'PJ\g@b=A'4=Zb&oOn)pK
%^s&.`H\!i*7;R`\rkgW7bN[+c,^,D6.93fB<=Dg;`jeai1qp<SR2]o4Io^U&J?]1*3W1lq:J&m%FF]h+#ELRQJZ5Uh=8@mc1jEgS
%6-OIh[,FYX@[0780ao=mY%(s?b1TVhhol@:5_IC'j1i-0dRo:g3CnbK5WE6`3P[a/5e+n]OL]P^+JFG'=DR\<Set[_4h5'\%CEL2
%$&r=E5/^q9CkX,lI)74eca(dQE13%2L6JapPgI/.Q8FIcgBsYKQkbT1QnQkpJnXTLmSLuRnp&o9^<c;<)[U>Ta/B"5A0dW*2KmAi
%O3eB;U;2s-;F(j2iR2]s#9Ftu7`#Lu2]uNUB$*%/U7$AG18!0Z>q'T48)p=ZYj-:n14Sd#UDSfAVZ*2MPL2%)O1W(m*-$$q#=H"u
%ZDXk?b\a_9)[s>`ME`EYb?X**n39G^GhbCL+-$9Kl(Vj.U%TIm9uBa'G^Nr!F#pK$(RF?/q^8-H9+CT-2td0?]kHesl%Q(clbW(7
%r%K+3O&+)_3k[(@Du,56Au&9T5*dUNrfsgsP]'1=$I)[i,=-*tpA&F#5@/,bq'"^k,u"*d&ej+cgNl%CkY1etWAaLSdpAXR/@<FW
%@<\?ZK"V.jC^c*$^U9KEW#)@:qmbBB(j>bP4)OjNr\Mj'Zfc6"7pg^\%7a(:F!A*[DlqlA<Z"&[VA-s#B)XA3;tBAV'!(k]IciIk
%l4)GpSV'S?aVMSe;bV/FgHV>3X342"A7i;,Ia5:1`'iG@J#-!>H)@On9Xu,n\qhZCeBYSJ9)i67KHF8&pO9`e>!Uc56f9]FpA&Aa
%3;j05hg\Womu:M\IDm'rqsa0>qKM9F)UQegT)Ypp4?EE=-]meHJ0l?]i:)5.m2(.t?8/Xh9[f@,E_HCq..)`(a#j2A\8YdS^=9gp
%rKGGUcmbig/tCL4VgEN5.?0`1rAc4g-ZpNI(Dfg8p[/&+:bOOf;t?iR?5@$5F^Frt0d2OYcJa"pfHnH/;H'YtqIr1uCWkPMq68[h
%+pRTk;k3k4#,=-9k5kb+Xl3,i9Q1)/NtFR&HO58%<r+8`J*t_H`l;D2g7"n,$8Xp5p,Y!&([(-#s'Kdq>c]a$_cD8/etNr7QTNKM
%'n-M;\8WP^#,BT-AnOa81T'hlB7KZcHT6K%+V!,>S>96Or"N)[@<Bn-qralXKAL!\3W$WArDQBdGo*XG6$I_3)?.]\Q>6=3';[u8
%*hJEP8^t^o>%Z.F*T;J.q"+f'mF:q\k3ZHQBj9c\_+s1O]R;eqVH`s?1;e"Eh)djbXL?Eoe(;>obArktbY6'J@B\4qU_hl>r_q$[
%mb.mFJ!\i`Vg,/]b4JSQFc686F1lfUqh&NG2TK9\J&j0rK3iKc>A*`42'Q`k\*THMmZa/)`OtA'SR.)D$!p)eLJXodi/\m=PH+R7
%R0f3VGbaq][G$t"-!Aon`f\Wf7br^_rU9G&r&877GIs1H`W)0JnS5=kZJMLb5N"3pDiX*,pVYlMR\H#.V\mj4+P^]*5FcWaV]+4O
%nFrPa*2f?Il_$+Qr<7gFs7B^%*LItI9<!$2FFb<hc*Z%?NqWd\iBaU5^`aF9Z(rs^"0,C+rSLeRh<oc_K1C=^c!I;h!%7DSB9;r1
%)Oj@LZEPmCY4FFpQlm6omgNtbL7M1S>]YK]n6R`83l[VkmH;/N@H`KqbGlX643Sh]Rq>dQ/H9H4IF?i%o5X/23&j,QZN4o,l\pj>
%3t/O@DQ<)G7YBR.@j+Q\]M$4Iisq'Y_gs_BdiY^(mQ2=SpRjFeQfCE@'rI<.H2Du:7T6m+ckj->2!e`cINbWF_Q(B](5LjeS_@E5
%?fTl:6$M,<n+O>&ldlN71b9B@g1p;Ac<Ef0g5Ee8]0<\%[!("],FKKn:X=B*1@3.\l:7./B<?fD<1LBd-Y;#qCbRKj>.q(%Iq(S.
%K<oIOcGbm$/&QbH2E#?1oC3r-O:':nccI/=)i3R[fBmcs,L4+Z\n(%[Z*uOunAjlgm+[li/b$H^ebKYm.n'!-YjU&LUNTBNRiCP(
%Sm@0(SKZcYoW+7H,SRU&o\5eLIH9_i!faJaYAp_4AsD,f<FqkCiSuupr.`G'L#8g]8_SWofBTguiaBCM4lc#&oK*#H?#i=H(ekQ:
%\&t*R;j^TuLeJg`';Z?4g?nMR\&Q@iX[0SLKA%8aJ]Tl'/%l6B`9(6sXSY']A99t33B-c*crJE;`-+)re5jD;]`E0&n4oN8R7bW!
%.#qf>o%f>W*q)8HW\n#J'Bi$5duke*?EmumqJ+NZD4Y4s2F^HT#q*ijeto5h-7U$T;[67U*Oj$/GLK89RNnNJgmBo7>6g?qh;+W&
%[D`*8"2!anLP$Z=1moqNZp5Y`[37D"V;27GU<Ya_#'/2"`jIb]rk[Oe$0#8Dpo<6MfAn6"90I'ub=m&-mM8cIELGD'c[+D*%R;<(
%O]p#TEU1)Om\VGZ9,CdaV6\%3]K2tJl/R"RMQWDVrMDeYc*mptn3baCM6jjnQ=j"?+0$(.+aQ@P:&V>b`?cLN;6<^?!KHrreh$W,
%6]B/S3+I'ZKWDH_#\UYdG2D?Ga<7C:j6TA[4`B&[?!&hFjQ$Orl9F!4n4,!`Pm*]#s2dlI;skuIDkF_1EoIPRr`q[&ZMq?],;l<-
%^oJM0RF5`Mr2b&'j9,m'']2&h[0c([*Y?U9oZ+)jjm*K+)O%o%9qHg=b+lcg!@b(%H]t;6e-i07.YLeq3**BFHY[O2D=uNj.FXXA
%'0qY3_pthkQmJSCS/0`T,$(h<SrNc`g?J9"j]*oI0E:5S(T$eK#:W4e!M8lB^50Ms#%oR\$LNn8H345I4.W_LhPag'3cu>8]!YfT
%)``_]eK9!NK\0N)4;QaP?mQ7`8JQF=n!;F\\T;c\gL.ckk"@?4;eeoR#0F!=Q.I#$<!jgL,oL_>2)mY]T'[3(5Iiq(GXJcDL83%%
%Qt*.S`b=bid=m4\-/ASTAYq$,LclXBDtX\H2$]U$f-9SmEZ:b(mE9]?8)9,rF!$ur%_Ci$N_05L!!\^kOi]T+U#HtF>aWq<W\JaA
%$3j;mI#Ej)MAa##=q%EC_4X]"j%5?lO)1EE(?&orL6PsM^/q;A"d>0e&$Em;J#-2n9sFV+GLe=FKt!&t]3DM&04qB:T#G!%@oE0o
%/<fWhbVQ5A$)V"8V=PM4$ZA*'Mm'_tS\a<l!PrlE%Be&fZZiq(U4?8;dqIO;+*7uskIiUnG..2n[u97CSE%;Q;>0>VT?uuu00b?#
%W^0c?.aNP6P%d)N"1^kHcA)!E:9]&JF-u@[TWXL3V8i](PR<WDU8E^k;4;0GLh_*YM$5LR,)*EliSOlqLSIV`9i*9_>V7s4@if_]
%h4q]2K^2dPFl,RgcYSe<%M709R=_QgIWp1n3kM&d'H0a9`E%l*HUBjCqP9@rE9b[d/rF8pRgu4eXM^u"4K&q?6iOlZ7R/718\5uR
%LB#@]_o-#3<_NK(Q&^>]&Be5Tpp('QRk_X`UXPEQLJqa0hG[ZU2O1V?1Wn-DNKJqHG$`eZ7&`[Zg=K0cDOCIR_#dSXknq.5gsGl`
%i'h51RD%JrNb5P\9C;o(d=-,d`?e.>lJ`G1?$1.DiWX0R=VIJk&rhoD,JQY2I,pVBm#LuV`=!o_V"9KX4WeePa>9-R[?D-uj8)(1
%Cj7q<RMLUs7s,q2;C&"F6tB7Eoa-$&Vm>_F?7G`SZhgo#R2@>G.XH1c,t8&t%Wac2PIQkoPRE-^D%b&5Q+"ApZsI"_=sg#4qX_(3
%4m<%OL<^X6;m^uLmoarPVjHV;=[GH/$o"n(2@\tNO'#K*,_;sk4m397WohmXL[F-UhQYJb-gXD&Fo,J(oFu+qq@9*bEJ>90hR!s/
%;cF''QD,)N.:-]N'SeR9*!@7nn8K6d?/c!]6MC%KhUH#0G,s6:>._#sXRf+XSb:]Jf6"Ds]0Db+;CXNkp@@P(WMdcbbG[S!&8SNY
%c_4dED't<I1g=sB-5IMjmq6_5-Yp)\Eu-fU=,dK!_:k9Y)#Kl!Q:1\rf!>J]q\Kt3WA_ArWch9C)'?<t3lB6VQJsq=[H/g=GS9Eg
%Q!(b%S>K?o_Tc-/K<t8&8AZZBZT,`H%aK-:[Q>i.1aK^&r35qCO.t$Is(IiQ8!Pa[f:pC5qsBdYJkNNJrTjT57^3=91[00T<p*Kg
%XYEtZ)r$Es)Lble34HH1>uNckiWXa+HX?43p,#DW#DR"`9X7?j&8]X0^[/<YnS*)o`b5;>a5(`Jk'!N:E5f(0/lr-DT2<E@Y8(tl
%o<6a+c:@X+25]Gqa$A^g>Of1=QZ'">W=G-*.X]=\PaeXsRO5XP]P5>3G*\GlGh2.m>3KE+L\!*Z"o$IJJ',BSJ\P=App/HgNOr["
%^)6LRm9,>8i^f%+,upq96=5e.Xaff%3'6k/P@n;/-]pReb!u+,ZtO6f)Kf.KpY7"[U+re4Gkbus_QEb?I(Pcp=\igchtrS:`9Cr9
%-,/];=DKgq\R(-E1C&[M,t54cI"&ZaDfrCUL.UQAhF[B8I%%lelg,(mVpEEsHK/Hr2:8G.<HdV/mu03h0\lcEB1i9W0](*gl=84E
%[9e[`%\qeUGNBk+,U&fjcH\1m1Uks&N,#.E%r)>TBFNRoUmjm7:(R0c3rRc]VgDV%4la1t6_qDjH8R0=qoR[WCU=ke%2m]pT7s\h
%$*0,5m<*(:H\Z-^lVV`8e.Hg]lI=D@DXQ)S<;(*%=rX#\oRfE/io;QF^>!49E$-tGk*37B^M/2Hq/\B/SY"D]n!YkEs/FV=p"F#-
%N?)XgT@T+d7,4r9ij`kJj%jP#s$pQ^qWPtsfA=#1HJQeroCr4?BqK?1)<,pk^N2^H0nK_PodMrIfn/U"pT3RfT=S'H3A)O?XjQo<
%BE*+`oD9iBNWbDdh.rPFih&Z.?>Aqe>&"IY\jZs#n'*uKD:._&]*'qVL7MlZgTio3UJfJIL:_MXJQGZ\c%;j.qDK\eYZ^I[>qh)s
%7K+,R*O*<s2pA*.L`LKRrVMbUK+/cBFsLNeWVP)qR7*-[?0je`TkB#WTRApBS9?5#)\_Ui*sb0&[Dh4:hF),*nI%XcR!f!:9QhQ'
%)Z6Ch[&HDHh==;;W/PG>#]+;ucn)b`h3gGI>F4GmQ+^"DW7MC&B(pTHf[%`M\74gl752^^9I@j3JeC48]I"aDNhC(P%t6%a/7,XQ
%AVEH2X#">2(W*,mnBe]N/_7R>%/k!;Q!iJ[ZDplNem3*;ka.4(%q^!G9fuqP_56l*'W,5(K/VH$_1$/n!2bsN(DFLQfkJP%KH&Dk
%S[?-BL*p1A>STr7\9$%d^sngt$Z@hu<m?^'+7u.hcnbPPYlVg#VGon'X-m[9]9=mN!hd7K%$+Th*Sc)Q(m'a"&KX^PqmC;:BkjI4
%,jSN`pEkom+BOV#,([PIiV+5*^m&UFc837G]c!=<P8Z26:CM+iL[ad+ZV0#kB%IO'Z+ITXR=o?4li[5"i/Q[Rp<=->bAZh+>&(aa
%qo$7[^!L"%4utj@GLXCuAE1hg\Qc,j<df'QHM)MG\or#ReY<AqJqs*/52LUo1-BKq)sd?'E^L#H2:!5DI9SeElWmk#qHUeAZ@)C_
%Zncs-(TEmhV6)78>O'>?H1^mnf#i$[fj4"%J'_N&f5D[0qV!uT7ifTb)`R3(miRP@^3s`#mhbCM:'Y!u`oc^aGlC!Nm<iCq\GiB$
%X`k-p!+%bZT'T6hm<Y9D`ii`upt45'XhUIaX'>#KVj6A-NDD)!7eP7+[C\BC2s)/%*)\`>YDo`-*j-N4H4r5a/%rFd%\(N!e`6G<
%.WFJ7c*b"6qS'95nCAOmL^$"GrI"6_5_%Vf^:&<kH)8'5I(S7f?+AIP6+h%TS5VB2\%2>.H96L7[sB$A=^#^un8HT2TATT.^Tr1O
%e])@er6BrH:Tb]k[G.esr7.?F5MS;cY*HKKMML$R?gi,%5<3ENDEPS>0V&/fhUpPqq&L-Y]s@:kfV`V]V:V>?)ZBB3e+rmeQ58N0
%O8$8+]JqtE)oMBHRQn?\Z6n=A:I_OEF7HA-r5SI@mWDSI>I;K:g&8I8]:EOeIW6iYGdhg*AT`(ig7.cIBo"E%Y&/WDY!%SB#G:1G
%?QX[*Vt[BCicZF9DpX^i7!GeB=[#5lU6g;4l9Y%&G-kW[o_$%dV`nC5[^Ogl^:A5prr!Da7/5^s\&(S4)fPcAB#+G6J$?1or`XcW
%r`%%DhHg.2Xm(%UP9fq*2uhgPqH^f.nE@T#kfs(fV1W^45P&W%,Gt1CS"]5(8i<5O6hllV6-\6C6)dVp[.$\/m0g7i/AR$,oKN-&
%DX=KRRpS6^I/89)e[fn:)=>1bRD-3$p/PUL[J=;!E4>^mjnks&8(:6hGdmE9)#?EWGea5Hc+e-#D]@FMCZ!ur=m^Zr(7,M,D]EVq
%*o9c4_ZsQ/GirIrGF7`G5CM8<hR`<#A*s!+;rNbu[;5l"_"b#1ErP%`ep!P1K.(H9/FAG#2YN`$c`<6[1"YB;?&Z81/%2E_g-OJo
%pmT"pqh#hXqWm^i2/hO8MU-=Ir,m9pNF_+qh>-1UrEN[4,'2SZ[>Q3foC.!Hc@!KF>ZO#@HIV`\7'YMuc^ue;h3^9O>&SZ/HggXp
%l^sMT,Xm_]k<!BjA+&L4mFC61k@B!iX1j_>/+%t5"'.=llN\!N("urk2ed<aDQb*%YE.\>p8a`Rr*I,eYJZ:=^"7tXY<H,s\@\A.
%>*efVo5p8/C$[uEQmZJ:+C/c#]fVW=?7tN-Hh8pSUs66K4oHdR<Y_7sMiHIEH:o2miHm`fi6bWeps5j-o4f@bXKR=t1KrF[c+9gU
%*l#G4]rir94hK2@2Ej*;pA1rtNP4A]f;Xb-GHqFuf'a*?l]%AAnV>-0iUJM"pA?6X^N3]I)el)?r9hSln_ui7UXQDB5OJ7c.nB?k
%in(ALqn_fl`iC'GdJWk,[u[k92]Fi*+*u&<hSM$`\%EI)N@?Q+i[m)bk0COWbE(/CU[$b*ghF<8Toh=7>C$,/lZ;g8^WB9Cd]X5G
%\T*!b"75AT$7'!AQSq?hUqb[9_PTB_I;%trIBmU:9cIG@Q63<]WQ<]CU^snO2V%]r09+fZ]cd??$U^g(j`G(d^3<MAbh]4A\!J1S
%YP.#OC$V5^jQ+iYn*/W\#6!_Xkri#O%I_ENql0K>5MU^t6[uN1&,6MsTGt&Pj<ruse;u_c2Wij[E%8so<GTSQ'A_a:E]6l*5MT"@
%R/a+'X'A'(q6jlC:aIoX%hB&M/\`iqjMM)of=B5ks)d'l'>ngY3bV,Eq/gI&C%C=mXYR>4j>&`e-N8;&\SLKE^])Gtf_h0mNVbKE
%1V^G*bP`gKm:E9mjQ&\GD29.G*Go!bdB%E/E;r_jhg1<#9LGqZ4(i]EmZu1#,\)S509_4ORQFDVR:[<.G3+K[[BcUsYA@@X.h9s_
%^h(PuL?%j;_JgA5$-:\Q_\[S1?CPcUo@a$j&`BP]T9e(b].%Y/iBnsG]nPXH)h$h1m=n-JKD8hu)Z>cdRs]$'/QlkDdm\0>FIOSt
%c?fA:iLe<s$s#?(B9VQemVq/,c*]fVh`=Yu<PoBW%YhUk^6NR_'m3Y`i9MXl8apGu>Fi1*G"I`7/WbhPV70;n[$`<"VGijp6^p"J
%kXhP^89j`D1.JQ5aORFn"\q##Be-<mTHB(oo1ifap!`o[b,rr1fb]Ft4dXSdT2+LCXc9O1hVHqrEi4BQFnY8M(02tkVeubfXduQ+
%\b><%[JTdCb'NsGqb9(,*UFE!?VEDR>`:K=Aqh1GBC0Bkp-ZZb0/d`ubR`/(.e'UC]Y67iXra5(]O-$^oR#&X;Y*PZZ.!(7?J59>
%ga?Uu<)pMtB9VH6F0G=LH/\)/+>4kP/mc6iJILJgBC"rsH]-/4Y$Q'@<n5ti>3jsHJ*]G2]dMuWc5>idTY?K/[PM2*Z&i6"_`I1%
%$k=Ym5n1I9W7o*rn_)4."pVM$#"&)K[tnE(r30&jit`4/W#mmSIb5hGlGWV=?nYX=T20LN.-]9;O3K_u\oD3;f\7cJ7a=G'RAPkm
%N539EhOl<#1G!8?"bVPhG\b;^rWpF%Bf!=h4l"n4^0LJQVtoo'V_K=h]_CKLMC5XN21\m++%/ojCRa5@<f(mPs,I"f#k[H>em;k`
%ePd*-g8<uJ9XA;`V%9<a:::ZS21*`uLQ]oEK3MueSaEgT-T=)ncX&6AXjX)]mZ&B[?/8<*q5*"pZ/)N2[aFXtm^9=S>FDD#8)L9b
%e_YS]X]Jh78WB.NGGdh+3XIEX3p?;cf2dqs?F`RYrpn$c^o'4f\Gij\nnao!T,396SIHE^&,+*-k)$g%-3#P1Hgfh-C!X[p4XjLs
%;0-5mrF8"FDXka0:NrsYXS:&Ul5Su%,/SKsqVhbF-AgJ]:RWqDXLuohhjlqi6TopCU[dpNmVA3dp4kTaHm95URpLJ_^Al()3ihur
%NOCpdfj.N8PC!9#?!FSh=;_U0?bm%on(F1cgr#<LE9Sk]b>n!b?/9T@h`bg>D?f8u:YgFV\l)Xc&"ag*daNp:LV;Vm^"]2efC,jN
%Y<I6EETd&OJ@ZoSonEmU]*EaFY')]]^>-GCN9U0hbPRq/.rSb>hn4.q^Y>Re1&],Omc`qn$g$oqg6:KdY9fks>(?g*Ac7/oc$"-$
%[Ds@BZ]0+W\7puA_D]CW?/<VOmf1LTnt^-hN!.n&XO+fBC3S0eed`K[&/JLM^<5gX>cO.[1-"[8]L%Cah8[0T[/./M7II/9b4CVI
%mp:ql:Z&.(9LI]eqYXagi&&,_V/Ykfg>T/hhV.8TCVnMR_3G7JEC@m9p#^^JYOhF!a0=k!MoB;3^8%X_h0tAQmQH&bHs6R@q8NYZ
%VArlEq;2$3QQ9MTRIlUONiq7^Au(nUK9"OW(Z0FpaG0B^#Bh,T,CJg5V!?XdDLRsO2gNeqfjF3LJ)9&^6AT1Z]'&SVH@+NGfEgWf
%Q_Y)J,_?P#s8KEkjbL$WY&0bR5;^:0DsNCLG?u7HG4t&W*o2)5.;k`UK-@!+Cek'cEkpI;>hf1\FU&1_LJ*c4?J_50r+,9Yp"bT\
%f5A<,4!^+LHcbrmCJX)1cfL8/@#Ld!-eLB6;0mBLnG;RX$_'hn!?J4&U\4FEd@kpD@D0t#1dA1V^-3TN?#S+G+'j`C>8oZKE3I!;
%ru`M)l\`1IiR+rF,<Kr!?i99FiShK<Xd@?>leQDoXM&t.B@>iJjhghi:P00"o-3mi/sL[1-[soYg+G7ieG4LhK`-2jSf]P,fC'4+
%.oMS)C@$ZoT,sP`n(^7?Dk_'*Jg?H<g5+%?B?,Tq*_(&iXZg*?r@e>$7[E+1AU*;=60do#[*gJ^*S>&D_Q+?*hjj559F9LCFf<bY
%I2YQK2nhL_?L)H^3C#K<q>&a0[DUh(K@TD?lQOAoYheM-fGmRedR=b\m6UV#I<N-!Y]$u=XZp)oC7_u?gl-)qDIp>>SjPlK1u_:9
%cdrZUYD_`846)eVQDWPo\+U(8I"'Za*,j^`aU>>'FUL"e@m58Yf#(3PN#pc8r(0eLSi#$m)KE@+Gk0&3iQKVI;&NuMO82m^D1"Cu
%=C!r@H$oS)g2*RC-]M"Q;l"ErgWJiqc.9o*g=R8Ql/c\^=73cd*3CK!__7%.[*[(/^3td'N+D1lEG<!_k:66[*sl+RIai^f3r^=O
%oQ]Kpqk\Mi;R(s?3*dWblJNu1aL@WhY7LBQS]2a>:X7SW3sQ-DpRZjrEKE9\B.pj-d9eb46J9*OhU#KO;`Y<p(G""kXkr&WkOVcu
%D?K)37ilT@Y<DkI)QhiOhcO7"IJq/9P/qk)S#>!O_Q(tq]LjR*ant5BP+!VT(Yg,5\$sHAc/+QK61=<mfnu8o:L>4"fXUKoAU*V6
%GjTH(XA=r4Pg7[OgUM?O]<Q\Wd'%>^:GI76:XBQDf>dKmhn#Bh:QF$J4h/l_glY(c&T5@45K_\cg6gVWGQS'?,IGGE[Ee>U(_Z$'
%AVKC+RCf#C_kf;FPTG85IA<5p=lU#g<gFht?#qs$77["%_4oD52nJlMHLNCdDhJKo?UA>&E]76Va8(!Jmm5AK*E#rt[ef=WYYSOX
%e8J.@f<%NTqeUo9iSBF3TQ+(2s6,2>s"r[=+9L(Ojp4q38,&V"q]?`'HT/-5C<OncId3f7!ODS&DbSo2YM\jA_i:!.>$nu9p:FbC
%[ds4[].JDS!3?un5WsG&dc5+;L)fgZT=iLP\ds2Q[C,P(fo&q7Z__(_=sMgI`-9M#3d0pC*%hc.\[oM4B9-tXc!Kl*CY?udT&Y4e
%H.q(]htNFT\KKW`)9EDK?E8^jP&%QqnesTBXmt-$mI(8q5b4EX,L=[TmcNYXqeGa0P.',W1>Gu-Frlt[R/$R=SLlatQOZf0hBW4'
%>?$8H,ujAmo_3Z[P0b'C-3G/ZDq=*\Dp8q+5;,\k7r5^@cY,O,]hVjOe7Wt'AnAN^EE`Q,"6ejtG%YVVg<8ATT<G/"ja_V1HCs?2
%P,EDOmcEh[0ONa<?gM+2[qt!*/[b,F[ht7EN-[#EgS=F2nn9l""oZ<XglmHDX6S7"BW6(AjseQ$kI0.<KC>]B?9W1L.]W*QOmJ\\
%3JRa<htJd.NsPq!]VWO;cEOC+#C"`7SJmooL*\5DY0pTBik$-K.n;*Q(4l(jK8[].@cNiD!A!+HM:!8:+D(@OA,#BuXj,7aIRufV
%gZMYQ1m3Rh<<tEI`Mb%mF?]@Zc/@[@+F="Oe*A9.\GCICpqspJ=CG94Q='K\f:G03^7*kjQ`D]TZu3%M/:Dh5E&<#(%kOCBIW(Fu
%It'f*nDRM[V\d&rW8uOaQ-o!.=4a$-nNSmSY;OWQBic6YnD\l/pZ9%`j]:iR*JMnkjh'[tE?Q2_pjQkHbbR>X2jQDV7OU&uQ)Q45
%To;_c)4T[*c2%5en^TK,EhJPB>)d_:#0W(QY('d!9b?UPhSDL)n"+FQH-tt1W4b]>hnSR-g5MN3s%eM7s1Eiqnb(B,0d8u&Z153J
%^Uk:]f%_4RGXVnU0>+!TIl.HCkjKUQ10%Cho!:OA;pgF,.CAu@E:)h0io.KgUuG^P(Opk^fR"A%1&E'pi*^l:nnj:3J,6&#johTs
%^7d@KbSrFPjl^9:,F/)T]X>D]G,Mt)?G?=)BsWrWh8G3+m$9?!$O9>[[gQ`>h`>2IB"P>HoJ,cTO5>F*\hL"J=6ZgMHrt-s)15Xm
%>lR:?/0/ia5JLe("0%oHG8&,KNF$IOph#c8f#Gb0NGmSn0+HLedI"16m.Tgagu!K>?h.W`7IZJE^pB#),h:N(Y:mO]Ngdd'J&)_J
%mcV2PNP2aIS`ot"f#.Aq6-k\d[B,6+B!'k!^U/LZjSml2m^m6cDT;Bl)Ii<1cCiX#D>5bcO&lf,ei%lUDb;_!dk<plgR*?A9H#S@
%h]:eL04=l_9lsg@L?n_`lX?qC$XLLPSp5XuSo3jfH(VD>Kk$!\h/E7+l`IAJmPanPYIrN_3ql3U;g_hsEokYh#&"qTnp+qjqsdF'
%n*R0(RS@G4?q1hhUGnch7f\%JWJ?PojNjPBU3kKU>q-aB9Y\fT5FYG_"4#f#]sK_%Da/J?XhD;kG!18]ro&0LoO^VrHOP[YrGuK;
%\37hCs3H<[U9>DH\AmdY-1!c$nq>qt@_3:P'^rJZlT@8tNOri::8=%KX-ga4q2UTLXAO@"=Y,6XL6G6_Lt8]ZBPb<&^3[:G+X1q5
%.VU^;ZJIgMY6m![0Ut]3^5u!@?^dO\DP+gSJ,MgdjSsMts&;_Eij>T#&HCe@64gX"J,NqrID=7oI%abmNcLor:&7u5X3J'+]pb2b
%6D]D1hA7[@.N^bOoBS&9Xb$MbrVb>TcM@M7C>8BQ\uua-3j0oN&k;eS%Wi92++]H9eAiY51`CC?77$9/pd:q[/`,4tRZY]ge,RG&
%T$Uj%M"Z0iH*q:m&"gMg_6<LkcEFtc.]g[)P118!['&r>l*%kce?=45)A,iu<NOUerMT(]5tD\i&&TZm"\CjLHk_EO0KQA=rq]9d
%BRjf%>6mCgO]WI?QpXK![''<TY.^SOj*L!ge5DO^djRt+Uj5>BmVD4A((sXAU*p#dVk8B3*@*p6Nl$Td8Nfa0<Ei"nGFs+J1`b)0
%J=9e8UUlefgn(6h]pS(70<*"5G>H/amY<h35h'p0pAA)r='gPOV($QG`O4;S'H0QCUeh]CRL4a7R">n#;bWDm(.JV>P>XJAR&7##
%ER1Ol>'\U5ohGJPq_TU+l$<o\2/4`R;_VAYFkZg<Wp.+`q6:!r<BUZKTU&-47%h(gP;QMdR0tDl8HO*+X/,k.<'MR5djEKLob.Rr
%'ZY2Fi4>&QM]\p9T`'1-XK[,OY_EZ"dl9]NNe!E:^G4n^]N@;!97hnq(MKA=45uZiI$tmD/Tmt$;qJo*UM=JB;BP[V+cJrcVudK_
%=!YTUO&`;3N)]98f3_iMLe1n`If1Rmc/#P9IH0`20-P<BBa8mE%K:u*1Z^2b:M!U,s1gf)FBJ:)'6]nD64?11Yn07CQkdb_LZC8u
%e%fC.#[[A=f#Fj!m?WR45==-^Tkp$K+;E+Se@$Hn-/'go<A_J3Vnul\h5*smqgmfpH*Ts<1_,pC1***(imY,FX@*Ho\q\um,RGn$
%+_`/db+j\Sc(_BdC0IkR.pB#N2@8n58PkQcfM@Z42G"HF`i*EQa7>s4=P&FARfo=:"52$fXHQG#T+XA(&T(2_E@*9UOba2VH<=P>
%/+Ri"Rt:baEYd/=)3cZ.JI#Mm.,MNV@^!B&D+LgSkB1@DGUU"]HqCYqj@eqO3)C2A'T8*3G=HVk].>l-=^mgmW`CSqKh)"d%&,-a
%mB$Ie4>2X<r/mp7ng=;9JVF$,(63*GUO\UeM2eE)AM1n\3(SZi`#](O75==hPRIFC0CM4AZ3nNh;f$]c7&l\D<S(o88K1!u625,K
%/+/%E$X*.3&erDHPSs0IG%fs!3,0._SjZ5#6EJ]d:+g#Q65\5$+Qc\o2'+tLLhOGCE^_i-/LX.[6o#J*1AYugf6Fk9Z"H4\MR9Fs
%OQO:h#P(AM3^!c`;+MsC0pU.;3#=Er9@f8j:lpP]pOb^f<Tru(J@K><ct6\fa^qK2G(e_mYgQ>X-)ddgJgugQ:$Epn/-%o:hC-Rk
%eg5G'T9e!l[Q\8^'@:J"0b*A#@]cOblN92,Z'M2c+si"Ca9O+gageKQ`-XA(PDpsk.l>u;,VpK?ieUg5`DnX$"(lBjEX6[)T8CF1
%9E52C]XBnPck`;ql<5\43/&/*D>!t8b<:/JI\^dYT9b>2(1@M,FVO]r$_)aN`?nD,_f8'_NlL00L*3iO]KXsK0cfHc,SKc0QAQr)
%EJf&F=\)PiR(lN9-d[QC];t(@7Z*kOUF>6Ss/0T's1ZE[GLP8UKmaSZ/Ff]QFHm''Z8V9X#sCS$,T!.^2'UWs%8B+b[a+(H4.97j
%.qh2hPYYP`q#I"c0H^uB#6bj>:e-W",W'6=9#p[j:l3)3$3;b7E"l^c!rD4Y0^L4#T3UlL=;3Q[$doTMMb!lG!:Noo9h/A'*G`[E
%&/ts,62e&d,V_t`$q\$*bJ]Xt!/aNMTo`1(9MmJGR%aXJeqr)4fHRR*!M^qJ@]gQ)8co/>BaX'oX$ndDY"!%1'r'OCoDSh"4[Kr]
%s,=Z,HM16kf$O,>BQdoWCI<IrF-%@8le'#*U=(!_W&ZbLTsPX*f$cB8D3&+aabN1&'9:=jrJ20AWo4>\B+RYn0HnLCM:='Ho+J:;
%Z7:D?24T,;Ni0NQ63@\L\q.R?'.\lU0fBO>31FerQlD-8kD;g*25.hjJ`p>s\9(>4COdKN,o#69,FV5!Dd`o"'cVRZ6^m,/cG7Nn
%k&Hq_oXe4B+fut;.KkC:5`CijeG]`+#WM!-TWob!:![JF!GE*T=_TYm1!hp#.kFEso9ZOW,'Y/O#_EWl3fc-;H6@L/HDhG($B\9h
%Wf=77<?SMO-h]OoP)qCmiY.+m5Q[@3@lf'04Le8\'B=;&*3uR*KSeqE+HFja6eK[<&-+:3oD'V)M/aI/5WY^&;]7HZK'gHH0p.`W
%BE5h"Yj=[hIS<R+-H+d"l&gQ,0kI()&a>d@GbG,;B\7l+)O1R^"mMXnO>8Kk"a1m78H/GBOngpG5:0cW9F0<V"HD@oBV`>P&@73"
%Zlqa)E7A$BWPt?lBdBfS8.5O>B9A90/tmQG";)NfZFPiq-4j5;I=a6oX30Ef^P&JA_I9kQp_M7!`(]P!'1Dm0e3SfK1Gs57@0m8-
%-5$-7+u1!L:U<7k7p3c*,hhdW1`RGKcuDl63*$:janc':`I.7RE*?XQ$t"jal:DWY!dh;5#&TK=\%*ENfMp-mlidGSI(Cs"W>cf6
%&C*o`-$!**eDugLZM,TN%KJ^:3<At'),kK#&OlV*g_KdUi5ikDcKHVYpTV\c#U9I#J1SQTn7h,"cV'3T#pLDo&K0^b"oh>OgO[au
%9OX:>.]Z,Z18Yfh4"+,i!m!rEMo$Z_ki9R*7%s!BW7K2>@p-]7r<R'HY)YK(@M'X/d't7B#UkFo52eG`B[Fi?+`(,QF#o=E1G3k.
%pn?AOe8@D^Nr#a=5=R`.7iI'Uk:7Sh;;`:aKa:Ts3.:ia@#Pn:4b@eQe1)nZ4pU(t5m*P0/F`;HJ^;""IG(pAY@67MfK0+qlU0nJ
%;Pl$rA)=Q)$Xeg94?jBWJs@]60F4X"3\H]D9+$<;lqQEZ&H4&MQ2hsn_:aY]o(jeT;6iUT6n%DWJh@>%SktQqKiOdRNs_Pf(d>m2
%(.1Jg,HX/*ql^19g?9phHfD16X;+)&!hMQRcWFSHO]cAjaI'SQ/-I&f6W<"h`,\lPlm;/o%qu2b=N$71C(4<(:n#`h=QY`L"#L(W
%=98:Q:#M*:\>DhI+gE\eOYgKb*/VDm),Nr?L()7&N!1hfd3!E#q*%>Z0tE-30EfRVoth$WN`AB^E7G#6'8aX^#u$t3C9W+6/kl?8
%'[B>np*Y6uJHtt.7Iaeu5n(7QS\>\S,Eci5&4D3&dLk9cfFODh+;3XJO6>HEToB(#5e!?<&jFg*%gTOP^<sC/_Y`h6q9g)dT2B?6
%V%Nl.ZSNg[&R'h[,*>D,#.,Y)6G4]Sh*^sH6J;)>p/Y_4\V>\ZTLbUW7MeISB8fsN$Y_*1D8sD$C]V$V0Qo0WA0dl8CXUZgj>`C(
%]^lPm23^*u8I'g?=F[d:Z&a/pU(AL5<441WI8a-\6M'2s!PNe/2(C54[=b_1I[l9:$rTk<Q,&Jj)i+2UZ9rCnprr?>O2QhS-EEi?
%(O2WQA1&=+4Vq5+0E<(foIj*_Ts*+ZPU^N$_,uU4iZKLN&'f,,%F&pr=@O)L6*X5P6VUSd$fDcc?CiMB%)=3F.4t\[ZB2>#7gTT)
%n7R!FGW9rfD:sXfF81Yn20=@@Qip-aK8A>^A1B)QZ(S?@$\1U5KC&[k,WM5SKl_+"!JrmpJ?@j6%U?FX2=DL>r[8b9<=LYr?)h)g
%ljp'>Lq<m-O\js]%&&LX"X:C;HpEnJlmRor15Z+.;r2\lF5R9\-9^G.S:1S@=OE;M)_2KHJQ0'e&g'a$^2H-$m+,-.7KTJ&jA:+1
%!WWR9Y6)du*qp"HlPlguh._NLc8oWbhSp-P"$3:2bc=K=o_RX\`jl9,BS<jXeB%^>Cc:#7o@'6ri?K'![dgO_+*_#,KO<+$dKr%>
%VoDXSiB2_t=J_B2D))/U5"L7K(Q(EYcrttWP=:YD8SE"#5Y]r%:'uS+&W*;$:I;P3I?@9f%"Ve6qWsg(:kD7]*o]-`La-tFbRC",
%V?6l"m*7JG5"]g^J>uG-[lrVqksVuTK\??!$^:#skW>'hR[4L((&E=4"W?A_/lmqms5eq9H=Xp\J70:MI#^S<_jK72E20_1KiJo*
%)60>s#^FsKK!&Wgqr.nOJT$Jd5P2q6W/M[NO(]8dV&p;8WKGj_AqIN-J<PP?#QP0[@#mF!f*WHA(,%#88VPnN^A1'g'NtaGO&/^=
%8"n^QV)X5E@4$QVloKY'`NIQEo#:Xn!QA!n";bN&>Kmrc"Q9Fe&B`j@_`5Pk.p1U]p=a?%$]ZBt8s4a`@+*')3F'q\+e_62d8MG'
%Z;\]iDmLJ1f=na28`3s9Q,%d0-O:Y>U,J5`r,8p8*V-laE.\LF2?[a[5c)lp[?$3:Yae!ql@mYpC)k`PlB@h26SY]3Y:FTQ@tLDa
%.-!@YWc4%#B1LT",Z/S\W'^sp-lF9kH"]8N!:UWI>Y*=kfH0U'%A=ECs59^X5U';K"Ur7]pVU'!S!!aWO9!NN#_]<6TP+_2ieM0r
%k/WV7HgmaY>#RH^NO>]`B\"FD2+g1Ji%2iB-R58Knk$XkdC@s5^Y)?bmTQ9?MCiK+.NTXA:6SGR!NOOZL*4E,%aO?gR0g"qn>V.:
%`r,n,P+q#c$(D4P7`5Md^aZ^K!][c=3iO"4dJrdF#uO5=P0hu+&U4'7K,K4Z$6NK=9d^c':pIaJTCCfD`oWU*R3$3dN$9%MlY$!S
%2A!(,`g*&9$,n.D=`uR"8:f]Jk0'%Z&0Ppm\CE&-pQ]@0+6"nKag$PX)U3T"`.2fk32mcpq8R+f-$"X8EMFG);(OFASYG(uA"SSJ
%@r-V.J,sj-O1igaHO2;D;3oKkRMp'hJ0=oH9j'eaOCmj(gD@8u!jmm_VSM!=BK2AA!"tfUJMrWD^k^Pp,lFlZdSOC[a?JV?aD.M*
%pd0\_k;*Nm4YkVS[-iO@1p&n/"]2Jc+oA)3JD@h/asM`3BPMX(,YD7":"Ti`^q+`*&o4sg/Nn8HR)],t4>,0ceRh1k'6/s6l^elj
%=r@t[JPLr1$GsK>'M2-5f'(G94n_PE]_iWZ#HOPc*cd.\>K_hkM'9@j&3U?qaP+\j,8\OXO\r?fZOpj"*bK2cQ;M]-A6l\jVo:.c
%HF#HgSMGZiZQX1=]EDbYNU%Rp;^/I5q5ih#!1UT;Jg4t8W)+V"<N^>GA^s'TA1L@t#(_$cLkpI%)f6eHWEpUCnEJ4K@>aUeYf%C0
%%M'B9\:4q_]Q4;E:n;Kp(+)ss$`/kTIttg/cmuI`V-eq44e*Mq1^"M1'rZg-k]BCjA1H+M3OKF;3\=:t&/aD/]`Q5nka.1D*N7J0
%W]L>s0o8Jk9J&r?b_6[rk\0S@Q'A\!>+iI%Tio`.YGY<?Yu$m!<rApr30dmVQkk&kL?:=-.$1CW_F/.sak^HHA5fE:pSrV^)-&_0
%_7'PdKTR/LRM8C2HnB`&PnCJ47!$f_,(YFJIcSU=3e,7`%o%14W)JM7p^iA6-P9iJ5CD/*g#+4jmGNnc!is@o5K00J9G,N88+)T^
%Wma8j^dR2C?=?V5J^6hMiI8]eSB<08W[PlP[cc6Rd1ch%SA]js2q-EC@NB1"i1X7'CrHFHEdIgL'-%Bk\q&@j?s)C5M\T*"%!pDL
%F,r!!RD\AsGDCsc0ar`"=9)/i,Vna@!3Q^5);O8&2DO!d-qO5ekFRRoQk^a!#j@BKohmZ#Knu/5k6QDJ\'P?MLHaUbo"9?XHSEl8
%+99_gS(e6G@6X:JIOP4+iHp60LgXq<lf*O_TeqLZ:#d])-Jt+cFXFK^4QQ3!5't.7_KdgHSTqjng,oW82V=>&<&U>s`(WB@MjI"G
%Sd*%W0/SlCT@&TebLIr.j'+5"Z,X(Z'a[>J[PNjr1XVq`JJaePTfj:h(("S0@ONK_#ZkD:<U1jUZ&N_B%1Q[H6L9(a8XXu>qZjCt
%[HH:^#sIbf$cN&K^.8eW`1Pl<(pXtTYsU:qocnW'AHb4TINm72+p!6k.,$=@@`*V:ibg1eMK!FRC-0%pA$NqU[#9!?Uudo*WJG(U
%UT%5%"lD-8_C8GS&ND@9VUGGfiUb5;Rn.[+aCdW'3^rKK]I3Tl<FMd/W]MB0%m1VYai%H%X$BlW3go9sGSNWb?J,aNWO\==>F7r-
%,jZ[DV_G?s7#+?6*gE$+_I@$E(W1CZ$'T=8_Dcdp`lL>#HGQG4Zt=#UAgm;FNft(j:?!BKY:mOLAl$"fQo)O%5L%8q'?;VXR]<LK
%=5$P\kW?qGB*5&_2Fg%E7`r.m<s_;F<(<*5/bCBu]2`76a1Xt_Hfs\=;jjrp3u9jg6g7YtNYI&JU(YmNnGXl;U*icCY/-&p_/u^3
%6?TpeiLhNV\'Wqs3Ro-rJif5!$n+uDNY/3>!.6QPh(?,LM(:[2TfTg)Bji49h(JNEVGJ<,<V]I#'X%#60(CA8\dX-K7<rJ,+hknd
%6TO3%o"IXHP_G_a..=7-l40?Q,0Lo`<>$.ka!Y--7A="n19]Ae3j*PN0Ai/G8^$gF;J->Rr00U/>sTGu!Am6(:@Z>[Di6ct\!.0j
%#PsWgF`T@.b2q'':5ra9<Aqc5B!P&)bU2X6:?=eHj%fN@*>&Par?hkNB'dSK0"FlrorIYCVi#nT0Ss;j?>(!KO"-#5K*fYB0S3:.
%L>YR0%OrGDN"D2'#E5(,B!X/-A9t676OlMoU2Z[j1UNm:<C3/n!?Qh&PL-$p`8$7`8sNYRMX@&$d#=4LJQ(>PYn<Ck>ADq^7=9Le
%$IC/(;\l-1@Z!fA<ogau_jqD<YNBLHoGHWN[a"N%d=nRG%T!iq3g6I2"&$$*GOS>FVIEp7'D_;$\:Y0.c.?]mTQ[&KMugQ;D7(4c
%6]jnF_fB'W^ePC)^pQ!CTL7Um<LV"r-b.=r*r!?q]7AW?bqTh6a#jJi@p\0K[hP5RD2Zaa-?(ltVF!\5+o3]s7l16q)i\+U!+efZ
%.Z$!X&rUB".,%q_RIu0.Tc!@,r%P5G9un@420uf%@]>4>Ha?-b_nr\=#E1eDJ7%tpnoR[-`Y-9?<5d5mFH=m;h%Z1aJXK@bQXZU7
%=rV?-UV0OZkKjAcPZN\)6Z/MO4ph_\Mee+*\-2CKmKHo\(1OR#[+s1Ns*fi-9>c96PrgmuR4FU,em=.EHO.-i3t?Z"&E&AF3h$\5
%90%ATULIPWB-l:D_8="^m,jU^M!uA$J1s]^fnm3VmKj+B%[OtFGkoaD7-8&2?Bp(b$/X,6@c,ruPHKk`l'511H/\qD9cal-1KF@k
%1apUJo1b\B(=WqfjFhDl+Sjf_m?d-B.Kk9o%%oWS]&np9pKLa"7$UF/;I0o0e?mS-FhV\tcuF"=/)o'saIF$F#mZnBWnn+C1kF\;
%FC@jbjoi\J^p,;=Elr*$d)kl>e!<AC6aL$tk*%<6M`39\Mn8s\p5U[GS5V,6JSD5Ie+Np#)(6/Ja#X\"$>e2L&XLuXeTf1]E"q#j
%T-c6lirkoF/[V2<XmBRJp4U`8a&F<ZW:0e]d3+:*i5q0'%LGj7&k>KI#]eCJJs!TB#Dj0:?Wrl[BJa$HlOnI)'a%3>%[R0Z!p-t>
%/E[sOWf:=P?/m.r"9kAU.?8O^T6+fhrNQeHRmW%7hURGjd<!5AJY["7-t6!*A[59264Z@+CmBmn+@O!Ub[X(/BZi`>6'O?_HiTI'
%#^j\O/1X7<ACXt%P!Rk.p4V7!&m:`h">tC6JHY(/R)27:e0^-g+HIDJ+<_nZJqQji.9(peN%ms]p8:f&'fd>O(ndj9NJYSU?6PQu
%:SMH69jq;UW6UF%Ea^:iL@R.;m9HS42H3[/+C&ZG,p,B:Bu/?E6tN);MGuY$3?2/]@N6>_7*V;"m_C/J-f3<[N1n8n8cn1nJTG"j
%@\6N<\9j9!\We3FOl5Y&_7R]g^QsPb3s@n5lU&Eir'YFD3Q^p:F`XQ9)Sp.5a1D<l])>eFf?FMe(X/e>2-63Llj`+_3,W3?`!>Lq
%1i_26l3:q;*K<mQ9ZW*&;p1WP.67k6F,1GblSK>A_s52-dZTIra:%.j\#kpnfe1AKmbN.aj*@>06Rm$.LkqCh=Ah7n$R-hc4sl(>
%%1_Y.,r"j\LiX'f!!SXFiTd%fI3GL._LjWAY)_*:Y;&'0.huigYF6Y?N8r0b`8gWL\PU9_,oFtb0pt3MN`pRDSm8;%`=UO\7d5#p
%Op@O^-5qm$8Y]ROo"m82/;Z?6k\cE8+g[O\>.#Gb;*@,"q2$$qk6<"&q>=,H&UEK:);O5lCkMRf@Nr<oAE&?JT3-(%BN_Z1CZ;DA
%3ksEY8sgG*P55IuF#=e%ARYkVrE,b4$lMiu9aC#Zhn3<pMEsgNp_M:f<IGOCaY,dC"hAo$Y;6n*R+Q,%r#p:8;''7BglDQW!]3Qe
%AuJArOMH7>?pHsp!eM^&*ZLP\b]S@*`/6R3kKp.HM>m_ZM`$M^9(7?W[J_"Y@&+>ZIO'r](M+=l`Z!ulcm>ip,W:`QLL5E*a<ID'
%eZe6V+:pY#','.aZ\/ri"+,gI<5d`5#,$H*4:p[O4>j`Pq,Y**\mYUkTiOXmD9+B-+md+qRQtKDiKYC;U6Oi(g9Qn.*m9F,[_p`g
%3U["rH"Q(?`feL-$A$4C\PW&E-Wn3+!u&Rc-sSEe\AX?9<?u=i.GkarM9/nr`ghH&-XnJNY*QF&,>O?]%[=ng'p'<="IVUS3>daR
%T*?Vl_ac$X[-pM9muYbV8V/(_?snR>[Fm/0<%1i$O^bI#f/YqVO?LZthZ?l>CreoZ0CL'a;-;I8Q$q5TM,*gaegk$bo5UI(aj'9N
%*Od1qi#OY6l?I`*4MDPalo:[dN+&c/`*f#BMsu6QO<Gt5N<S`93BRt4akkSOF\u.`CnCKXJh)(HF,@]'m$?2b.k]0'o<<ELKjr@#
%Td+icau/-J?p0AdA`tJ$ns'U+6rIIO=As5^BRJ(%:Pk$P4jYh3jdg\L4dAVE+p;=IfT<&]>ai]X4q9L?^>qr+&-;5ZF<lt_7`drE
%7bp]W*G1MP&-9[N\ZfujL(Is,>QqW%bc2ii0/bc7#bsdJI`RXWKqm,H\+e5&SkYd_b[h*reL2N1B),A^PE6SX&iJudDdY)):d/;M
%)5",WQ2;\Q2AP]nN2`_V3'@R0A=kirpYfuQLW1\`i3&TZTa<Jd);pu4OL0Zmi'IUnW0n@+ihZ*c`3?5acaA#%$MRr0Y[\\7dKn)@
%06H#(!1X^7bZVd[%*Y.Jb^5mi^S&St4$FX-^'r]?,#FS*mW=(4VC(=2%N?:+`]]RGS7rk19t.)TG:C8]gn5=Wbp<JLM`\7f0$sD>
%6N.;#+>=KO4BZIMeTG+eI,=AI4H,KN=('tjS!,D]m.uE^9KCH:F6(@YcDW:N7hs\k,^I5A>.T!#G[;I<:;99iHNIug9hESYJ_GqA
%%L]pG`qIGe,7i"7+\YNFGB\2,`Z0Q_+NFSm,iW-*%5e`'QV'"7OQ7]<mo6[PMIBbW7[f/,bR3@PN#`(HD8:_WTk$!CDZ)Q'<@,[N
%(-Vg1R-P>H3_-n2Qh,Zl_MQ<Gm`2VbWB@.JCJc(o!FD5^b]Adb)"@+7&Sn0VDBA>taHOrcGGn^u'p^aJO_hQ[9V^a1!ko+@iDcOM
%5D]qTUSgu:^<J\E#E9@rj&g;52OS;mk4l(:QSLhGiC5^jQPhdqQX8BA/CA:^!k$HkYNe`37tS]?G@'l5&DH.A5T,hM,!fVL9C)ld
%8HSOI3.#TT;jNX1Ye,lt#a/5[\Z%?%"j\+"GRK8HbAFN;@kTT]<U@]u3?ZC!/gWEnEY:cmc[=3FV()eTiAV"qhG;7W&#CT.'ji(<
%6KYj;P=g"2"V)q,;A[H;%9@aO=RrqrL)1QlZJadZ(@]#&O&H/?`35l]0A@s]=.;T6QjHu_/F^B1QHOs.k;R+;]hQAW&UH5FjHe;]
%jV4i^'MRmU)Z0/q-YEQC'i/FG(1!f=q=;k`2+K]dcOr#@r5A,7[UmCkkVbf`.M@/T5g.YBh!?>%PjNic"[Yqhl3p<N9#\Vu]?eFj
%:-aeej*0W5j334AeJT"!^^#B26@!Tb8S7K<Z]J,4QZ,?1NjFQ220tF=N_$XumjI?fTcZ765u2*0*"BF&in$nd.>^%-2H+bMQ$bT:
%ikrm:1/Fukjqp==h+6,++ilV8%9amm(IkCm1(RNBpj#n01@R$Lii:92B"f1"_MEaop,<)?1k27;(u/BB;SRGca*nU8(e8FpRnJ]8
%*gm^c%A*E`)_Q2)"]-Y0*d(t9Zgd@@(HU0]>W7n"XLN&E\k2?umnqJh,W#U[0@Fo4Srqat^a<$0>UV#RF*Q1'Yh4V#bV_3RHAld`
%:OR;FV:_n\?gP]+07&d;)V4KFNj`q+.9X#Kh?Q'$)dLIjmDI=p&ic#0kL_J=hu/C!*Q'`C0^]M8jDiD<.Fd/#5=+L*^cjHWYD$3/
%S=8PU!!nhp^:@.[c%`DoGL5^0o;ip&6#HIAR`e7iD5Bnu`#Ft#QZ':5?[&R4"3_-6PI&M6kNbIjgi;@p,GXho"B>H3RRE9]/k'&`
%jS,I\8&HchS0:XCeii$`+t%^!nB8Kip/9CO7=J%$O3T2AcR`k71>/W\c_c(oqb+6f+k[)*Z796(*35tWSW[rp)BfaYV-P?*.k3DP
%Ct!n:[M<8BbjgMa,u45eJ?[*_hhY.3n/`Y_f>cV8F'cIae*O2V*(s$74A"]L=WrkJ&,F\q][KqWkW9Cs8PV]0?9$24C?1m5JRnQY
%I,fFc$4[OZ7?+W)iT+lIKn1RA:urE7U-.ZW9P\WGpGqC??9Q=MmjR6\AUa^>0A2DCGCo0C<62\/]M#LeIh<B1h71Np'Zd>g5^YqD
%*lr&5E79OQ,.t;mV$NW?-=f4.pb"ni8E7'JPXu1u2o8Z9@O)2'kEIm>[[-8*DR#!R]a0>9IAAj_Cu7o@eo>/Y5OOY1-fTWgfKRc=
%6_)\.'KQpZKk?*e:.(Zrk83(-i@0PFA];e.c&#+*Tl-Q:M/]:7-mjXKAdXJM%Ko[ATX6n'd>`d1hmNb2VZR'QF,'4c@=B':,W>$\
%"=+o/L??R@Fa-uMB`\GOL.I4#PIQ]D1^?A_4EoeC#1KVJ=AEi7J['H#+s?t,FUqOW!b+::M[SI5fT;cI\3'MsK8q7F#('HC'(uk.
%,4]58D$cM"22cHTO;"%,M93134i4B.38#`BS$]/P(^#5#Y>#L6A/@MRFd[.2OgJV]?AMMu2t:&o1l-0l!D]oo8&=)On@Cro+f\n$
%EO]4G1*J\*QU+s)^(+P6k6X`.kCUWRdTdSA8pj"fZsFk$Ld)LbSi243(S!r+Lp$r$r1n[abZYVZj6+qPLVNTr#qI,BOU*ZQ)*B#g
%G_.jU;rPoP`,T[m"b[=2E;3kV8gZr22[,$Ef`6KK6KI4=TU7PDS7ejVS^2JL-+%OE]^M)I850"A%iHh+`GL8F($dtIaLGhmM&A%f
%j=#&'F,G$oEQWURUiO=oFc^_pTe;3Up(5^hR&iCI>WUAcn40hhOqF+?<,<btch>^gl9Y22'&=R_2JaV'KNSZg8*?,ID2BX%oV$57
%KKQS3mM/l+#Oi8qJ2q:<+jXM/6IRnXT'PD#/5$V]/$ZZOMIr@h(oN%`iRp$an(SI1_+DC$CH21tKqX>p.)?jZ-7s!<NG+qC+\=#Q
%n=ZX`0fI#VP%/Ih#tVe+/kC@MAdjI>QO/`TP/eNoHq,;N6=ZhM8->3sFTZ@3/a1s,2_cZsMdU3&@\!-3gqpZC7g(r@MESD2=Ma(g
%=.D[D<F:]G'*QuhjWfhcI(WjV93-"nGgg]iN\F'FP#2hN5]d>_BpqWIB<@lOF*d6tQ9.QL.7lTf7,If;WfgHo:k4a0Ykhgq.i(#s
%q7Yi<'-Hk'0A\PriDf_`$&#`2p_aU',l7UO_:dAqQKV:nYlXK[E[Mnma9i+/`&Mct'oE9SKb3tE?oJ7fo%&[#@ro.J9WOnfe]Xap
%VMT(6NhJTBG7'M*70#1d*ou8\)LTF0(,Fe(ql/_ufa;`A,r"LV!cqZcbTXjQ"`jsUWdm,)k=T,WQbaZID-+QD?NtSmoi)!6rZj1q
%.U^OPK=N\,!9V/.!p7?,R*u_aS6#o9cqPf?V^I$UY70Rg?IB!u\E>Js3B2\M@*XhV@*VXW@*U35^`68[?k/D.QpZo<0F'oVbZTf2
%jt&(hF(i5mk(ln=F!)77*%460L[444R.I'[Qj]s&/slq,]IK9V.pu*u'>[pM"`muRbX'-G_&V7@,qt*uV'Rg.8OY>"'m.6]WdqX!
%,+);/0Gdd**:iJu_44R1F']U*Gn\#a<s<YO(!Lq:_44R1F']U*H'?%6:+BW]:ob#er/"h,YCJW=!HWQ"R+#%hVorIC=2CCZJN7!>
%F29+UVkY`/;cPLf:',KC(!Hhm0Lm@V!9Pu8172!?0]u43F(?1j^mnI0F29+UL[Uq$^mqEV\R6&;"(!C-3TQ/MJiVnYX+E?^_]kJ+
%dgDJ#dn*r-W+@Xf2.$E+Q;e!.H,0p5`G#Y&@3?:=7kgkCk/&U8dhBQfY(AZ>"`nu6R+#%hVlO3#:BGUK$Kh79QjY6l\N$^C3PPXX
%E$JBeF6m9bJiS;E<W[@!6nme(_44R-F5H#pS4@4XcQBut,=003L.gRFHjqU#/Hn+('>m(tFN;9kE^hTNS?Im=CP9EAr-9]9+dgFJ
%f\)P.GtFFBGn_B-g/R1sF=^+jUk!'S6P7*hk4!S$/ABu&k;/()BH=K*9-T-g.N`;SLmTGk\<rTsJ=a]-EN/;EM8J:%(B2D9DTAN7
%,Y_"12nmo(r*JsM"cUC<hVel"4HF!oZAk'tS0EdrPf5[&dDVkq)O^nAg>$cM\HW'Z#A'#b@T):YdOQ*O,Sh`9)*eEHap'%KNC4o5
%F?GN#Kc+4Y.2MN.1R>Kr<KZK[i%=R'%%O37U=>um!*hmO9S.r<k'dRi38oOGJ>*(Z&6&-_#Op:XiU]FnooVi$BlQcsR1bde(hq9Y
%LsM9I%cNqL%*_-a)Jsp*a>q5YHV'Ds6=GtK@VgGQkqq6\BNBb0,Ptc%^jL<ZX_u]P6,XYSJUl!Hr;s&marSpiEHEP&B1<kW_HFW!
%#<!p#$&`7WT"th+_9,g]+Q>)kRWB#OTB^B\!s0jY874V]^kp?=%3p!O7Y.Hls"A_;ZD0LEA8+4n]n<L%\.7f>C"]^ohJLdN(m(dP
%TJmlV]RBB57mtJVaQr9Y6UVb&3<7[MaIf7<U,!]K,+,>TN00(K*]FFOCWeU&r-4hs)Zh.U+E3+QeD\it8A&&A#"il5ZK&o_.Bk#n
%:*kE'SX/T3"=j@Z\I)K^L"fMCEg=[taGgm5Lm8`$l!J?h@XlV/'VUs:TMF%^6ZmZ@!)g;7Y%dQ@LGA=pO:E&TPkud>RA>X/Uu$!4
%&ob4%(TCE8@+9]dBu&irUaA:V<"QN/ekX4j$Zi(<kqodJ/BIZe-==Zr8\<@29uf"Kk.nSO2/f?oP0f2;g9t325(#\?V8fVh9mgC(
%*;Tc:(55'6Cm8r+5o,2*$o!5NhH^W!L2Ao*!i%S;cnY3RK'Gkg<g\"#T_#u>:mt;R8Fl@]*(E0!do,.u>Ek,lObe%fO6(p`IZ;?g
%k@bZI7G2-8HBuhhc^Sb/DsDI*G(GhcippfOoT[JK6fGJi'\aLhk,L"u>b`5@7^ApNLKf2NCDg`m&#OU[l]m)o,ejmZaNTf!/@'+0
%&D(X@O#7nSiBDX/6io\9eq`haHZ&eiq&AtU4a/sD37RR='RTfEC]\>@LQm`O:#Xq!iGr@S8n*e%No'=T'u/bG1&UagoSLW6W.10u
%1!Kr"_sm9J\h/UId!"bm1Cm9:WRS(O"IcC[-Y&dNLt+'X=QIVTJ,%3^MbhU8>DoA5X#P5`&8'':WiHEG;r5*<&BuV4XGC"BY4+t#
%I%'u7EN`DlAXF'bn[!RNWdTVl<h#nd.\])i[gX]BT+^TF2"e#SEAWLV8jF,./e/oN9IXO^\6_/J6AV,a%P<Iq'1m$i9/:6NUemd3
%$+6(t,qMAWX?W+:=b.8i2(V_$!if/W;o[Pn[Fs]h,c\7Ms!G.s5m-LGS.n,ccp`:4bDD,.2%MjK_?BFlhFeFH^.2D4U1+Cl2TWDT
%&YYFM#C@TD,a$hTHs3j->jE;`Cb7e&&q-^Q<][D"4Wi^j7R5>2bfSm4/BrVVDA?g1R_2_UQC+IPf$d0:79ut*b@m=eA]B8XX0n]R
%&eus+'<T/k8Iq3rGd6lT@B;=AlI$md1Q8t[2QYIcTns*RfZk.ko5RY?J?iW_#^fZ4EYiHtF%o360[;!c`ERP!%%nktIUd8Qb)>P"
%l!);P(UllM]\$Bn<H`].^_D5Z[\@5=c3C?W$,/EE)mS]=i9CrF6Bn*e2d.<*gBS\mfiYsmeIT+_%ug,cC]85C5<B*G?GqK"n`5lr
%pb$aqkKsfdns:E1Wghkk5g0+V\/cg?kKOpdF:KYb-_:3"%PagS3$I<9`50JQJ,<U4V_XuBOV%MpUGQ;]S&s!=-N@=0#=4lBdW.B/
%AVbD9(a_:M-_HM=Yb0^34$m=`2_T5c/ODa`KL#QjH9cnh]-@,MfV!H?FrTZkNi=Y#X/4c7#O.!3h8>$#,LiiN3:as+XPqU-L.Os1
%TCf1RIOK\1MWQj]fdlO7Tto$S=brf7WntK2MXUSX,Q4!_8V!>FY>';6_aog[c7sD[')k#V@G^c$+6L5=YXJu6G(TMZ[bMqSPi\:J
%e"er>\/+IYXA[G+&suV@/+(*;RY5,aib%OUQ!]H\9Pt7533+fH([c]gqjs^aT_=l.)r#VNWq[K/@!*VC_/Pc3ZD6p4*b#'/)j1SF
%B;nC@TD>OSiRR\UI/o)k.jBN:BPlCLg&N7>7nSqF6#.U@H=X>.%XTnn>AnS5rC<"M8!3g074q>M$2rL6g.[?!%</JW]c17Mm4jj^
%ig!S8FBe6F#`#6q$rnr'D)%*H'C)l+Uk+t/_*l5sdmIaK]?,#m'fj2k(%F/'gYGd*p]HiA5.]7hX5dbh'8s8`j8;i4]UIJXO5G>k
%IPJgD1<U$r.m=V$27:R=O/[Flo#NSph@^f?*-Wm(<VKL;=9U+ZV"<OSMEag%?&q^OEoCiYYEZ^-&SZfhGFX1_:\Z21Mc4U*#-9tV
%B./$M,!!7+35.q8gKdqDCO?Ya.H5#le(^Ch>5*"6q`<H8i#1l[F<(p`.5nqUmH"N08$&1W"De(4l>L\Xg^[$o$LZ?RO0Do#Q6'=c
%?X1+]%b]">I,QP?Z=NAtkLt^!g?*I`=&[3i%(9jZp?"+PNp]Foi5^fofb+GA8hZ(D).dPq(C^UO_the%l.5%6C6d5l!D';CI;1M:
%ZHe[ESmlQ9mO"*u-M_,YaqcPf=\,3dofoQ)Mj=j$E2F4+b)js_Nj57*R2f1dQ0:J?@oFk4pgu$2Z<-$@j^X/C3U"QL,Rscl@jV!'
%A:VH&7Cuj=dGj6ZmU2lcI&^NgYS*D:2s5'`q5jpoRb-Sd#D+2aE;>0C`Y7Hm65\;)<n6Gkg.HM%CodM8Ki8]#]e@>XZA5<52L`jA
%iJ3,em8`#76PI@7D4Z`t'T$*R;cf&qMfjU$fe\"<b6m&Ln?bZ"\Ib68,E+9L6Q!4XbtJ:L,B9&1j?og\`N-8-<:P-#=pkRO1DJgR
%o:?sEYce'4&gE(#Bk0n.m;C>KM("b_2GC9)+Bt)>M*]@hr9"=)eDa*&eW[Mu/BE_BdrNd9nhl#,;B@m&E&i7"CYt=&Dp_87-N3*V
%r?j5:5EL#a)l/@5[4]h+_,8j_3V$1M-=fZl^/D7=?-/796DTY4Z)5D$'pf\?*:3C3`^>&meUMo5(E'D:nie$n(nMhSs(7$6UY@Dn
%ghg+]B"b.tVYh'#J2MT;W4qk(TOj<FrK_+@E"jX"r;=np10/b/jOP.-6@O.]B2EYiWWR?rd8"biHRg9eZCTT;a"X3B\o8R/bEKW:
%c;Db8l%@`#^W(4e>Atn36;PLVn@24o65rphZ>6\+"!cXh*,j6^*`:A?Y_t;EhOMOrn4mN;-0t@K*r@gLX0a9FQ"PYf*L\Lq-m5\R
%#q6un,+^"j(-61fW^ol[*Cj:dOle&2eRDN=\l]4AB"L;%CQ)=8@2=lCI%Uul`R<O=IaoGOF7$;s-G:8pU1gYc]a28[44^ut3NB<@
%+]nJ\o'%6fqaJM_WhDG#eD]SP]JkRfY(l.C.p7-89O"h]>P]mp,Gd9C(P`GNUX&!B>a0124?W7O$l1*a#+AuZO2aFQ8u:1^X>tb9
%#t,;b>)Ys@@I,-U_624FYk_no@^fJZW*$o/Z^V,HHL-t9Y!>kYmDQSE6<^Vr3,0Z.hP7n8qSt(UQ9O7m:*orI(Eh.QS>p@]G!K+.
%$=3i?p8@)&NU`H`FDYD/a^b,P1sfE9M:fl^j=%o,`oY"#0]f75M0oGd9b=ItPbO'=['Uc,ioESa+8[pMM[W1$-426)@&GA0n"bU4
%)7-+%^t^[edN'_B"T9;_To>4hU=r;I..#MG@Y.Wn\#4\7d6^LFf?H2s5J08Dd):i`mp":VJG12o/R>eh&E-4FZ4\<&L%ePB@5+.-
%EdGYl?Q]&#"q#s;/Y0blA8af43"FW9Yb*%cCVV^*f[Uem=N5EH3Dq9D!nWO6l(r/n_^2+&a6e^jA=U)YKX]dEm2pWO>GaADJk/*,
%YM8^JH\*<t&e,[-pmEmM8\%G$>V"7^k8`?n4nNNKPrLS_CuN"E8_@:Mk4k2M97\&VKV?7uW/?t6YtsU3NRj9C&k#+g+VR]c8ZU%9
%A4kW!qaH6T95pc&]7Flnd$ZE$<=78ijd;<XmJnH,mM&MWAUPcLl=q%f=\YiP.HAu2G`s0iq_a+$hI+Y2]3t/0kg%kZ(.dhe54X'Y
%R8jfpC,O'0=@ejEKJ.[NrWe&<V:m'Hf+JU6%dj8N0/Hp5ang=[F(;iah'XJNdX'CV.1WK4m-9n/&]oWeG]0?u8-6c2=/<G!g8:]g
%&Y/:,F2,_>d4*+%;8CCS[#"m7/s\5aI(KEGo+YV[5uD1re,VVS:lU9jLq+fH/4sbpH=F(Q,3\aM^O3EVCckk6rC<i37""?%p3Y^c
%K(3M1j;dEqR:+S@.3sgb,"M;ZU;2C+<=2>rF$6q0_m%5Cau+JL,0G3;n]?[f["+0I[%"ZFD\`X-ejQMZ`UHaK"_j<[mF<#5X;#b]
%/qaAG!fBM'A(jJ<5kh'+lT\V":_Q0F=E=lh9<fEU$_(Og2[X]=7rJQ7^""[sS&L:F"[0LdA[X"$L%^_oS'FMV?!2fC;tP;\bB6cW
%L8\XNSdK#c9edIg/s&XEIthkm#q*=4O)Ad2j<#Dp2A[0c"j=H%RP9lQ;-UJG&$1gqlF>G=!h,@&jBeikg(lXki=+Y#Ceh?Y+][(^
%k':jQH)0uhj,*q:[6ISSY,fh_#t?5B73s6er5seP.YcAP7V=YdjVSBbI>FWqZ5].SYO.(hXsGTZGrtct'nV/&1FfQ1JX$Q-(S4@K
%"h<:$jZ(M.<TRI6D.SSU_pT<e2sB*>E@,8!@Yc7'3l<mukV6D^?&KD*W=4+Mg#+OmblA4Er;i*Hc8PV/;:NF^;9bgs<J)3Hit__Z
%>IU_6^M=<IKI0lr6O.;mee4.I+qc,jX$X'tJXGs#qK#W8BPgJSoMM1\jb#!>^8^PgMQA.JlHcWo..LNHQs)mLp#bCgDR$W\;%A?o
%CkM0FJ@4$$B8TL4[4>5VL\EG?aE7jM@1EL`3Wu)\OMpLJZOVG3XH(AVYGS41$[VfVekAoNLQ9h@f`Pcr#cgM(94m:jmVpVe3@R`r
%2*d(7!E(0.0,0+b%RkXrR"Y;TPV!b*e01R+6PBs)bj95Q8+YY!,7JWH-qc'feIb1[L!d@r3Nl/j/J^^oI3Ij&Pc-[X.EK6)K313-
%HqIMFkl"=W27-s/=&W-AM(g_"^Gu^+2,$S8qg3?ZTVsDUZ18iAX16VXi:pb.:2CNjG0%:Obs-HKm+Jg0DIut6=Xp6Sng!E)U,GU!
%(Q9R+I?\G3pT.8Aa"Q91,07;@&hp**;kA[W3ip/"H0js$T&$'UVJ8S'&,[?YOeg)k94Ucheng"Pi]CaP5.#TO#dAb%FIiR;U+G$(
%"c"s,W'.F:.^EsodQ0b$7]uu!Q[95<OX7Nrqf"cuNmaB`4dRn"o(5"qF3lTE./;C,SC+B9?W*]Rcd3.k;<P6qjU,(W1fqK0AK(Lu
%go:?Z@NkIlG%kGZd!/2[VFSVX2@k%c]9SVRN*/,H`3!pl8u/cCUuV&!`On^S9Y>Fo/d2ptY.B"JIqR#KI'\7XIbBmR%b9F65KE3j
%_o+XLrj95K]K*/;VOL.c-/F1MdHqo!>1JY/RN0/<1-/p`^>>WC&8%At(D;jpQfq2"UkW=:*Y0=6aNIu$Kh]Ee_6uYm1`JFOan!i4
%[n-S*g*0A:BsS$W)Ak0HO6YDNRp_hR[,'_H9<^!/2mgLa)n$sHXT"5`K97pR&l6<E#f)pE\!AG'OEJEk&7@"o'ao'iO46BBMHHC#
%=T*;_T:#bek\?#(+V_ob;UV.&("^j-Q46\V=c3^A#iA?.NRG1iNP-'nIu;S)--J%I]8l^f1F!3$gT%]_>O[[[W)hGXFcG]t,V3HT
%q>"Ju#kQ9[n5]s@Y.W2!^4tGE<",%jhHSU5BWIjq>D%)bARh*FX0!,Z5(MO!].LI'Qdlg!n)e8DTFo:ec9:]`MBc52=gk[cPG8b$
%d9.O1Rh(1_Rn$#4_(2FRYrJ_rEldU31.GApN"n&OM0^>"So6>jYTA'-dmu2qO(=L[q,.p$b+c5aN0-Lg$c<ht334W7X_AouYYa;j
%b+r<lG!lJQRoT1P(<3CA]Oaj=4NbR':,NIVQIc0(PYJ`sE+3UQp$+q-MM$&-@+Bt;-#\"b4iALIFSLLm(T0&I@1iNaF1n"L%dbuG
%JUXru)Q@B&F]4T:Mq('^>o7B0/=(".8JF4,))b_1j,\f^Am6qN&Q,B-MP+?UMW,U*dm^43.TalAXCWmb3HWt;fJ$_oAmr<H!i=Y6
%%(i#nIUF'Jj5McC^Z+H.K@p7++&6mZ@82n?CsdL/>,.C^JUKJ8GITKpr]7Y7R;*.X+^f1EWgemVeir>J-ejS4XEPnb:fp]Kbf-%,
%IGZdF[d<dE,ppLnU*`K[/%06<GbidK(:=DZBCBb3'-JcRE';f<>u6DYVgffcC%?!0m\=SW*Yt`EGKj9@:.1<dNbgk*$&GlK!DEg9
%pFq;4Ii)5&f[cgPZ\caOZ)UZ)JIr\K'WHDI$3'@3J+*_O`\gh4,V1jt\2^ns<mXSS43h,bckWPfQ[S!P]$I9IYnS]sA#)N9:WneW
%=>%#(!'s,7q^cPufQ"0XkGV]g<uNaQAb)8T2BO4p<Rm!iN$:8!<iTVB=8TTeW/KJ@M3t9#7[CA5M0kG%W&Ojq6fN/II:Xq@@;P`.
%>HSBL]Bt_W$*Zh\\=iNL*SYJkaqZaA0,Gu$2*Z<2rB^TQY>K*K9S!FAkauP0rVceo[Yu4<W.=Z-O6CIlZ34inA6t'RXTZ1r]F@UM
%&)_&"(eV\?S;79XZN_!!T_=o(*a/fp("Y)N#@"L`IVk*R@9tf-`'Eu`,ZW)I9GIgfe!s,rVGtdHc^MHj=(2`iKi01<&"eI8Bs]de
%VSSAu]>No)9:5.7HEB7YdF)Wa3`AJHXFl@q!JHW$j1VJng>$h0`i6Vj`c8Y%I+W$i68>Kb7N>6peZg<$h\ef!J=9Y\5X["N68A\9
%2FYu#\l!j(fgd\B]s2FmA[^Wo"4o33Uif+n1MVq.a/7k7odN"Y<BIcARl5+hI&E%`%d-(rOd^7+%h5=<3]GB&RFoJp<bI>0eJIu+
%#idQHG"tb*#`7QjKEE&qMU>Cm#0!&U4ln*A(<<<;:DAP("Wc8tlAd^/*YY[`C&sa;c4?)8?56'^/p8or++8Oe:,u"3h.<+fG8uJ3
%2KeJM@\ul_cSes/9Z,NEHag3l^n?W`:m$[iqaLj,EE><V2."ug^+o=H3J/?#F#0A0:@c&'h(O)'XuL"02lEdgI?kf$@;6cj.OE:@
%N_+BLnAl\PKn:#mnhgN:`,Rb9kS=u9GVJ;gJBE!'Q6u_kNOF,k.[7p,7=LcN0%'Zs7E1o%WAP$qhVG(qQ*)HmTeX%kd]aCL'Y!;5
%';F$rGp-f`lbQl`p':ZCDNEJG2j*Ip2-XG80X$HL<rF1f\cmnu2'PIIP^4:u$AY0[J\VgP&Sh6Vlt%`$AK,m:D&t#j'Q,`0aKZ;R
%&Xln%1f<IL$AikUmd/=)<n15kC]Wi)A]8I`845c.83uGP>neI3Ef?flJLsKr3VU.;A91CBH>Y>feou^^)#+l#h'aW'N'1A3F`?,2
%G):aeV]4O".Y#Pk8uoiAld7PGjO!1dcZPm+AZnhMc_jM`=;&erg1>OX>-k#?5M?gZ4eloCbVWFq/$/IcIa:-eh8m5Y9ZA58S]t@`
%!k)`$8KE2TIePPioGQ\b<GF0\ejun261C_d8/N=F1fqD`d_BI$I)A\ILK4%d6H[24bZO.JSd)9T3BI<MN2U?Co4Y%`.DD_m0O2!P
%UQseK+,1u`-&f=[9b9B[`AX-Rk/`n79`]3MbLMX5g;G&*BS(D03''h([!f0.qRUXL<N@D.a30C(\KrFnRJLSh&&b"N?,RRXRZ8cJ
%hk45Qad(#W8M1>VP8Rh5Me!/_`uppH;`KEV=,+Uu>n36n?P?hLL?5LKio)$1Lpt70]-RXNE09ZM]n:Y7K\XXa%:lr.5BSDrRP%7K
%_Oq5tSME?_8+EE$2-,^FE]U$D/7=D"a$s1SYbpEQO"u)pYU8eYSl/sjN(sUhWG,5K1"7C(/X%ALSnDK8'k)-qQ#a6C06u2?po?oq
%2*m#5(A/t<ip6rVS'<Cr2EVoAC_Zr?`]6^\>Z!7;R.VRSeBt&3[S4Xk5srWlm.6a$nG_.poQS_u>?s_2-5bE(kIoMMbRF$Ce.!3G
%gRKG1Lj$otoP+t&JqA51p$''!edkWjM'ut1"3/MD<P?8^dUFhD0['m1pEP=b_(raZc]<8CboD5;fmdDahct[:5N)hW`Im@Di1E+m
%1(PGPP@*tC5Mb.s-XZ4`*5k_FE,Ie./l0Ma$X<bRQ+^>H$l:K-22Uh.SnX2sRm%`'Ao;N^Bk6.HG9+,$.qZQOG+7$.k)ugq$6du6
%kN+7gQpqkc(!WQS4Qlk&/:3@6[`ZC%20T]R)NI+J,V<:s<_l"DCt[/?GMSf(N#2k@&\"W@;F/R'INmB6cHsDQ3Vq5_kVesOQtQ#)
%3J'&b:>"!hEm943%G4kFab!.cqS/!!Ho`_6s+r-%+"1iHDe[J;AENn&qZ]?>+S$4,!lY9N;K;9:n1/n?/qHZVj!u<tE.+\&,dk+i
%aC,"`Z=TN&T8Op3/`iu,1,I]@72ThZ#2W7+0&f;g0TYR1\jEbES0JoUVk<9#qDro@$?rbPaq-XLKX6S4q)/.hXZ%UV$6p^j>Z96p
%l^N%f'(jhW:[hGJn4EZ-kPrrm^KmIE2KWto^U6_sZd28N>X]MSa"5aUI7fg(4W>LJ;IbUn'V9Zs@2*gs)u($@JTYu+7L5.7JoC?P
%n!`6oW43)un`,[5O)!WiP99?6b\N[1#$(<ND!rOi:+qMU<8X4dXet-NK/?^RVF;Ih*&]hn%i[Y5)^%$_R)eXKJsrM2]p-QX7KDkM
%:!.TN#bUAq\(/en*N`2RD0M>HX5MeZC9qSD/,67ZaJ5(ff_^I-JrjtaZpo:-Aj'#!eQM#UJ@mSa_Z7O'Rfu5"!D"2O_Jbke8"T5L
%<]B//3Z4'Qn=-/.F2B1/-KnH+L<_+o$.r0D<X3hP5M_4"7_n<:d\e2_'u.DY=jloVHqc[B+tH?qarV+S,uJn<_VP^3>)&g4NI7[^
%ahS^-XlhZk1El'k7!6[oG2.a1Q,#GF_i.nj;]rf.cNsD_Yt(e=_);:m8=L%/%2?[!\kDif/2=;[#`Jl/)S$*ca@[B20/?O[O')ou
%,:g0j)cd8=];uB>pr*i^dE\^3Vn0:tPY"bhLn[qMm&2oglGJGV[kT4l`f\qAY;C5MX<A5T],iX0LOpYOI'"g0QH0u%FdD6%7#oB-
%W^CeK_`gR"\A!,]:0j(j^HtaNI:p,b.G&oNNaH?B&L@sJl)(2_%gR"s\cR&+\?U#4"1b'm1feXe!\F[N_s.NW+&U6'D6K^cR+TGj
%LeJ[TmLD74m@:k/AlntP?-<n\p0p!oEN:m?Rc^u"HA5g`:[a3/pIUq4NGECJ+da&t)L]>FpI9\#+Srfep\kk+!#X[E79E8e>quM$
%dHS^<nqh(mfi/=eM23"7hj^OeRt.:=_07HA+LEdsQ/$!DT=G[95Y`-j8&Y1l%?_7"GS9XOS]E#K\(=:XPe,Sf3h`7Q[:;?'TU.]Q
%\dfi\].R0'&oPBIp8a-R@]oSd9'TS,U_Gq7Nk^MY,7,3<K_X\\lUhp;G&B9:U8a8r:^81hM^<dulk^PBH><BG@Mt0W)I&\,jrA+;
%M'mRoF#3YU!3f;`Q8="-+MHHiF*(6KTH[9Gm-bJ`,,9;5hp!=H/?&SfO<O+4'\%ch&q%qE0U@C$W3o2'd2^%]%;ibB0G+dlKN+o0
%GO<97Z!V%SaA4l\LBU!GqST<"Xl]+O7T\\EYo>]^<#&9NMVDtlAo?A.pW;66=K?(%O%Cbnqd[C^GQHfGN=fp$R3J,q/+F@TgIO6M
%'.5;FjR\^+(6Eg%/q>jim=5t!!V5sIU^`HAs7"gI1138_6\'E*1Y&G4A^>6HU+6kZ_3#+Kh^",QAXNgNDq\u9St]C!W125kfGo'V
%B?j)B'5l.p+p1m.N0e$JddHeG)8ZZlB#0@Tn+O%qd&fIKZR$)A"nlCq#!marN8Qu9842`B\R>0pI['qL)5U<eJJK`:AH,El+\^0Z
%L)qgVE(>WLJVklD-Q0bDT_+gGP]Iti<EDQYr;PJ)114%*Vll[:Sc@Y.;cF1`@gJ5P"nAcsM+H,&>=Es.?Ud&M$7XsN=(?G2fF_-K
%H0!hRqaC^jcKW1ZFf8.m?!@O+%]Nn<WbaDGCKVkI5tbElM++J:ESLE)-ps.Bjk('&%'%OWgJbl.E"UfGS7Qju;(OA%^k._ip%.0J
%VrBGJ3cM"km(AdFr8#P=*FYEE&7Q>eJrM<Y'DhRH0/?L>W4tidoT-fP9d>`60t>;Ii=!c-_H.6Llp0aK4.QqEPIY9C>ePfLR\E@I
%a*s<DC70J8@?5jsFV>$WE3QK5/QjMqh57M3E=MHB1(X:eioI+2MLh*_k)q':PAgEld'#3.Ha8.%hd;DpQ:\q7IojJL1^5=c2?R1-
%aK0%=`A/EP2:<hQRMh.e?FW/mM[W]0=^+YsoX2N"L1Ra&D4pB`2TN$@.%TDTCf5?l%=;P\kPRcQG(MdIkTf'9PY,<Nci#$i7KXHV
%$^"sR*>-LMM5q2%S*eH+^._C8:&lM&\X3jO,%"3j$MP=hD'Gq[^MfV="?ns@M[UCRX]l;ah&]O,qWK>s,6s4i78N6"$-kRj)2;[V
%R-e$G0LlFY8VI7EF?;2?_:SJOfWR);=g>IsA"hq&8g".:oGs_]6eIQG_U2CJ3a*U>'=5W-"`0$ZZ8b,]*V_U;pXLQHT-!m]O4RaZ
%pf%'YGVCGUX3B0f(*YH]+g$E`h&?jD%M?sA6eKBOX#]Z?n<,gd.\H8^<O"5UdDumY%A8rnUk&c2+aOJsdIiuY-d'.Q7*nRB,#d\+
%<5c0E(?iK(V4)[,%0d;bD*AGt8qjb%m,Ee?]V(E>pK%AHVg$QQRZ+8@KU-3VaY<$W[]J2k"D<654n]j<NHrkfM1Gas8p=]TMKEXU
%*_YN[^d5+Rh%sXb5eX\Jf%ss#E?ebhU@n9K\lqMHp`cuZ*32AM)*>!OJ"jfHJ&eJX.q54,g@.<.E"(B;Eo)W!B+b2_ULhOeAKk@r
%FjJQ$ndt?e3,PF,B=+RCpCS".N8jqf,".<0(a'GZ-4q,RajGS*-&C"oQ!`bOc!+>6)*?rD?!0tm-h@4fY;skNY%E3^8>8FU63KYo
%iFGoFoX]*U9[=*5*'$=)-b`t]((<N.eb+b;!2!JkmU3U;h*I+ED3L&Z/feI_TJrU%ftM%f3dGp#$FZP"eOTuABep[QSKb2p'%LA=
%XA^-^i5()^6B>T!Fi',"HY1hh;h2m7(=ji>cn/Xr'ui8GZ>>ir#:f_a?j(SWK5.Qh\sVs?,APEQFY5m)J2lc?U%U;U*a@\%+f''\
%2Wc&gdL&`U+]=&QML[0S9muq]]"AbSQZJt^H8sJ\D'b\(OCVnJ=2='A[O"MJjXP/\3DfN<5bPb6Ot?moEXZPa7_uku>-9!-<IJ2`
%AnDO8$N+HspGa_BNlA[UZ!%!,[Bus68+)s%Gp8O%S7'm`G4_F@&%0i=k8]PY!ih2Z6=a[ghI@G'2+?<4b_PIslcY!LnKi>gfY^>Q
%4]`6b$*3;hN]!9!*cZs#B!BkQOf`@=WWS8%SGg'hF)H<jPRJ?^4pulo-3gg+<,98&F&AT(e-97>Zt-:%hE<^j*))8(ji\?3;gjMM
%"Da1%;Skg]K<q!?Uf+]c@/;Be/I&ai%m_u5ng!!N1m'aOG&H-VEEK=aX,2X$1U@71*$5sb]<A[6/*=R>:$cJSU8_bZkeGr4c[+P%
%+f7fXP#YrEl$>0NSCVU655o#3RHnqKMj9s=4Jc&R_P9F:oG:P[2]5&R;=e+ne+uY_Em]cpi3*fQ[A$R4$J3'9E=8_%5`IC&\*/ui
%\iP(:?>K]O_D[4Y>^91@M?Pk2PjY!'Sn;7uYJmNuf1W?B<*KT#;ObHHLb9IMIS$i]A-4B_DAE'[-o-3':,j3qn_#rO0@iEgZAo=E
%d321pD/`P(A'ts$:?#YZch@".rZg'H-sJfO`aYotff6QQ-Z"nO!)L3fbJ%e)NTN`_TSjf5i^;VC7e5F#cJ9u(#W4IUhSMb[An(]5
%r[>s&\+`$-)CCXl_)pPC'T<k1Hmsrl3?>JJEB>O=$c8d:oGH)YqJZu<kVcPd4:89hZ]Y/p[Q#)3E^F1T"C).+N)/S%MS_Jh?Jt"#
%9;4::2E:rmm/jC&guDfa,aN$t.%;(a4]R,6&ka@uH#4q\m2eN)8X8:u7[^PRg!)cq0*XaH81cEHk,u%>0#e@?5dXbHZ0<)oV<tq_
%#5/XUFZPbaRjCu/9IGua77#_<I33i\lmZ/`ON,WfP+?9)SONIu6C:6>(Lt5qjEp7g3\ZIg#biVV*XJ^KmqtRp)u$E^LB^SJpGV,r
%.&I6g3lp?/qDh@rfE[P#W6suJ9-F.Aofr@b$1q:l@'/b<Kkp6m+MpQ6'MbTGBNo0K_1c$EM[NH+nFuM2WC33\gBK]Xb0sruVNX%Y
%m*F&on7U)gT8\=8KeZD_GrRGc,c0m7<PY`cW6ju\;<6G_@Ze1l7N'0+b",^G;]#T;LrKQI_&A39iZt!a5cBU1qk,B?N+1f%$^1e$
%..@ih2VGpO)YqD:-/G-&>d4Ha8/*15%i\@p31C3$$FTFD/nA=A@YPOZ?u9]S+u.66[0GZV?m9#$R!W3^$pZiTJnBpmCnFI)%8@$s
%abI(iA'3g!,AFTq;)EfFN`39P:I`7-?]X-#;u*n)"2@(]Edckf0`r3c;E1Ms9T1r2-d5+]4ms#kBZ&fLAp3KA'o7$Og!r`N_gtUL
%Hf-+aijJ8@lIa1Z86Z0fcW387"*I]J/]33d;+[k8ME;r'[LH9GDBA2lU/<DF]CZ?_0?SdR!8V_a.8um<H(J4[OK4@0Muj44`.hEf
%o%=dLOm]<M8^7^A7'pAcq8h@8D.00pI>M@JJ;$8;_>Z\6I'c]UK*+!oM8sf0G1(G9f#l>d*FhAW&Q%p=("@WCn7^\Fbiu(+M(AbM
%K8[GSpahfp<O%]Epd$Y*gG6K$NhF\Yd#NEX1)nbkLL/'9!a<2s[>r"OdbHmpE@A@[>A&:&Xs<O<R&=7^r*hM&"teIb.OD&?:q<49
%"k1F3k^g-'Y8^"R%N)l7<F^#n:[X"9YO.06XN`b7fnuZ;+uLnR@5T.-?,J@gAKs2#+@*.4%9klYbM=";0#g0"MWg;ao[c4ifNfKe
%H%&J&.A@bWJrjktV2fd>#?*='b.(K*q09Jq!FsS-^PfFo".^e.9"=9UAdPi&-'7bTE')2:O>G+*'8_?U"A/C,dkh'Z[15YB;>oKt
%SquSC=Zf"X%^?%Kb`Xs:O0e6OZso+K)*M`1jCJ\.r(j%D"Yu.063R>jah4Vm%?_,nSTJR,b4bK8:=iX2m!AduEU^o$`\NK+V2?G_
%'R]K)0nG"cf6^2a?HdrY)P%ZsR;Y@T'&o'aD]`#-K]->mHW$+o_*a4e'1/s);]N.90Jijq7]mqOpNiN&S%OG8OPA^DeOJP'EDV=k
%:ijiUYNa>?-u!/4&\/N`%TERd:&Gnheu>bh:C(imj0e)sTJ1piUQ,euFretLphe+W't&[anA.CY5a`@c6U)'f3PnHm'd@KXc8`-#
%5'")Rm>6Mm/,"dB.KJDjOi#@_00p8P^O=7CgEM`)T!l+<q)?t-J!<Pn+f.>K;5dLFLDNr)7M%rH6Web`6q^V5kcemLaI$G:)QKM2
%8Cc(rYH#:k*2F6+/tije;&sK'Cso7L=#"9oh[jOc(PIJH`K2gh5.L)Y,(XGSI43XmZ8B'*;pu;DLh&EOIE?ntNcK5`ZI_L;_PM59
%ZRP%9U(YV8kHJ=9)Ur(!`G%@o&knKn*9/c-pB;hQc_ig0bm%>#fbPgPG63AOdAX'rFU:i_%t5qGEi13E2VX[k>!aa/E[JEDS/UbX
%jm8#>Qbgg.R?<.9/?2auUn%ITIP"?^KVGKDfBF/>o]fn2m'ct0U/]XmGb("p:k<V-RM(S3Jkp2=HrK_(%^WX#XfNgk41sU34]"%U
%+Ke6=UHs.bC3hcF,=jn3;d)W_ZX/`2'#A:A';@rlq])#>=ILY\`6sL[R7'KI>D>M^G!L,#N)O1.8u$_i?_kMhX_%VfbrK!rA^MKk
%)F>fK2GoR9d&g>GA8A&bbHOi_NiL\3h1LM/=hS7'Opjc9YF18H#l2`"=1fVtSErm"_!Y+l?SbP$CtY;kqe-c&mH;*Dr<$R-_.p_h
%p.siNB-6*p76LDb%mJ*fkOS!!4S_;S*n*i=L\h%PlQ6XjVitW*>R5a:LJAPOm?:IqLjU=_;;ChV,s9i`37"Xg!%E=6.Yi`o?Mdt!
%.?(Sc!!_3C[cN;h8dt1),S.JRZ.>t'[ln!n#a)4983iT+nD&5sD5l#.%qf3=[O,ZuM<E,\YmRhMj(Pe-<g^?,<\fCaE"YdWR-@gO
%RpD_</J0ENN(8Y?S#_XlFejOBQ6m8_/+<S%2PmM*L!+ihVTo(,I/aYro,fEADk,oPEM].%Q5I%BJEDgsn5_FB90P9>Rqad/O\X)C
%=mQJ]GEmCB![*5sd9RbPdXJ6$J2)3#`_Kfe-NP!*:EarGE!ZOqm'+st^pfifLqf9&-GRoh6-T7uHncJb/WA>>bB+8;IqE0!Z,.hh
%3K"lo#77YT[2%Gnd<m'ajYt5UUH3RVZ70Km)sn1kOP9Sm')mq)rXDJEbM:_1Xu30>+F@.2RnY:NDmb8%H?6GLXb4U4/g"[8GQO"R
%%4IQiE49B"&>#jaA>[M[o[^?ee7:)k5sbFf.d=c9qtQp%>4j'$1/8TL@F34Z'o.FGj.\q;[J$YYk=O^Q,#Jl$`NY:DdGb!:Fi[Md
%2sEM>_NbkC)V#ut1glc%%`6XOF?W8/#C9D1>ug)>Kf3,M3$PbKa\F:8PsRZ/\S-&O"JV8<LaJO[8O_=C3Ooc,TW4f:quE$K0Q_#S
%3!fd*-=*S"K>@kE(:>i*J2)'&m]<$uSJ#5Hl(QTJr*:m)_UWiI;'Z,V;)+aVdY&''?=`KqY_V<m4n<F#s!"'&3*?_Aia9td^`Mmj
%k3;Yi!hCDC:fQUr.(-OMg=&%GDV7t->!@^Pmn4UE'I*_TO]@OABd?DgoT;u-a">HN71c/>7kYk5TMd:W:f3,j"qqP(,mZ&R4sH0[
%Ym])6#YmqM>B<hL(o+qXrQ.KM-2MX-kgfu!c%MpWSBus$7!K5U/"NSCMCL@;HtuR"O@`a]!gtekP>(oS:'R1S=V8U)?%RVU2Qq^e
%KLDfd=gMb00St1Z)"tH.SHZtY-?:kS.Vkr@?B@V]EW*LH-.-c9`_Jr;HViod]='.jG$Bo4AK-mt)3iZ=hEds#d;5h3k1p't^th>Q
%NFerRZ#'li<6I2$Mc<0rNFW@'A.Y;]/cN:=@[1Xs?%,YtC7_]"=6YB=A$&.4!:%H?N,o]U)e,[V)O!n[AY>!eUm7X6[-2&^_!4a]
%mhB1E*=LYk60Q;DY5Xm2Q&0)2I$;.@dIEKhP_6_EKJFlBW;r0q`KV7W38k"]c@^5pENjsMgaDff\K_&=QF!)cWCX.=39F7HPajn?
%'SZuQ6'irCo[LuP$o68]&a<L(&78"Z1?uGrKW+ie:]2c<Fgg8FdHL9]"nchAT?ULV6pXC81Hi_2_/C31hh*4Pl`q#WP9*4"(uCiH
%`i=T8GjZ@cYWB8s5qAba^ef^;0`-eu'_,#"XFPG5DlbV;mlf)oF\2Ij=A.%q9>ZO4U^\E;qaC]_U$jfQjKC@IdTImckH].?.3EH-
%;:<Z2Tp%QS)I7fsf*u-h7&ir=1gjTO6fF"$A&$*0PnnaXE;si'Gd!M>2%,+DqD?!^B7^iO&7tTeHI<APJd?Enl77[i2J;^N&,d])
%<>/A"K`TQ+%r\C_?a^d]>(Q-4pPM+1DsC1DO-,mN,sgWkZB;TOa#]sJG'sb0o_W.5c>Z5H/%%L1cgc#c$0`^p4XWK7T7Z-j^=d3H
%7):7K_2/X\ZcT9\7Aj,Cdk^+Tci#$i7_cBN`sDfr(`4-mW*'Vq.p,9m18<>d3`(<7\n4@r2SdOs%D_Nf,Qb=o[V`?b^uo?ZQ'!O+
%KneVmk+T9HnEahVLEHjH@DH**@44tj6<L($-*sCu[dCm\+=1Se*fn+?IX(,o)6Tr#JSV_+NMGI4aT^%SjEdhYE-9LUmO[SS*N.>b
%\=!!@.aGPsTK#CM<pY_@;npCmiIUfgJZACIlA8noCe,MITp[..^D+`)\2X1[$"-0mP,a8%=Xe!(@!Gg;K$^UHV=<HS?Y$t12Hu`s
%M%f9oX"FH/n3qSMoh61%=!=93Bb9tE9bW4<0,DU(U9lMQH01(Lh]M_a`iG*m9>kA0M/uXSAh8J$?;V6NM?q[Y16+UmC!S,.UPCB^
%3!.?%Ug1=ljEM&7L(AEVmT1:1D)>[,S4EGF7gE^rDj@_%YgeQC7=TB0kYcmV5c+0g,SP?&kobkg<[0]bqJVGn,3.4/77Dq'C,S8]
%6K&*3>fU]W&"-qN/W*M-W9#FV]7a$)MfXoc70d1r]'L`ACYIp@q5;8^On"m8V3mYa\eRDT`af`J'SVjCVnlW0.o%,?>'XBu"CcEt
%>bYNeq21^UlJVBc0/?^uOe]nR(<o@S,f?#NV59VPm*[:/g.b`pUU5bD3_nhhP-BucAWDS@ad<u=]-?If;npIo/]g(ME0#s-7_NUl
%iAC!1>PFopLN<N)"nsA3q[c%CR\Amm;(dH1/)kDB"TGj`[,2u&FiGq@_=WA2.O'JEOjOEL89,JC!38`ss2q"VJb=5ln#(\=FD./7
%>Z"20-8'<fe;<"RqpuA2Q*')lgi<8LIi\PrIeqrO,)\sJ[QNGN%9A>skD[Tb<.+KkBn[G]lkZLTC/ABjDh_P$g8E&Tm.9Cd_WB,,
%%agaV@V<<u$Rl0*TJCt58?P`OL&#oTDiJ[[pt3'r+o&4.ric@n_c_:hl7kFV1TaK%bY)fZYgPenO6$M5A#7bH<PBKoa%ldTc26pj
%\du3K:'b=hfuu\&8CgkAb1'Fm!I^2))_[p3p]P&86Fr5PU\q[*n:9\5I?DIT\8/skN"iCW46*e&U<>nWdX8[uf>]a3I-fVJ&H&\f
%.6mbqs"Aj^\'8q50<<UMFK?$cB0X',_uDtB[DSK_6nR.kF]B/E_PTU5m2mF\RMFuF71's=8(FIj)99;tbNL^g.1.bd)-qtr#W61A
%`m7pYq:n5*LU9R<bk("jK:JB*NH5q(,Te1:n@\8gN;U5An,4hWT0o<)[@+E$M[&]!+hu45?56?1%er/lc0aLTN@`Qenq,/L/M8<Z
%NbjM8NGM.h,9&jk*SE@)e6b]]/B#`AcI(qS19Mes1p2,_AR+n<&)[46UZr#aZ0hEhNa9SR*r6nI2ufD%ZsXo@?-2]XaS*r["EZn^
%os%;(c_aNt'<2(NCg)54J,CtMU7,JddD;r`hK9=d6\G:Abej%2k.t$r+FX%W^V="j,P3[IO2LoM0DE$S[40CfHP$.n(TQ&%HnE]3
%LZQRD#UuT&c"$88FtEu2`ZX1$ipXW=oAqb!5P]eermuU<FK4nUm?'ZQHOu:%QW)`%X2ohRbIt6,OWqF!\js2aE$BdiS<m-PD$u(C
%+u^jYCgn`a"Q^imQcS*H&kW>Un@)J5MaFuG+o%nVFI[8:j6P&T%j1bZ?Q-c\qRh=/_o^W[6A:BK1$L_'<pLt99LO(+V280$R?(i#
%i`^C;Ja':Pi(X\qXONIYE\L95=ebY/H$fITn%X>Rh]=07];>$]bSI$4Qa`hMKIG4/o2>5CWD\(pl\3rY2QZ++q/;=Xs8B:RQ0d[$
%Y%.6@YhpM"^_VK;ip0s0$WK>3V;Ig^[Q?^LKY(M2/\Rk+\r.uNi6@tdOQP/DJ!DY&5&ibs>HN.QUE$!eLJ65]kAoAk`RTe,ZC=%q
%^`u6G]M$F;6laQo%^gs&lAa(%,sJRfK.'hTZJdF!DLM6@0Nq)<.mL5P<ZU_?5.7tJRQb5o@?97phu.Qb.J0.%U2JW@HOg$lQJR'I
%GJ@qp5!)JgQG6DO37Kg8KADic@uZ&;'s)?[0nDF>'`+T*a4;\B6+AI4\t6dPg[uCJeY,$:^R^E*,-6(,*h<SbGp*p*jOVA4SW_/P
%:LUukq-2nX+27@6na$2a>c$aj7CS'(3=4Y)f]mCb?Y=)0r[KRBP!r(-S?QmF\:0j0'YVf6\8Vk"rn&[14S'9LX'Om6hZ)Orh]BQ3
%:\'[G;M`\uem[\_qr-(:PqVV0,W7_14H4VpXf<'9N)7s?(E%o5'+"#p!G@pLopWB#Cl"*=T7W<Piu17?-lLq6a%hI5H/*S#H6gAJ
%&&H:lkV[N(^(=__NAipP4PrAQmIls_`Aa4q5Hh>hlWtotn$X;&-&*/u.Z'[L@ZlSV)Q[u14jN8.E+`6`HlCi[Dg[#P*\l<jf;@am
%]L-o]hY=A!nBRe:oeO=POfarNm\[\2%WI4f%<,Wu);t:tLJRm9Nm\b=9KB)9D47^b-J<e$ERIi%YmW8b8Wf)n>7;bW%,A=t?_kha
%lq815g2f4\LJ,$mFnM^q;1L!HTrOQNR)A(<770&dJ>WY:_oMfUjh``E%qGDpkkE30:Z/G#F2$F8ndf$7b\at>/B&fsP]2WggpF[e
%]c9%=N2j;!?:XcS'u/r\rP1i'nNDf]M+q3c9gT#/rLsu+'qSKebuSBKW"TQN)ig'bPZFOdU7!!p9U)^$`1C!/L:.8$DG#gF-WqtD
%Au$^_d:2ZFIaBMA2Qt,:^ADJ8D2!(c&r*krZ-=F9lUKtoQk\N&)i]USN^t`$3/(j!21uUeE\JrO)>D;QU4dnPE>e4H#UCBfGZ^$M
%%Kfb5kE6el^AS1e.OBo\"rk*[HbZ)<a4\-'ZmQBiHl,%8j9;UA<%a&_9a7:caL40pL[\CH\W*P+&`A#B[p:0&OMo+nR%!)bo$FF\
%Z,f25nU!j/d3rQLNsk"6?CLdaE_+\":#V?$W`%rZlsqAf`/bWB4+;++Je]r1_d%kt0_@S9(<+Y,QL4$;;SU./[BTSY+lg1nOa1.g
%:SoJoe<X$C?-Q?Wf<hJFHYhu;IF#CK]utG!-Oh_Od\)t8@\Zs*;)BMaL0`")_\7^6PbclTM\Z5!hs+e'">J/%2/1q1A1].)Z7'<X
%mtJH$Oac"f^R-.[o02#?q]Flhp<S3c+#-?amOBX2qW&E@X;I;s%&k!SHl3Pg-TnIgXhi<ko=K^i/[<Zf-8$c;NYUqYT@Dlg.Z,fe
%/B>qfd_QPJF0XqO,I-Apn$qCP*qn]Dn%S4.]``Ht;K$>M4K7m]d=-Z+<4.jPOQP:doO]Zl@Bjeqh!(jm`$/NZ[*`)/\^+IF6+>[7
%i1"le9j9gFe=6"<D>m[25O7lASZg)jNed(h_N=(h+YFYGN/p)C$VLk)Ajo$#+&\E1]NiMZd*!Q+#6&&gl/%1)qQPrDDtg_;'VEml
%?$G(HN1N'g"r-VX,h511"ch"5#bokTfqSn:L;!eHA4ZG@8<EU(5rJ+'nP.0uPO?)_f=M[(NrPoXXlHT7rMK/S#=E>+f-B@g29`GQ
%CC#J7,:[,8%/"Yi6Z8%>kn;X[rcK9(8Is6sMci\;V7`r.'oTF*@<(to5SWHalH4If/NntR5,sOlHU1d@5F&f-2W==imtHjA%YJka
%\<MSG$Hl@fLr[M8.RP9%`]%V6fb1Rd^Zg%+946mkA785PY`aTtSa!:WV]n8EbH]f('!l^LR%mt8dj!gnXj0.LCLCCE:gbe^bu:<0
%K56#m@MlCmP_H)92HmBQ%[R7CW8#Li%agc*3H8qC/h@AIQO(!VM$._/\Msjc[JB/H!9<D)G?ZJC;urTsgA$1chmX.KiF8l])a!i!
%G,beCnA>#Rh22i/o$g$L>VY#,$_=U9QAG5$$\b&%_C6%c&rJW.JA.VP0V)CdPG7`UOp1s\,K^+X>G]'t\e'Sh4MGR@?:YaF2A\U0
%.VqGFkM%F<U<UOjnJ^ZCZ!-paKP8KPd8j(#_e"[gTiGE<;Dl*_&FjVUbLGf]!u4pkmZq8]D+XDgU:MeSaZMi8],n&ML[0Q501$[@
%$qrG1>*#Mi9QcjJ/u@_Z/7Og7[KJ1`;58V(CI8dSaMdY9$Y_7Va02auYT?m-<)AgCPPGbTMNb5@[a3X9'0)<7=uLjI&oDV(fl:cl
%^19XL0e@^h5'Ad4.l_`f7A8UFl;5*e2eu>3jC7<JDY5(]*]Z(L18^%DJ]8[ohd-bg&.S#B[p`N$S)Qc@@&jH<TN8g#S]8g/1E4B<
%YOO)XqTjR!T4<RY[!Qqq+U6,*[GaP[h!B>fUrW3]et[Y"r$l,gS-o%gWS`0#^]0S8D)E;Nj\p,f#1dS=TV]#9#`-^]0k;bf:Q],2
%ZPfH3BuZspT,W@Io=<HY2kr.gKjHAoVUDBippD9U4S9ENgRZ):^>\$\h]@R2h]Te<k/7?#>pJ-!BsYKYUl;dQJhrL9&R>I`(MO)N
%c^u0(lgq[=0K4Wpb2>H:`#75@ZJqK<7@31DV"oW*c]-7qptiL#;>?JJ\iEmX>0jGEa,;L$e"eMM]#PD!>+]0A2FR"OBPNj*+fuTt
%+tFa"G7fhMo0nu8l1;qb'`0qGB=Rhd^%9,4,KA&XrmlQk\GQ-P1YdC!j+pN=4sInsQ`n)U]._'bdd%ajcX"TdN.bM-3?k?P;=<-&
%m2Y4Dr-BCF]^R]!q/c<!r@;C7QWLl=]ZK'B6/.LDotA@^s1p6_k;>cZ>4LE,B2@1m"MT?4)=`0;5(*4a?S3=.oIuHS6[kYsLDg$?
%WQl<-&H*h+N5//8o!+4M473rQb$$Ulk7[Tf`UGT0o6$_p1\-Htn,F:Um=Gb\7DdSi>iam<Uf_b'?DTJSBkmA0asnYdEC49[-RCLQ
%H]b.nd_ArM(*r)!dph1&o+;d1]S_/W80PKO_Z0=4Wf#ZV1R?t6\\(UnhVE/L%$`"6Rt^B\j6gt"`\UphHC=NJ0f8T[Y0!p4^5hS0
%N:3WUYV"rt3&S5p?H*bdL1ssYN@k)RgYQ7S00t5153%l4`qGX'a7_semlm?u7d#/ele%d^IN@58$d[RK'[C>r,\(M+,8_Xu>Gs+o
%feKiMBm_iZBPI`o%SdOHo%1.#T5("pVm06-c?6o_#a],:4Q-uZ#'L9Uj*DI:PK2"1@6%]T3i_?n?Usee[W21)!94qMU+rhFnV_r]
%f.oI'.+;7GYQEUWL]"\kBQZ_6o=;,(nu<7!qPk+Hh<1(Fca\ejAR772\iQebWY+.hKUh9&&BH?j'J=;;U)/fN_H2^Nm_0)s53!iE
%Q[+'#`QoI]3kD4C5Q':j@sH:iFWK:Z(LBW+gofi-@oK!13CT:^]gsfOH]dHW?QPBjF*X7uk[*-D1;&rL*4LuK(sa%^bM_6sn>6l%
%K6raCLS#Mu%*uK%Y+p@3`p;iK>s%Hq4*s*LP[&t:'OF9&']qoX^RkULH&p.Y?JbK5Y*Y3mgFkpUca\c`,C:NK^\slSoa+1dVg(s\
%p&+@N<Mpmf;YH`Ig=se@V#pSo=ZSD$9qU8Vn(Z$k8Eom7Z8e-F?/^8s(Z);F+Q*%mM_NJFqb_GsZJHYCn,&0As8B5`YJ^<LP!#*`
%Y=J3=F`1U,qXLZ%)$DnAiU'(K?&/9u*-jAE5$9g_0:M5gglE6"c)eM0?Z1uMq#*_2s1Y'^fC=<qY4!_4c-1Q^3GP]ara`W)=LatT
%iO>-Uq`<e6f(FY)IP]R4?B416O?Y])%pm,tSToK"_s]f$rqEI^%"8)S:sLlTnYGrU&77:e.aM1UEn.HS?$oT)Y8S^`0,iq7#k!Je
%k;23gUZ>XoBU&+M\fYIl"7PVs"Mat-qPmGr"9)iZ4P;m$8,J3>\W6BYX`-'EDO/>D::Ul.P<&5JoR*s)??OD5^n4?(RpgKHi8,Nq
%nGA9B01t=ei_L?dK,oFt<F</VFjQcIhZk\-ZSh]]<N^uRA>)6?nMc+#<NB@0rQ0tBn25)YakP8mIfFsQ1[s"+Q*0N1DWp1i%]T//
%G=(nc2UVEs_WEK$=4'IYT@0d'^IYCsJhIX;\nMn^ek1a)pN0$8VgBWL`pM,q[!fYPj<D0Kq,;UineZ"hiq\Zj&GL0lHQ:kRd;g,u
%bOKrtp,Zb#D`eI9hHJOs4'b8+ZZSfGcIPp_,B>tYN8)<l\IAASb..q-,;Q=lpc3-/*>P_uH]"uWj,h!BO/I*$XRVB,&GL0lHQ:k2
%l#I[7b6`S7FU4HFk8Fl#\rs"Y2``7O0d"9uOIsB0N:R'[a=`4jA].@`k;(t,2YQNYG?I^$Sf_rE0#Ki*f?ld9@m,eVS?))Lke0+g
%l-3n8mKCVNX("ZbX("Zb<AWuZTm%)Sp&%7)dIS1=EQlQZ(sc%UP6bL6bG=?Ec_g>7YDh43`K8EU81nZV,/'rNM[IT;]]cL<LANC5
%4c\o(X]u,0ZB6emIbF8e[#883G<//GL[-D&*j2Ct#3:0O(q&sHY(M2;piXs0%=c[V:^^cB:W_.;4Jc*enl.ka<LoR/LZ(FSDi\E*
%=fGZHr3DS@@t*,&q63dPj;SQMFi7)7A\_)MN5bViA&-A+\W6E/kNd)Z>CP?joKkb#'O1k>'OJfU<'FeDSN:Pf\Be[Zp,&HB;u"H+
%B/7TU(86=GX(5$Mc'0CS2n(#JmUQ@;]b66GUOTahAJSLXA;;@,+%Hi'h71&$,:tNi&[6iH?R2WT+0@dB-c9>cBG7]r6IBQ@@MFT8
%<#6p&LHt;"e*<*:gdim"'Of6m7m`.7.IupLhp^Bs8O$/_B+P0t*^]OaiF&&G3)F^P,)$S2XB1@=./8i"Q6gMKQ'ONP6>N[M\h<":
%'t4Xnf.%?"dg`me+Y3OBr?f+q(X*i\E0B"*K2\If_j"iO-?90qKRi]%#ZqPZgkD+!?RPFd_?ZdEO6=pSW;<N'[Kn@-6%OIuiS+bd
%a(+m=?'1"kMR7nYX1&5SJA.'ZfHT^Ie2j8>68^@/AtjPiW"abaqjt[eo(=jOkn_PnSD'Q$nLQ?ci$amBi[s?KdbE5")B:,-?2=QG
%X$8ii>h)MLP'QV$_e\VN,h9lYg^)tLm2iN84kU\Rn66<M^i*>U]G2:T*k]dK))Z1d6rE&'5IH87>[0fHcPg1p>=b%(UQmV?CqIKG
%VVbare3OM,f^5-(fuFa:"gZ[$Yn4q_hb?+Vg53<u,iiDQC$_Po^6[nj-jeFeifNe<qe6A2#'D^%i2WDQU(nNTr4'm$^K]4.8HL',
%(rGs"9089+LQGg[hl7=P_"=[sg)U!_"F1\U!!/\CFZ*NUD\V@q1+`e4Wl!Cip'>LI9$<>W,cgfR5S5ni.VM;+<oK5G3CdN_*L3_F
%IHl'nNQ4i=IP!\B_sfb-pm@r/&eX7J;h<A/"0:;lj$FiG<UYB11h>FXbLT[>CiV&S]A@r4V/623GN/l&\Lq)&TP!W2=I]8nf4NE3
%&0E,J^M%_C2sZ@M*u]3ibR_VZR'j6a[VC7q0Nf=Obm\>Mg-=gR70XlB,U`gACUBY*FenN<de=;i@Qgco*?RDG91:%^!tDJ`r4#Uc
%h9^??nhA6???ifeWTWPf&qP;tr4%$CRMW'HY5o:EpIn4odD=VPmep4#g^4Jmf0@K+GF>*g$NEJ-MjT9:U,M`f'$g"0T6j(uOrfS_
%d3DLAQqE.heMUo7W2mJXiTdok5WnAeHs-%<\EGAWQL/X$MroAfB!hb4ols#N2h@d6V_f>m,/I#=:WDN@;n"WQjllr/PuF+4^'&3u
%a5IZAoq(R7,Qo.4!?@T:\Tq%ZKBetF;=>uP>_</#*MSRXj+5Bk6J*>IDd"L<I.D[n3a?26aI^?n[!E@G%h#OBZS!S@oI=ru%@3lU
%,V>o@=VDeI<+-d[&V2W=g!#u4fsb(a<7LPVh8=U)M!5M]AcC0skZqCKA5V;SgN/hkbR5HkOOOolTO%CH';qhe1j`0Gg\Gt,3ad6T
%5gZ4m.qIWnHWBOs*K@bPr`'>]WgXp9k$j&XksANlhU*qc?r?1\;R[+g7`W/tSE>pC'<Kb4espZ[@[GLuL0Z*PMg=q;K"g]0GOGfg
%Za:qoAC`uK/;^B-mPhlYEm\>XcEmH[BnIeFq[YVSCt&i/2?[Ph*#`65kLt,!&`W.T&+DH9_:a^\RF`;1-C<4@iZ;.hLGW0d^a1>6
%M]OYAfu1g&X)5eogt[[(lALr164QTN'N_:3`QbH:e[F-D5o>pJH.A>m$HGq^XIFTY4S!=OH$Qeb4%7WJnH%t8-M!KVV</a5p3.tG
%h6!_'D(;hR(/(c9KVGreN:)Cu:[Q8:mrHs9(&]l2*]85U:WkD_jaSI@S?Z#9>u+NE`4r9J70I-gr!dO'Q13G=SIE%,]INE-DQDs7
%_B-Je@:8MUG8k%0]M6A_Hp(0iRm(tB(2&p]N;3<#`N_m.q9(aokY7g20.Q"l?FZp^d8(@BqWG9M4$O%dHSX;`f:ToUMnM>kM78g'
%iJjTSg?-S=]C3SfQO'9l,!UT<p&<+;*/idiCu-3Ldj5fNrTePX26+<^9fT!,W+')76F'Ys-]dQQ&?-fSc\!Q[>3!RGK`ct4:<_a^
%g]p+SRCl)&f.Ha6&l@`[bC%#EhV72e$SV(?qLZh+Ps(S2f(.,*/hd2$B!$!oXmlqeb<,sOg3M6.g.?bY=?52\8EmEN:ms!&c<q-o
%]UHE.;uUmQJ(UZcmp)VRK#]8EABe.pkHM(&jIYCYLbb?<R0`^%G9.[O"oZ@%Xg+F$j4K09H]_(5[c7#CkJVM!k$D7S+Ob-XhI=ZT
%[9N-k21B3MlhJG%;]NI8QRe(B*8X^W[JOq!i*P2+?+;ui\;7p&PY#uBO:-fL\u.#=1i)cMl6,&bDO`%*L#'^6G^O[KkAA^J&e7cW
%AQFa0)+`6;j:WS$;WQUjYN6B;%N-8\5@kor'QXcCfGaKIo_,f$IQ=4u.>ITo=ghbB/oIQ)pI^KqKXd;LV\n#\TWd'u6*t>OB^$*2
%(3s$iolnFV-;eMASfYYqN-Y=!B$>l7p#.X9$)_6CC+\s09Kt`"Iq\UO37'.m37bduo50uJ7*Q`9r,oU%29e?-qsrBtU<NJ2A_R:j
%E#]aU(,ZK#JhYaOXl1;$f[n]im^bN!Oh>LSc\mCKhIE/0"GA\e)KDZb3sF%+BAn%<8fT3%b!T_tI4a&69^k3RBtORTc<>k@&7og'
%9(b?YOY[\eIXH8n;\7X;CrK&fW,%O&B_)``SrOp;WMfDLY(Cp7c$B<89N_0O$uU^qca)Y%O*Iedh=+I^H]suD'^??DDj*QUXUcNM
%(*>SA\]QtrLIt-2R=Hm8CMgUQhW0+.J%o4m7Hp>2HZLn92Bhg/]2.hS$@#Z$\$bj\Ab]uEhUhAJZG5jgq[RpU!p;8];'X%Vq8gm]
%\^03ge$NG?WllK^1$<Z5m-PuqK,/7_a`H#nH1IE2M.fDm.%W5]#WpU2V];^1`+3YTSckmH)`*^;iHL?$X.bQ]TaJ3YCC[6h#*L:5
%qV@A>%^sZPCa-,@XL@s%*9XY?\BuZS!\E$jSlQ\>O#RQ&?\,pLUKEL_TLVKER[3-XF<63C?,H_b(K=]n<]*@"1-r4UTXP97Wb2CG
%$A:5d.,n9n83ZL'D<qd1VO%$%<#iFE"iMUET_n&dbqo''?DX1.EE;Ts[P5`Qhq#[!dfT=mR0Il;no5BodBTBFQC8"?"p<PD>/Q%b
%51dDCP3FIl^BtfI5Y\]eWj&3ZmBD%.6\,',C-#Mic1V#Lf'Rpg7B_EnZcBBdCEl`\`P1Rt_X.V?9[LBQNI`Ce73qOc;Xd"GKW4+T
%(eWG`6:mt;;Y#$1kLjYf\O*oCl,B.`;/cJ\@I<NTdCVI;pmkH9_]gF1Ob&K87f%Fn'+aU72#qINaaS)JIb&,O(<Od6E`s"RGO$O`
%5B<[/2]&k1o@`;iM7C:dZ%\D\(*M+nc0hY<BQVuaiE6TRU#GgUk2*.RJJl*q4:tN\nYGs)k1r[2jpslSN_qP\'dKYX809M%=Lds?
%p2-ulXAVBkD43,@G9qa`(H$lQmj`Clr7".J:NSiaKSOQCYke)n=MHh6k7^e2'??$-n9k'0WV\WgrsjKJd0>>L-O0+%X6`psKRk7b
%g%G^F2jtC%o=nB4KYZ9#35rp<;rf_)LJC,t/X%-u+!qQ=q)e374N)JJ$BEldG=ph=mJN[4\,D$^,4.a\)R@&!dDfP9iTOd!&kZM@
%"I3!(`N@>Li*D#VaTrOhL9Yg%:s[#aIZ@_?S5bri1<*>=4YSP(F@n1GG7&tNlMN*9fp24cJGVm/S?FfQ3aY%"l1ThGCQ2')=2L0N
%<pScq6l1G,+IZ\6H&4^'>3]F<+lU,dkbW`7#&qBd07R_-nqg,"Ui;7^*'XVK*JpffM(.t4N#,.Gjbr,rmbdg"OnpU!);o[QM.DaS
%]Ae'Sn5q$'WBr<+%-GA]LMai?_oX/VO`"uN^]Tk@,5J&^'0UA<g71=Tc,VL'Updkh!`[P6:r-dF+q^[>FN86V'4so,1dt_fC2on>
%PP*$s5iLT?Vs=6XIOtr`GM3W,4(Y+42W7\?2&]BcnC8e;AZ;lL!N?>PLn[YZ;;Xko)7,NiVcRLh7Fu87GG[Er76F,7=mMC7o'WS'
%pA1X?bpL*@:G`u'Z8Q*0dqnWTEd9Te=I6U46"@r%;95&hf4rE`6p>8l/apXnXY*%tih]SDC2SATXjpB[GgZo/j9PBdDPd6_U6IPJ
%@@X,=F3lq[EPQ[0kn<Z^Sf$7M^eZ8W.Dk;HICM:0L(Duo<@pn'LM!*S37S=g_r9"@=KR1,n_8JMK27]j2r1qUhKWJKBH'/&@G3K9
%a7<6ihB&!oq-sD)$Dt!BTVM1Q:hC(!d]4],/`6Yt(N.,*"n*XG?Op[S$Y8-MOF>M4fP`c=VHR@@5eoOFKut26+t,>>dd-=!>Z&"+
%)<U(]mH:oIbX.3p&eK2=ANmF3++/T"VKfis)]a$NqU6ib%:8G9+5UKljCR$U>J`5Ji#98cpH(]tImDW:2'Ga`;cs5F&fs(V9k]t9
%+L)lG">:ct>YgP0Ch&9g_JP)G.C<7T')>q/#AO+uLst-aki74L9anmZ4A!m3oubjF1od<fW[E_'75n.$#/aUgcQqRY>GE3=eJ?&d
%32UV\X&%I])Jm11DqGj0f3p2*3D"jH1'9Hbl+<#$0C!8AYPI\)rma^u0gZ>K+udmN+EV;3F[WR?hJ#GZ!obY,],qLO<k!m<C24@b
%gLQEe3_$?n<YI7q+LEF4_D1o3ZHg2p05R[PXo`2+UNnj^GmUO$]qTE(E<V?;eEp/b]jI_V;A!tJ5Z\>(=6[6K_t(DMbcefFrlk39
%'4>/JHNAa4IQE[k<_:H5Z9!dg0%)EbFeOtZY7<+%hbG`kRTSDfS_n`6=PdX@mlI\cji$```:?ZSjXl>NjdZmJG8jZ@l,<.1"3Wcs
%=Pdn&H)D>!]+$<0ltC)O@sOufnu`)<>>?a<3j?7KYe8^mQVf]9,ptjn;34o:4gDX_J6$b;%P2N)/FPd,]_.0DF]0',J3tdZ\O8bT
%GdSnVH+q#>;l_Xg/aq/80fJnC\u-Fg`_4fE4DB(0FUpB,D-9q=@t-s[?n$0d8fdo&7rUBsMZSoQ*GFXDRhYt'fc)T^gW/Yu]CNhP
%B"\YlMMju-h#,4<F/&_YSoDR8b":u;b+Zj&`**p\G7F0`%("ZZ"Seu+5uCQBA61<M(['spgugSgklrm[l]p5?3BSDbgE,8QnS^TA
%[t0?'W$k7s.c1Jno]0lHrT/gMs7nt@h]JHiJ%/aY!tn\InN!&&@0Q#<Oqf2n@/`N1\^_j?beMO3SsUT)UNkmWaj(cI("<,jH1P-e
%(MqIt3PH0>CZ"7N\eG3=YK]ZVU8nDffLWrk_3Y.]BUE(9l72:)0V.S:-`js2KWCTX8LVR<?44A,O2K\AoZ^[?npLi:d8Y4t8g5PF
%]:/g8.AD66TF<kfHP\aI(LeXr![GI^1*kaO!pd"9a;2#h,Jb`qK'b2e=B33\W@]kG4T`f7/+p\G=+AsOHfh_FdBQ?R@$sM:e.r6K
%0O)CA<Ec;T"Kc!7M2=h22lc@X4(SkU?$SnpIj6X[CKlIh@)'_A5qB;j9AoKFFgqjqmC-pks)>k3OsRe;ULA>`%q;#VgT/-lOP6fR
%J_t.$kq_:X!G0RY\JM=dFb-0^GiV&XT(nclJ,to,R`gZ33u#48GbepuhP8Guf,!TaC4=5i*h+ISnCKAIF^k`*`aSSe:eUFI*#OJ5
%p,qiN:0_%B+ZIS)5mfFC!4<7^!^Q_!0<3"uo=QPKK_RT@<P571-f5W\-GiUQ!&)[Cpo+'ZrP]o1MjD/`DHIXo9',D@BIh1^6'rWm
%7l^l8(%%_%9G+b76+nB2L.qQ)d>mu">np%-[?Y,*Tnr]NR%1F-Y`Rl_F59U'U>t*aP)X?BcsqCC]BnZ#al8>!.kUe$$j4Xl"c#B&
%"E---4/M-6C;dZ,r2Q=r/3LLbN4,c`bV-<s]8@-5D2XK'Dk_N$:5L)Q;[iE8nB&U&L]hN<oTuJQk2K.6f3+AkN%T*dgiX@,2B+Jn
%A'AEM\raCV62gd5#Kj<?kORe<Tnc']lq@S7-X%_4)R)GNkf%@`C76K85R\7".Dq<\H::gOhps2Z&\&7!I%G0R/'&klL<3<;2n+Fn
%<1l2W;8_%gl@TZO$REGo[7;@,j*R$#M.&3O25'^bN&[mDk)4>aIC("OSb</]'!ijK=ONKu.-+SP3g9'+d<;"_3:9Wp:fcmo54e0c
%"hVCa_u/ECaDDYT0"&Yi;:ab17"$]q?D0I:<8l;fs-f;FB<7.%@V,!;SOa=%&dh!7m"[4V+31,j9dn-..h5]7DK\UZA3Q"&a6t(K
%cTCm0[r2W3m0AO.6(pCiSjrtWUrXSkhP4P-f]tJei9O\aa%`s(/\b)U5?3aMLdJ;)Xscm7Z1FZ[i`<sa*SknnZ+9c"]_5d4*1mAT
%@oF"g1F?'47a_$-:-6*;2STQ0V't8>7-H?+Jd--G3r^f[GH-UE%h%g;,/t*D_mM<=9\Q3G#33HG^i]6+@\9YY_"27Q!PF*$:>g:%
%SLNXO>/M35<OY>jK#Qjt-(4u'3SSU,YQU1C!NNNQH:DP/0ER)XDoU'f:aL0uSP>fn][-$7K&%UCkkA:3c60CU+GUNhBXXT`:r@LR
%E`U#8fj$0)?Lc"Oe<pS]fIU&,5.7S?n?/5_5/SN>DDeUlZY'eip7l*dHZ=QEZau62@J=KChVEWHK7cu$;f&YTCY6%1AV@%d(>Xl#
%Obt<q]A\;C`5aW6h9V,$703$7rm?elF'Y,02Leqnhk+J0hF7KDo,$]K?S9:s*B%,?PE.`rMqZKb[,H#S:b_`9;ba-6WfQ%O.c-bk
%;PJ=r:$b_8M*g%34*]U]f#dA6a6s*6JV0_t#`K>nB)!4M#/]]30PJK0KtS+5/2@*$Y?>CkVocb!.sUWb@Bh@YPsdZ/b$15]g3G))
%V+T&_bjHNbbT'?XZ1Cu#7nA`6]FW7g4'M)o6u)?PQ1sNlr:Kjdh8f#1W,FJ4T=)_]]rck?13m2"pGI/%Q]K>a-N*HG8_O:RjRB9@
%/"gQIi'N;>#\*#f,KX&;<n2h,apDMp\S5ojW/KbNP=_ct,r0KD!pOO;.B4RH>DpZrn@3nL0lWMs>ilSMcMO]83fIus5L>\0[%Qn<
%Y.<P2&O6T(*;:X<,cW!'/$E`U@Y/U=(:QB<pE38cpIH+Ir.jP`QGF"'jI?-J_p\d'OKr28Q-Zq?6rh2nnn-E!aJX\*]6'u;Hl;0o
%!L%:E2Ki!C2/[4WjNt_FW>,V#TUbW!nO%b4#p<,cHbAFEe:b?fRU_,dX9Kd[&6OUM.bG$FP)b/Wg'Yt#f2YKtSjPa/1HQBUdWhT`
%*8Ra:QL&)7Bd9\nL+""_ld"o#`Kh75RbJN%_.$#I/`5^S67[XJC':F+UmQ>Fc%i[C_hLeXC#nEl-#`k2[VoAui!N;c9X^a!`2XuA
%/JUO>anDe3m(%:B20M4?GJr7b2YftcoVZd+J*oh%&6--AQll;1>%1'NfFgVM1l\_n.I735GC]6Z,*+`sk6V0G:d+9s^M@hg_dOia
%ZVIc:lfpP1#c&?3(1dQo"h=^P>UZ!29gsmkO>h8apWWp',-7"!o%BMAMB)c0[-hIK\6/3+.q+mkcKcZo9XE%<?N+KA6]Du$el:gE
%[=&ZGiQukjETX,JY>atXRfT._]GGDJTpJ<="0P`kms?Y:i969%2eV"XWXL`*CLjP3*6*,-P=7;qYC_H]Y^(0o*8[qsESo>to=is*
%(Kg9jTo:p>`[IfDi(8f,LVK"_13HIT-JG]nbUlM+S25"sO>r_j1oY5-RbVBF>7KG^/^O@#3Q.s3$[^kEkTt0Z<(DNn8;NOM/N=KZ
%&n=GVAbH,?;,CMmKaQa%iU['uMbKMDA%f3t>YDIn6WhiA1XU`A,mm8k!8!Fe!_]K9(5a*tRqAp3>[Vp"C'bT]"GI0B7+8E,'rfE?
%L@@BF^Qq:aEtm2:Q2M1gir6J1()k[(^BLZtmBfH=b^h!Jj@nMurj9s6bm]s%PDA"HekSKSDe,5^1L$Y"q"X^An/J'KRR2_?bn:W$
%-mU&)5^oI9qmT3BjrPg<k/\9\f==kl-`W[I#i<!dIKluHP<c*Y(*7l6h4&&$<2Pa0f=<D0%^jdh)o<)[4!ff<)oXn7.+dl&FgP4L
%%6#CC/9L!b3!4`Eoq#T^:%dHZ*Zq-:Q)9P:la"%:n`**OmFG(fq.\%0oYOmV4Kd23"asbM%t!=AR0bf$qVQe">;QT9Q#\-:8NL+'
%"P"na+s/3GF+>UpkY-l":d7`q)j`Tn>E.t9o8#W0a#GfB>oZ5nVdg+V7/DX)%*2(=f0P?m%!G=dK([<N^VN-&!-/HNN,R4P9jTb$
%)T=p>B!2iAgfcUt6^%FTQTX]*);?.m((M8K*LCW419@mOo*Qn9E_NL[Rp(KUmGEb>C@fjt96^;"2B]8<AU([$Zf<C\S]'>0UI>sO
%]<[3BC`bgD\jAU$g]n+tJ,khSaV%Um(I9ZViD]ngL60^qaNu@o__GiY#n#^^3gTmlUFhec"KJaJg/aZnC-]4::[$ViULL^RL_:qo
%!@%nRJi3kWX!CQ8^rj&og*3RF'A)4&bpbcI%ce$$>E)*tS0NX'i7ck14,aYL0EI>Q<Q7u<D9?6sPE"bUHH^<D'84Lt_=,:\R+0XP
%[\CI+A;&eMY`D"pJ-denH=-P[N\7V<!kSss-eHu#)^Ybon.c>#a4D_V,\kHsW)':4$J0T=FG1g'^kQT8-upj/&#[ue%ZoKh@s<KC
%Uk^V/##=PWm3u=*LCDd\0>W1J7eW*I0;_8H9IrQs8f88_=T57(_*HU;0)VaZ,k+(r@bjI>%fLJ$o6@K=Wul7'/Z%7N/lJmABn+n.
%jMQWT.Y52/<f/W?J$*W'Q&-+04RQ=-K4BC)46T,?HD4;\;phGT4$,mN;61b^LJK/2;21/I*7Q#4+u]0C%!SZ&H.R?o8N0hc&DH?,
%%IkqD,>"\6OR,Fm8LQr[d3.k-;kYns2mG%<lGkM\,2a\:8ue1*V$c,q\U@T\LYH\P`9eN$T0E2M0>W6iOSb+!os]u@9rRq7<9PSX
%6Cm5[c9un_RV33rN?p-^D2W<$#hIA&ClZV**c;q2Xmslb5lr[+h.PEAs':b7*?SO]K9([mOF<NhK&5p13+&`6T^PJd3^0G.1HBZa
%Rt1^DO4otNqQT^LO8YsbYmRB<;X#OF^kF"TA!*d4lI7K@+*qTo2e?KlRTrP+<lgdZIToLG=.r;3lNWV$5?$,u]p2upI?/#T4qF?E
%/O0Jc:ePeB_#5S:j3;_VV=8res8>[Mom>!E:U^VG:2Ls-7-:bu`FZ.oC_jW*_AJM)e#H*90?,$U6tY@UOCkg_r-HoI]-DWWlM(2r
%T#Db6\`A>'Ho473:2jsW"[ro2AqrD]Q9<\&+k_JTQ'6H^HtjW+5ga/`.kKC,U,YHnDcQ:-0NZFO6'kkC2DK7Cq_/;tFptCkZ7:=R
%:PitZi3h9G02(:),,A5%fi?VKfZ@:MIL]Nqf/r"U*B'U@IE'>Y"DiZ(cBVVF%kCF%5-luSKuuY:29sLj+q\&eM<h5N2#U?@SMh</
%O9EC!j;j..NEn>Rah)IJSF:dWeBOD$9Ef0`o?DZhZR:MIWKWfVOa#HXn.^DaDWZj&,R$+1JDhD4Zt=p664''\.%#(Q)TT=t'T<96
%P#Re4?iV)qNOKdV;N*nJ<J;qrK^CJ;jH2&]15FrH2u:3?=(QL\gq&t#/q&=s1@A'0hA</*H3*A:>h&u;)?dk\m3pc"Dk;6ej4Oe=
%E)n[42Oi%Mbkd>F/m!k>:VkW*;(*^ZVTa-rF!S'-j-UmT,d`k\8A_"GBYRg'"9Xnl]&#?l\j1W5`abb+@Ng"5%&]I12XOqJ'Rdma
%GM;c#:LA$09XF:6RC"QRjd:<kdlncGObl@`55R%+].WCq[d'mf!U!VA:W^6;ZfcgE#)/p4'>F\'Kf6t\M*P+Q0b>lSB/kW=0s_i)
%l-s-E&`#o8rouId]s\:P4-NMgbJoWQ!6Sa3Pi-N-.;@j4[:u]&]okCFKHf,9EqkBYll)lb&0.:EqMC.l?%*2k53k(`2tat#Z/.U5
%hF3T;RMTCJ#-SC^PKJUk@Q*^Sqi1`o24:mQP'LmfJ^=8=De`N=+db_QB;.e]ohIcp:^7boHC5c0a:_k$-I`<1)gB2EX)pNc-Vt6t
%NjeK8JS?h"6s_(kX4dNT4YgTRSe>,ESmee3=KR;OZGTAJkeC\&mgqreIK_n6@U!PRK)PrG9_h7_<oniNb#s=(fu&em(k;"WFQEo3
%GfK&ec9b6\'nAOlqem0uX9NEie=o-\#u\1U^'*9r)thQia33^4+tu7+Fqs]rI=r;1+A@q_!KrkIM6PAqFe+\>gR:QR,3NMsp!&Y0
%Y:l';edk&CQ81D>pbY-P-Y^V1nA[:alO`^Pl**_78&T;*pr>^jKoHO,2?Qs7"3qZ5)!lRpfhT8Ij5RuX6C!KP=m#/LAo5$]T=YVb
%*f'_[rJlfe^k*_;m#Z<iZ[^Z'ao6Hha^PHG[".j1@m7)hDSSIP[dk&bW7$'lD,(527SH%N!B"sB0`>jBFfe+O&D!-n'FOY)"[G%*
%[JHFI2%"5h6uUd!6U`b)af4,@$n2DW?-9k)qOV<N)Z:bE[,Gie:fuHFHC8H8`=8O(X\,g#dUQf+SK06pgmk]d&f!K%&qJJiMF6t;
%CRED3]e"/+GD+S)lU>J7S]mq)2aD$]L)$Ba#8H@=b#i8Ko3*.<V[,c.&r0+PA40DBMgi?uH<7426<RiDjrd3WUcVpbTWV..7`173
%L"!@&^>i^<Qrb[@P&5Pbn.QsHHl=0J=!9rE.@lXj*\/5H>"gK#bf0Y"?2#q2Wc8smM$TEQY,<OTk+=9[</2a@ZreMqm_uSP[Q:B#
%h#3\J['Kb$P9ih.(3NJ'rp_-0`GAlgmnQd64E<%K*p9KM5]R_>7=&^L9@2En)qj,3O7E+2YOMLL[;k@+*.n6A_Np5o<nZXAYro7L
%d.@T%)&[3D$q_/'")@7A/3;H<(gY<so=o?I+?BFN(CmUpej27?!NGK4@V#g%Q_kpo[t7#dS%`kmcFOh.:DdLTNWZYj;\V]EC-n=,
%^cMmhW.o422ho)-Yk^'K2ec\b8[>KJR9SMr>Hu'VZSc$rc$HQ!1L8kE?f#mP:sTXj+5QO`a4U%-fFVeROZ9e`brO>E0[,<g^&<&F
%7AkNELK.P1'3<D6AI_iU_-Zd<S@+P!fBV^bfdADH(6kP%p8qW\K+R<]!>jK3&l%e'ApR$l1IfMn[-b6Qd6r!pe2Bl<^_e`YrM$k6
%Mek;KlPSn]Vha*'(AKKJ^9u.3Rn]gYk!W4VH6`>kFHof+OCSeWK"ArT]<I28G6P2>-k"p6K:Si-29KbuA!i)`@*51N2WtE1/1e25
%,P5,OF:/>4a>KJ]H;eYkpe=ku@1;G*7(DKCSp%">g&6*BVU_O>8kSe+N56g7pu5t@DK_Jd`Io";AsLQ@F1Wra#G**?&?0)5,rmQA
%PDQ9*')-RNGB/+;W1,JHhJ<D\Cut!bTs2.)cF<Fsq!Z>,Tq,B7_a&FjITZ!=)BRelfC*A6^+XCb?f#gN9[/V9+$AWiO)\;Uj"c@-
%NSusSG_mS-B4AEq"Jo1%=l?06W%t?tJRrGqLqjhob1s0d0$&XsH4"X7O>o1%gm[KABQDGY*>KY.KmH7+>4>n*"7Ms47&$,!5-"#R
%,#j8t1OXGKE,7_GPU2&X1$GkfIs)lME@h0k]^CoS9cmYFY7!]M<tCS).HiITr!pOea+gU]\]&F)jhNLk[O.7!AVl\^49Z+i-#_O2
%YtO.FTCAa\eEFeIeJTalEk]1tI`e1QOrldKa,V>-QQb$%Xl>7M0kkaM4RZ[hEBi'Z3m*tQ0:X2&$)'KDh>IsL<uRFOZPTs*W`G[g
%S=g/?Ok09DYH`P1MC`p@*Q!HlTg]iMc4*ok1$IiSh48p!.AOTO9f?Pp@'U`JYiI1=4kp/PH;8J5`59`]i8X@3HLPQK$R/ip-jd'\
%3rk,H&2gJ-TCXl.'rHi%L8!,GP@2uM(n[-V*"lFTOcMGjk\b%3k*(HqVFY1Da,qR),'(?caT[6Qa_f$!2IBh@\gf<oc6R>!@g;:(
%b!^K\1XW'@i'XAl=6MDcpkN[Po1eQ49udKUq*F&9H[bT(Rctf\*5?NS?OUp;LH&n?^<Au==?S#_-FI)*eT3sGF+5g)*_YR!7VaWO
%Z.d?3[ABi/*Q!QEJXNCnCb%-24X5,(@h>2h:g[:-PoJ,dg'5K4OiUG1DiE=&9++On.t/geNeB3W>XE7nV)a>[$'qtEikLg*9EGAu
%GCOsp?3A;hAD(eZ<'db>B#oOX;tj#6&%"tS&g#jQ&cmVT@F%Q*TUVVp>.s#0H9?`S&H<L:DR]GkM`d^[Hq2D`0_UTb86iGh(E)?X
%!EL#"jt;OH`2H]7\kk;:r_1&MmEA[5F?I.IB=Y\<pm_thF+/.d:Hh9\\r9=*S:Rl8gZB*5X!d4uhn79Dc7Qb<EKj8Hl4486"`*A]
%,3-;hr.^&^7>?_96abZSNu&DsR"_-QH*/Ucqo_s*@%#%3]1TX<GHY>G9bE^QNp!%[pB4p[r;MYB=oDM#NANd09QqaAp7L,I3*?AP
%LLQtp+XUWirILj/7oEfG'K..uR?4G?=Hb?5q#)Z2c$c9-^mr([W>m43F!&gMl>GqiAqIl:+-E*B`"dB_<c94\jIqG2n:P8Xa%7M2
%E:@hq<P;.t&pCB4o>8FnW+2=hDF0Q_peVp[2l@PK+$lbQ@ln'IA/@kG7#;u?)F]_I7OM(Z/AB7P%BI@7&o;XeGIS.87.O$m;J<8-
%AQnlEH!@pn]tEM&RMoOSIW:2t4pRri#,\q=Q]LhS.9oD/6KIqfa-[3R^<Z&D+q^"%[8<p34'->,:<m\d@rBo"f>kB'megLeCJ\UQ
%X7"d!ISP]^Ehia.[`'+K-0:GKVX^Jj(2C8a7']0X7CK=ameIq7l<:Li'lG3r'Dqkt$AtHpb+r9`I(i'#'U!7jECEU/U+!l^lEnU`
%-.4SdY,i>E/-[];`_M8,87Ee"h/RL-g)d*>9-!N@ERr7^drSO)Bk)'A\'VRk?=$Vo3W&TkpnB(LBRFsGY9&<p/qYt"E69mTj#lE_
%O6N#adfC!/jDb.CUhaS%GNqXIBE>'sS-@7a7Yu(UPCK1`1>+aPE.6\FcJ*lSN*LKMV3$T&ck8gG5[B2B)S0U'MeX'GmS4i]2,8;+
%7(8>,2a0-u,<(5rRZbFDZVmMe8)e\9+aA4e:G\&T?:?'`gj@'QoaMh#26-%$M:#<>#?RT";'pqmJo&b<HYO:<#REZ5"*MJo]-4Pf
%ZC<mkr7"8M2Rd7LV:!B@[7<usYGOrZ.(`GF!$k*]j;DOfWR8,Q3%]s@VBCN8X.fcjdZG2V3<24+]AEM!9[V3nA6XCk0c,&b5!7]C
%F=q>%*k`.3.DbS2_qH<pX%WbC[;@ieYnJn56k'?DTZI,J6YI1^lt@5f1D>aRLu_5s,LLos.X97^C,?D)\2RW"SQD.D=5Tm<1k_Y]
%oNLA>m*O`S;k"ub.nMHEC*e'\S,D!;f&8Un'-`F#+l/lHZ!9:3<Du.=WQ95NQ#78)Y0$QI"*m=)=V;C0=ePYX>fbs*3@g!h>_'cZ
%XWi_hM>VNE=^5_*]35uoJ]6@[955`+QZ\A@Clo2B4L".OWh^-u4SUhB?PY7-7!Eb.;)csPFY%]*%>Z-KX\O>i5`=-@ZEFIgbgR?o
%B#W5p1B/\=]C::a5U4/5<iLF^k%P/,Z/c-4i4"WGE/MA0h8cb`DUiMC&6]Rf]"!8##9Wr<.f?AskYQ\<IUO-p/LZc;gSI7#^aMMm
%Ruu33$OKI7XbL;^5kgO[Lbc-%ZE#9)g1e+1S$>mj3lR(OJ1%bQ(1$!i2D%b8es=S&>-2W-Q8_/FK231*ak6Yk))3rZBi(ZY--QUO
%=Sj.u7[%!+,fK%:&nW3u0^hg\Mt\A@mt#>Eg3UGKM=d*<Q6>FPR]7+/kJ;o9-CGte81(g\C^,6b1J#,Mpco\$np,:Shr3-)9RuV/
%B9M>Hd*V=?E\p[gQcSghH.hD&hOO"46P.d>Jfl_o;Aqki+83sa.Ze%X,`j'0<qM4Xdh`p:/^@%*3hS/g2thd',6@WN@pG+t2VS\P
%&Q<shVpK7$Fnm9pP3V-un,ch->UH3$/bT>N]bScaC(O-sBgl"FdXJ8B8jM)gH3k6f?S*]-R8WP6br79&Ds"R2qq$i&jJU'=+UQ`Q
%`>F>S@PjYE;W5#8;7FQ7it#2=$F>Mf"^%^TRco*G?UGF45ol!hZlK`3[h&k&DPT[Am[)*NkAii`q8t^7b4K;]1A<*Ia2/"uoo^lu
%9mrmfU40!6RX70R'G\?9:jlQ1==#FI4^6q+MiO<sq^lcGc`uJp191I87mZbS7'm_p%^)^_#8Wd#[83."'b1:e,e8>um-A&VW._D"
%]iY_EWPHg8KVh&&Er;(S*<D06k_(l@BKja>fdI3U$0]9s#W>kn;b=?bYn9["hfK2dDh`u_X:WS*fG02,54$ET!8U"/TPMU'Wq5Of
%MZU;L&9KlW1304O-6!p.4NFhl;Bf\\Mn<85TLS0WgTnjZ)+PK4'i=2\6S^cGN_Gkda)Z#h'>c@X9c:;E>ehL>-;[!'U."km&0_\G
%gD2Hrp*%KfFJ6WuOb'JE&B<CILI<CjS`XM]grU,:P;)lRV?2^!>%]M52-mRdPjc*T:f,C%'V=Ao(bM2n7HBk[O$0JF!*;M)l%M1c
%*aJr\O(7l2QB=,YnIAPH(9=gLM^2?&[aE90?25*9*+<Sf1bNdg'G1*Bp`_9I+PA0GaWcHoZ/4/A@[\Z_&T&n`?s1-qYrKPPXl?6H
%U:#irFqCF1VF/U'g8)kf'W?WD"S)Y-GZrH2mOsk=h+1YNPu!a3m?9d8qj73N9TcQ]+sT5"AIF>o@LYFo8u.+:q5/29^5&rEMpN)r
%`/A0>8>IZS@#W9pW+qfSM!H`G#U(hGK9]giL/H\#Z:\R1%<!kMH$(dHo,s-*hsqmDQY?dQEG`dTAF6iFpU\&n\@\J=&rP"#]uZDs
%4e(9<g8!&L&J1mLPuV`$5W-gWq)c,dF,:Xa]60QQZ3fK)Koo;s<E?mN?o,*(@7qe[1&]NOOpDKo,(Y5c89?(OGt`Bd[_%i"ml@R,
%='V&hm&_K9@\B#/XV^@[F&Z&5++i3O/^DT7Ugq-7OZ#;Z6RY=qdJS&"aoNSaK<lOF;*K\&ka&=`QEJEdg"_bHOu\ibE-CB+V9$h.
%NSe6b-u#P*BS*%[cGOa+()"-pct',([rCk.#j*L3$a;+38&>Q(UfhJd6I`*NWh-OX^S/+#HGCFMRTQ2h>B0gTX^"CBco$SH`I`ui
%9u2pmL?Z\C</NtB]/@Ne[e`Sfoqa`mhrZNGNS2r-e2R.*aS=pR=kbCf/tW)'IV>>_'1Jk7=ub9_F/sIU<o7SK1F;!6*r9K_?KT*k
%$-7$-YcXR!-t*EL(8,CW/s@;OjbYBd5TLHta,)C!?cn8`$:Wk=,\T9bKYrl=AmZ+B$3+K?F1__DC$@qE]\/c2(98-T-LsM10`Q6*
%cJ'eqI=%VW;M][<RR3SNL.!28*[@L*l$#W)"JnQ>$(<<9Yl+OgI7oVPa`ZHH!<9sm&0Lua(%6pkdZe=Y5Q_X8bN;P:2ofD0m\)A0
%AE_p_^;n@>l=qra1f,;?n/c1BB1?K&`&["-A:7,jg22YM9ObqnMC;GW*A,'.RhY8,CkD^EYck8Il>#*51E7R'Rs\%&K;3%K^N@sn
%^S_]l>SPjOR<i'=5(JkY2',f/KkCO"0p6bP3$U'0&4h9leLd[lGTm=j#@/Rk#RIo+m17O46,$Y3EkrqoO3OdF&[<pDoV#Q07B4>+
%#<a*WgpFaM3"]+\!.<C[PTWW!/tJt<J054k6rc1>+h7o\d5jE74L)CKHQH3`WBtnR+@>1:@QP`a_]g0\Jl<4WU81WHoC"W+Y+[nT
%H5bb=JeoZ1mpq)J7mN@WJN,Y6D4LW<'skD7G8u9:W*UW/r`8$cL3EbnqiXR2G-20>LdgSM;;\T^Hj#_a8Q\%mn&op2+R'"#.OZdV
%8gP0&4lE1TZ&UHLFQ*hniMJ;?P'C7`I/kPD=Ds2D&sgHZV]M+OM]bCF`WA4opM?:rh#@h(&cR/(>0XNhJH95_YiW%KIY\8#kj!4L
%q>C@^gaePhWI<c]pXRNb;3DY+#q,2>N+3nH8"g.\SnG:'_l?rV<:%!"h*\luqHXBX2,k+;*YX[M`E?$6L/h'X(%2*SarLJ/9-A7(
%PJe3ks%cYUbXCI#_5/)]iddSoXEq\%<B`dlk3ld6QVh^t`XLS+B\K0"Ih0iX1qJ@)+]5LU2cff#agqt]`Z(6k&7)U\g4t7]7((Cu
%`uP`'9h;-Z(ufIf6^0eYJs-HU=rMN)-22\t>BD^XgSAiSX@j"[O,X;DJ2t^mg<0X1FQcZR_\U;n^%YMNeZ*F'+bjN4&V;Tbem!-#
%<bL,Z4C[lA-)>#74>lj%h#gj+*3IY)INC7B#ZBu?_6)H@-m'Eo38PdKL+7>fEt""*8PUeg7RPn!TIL^aWZn0B@o%KE`q1m7k.uf(
%I:to6;^@3",4ilDZ]a<C^-4j^)GAdtaCEtZ#Q^^X29U)*5Ppr-#o(gBg:s0&4qqP8QQ7L@%/J;T@Y/nF\*D(CFj;F)m5]P(RZu2*
%""T/q::F]T35/q"6s5CD*&Q(X'\#4rm)III?tN,`lN6HV8i[7_fL;MaL[?*+JgNDQ&+c/><5V?)DA?@_&mqE+:\lAhF"`$I4T%KP
%f8/`R/j9$YNuLcZ)dG*-8QZC[9Zf.8!;%MAl5B)t,u<J*Elqgi)pU]oNpEI-QUao`KQZj]2@nf%KalflH^#N"<!5Y.BAM0EiW&>@
%=*7KGl93^OHJ6guj&ZP0J\?am+m8;]5rm=NJim!q+@$5?[k<!W1o6#IB#`*'Z*r.l-*W66Z/XqMd6(u[CsV(T-e]o";Sq+9;/med
%%t&e561N"+hJ4Xgi\/l#_&Op`W6?E^q?0"Eq$'!cP-H<@3/JUs7ngr)r:=k=nq+n,L(fK88T;[O&G=-p%I%&pC#^Y5",Q]rgO,q6
%#dt&[9dK<A873OCL!pb\S'sE0:UKOE3#(.*q*\R;n`1$jgt;[HEMr+N#Zn>\[&e:C6/pb)f9stN4ROQ:h8Bcs\D^q"b%4\<>N30d
%)M;\*)\Fr'&&BnFlCW_Cl9MIs<-I;V"E4ECPcEe9ZqKoMVdsQ-SBYDN5h73E<(UcT:'E1Dd%(bG4f0M7a\<LLf()C9_p46A\i->a
%5`O"2?QA69Uiao-%[M?dj^e*b>omX$)<K@+o&VP6`@tOH"-.ImE2h%BO5b;MDu#8(WN-&q(l/-*<;e+N(=k[XBt!kWE;JZ9<+dBc
%GA.]WgV"3Ja33p\:W?McN8/uc<Ffj`n&)&#S[B@2($@k+74h?KS6R%CWeC^B,O@,)L&+3[SK'rO&)k>8Om=%a4[\U,ZMI3P0td)i
%JeC_Y1:EC&Y%K$nC&?Qu>&"'-9![7nM+!mcN3V([4M=C(b&,f-Q(9g*HF32&@2ViJ$qU4Lig1#/=M46?%4q0LG[^uR/V6OKJb#b?
%4&XUG=\JX(G$AjaSJEQ)E-fC\V23+Fn&nBmA<;$rEFTU.Q_\Lo9kq9go%4bIQbH:Urr$gRG/A-g]>\mIik4(+0bQK9iY\d=UD8DR
%qHXNp1%sF5Im0I*a)aG_H$P4m1!#eLr2`E0GKb:Rp?rIsaE.fTYq55GdlkBLc;*Tno_c;r2+5'Ce8AMgP)VX&D[Tp%W416$$oAZa
%l*.f%XBJ^JinEP9]=Q:um!Um1,iSA5l*ph7>UW7'89I]:&d6a?nQlQ&29YP1_Fe.B@k-a9U50q*T^6&>]Lkjk13RJ\=7*]3F)DVG
%i(pVRfnejEY$#`J'o5iUnLrMIcKjgt%0_o/ZT5bDIVJKrj+pId*e=SUO0WZ#8u#)?T!Zb96.kdmn.Pkl5WUp(Ob_A]9i/gR_.Nmu
%!F_1jEtmX@Qn_M0=1JOYSCutIeto<(-1fUIFq(9?F7[S]>Qc*\hO;qtDp])&!fgN3nk8BERp,XQFqT(S/#<@.<o0/M-<IJQ4Ln5:
%^MdlLX%j3l7D.6JH3kfiAL$1J4m>m*N7Z$#/I%-.G.H&sE2=a\1PhS1Wl&*0(jUcg35Vq7DO$cJ\WOmbq@hFhSlcAJ/ke-`_bduc
%QDL5\mcA0,o4a^*D8nr$#9/7'kMn4^a1n11<Vj0_^,@Gp=*+>3h`&<*#9%1\pd0>W(*:6c,ejA>,=aI^q5@9p[%f:6/M_`B1Y<P/
%[RNT8#`J<U$tQ0f]S=rQSiHKa`9pJC#Wc>IGKk1&H'MT8H./%Vd^4G#INN=sE_C6R\eE[?e8Z;lRO8:NO[7\>B%QRbF,ChR6AccG
%$,54`)<M[<g5h9pp9@Dgks;2SYAH=&S&HenAgf@CpVgaNHQ^rdBH2Qi_-=DY'DbhHkB3G=PFHn@_h[X3fO.]I6r(D9%Qn%5.9M!5
%8^7q!eXTU;C5!&_/(e!2p^j5:-i`&O;/H-iWh>FFI"T.Q-F[:!0'q)$]/Qfh7d3#\@N3ijMdNFC\;MY*43Mf[%)cfsK:)`<WbkrT
%%Mr#"7,15Q_G'J^</;!!At+oa^a1Al1;(o/6WaE)q:`AVkZNM$N'of3ho4cj4)^RV$SCZkGgeI7SZJh7g]n!V_qo[c5dosWZ`)>P
%k[T]c@r0&nZU0<k"H)$UM;4N'7I#/:gXGo/YVO0TaRbm*7;SAgX!>@oidFN)YAtEJZH*utU$76^?FQPE;0S%<9eSE<@[5![>PMK?
%,uK$+A(&YWj9<C?"&uh];WMVKbu#+=QkH3J=ji+aZtJG-&6*.VPjCm">7`=i$;gbT&Pd"updB7#(^Y+eLhiZj9DfUs6!OL6#tb?!
%-_+8Lc7?m4BJ6qchW$b_mY,orI7+PS]0UrTTJ1cbGd4K.FW2S27^T*?9j#_OlES@!UXccN1\RN8N2@JGPl`/C=%CnFR9&O0Wnu"8
%`c`Ig#s\V1;:?H]V;qmq\Af:tM`-Idq42p0m1W24@,(MQ;WDnf;5>(MZi<iuPVH>`E<M$h=ZLDo:Qe14!=WZ"@#"+eKD/.G&T6nO
%J8R.E@g`7_MXjF>HqlCJ68TMCI8;>^;BH5XmH^e>A8f3[*&4h]&E$((#h0W^mP+(A(q8,G;(Ft0A3?M!;c_)i1W!0MPAO$)Y%lpk
%*Va@ubVuT.VU3qJOZSOUZf.MZ2/#-OE(T,!5]qSh-8^\.7lNqq%d:dTnb9uFC:5KWA=$]lTOpJ4Gk,<h%X#/_7"\AiLDk@#qB[UI
%4HE0p=LF;<VO[MrUCf<$;lpYJ#8i\LQBj^Cfj+t*e[Ta[7:AYec'.@7C"mNF%!a%t@YbF&8,0>j.p2U8<YN2WL<-RNEWN3=9LU!U
%hm\:H)Jqn4JcJj@iF&n?O=)e;K@@F$6KTkP3"]#_gY7tE8Y-7BRqWb'78ZH0M0\DU`%b`kDgJ(^1WHVLO\a&I2E?dUbD8.<!^KX>
%T5a]D>adj;.tf*@:\`;QUpPZuF5s%8qbiqJYW95aj[pt7(0>h;;">'d2k>?FkLek=fPJap<?pN]au`GlGYqj=b$>DtL:.U"`b3RL
%D)PMb;rmch@u`/B)"M.[3BES2#QtK,Gnlh4@'*qZ;5qpI<Kj>f#VH6G6!g"R&CflYb+.*n6:>C.oSSDXJ!F?p;hQi&dr>]2=g7%L
%2n"Ij0n*@kSr>CpU6?^$J2"P#kUf<ci==nnYpHB42Ba:16g+O=;jqm6(!C)T\FZc&JG@&nrc'4p``0"l3C:g/QJ2Xu5;f3-L46H3
%!\1<ZWX9<=>#i:Ch3EnX8J^1tT*Kg-<b;K:eWMEE!X(@#6A-2kNMg!>>Aogj`i"I-edm2O'X>g1K9%K;3Pl[EE_nWcSi;b-VB!h]
%E-s(pKdD;X>&o!kTFEJX_4Zp#6m+1V:!jTZ!tfEd'rf"u;MkGmC<PT\dAW/]89@#?bKQ<rZu5s/Y39'LL6kLF73jp5XcfLS$C8.=
%n;Y]:KuT2l-\hIM!$HoqXj7+7JYoo^ELkVWpi%pkFp&"*U4Weh#Pi:Y[mIt.VUN%:U)lkC?cD<h$ug`'!\am10RVDf2cHV+ZhZ2V
%.Rk9jWDP5)QB!.Gb?'47,k&@GpAQ(DQ"_Z&V-F<77^QnJ+@I=$<GOK:W3UKrK-JES,^mhB[mAE#!m_AGX;+9io:VLVibnVaa5+/`
%mZ_*m;IDefZ5YVP*n#j5q>:f\rG\2=Sn\PZLP""o6O?c)>;W4B$<6\Fkgh%=N%0">a'#8ZeadF>/c'@9(l7BsGIh'AF4!OjhkkRg
%VJ8NKK\sutq$?f]iY,N_2))O,T"6KO]km?\p5CVRY<VqJPnkc)Zud.I3LD3:.#no/5cZVZ*b>oeI4Y,"^PkfG`s&6n4YASK,T0P-
%pO:g%4[+_W61qkt(!FVc-]7a+M?P`+HSQe-D##OLAdd,/Lo8WdP#Hm.V?jnAK%RP>aTRf"O6G0'/[%isr0Up&c\I8$+J8pG9G1Km
%_(kSVEFGTb4IqT2d*C6@5OFF!6nA0t*l^>^,1O+ndfm=#hVPk$JkFkA)@%2@cj3NJUYAlWE^8tKd)"N1"U%hm6toeiY#&cD-^"Nd
%,"J;&d4g<ZJEr54&Na8t_isI&1aB?p]#rBNZBA7ji.gL\iS9BcqT4=fbARJCB2kR.&e1b#$Dq",m802`0+BUn'O;HEg(Jur98Dbc
%ZZk]('R-XT!d6l7H4YD#7"\?/&TVZ$#Ve]'[<JUI$,D'6W]l58:6Q:TqdYVSri*W/2'kTk"lL:+#9Z><6$un5:.:uI2,@?\keQkm
%%0;_qh],me>XQOXe#[Db6VnrVB(<<Q7c't<,ZrX8@B1I^#%[+RJ(r?O%R@pN)d8kA!(D0Op-b]eg?RD7nA!bSq<%<`C)M;\8=j@Z
%TrpmS!O0rarH>&1H'HHO9-,!1+hX:5A3_[KlH5\jlO"BA&]n>25gJ^[:Fu#?aR%8^8\cQ,+F"<!:sD,/Rng?-'&'*rlghB#]c3>1
%Q)UVqPs>\54QV#]4GYae\fOluU"b8+B;E(kS&Y(f1V&Zu&H#tY[tQ_,R?dmm8]S2ckX4li,g%/h+F`o6U:=dhU'I7mW[?S[Wl+pZ
%%bNkN<4Po#=pd)D1g$RqMk3b?52GBTp[VGl$FMs&q+uk^Qm5-s4=C8g!'1SE=Z7H_i0N"JN+Bp?q5rGV/8m>QpLu*EoV%'.I>@&H
%h$,Jh`&]:Zos!s_+>t:sq+)JNM];l@OiLL5B$GUJG&MH1I>*cgoIX]Ok<:XZC.\1??]`l:Q@6/(U=M@o#DcNuL4ser/W8IVU=@EM
%M-Sn!)]Q;grB%$9?3aTh%2$.iUU^Rn5HK@F50"X'(,gbEfjG,<3?!VD0J27;6@k<sKM>df:j4PJ3AZcj3PJ4!5j5Yf>Tlm/1'9,j
%7&lOHlIse=/<b9iUo[9g[$`pO1T;%)VKQe+h=;Lg"5]7e-<2b%21Zk@eu=RVK)F)0TNrJQmn-2TEK@SgJ`6PAS*u;tf+O3iNu'lK
%k@%HrgqFlGEtPHJ=b>:pq*^VsiOY-111M:sLN2-YKR=RA7>/n%&-.U'-dT^>$GBVZR">XV#BBtZ'P=YI=Wbar0dNR[1rH;Dfg3(E
%$T/B]!!NR`;K*jYEQq%)%bQE)3MeW8&>S?Z6rBD>KpHE$i1st82moAB'V[NBQuq@$dq6"*4(@[f"7Nhe[JINW"]/&2JqqDI^0UXh
%)r9@sS1+(p)fosa4pi%3PAiQ&Y[Q\%*;^d^Q6OQ8RtE.Hd2HB`m\^)+3bCGNRdQ8p2n$$o>;n2=?#7:lB+$Z%FG@Z.=n<<M<dn-+
%77:.k?OR)ra=G-*/67C9_`$j`r:ttp]56&c@LSCaaN2//%A7W+lVV+EFF_L\^p$8V,\OU]Vgs[sQ8bk!POa>PR(8AKU=(,$,;]q0
%,<k_a'4YKA@Pd4&0T".e3J=]$8.CpOdOS)IWqMX=222lk"N<>X'8#f*<&gXB?jfE8CZIVmm7)Ldltd<_o+M_50oQrthNB%P<&;H.
%*GITh2fT9L(b)c@m:3/EdtrgODCnCt$I7<,kCTL^.)PB^Dl;\bQHUnXe8!SFoEg=Z7Fd#?Nns8k/4sBl7J@HE*Sk'Qm5'9]gfkNV
%MX>jV#U%cR6"dck$YO3[C^tRse!5Kc_4^u[Ws:%]5/1FU7%jjYLK.<]-o9K4A-F8E(c1\68ZFhH;\(I,b!E3pZqeXbdu+XPHW@Am
%P]`('$,s4I.\J@'P7:.?jXid=D,8>Kcg[nIGGB%^(U6Z>]Z<5t[Js4:V(S'0*8;SA8q/S4<:HPY+Mu6d7aps*cJr:jG/\0Z`0aM#
%>Ud(pSdpsWCUZc)"Q":XTU>_r;3YBb7"O</m@$4U#uS^'*84r]gMQmIlhse,A!mR'$0bY)r$;C6W"04m1?i-aG--d(Bn@T\q+%Su
%dW[N#S>-n5J1T#2*O]ZUd&dR@Ki*EUpgYk,;N`9EDJoW+8b]G+S)D$1HBIo)SnI+iRV`1i4s%.6"JcU\F11_pfY7&5JOB/q_rTbT
%Rb$C=d%E4Z[UrcbWRdmMZRcIPh/`R!KgWrdQ7T`W>RA#B0Han5]-B-sj?R6+K2VMm;E:@P-P:)-,^]CQY+'f(U8blTh+_E)#S\7Y
%/ddaT)@MkYHnk&K`kHg2=)lX&*0HDhlCFYuf'I:)?W'5uT0i'#+2Kf9St'qjkd't'+jhh*UR=W:@!IahCD/2b5(cna-qA"NrehJ^
%`.+O7CH>X3`*4&h1t9<FZ<UtA*!I2SpIW@3,=a]D*8h6/5bt0q6P'6uDj^b:n/\p?5aM_?"qW0HE(T:<C_A4OR$Z*n,L3oiBeh8N
%E2qCJZ"SHs(h'[0,!JkqT@^s`K<3RSe,9i&K1eH3PNQ)aSl^gJ1*Qe0!6A?D,K!TocLWGkG\g2B+B?%85.rAE5.t6g=0I9j2m?'%
%I#X+DOCF&'?[rYjFXdj)*P`<@]Ff$EDT6Lk@1Cno-FcHah=U\L%LR-Z'2Ian1$8k'X%WRd`Zr!+G\&P:HNat4W?>%R&haCu7@8,&
%<L,P!^q%PT'+db6=LX5$pXT<qmHRG*%=ZMbXsO`:eo[.r^Z]S)D[I4=i3ULp]H3l31RYT*J=Z%QRn<7a8l(u/884f(KgDJPU+]Ag
%C"Bq4NIfeo/^h7V&)D1Z_?jq_s.ZM`F\>,eIuh6Z6pf^DURn:=\hEiL#U'4im]0$Uil,4iYXfJI]BO_UFW<h%Uhjs9q5iPh)L(<<
%Fj'8`XMKqS+V)OfS$m8E(/oV5IUaXmiPdF'mUrp`o'W2RcBEVmGQDe.p<%uCq%t`:5#L-3>UfrA&[nIfmMe2aOsIEchX,P\CL@g;
%(45Q(=#*N?^F&sR_:?D6,TSXll@/bJ\ii'lntY/@'b5pj&8Cc7;98#hhS/bgY;sS[_CW!-[_:c>kI+,,Bk,i_Cl+tn_+Ol>+k4Ek
%$lYMd"q@("<Bq`uTZ<P_0=,R>Hi&Ftc-h7miWbMc3Xl1SQkINBqi($_+uc[F_eM7CZasc7ED/Cj!%X>C!F_cO*'BGj#;')Z)PGQB
%baidP7Xg*Fh/qQahXkTHAHVE=Y$)YIVj:W-PrtcuKEmT4`uWQa-eF#<VEODW;rrb3LNB#<iU0$s39sdO!7;ZD#'B,"_*N!+5$9:l
%[3C.%b1C>%02E4"*S-ggMf]0*4EZk?a]OM'DF?7l*B2r+R@B<(KSi!e\LR?Ka9"QY]Qj1QSIY_(:ekj8%//hV@#F^50M%Ip2F'30
%@3oZRAM)u.OEc3J9lk[/[[='[WV5;SN\DhqC/dE,B(WR9L@G%JS>&_+Zn@Ka&*Q?dH-*o>dW@cCZ%.gN&7n&Kb)i-f?l'/YY`-AS
%cE)qgO7J;FXk:*(-XoR6W?7n'BkeD_YAI&*W+'P%/`E0,_]?S5_Ac%?-GhhM6E!L+iPc2M41..E;q(XFKMJr+^=LJl-0/$`]_"HI
%XkL?uG5XsjVRVimEE1er;tE&L!jJeMaV'6uZg([kUKB8qk%/,_?T^.M\"))4r"QD[HoibH$UUuhh+8!m].ZOc&F&,FCOaLB-U)C]
%nnH-^B96;/9pM&B8<keoHD3h`V['EZ$(,2RXW?Gg>84W'Y!MpaGdUA0k%.;sf4h2FCDRA;Dd\A(W*Z4mo]a?.:)^$*QT]</fcJq&
%*&6Z4<UP9s[?9O;\qN]o]k+=55XV++cXi_Nr*Ep8QdD'TH@H7hpF]2fQY$QlJLF..2%^L!_^BX_=7Hn0p:C(ZK<3.r+%?l0@$8!@
%&.CqLg(-K1/s6)t<ik%m4[QG'd3j5s-4:H']?IH`Z^]!H4H,tG%=@boP[0VN&paL2JX&XQC-utL"!Pe/Vii5u%+Z[7-'+A.M%sol
%@_T-7aa"JFHST30h7C]g\qt,O4aAKrb<S5t!TgL)a3aYjS%!dfYHdlCWX*p+@-Ce/3D0@59[_'4+c4M?Y1q5&'=>9=MPgu9e;h<r
%=K5jp*2G'GJ,+@HhbO[mNAoQH_f@-+gQB&_8rYCO:?diIR#21&EM*Xe7B+-Qho,MnPQu*7O@#a9K`k+gdtZpm'm4Mf=A;DMOfWe)
%SuT?('rFHhQ.MNfpf,h.*ieZFG1ET:itH(HO`tl$,Yf54JMYgSJ`m7AQCsTp4>*-IJ[12^R@u3*m25E%0Lp[MPe!fuj&6KM>1jT&
%G_G0flr->TMA9W)_>qi;igF9.b)&M;ORmH$pT9Y,^Z_"^&Zg^6J'KY6Z0]Y"h3P?_C&ll3_.nue6UAZ'F75l!adK9lhEci!3?f,C
%o1-a^=UsJ4R.f!G8EQ`gFXVE"At3MILEURi7&6Q6p;KWbYJ_MfD&m`6a#Ea,/ciSIR/tII5kTLQ-nouN_*4*@SNq98(X^7/e.6qt
%:.DQpG^7?RYDDlmgC`1:Zu'8/DK)&%Jj%@_`3Kb=Mm#(Ar3Z.EISKc3d6OWMi2^gK=<o#AX5?Tpn^;e/Pr]Or]Jca/(e)GVFt66k
%9k,f6gh^lfPR9."5F@qMTNeeLA4[/b.1<28O#>2W;J_cK`0DX*PU%\]bYlQc"OT'L'q6QPdqHZEAP_h>Ec!h/f]NKdq`M!gA_eaa
%MrkYjE#E83S+)Rl/?V??"g.j9.OnC4(^#D@L;S,-c5bdpJf4h/j*3&MCG7G6FE_Fr@u7GA0n[.47R2uIbZ"^EUc]4T*V"sh.p\41
%KJNSa1on;9ZdW\`P&.R.-fl2t_P4uuge`&?7hVtaoQY`/JBejo0\]RX=4jE.;hJFLD:Su.8c#=ZKCqL'EO3]\fTBb,"54o_eDq'.
%`90^MoAQo)D?9b\l3de=[2nEUC'-CV;hLEcN#d79%hX-eo&ct=7GPg\<<^Y>iQ`Z0RtWHN?6-S+/cYKFUu*iRNR/$2gc)A!r'S6.
%9-m_eD=hf)#Q:6Q"U-@OS0^k&a?dT0o8MHe2"N\&F%D;W'[p*W)"fk4+#=TsA_77?8%4X9YUds4E.UCf&aQQ:&IV%L:X,#pjL\T?
%"<X$.N;SSD;dJTLlmNt906V&kb'C>I<f_06$Mmg;Yn6B,XfR_:cM5JZ3lReKN#82W[[?dNDAmq@icAc[0dRj/Xm!TMbY>Es^*),N
%o(-5Z>\M@p"/"b=gHc&`LY<[s&>k)^DAuXa;^!?p/s\bg<=,^!c*a`qi*SR*^6,1M/;F[U@2<FYoLlN:D#/.C^+1_`'"G!A'"bJG
%pt'o4^QL?q4_dp*OF?dSr2Zc5Lk+7X/i>gb19hYPM"[upe)6`+J5_7>Y`>1EB`f&"j+BrsF.Kg`K2.IE@GX_7<&`gf6:>>a&SFPW
%frF^e[3ii&Q>::t+Xlk5LlkW#Tm\<VECmYK#sM`UGi(o%K[3g\M?"4K*;n>4N00\ABWfh%r:opQ-[u*QZ1n%<5Q(HN%j+%8iS./C
%r:#J+rqQ)Wn&s=$^SUgWG5@Nns1s38s8W)4:47ns/>8MiYB`GU"&K+GOSW>PmkP="k6YDlrC<B4>]MRpSU^/l]F,)h%JQgY^LM\f
%/fOQEJ*CmF$B$J,qu<S/V0<ifVsbkTq#5U`TE!SpB,lsC'arU.ieOM6UQier_#ruscQ+f#p'&52+]?om:.^ueV68MST/o%cFEZ$+
%_mat^[T<3n:6_A/QEWZ?l"8Q#D?c=>Vku]Tk)Bq(Jm_^?kEO>&jAF(S&Jd+`mqTQX"\^g#&t6EqW>cD'-*(-u!C?+4m!45>l5,\o
%B$CG^j<^*BCHFK:]Y\:/U_p-h'M]t)1>$-&Wn4ms*r-!r>H3aQ8*cmgoW3=[qs"3qrInYGcC`%^/6UQ8CXS"n0TSK,[adPc`Qn_9
%b\d\sIR+)WG@rUk1FU@K=sm".Z-^[iNX^H9Q`;lm>sdC4`Ioa!k4UN'c$RbT8Ts1_olI->0<)N=o/J)iEVX<3PI2C`LN;"N@2E>m
%&<pP>?8PnP&W&9]I=9l?$A`ZSN!.$KOL%NlW8Hi^Fs2pA)t/$[AARdEM@G&r^lo2\VqAuVr)p;b,I26'B:au$LP//Chr1A!#GIVc
%MB7?ikR91+Ad&;V0G&r#6VE-(Y(ka[DDskuTc,r&e.(&V_o;`jf2UR>7DEe?nkC/+MKrL,cWhC?q'koYjJMef0)7K.+1_B42`9$l
%UM7OANN(pCgC*nhaiX8c'D>5D[j00QSSDLA'.'4_DabP@gmj.cm$e>1LMmc%Y_\)qf7jQEN#]sK?PIf&>FL,YRl=?,,ZR:>63r#3
%=QC(Q30_dgJMpVDe.c]s1c8TRH=NJDl4c,"7AahfXr'mZEc&)0eGQIIjpBd;cmC@9KM$tPgl=hP7St/sLR7PqS\9IE,%'N>-Q/h,
%bIRA]auEDEK1`K\YPel8VeF@#\4p+f'a%i5H,O,khhuTh.-Kg9@N=WE&Y][UN20+VZX-8SqiRnfpl!D!N,":;o0inc&RL4enMP&E
%Md$+<dNK3u\ak),lB^N\="c#PKsk!5cGRl'Pf7%="B6(MHF#J05?'+qpIk,q\'$/`22iMTR(<)k/Y\FXb'QkI*ls+6RH\.K1a9D]
%i&4;nL67R^\)$nE.b.r(/F4o\5Ka+cntYHS3<*QtYM3.Ic=Qj"<a3"UE+.Mq<*RX7WC]0#8UoD'>NQ7'(KJubg9O#+9QP>""[F8"
%8.9'VC,TkgAnffUg".E6>g*!kerD@7.g9hURAF'L_a19sT7FZHmY5&?4cC#KjF,M+,6e\'.S>1`-[;]8<KE_P=:V,!Q&90QO>YD5
%10ZRA>Jq"JE@5hgF\3l+GLl4!iTo2]nS=-:Ri[3A5;*q[P/V"qRp3S#]pgi@>!)t2+ZUG.*_ia^dWh$f,mB:;#p8m]gX=ghZ`Oim
%o$n+`KAbG4nj`;9KoQ3s%G.,iGn>;%`UmpA%&<:&f91kT^`a8R;Je:3)^hq6Wi6&Q\"*t9AiW:Q0V8iKF@C]e4Iqbn&heoQikecu
%q3Q!#%CWF.jNOq0Z6oD7X%u7CQ0KkU,S7$)$%RdZ7<=_QCct/t<TuP\,EJi5G6MeT;>uU4>YCTEe<*rhgKuS@,\<?s4?D(a."T3l
%N63-p;F*1Y`#g6:C#d^gi'WoE4B5pp>)ER"G!nd==ZV]6.LHLnK1jHaHB9pu%dmg%UVrO@\&:_lWlW[)"7"PT+P,L#Wb"dM7dZJA
%1X[/*<cSI'p,I%1i!Q,>XXklU0:ng4W=Uil&3;<B2jJPh+JX\uG4WeWjGma*5nQ^\HOmPJ?.fr-R.[/Q_t8&,i12>(+8&!9#l$e#
%QFMDa)?t2[#f<LNC(3K=+;r?KVrG7`)K&I,Ta%ekAPr7^jYPm0>>V-UW3fes<W.tn_Y+G:!`2!GIV1')K1jE9c/r*>>0h1SK-X\^
%6quDoCIK##puDbQ"]GWMH[GhS?8D??p:S6`Hg#Wd7a$,I1/Y'Bjkk*87#a!,-0@0\]B6[^[3Lhlfkg0[>frUjKN7>i+JRb+D`1&F
%X9%KD;+dYN<b<B&c-u#V9s/>;F)5#KQ21/h%OO8/ANO!`OBSe97g-FKb#;<@6b.)fTN^$e^<o5^]-W3;,^PD+6Wi$*cZ4:pWP0-(
%'!=J*Jk%9AlWeZ2C'+%G35]VL--oMY:tZP*/b-pFE(:cs*C-<T.lnqk/V6=];)V'@>D=TNN<J6TnM=]h9Gl7JZ_[;'2@KbF;+/@s
%VA+7J*u#F?,JXu%h]CbYLZJ/fKVLsF&5,?(!kYn33757dlg=sVlV5,_9En?$"V&Q+^#m]>.1=OGOHc]5`JZ/8[Le7Eo-d[#Of21T
%nC&fC^)2,[OL6V>N@%'f'*6fA)dc-)8cV(%80URkBq79%]]i=L5I16)ZVoQ66\%q'e6n4,.e.;lcmloP$.EH%Li9u7!NRn@MAa!P
%J9gHnlu%eU#_RcQ6.Ts&,!ZL,C3]2\#7a^)C8G%_\d/fJi]@54a`:>1=Sf[/3%0'%cgbe>HH6G4YR3P'jkIl6gTD(V&p^UL#nVr3
%&6m@"CmIPq]b*0aBGD"]2E=#W/"X5%1;F;j(U6YSCGp>ncF4>5_h<)^^1*aQl.3p1'-c7=NZMsL,cdG4*g".u$0TKf8*rPWQb`EW
%cm(14>i6__j*[hPi=j2FX>C?Nm%Bd@/Doh-eFb.I?(R<KrL43Bm=ogc>?BJ+6c2`b('/rA.diunl)15P%4h0XH1m?>Z%siocU,QC
%OC`V0:sI?9DZWDBl*jcR&7DmQPCNVVKF_Y_DFMOC;mk6k$E,%N"WP/]7,W"L-`GPhoO6XkqV#4_(t9!-NjXIpp`[;SN.c_<PVmkE
%8ZUOlQjD\6%)gn4a!96F-:+BK&[;LO<n_B2E'#:'6\[$cnSf?&oPX&G7coLtp5)Mu!OPJGS,m)dNg\BU9uJs95lE%gJ8[a_k8JTm
%ABNqKAeg(Q"tlOZ<JO6a&Au1/SOf^R/R[7$ScD]E!9)tfYZN0%J[I0gZNfG05K:B";eBi<!9^5IZF)$14oYA4DI5Q8Gb!IX"N;Y1
%%gAB099q$WTLK58("1PV#eI?3qI-8#Zq5_K=U]mU.[)^C!0%P;X6H7S@kAnY_2o\IEh(5="&%Xs>X/X4)U>4qaJoqC,u-\UeYkaj
%m`kAhMT(ZBfCKRoY#U,6,I5pcp1ZZmI]]6)S(VhNbH?Up]-Z5SV]mqIiJ?A7a9s9:^p<&rSg6<h+[JARj^,etY`3nV"#2'r83$Fi
%`675PR#3;h!*6.l:ei1_$8Wr'Orfd^^lZB3f1,TJ5XS.[I$Qolh+\M\I(IFC*u5T'XAr8V.0XJo@&!mIkLU`Zq^!^]=(>Q,GQ*dZ
%[(p]ODPdS0h"YoW)C+mYfoCk;8@K/$\*Y4?MD@`s(dtWLWTZFbWa+"i;u2j91oc]alW#pg2c0adIAGlD3k0cV\ospO\0H$<81<8P
%'S"$q#V9G@+B<*+@qiUR*$lpsia@LpFbWO;l<rO9n2t*/>o^Ip8p0$TMD.lT"Xa3DF2!(qNP?L.ReBnb\[m]@R"@&M;CJsnA=[:U
%Ju#W$es'F^=C)`1%m^Qe<BUHhPiW!_%ag@XSa1%QgeAJGGP7Le=eOuX`e#Ci$$tCo@Nn>Y#=)+s_UT&L;YFj%'-@O,Nqc!Md2e"m
%P939(![?2ACWDTj+L+A:8ja7J=8&dVq,$tj!<F(,jR7=sOl6iP!eog&J1W@hDEuS7fp^udWk!uc.8c6\W$[pp[=l7#Uihm72#,(e
%FU6G/mS@O.Car!B/=%BS;XG)3SliL2TL%9eOqcMHJ'LijW^K2EBCcCM%ri9YZa6_^1!`S7bXBMR<si`I\p95QK[gs4?GEta&B$V`
%Fcu#UKNtQJS&n&n;3_3"!7Mb_DJ28EaIoG-.$_`nae5gp8cJPb5tj&tX5n]%#7%Oo<f^i5(@Eqr&nkD<f\37K6Cu.!Dhs-[XM`4P
%'b[Td&nmBQ&+UPMMihHo9>e#gORYLE.m)Om6e,+N/7o+cA:ggjf?3Y<+ZW.ln!b'J+cBsgPGX64\498C7>PC[2Ga\g;Ap?sL.gT>
%H%o5jj'f;_AY;#uiXA79>RG(W_g2laDb563Q>;l9AlsgH_lPjn'2t8ZaJqaC!g1-Bk@6njA;bn6IlFj@1+1dUF"QcMZ7rNuX_YQm
%l<mXCl92mc\$+XIc^?Id$J936?1OT&0dptaEp\QI8;MPsN*RlQ:o)`:E5bO,U[jsF@0L?82p6rW_!Yc+DJmpI=hK90B*iRUC.Q-7
%3[O3:+\:59;e7=@C$IBmP9.rr9R7[:/K'J(10Qb=ZcQ6cS<h/`Tj1UWY(dcn@pErLh(f)\il*7V>EBWT"'_Aa,o-rBLKk=ro/N\f
%?,hQlYI\Yp5c?>gei:oI/AQ4'(M>?JK2?Zgli\jS$4htmI(1\2o;65!`48U<;DM'.@&*c],>EGR9]BdMC4.-+PneL1\PA,)B\5Eq
%l8[^a&1$O'C'Z-$XuMksPbaF'f=3s.@=)LuVH?bFH'<BIPVlnqq5:=K6E(sUAfu)cH4*.^%6YUp6bE;#@RlI@GH$bYd3qn`OJ58$
%9n@3D&,usBR]733]T@#EldD_d-NG>sIL_boO;fW'<m:%V!A[4tl/4cIb7?d[$()0a,5hu$6V_b_hpNcRN3Xmt.R_MuGA:0;6)cG1
%+l(F_%pHD;*5Is*Va4Fck9YL*F_[MGL"f[ML$+QD)PA0Z`86H2lt)eTiZbFGIRp[f0!\SZf?5*UM#niq5ZQAX89%7`#"=m+"dGP6
%51)RW-?Q#:`j'N`Jjl\LJ'8@l;7Btrfi,`?1GCDBd*-#n61&"*eJ>P+*ECDh\06u"_7&91aV*TM8\bq#<6P>"hufq!UZP1b?Rj^N
%'cFX5-*b"D>fmr7[tr"dro&*h?0B<DJ:3,7D$1l@fL(7+ai9^I>IPlZ[>UAX,Q?3"H1/$NLOoPkjkJ+;"l<<U&IG:hI9^H%/h*5^
%Bt:nu?\X>;k4\I`oKOTABde>YIc*RZE]mO3g!)R5d9K$0OLcabPoBa(@)oTUQNUM)Q^TA[WPs'p?:9GtHn<X$4^ErLgGq;C=pU:*
%`GE4Zhm7>f"#M`I6]@uDZrFBJH,Xk/B"Grc*6=(r>L<#.;Xq*H!c4D/TApRCY@Xi#f:tlp;PYcrXKAhq`IkEu<4Abj.lAmtej?4X
%%BC75-OE[g(?"2/,Nu78Pi"D'D8JDh0F6W/c2U^(=ZiEPT:e*MH`+ZW=?(h5mMWK59Xl:`4-pYkjCq5'\Nl5_:%5rUKM$72/Wj!N
%'""JgR"o3b(o11PkF(;R.ZHk]R7'Y7H:1G4/Q?Wo`$jF38BnE38t_;=:OTk+rQL=XZ,OTdg-CI-qHtS?0$q-=OpdST))md>WL*k;
%HaX'+8EiBUNB7T+Ku`jF%5NO`n"b90FWdXj"t<AKEMuVXjU=\2dV&3VAC&JAD-i4O#tgl]/>RTNV0Fd=$Hr5oM`T3_c-FjQkOnb,
%hnJsR4WV=u6FfUa4>eFVD<%Zil-a<!`LKl>&6(B]5rR\FIOHmM@A/U2RdEDgH)_3"WTMmZ#Z$t.'3l%uR2ZaHn.b)AKo<#PT[]LR
%&e7Vm-oEA)a+QoZ9"<MsO(C9YYu\\MJaA8_Ai>!8MQK=d*ai.pX@G_BL//Z\BSgAr-6V3I&j8i;;:bi&>SdUW+R4f?gI^#DE+`j1
%eZbE#c:c"J)u^nAWVG7,ZUk&jM;>mjMV_Wd<e.YeXS`\`$Lkr"\8>dBYi`+?5?upIb3Jpk0cSUH.eOPB!)Z1k$,=Y:bC)5Sa#AEO
%CljeF^`IE\fc.CYdnc:rn2QI_@>ae4rOl((Vja2f=OT]n[E_Q<BqEriC"?<m.PQVok!;^Fr%Xq[.L3TO9qLS?,@V*fJktD`ZIj<?
%h1eFB5)emH"1WdL:d1T!%:\cRTg8Ukq[A?f9sen)naNsomO)g7%B#9>M!llF@_.]%.ShR@(gU1mR+[neM2d+/>^QbK,D_sh/)rFX
%TUgH3cjk*NO,"U]h+h]OGaFZQhNqt(G.1p]TsWu^WaeEYI\f^Tg3<g;3#J.-TRfWE`.7iD(iTpjOl<2_q*$e=@8u(VB;=bgA5o+1
%d;]iVh0oMpT,5dobJPra(K>iI;>D_iEO#QefGmIE$=XA$b8hjXA!B_-meYUk]C!p&gqLDT(O,c`6%#od&"NQ3J2m\"I$eH)-SJ1a
%DF.<,@H_a!D)oXNbA$^rn`VbY5I;IYT8*qjZOc9Y(0WA/Toet(5(`..&g_h"S;+>-@8Egj5%1cCV*dq<CtLr-fVP#Tkf$W7q2'>$
%7PhZT&'u!cm`h6,cf"_H!U#77gj.P.:#up1%I=)&=/cKGnER-:Sf]]#FCtr.;A[(8ZjZQhQ000bU?foQG!*=S%Xjg*"2SPY3_gVm
%>Fgd%XSV]!X$3[gp%/Qk?;@R_pJJVo6+Rkr5`+P;:o2X(2a:F88tQA&IL/!IhB;0[8HN!A*4mSN?ic9gjkc7)o(&\Bcd0DsHih>;
%IVKC,*<oPiaan51okINDZZi!cQkcMHZf:Od<a78Sb(o_33PCdHcWm&lh;p.pGI[deo-[r?3.TgQ[YDlMJS^Ut4X3G2WWpCtpROC:
%WY@8rb.o@*&;6kM5(Et9@'\@kS)Crdo#/S'd3NloetDP9&a'-)0/:j-`s=F<`\g(ZLXGuU-4ID,<o4Ii<Od0cb4T?M"dlnRPO.(k
%7]aqo?W(inp27J*k-M)A"=VjAqMHBH6%F=oZ[QT!4J981E&2/jc[7ljS]Y,8?KD(QEekO2N4u!(ZE,A.0a:A>E6<c`X?gO3TVYdi
%eP1:4FXLt'$U]ec*Ltqg/[D0`C6*ICBG2Hiel0-t=6'$f'e)N@M-2K[+#,MUL5g,-Of+(:p'4:)&O1l3"7Sb.i)F!@7^3q9/ftG.
%'$33l]S?WB@A/r3Z)\)cahp4>paP"4qECLtgZ*nB:8d<6J<0?557SXlj%J5@O_,^`&<"tAl?9$NL,%&ir$VG2M>ID2kU++-%#KcM
%Jch+$Bt/D'lt8?%\_S-#WQnEpLK3BP].8FYW8*84IfdH(/'n@)'-j9On3ZB36W&D?TRbPcE%c"lXTR+CeJqkHZP!'bblaV_/6#H@
%]$u]'"L_DRH"=pur[:Za74Gj*E6mfj'"iKf`g&7(X["a8p)m9f@1/(s<GirYZE:b^hd&LS"o505<:RnL_R6@@LPY(uZq2[.d^FF/
%BS:URBq_>]+BbEUaca'AhU>uVBo(o2G@jS,+Vq./dL%9%BLCI3M()J20F!#40_j+)j(al@nC35lY%V)uWY+dTqQ5m+/V?dQ"AtbN
%p\j?_\:+%P"OK)4Zff;[r:&8YiN7O\Dg0rS+"#h2@aa'Ym_Xnt%2cWj=66YCc3!L$9fc=$%_,_#g]aeF2<ehG\D*\rpUHT#A!T:%
%Z*Wu3c!JQjHW5l;p,G9B]Lc$d?+d:Kj?&&U\qsok+qkc^om,8m+(jjqbh*H<p*mWI:W%JT@Yb-6)fEYo45c0,>r6rp#g_PK(O:Ze
%nmS0G:]'4DIOBETY#U/oVoa*5PVK(XXGREo;`'F-`\)nZ3pE5nXF[_Zqo7*W4'hcpLV9t0(77YBDTF]YknbH3FS-5iD?O+D-G`_Y
%0))o)Q$`b0[L3Ysb9m*&R&-dK9/i@&.LIdbn#R2UPeJ%"9Iqs1,XN5aK7<@\dW,8jiW`'7Yi;8B7M=QcCisOU)pk>;F:Dlbk&_($
%gccD2\V+J$3(oTqeqo0b-Q]ihGH#oN!'V-tn_CPRjo?92M.$Fe:r5gafoN)#NJ!&$6]qrA]K0H(_e8RMPjO1l@]$hTVZ$<:]m]G1
%H7KBV=rOc1e0VFH!$m9d_-2_!'3Io8>p5>bVUPJmhHpu'#XV<,!6k>oX*2J+i5".nCAFMf_-6aRP)JB?>luRFm&WlhH'EGaPCa@*
%+r=+S4)?'%/6Z$#RkA)?_i?G)AYh]RUWF*^b;:jK#.;<JJ<M5Qp`S`o2aE0+_:D[A=r+9h"\+s`*Y+2en;!B3[gd^GI#ssjp%Hp4
%#G)X>>g(Hqqs_^3@_&dF[ZK(.H$M=@F!-TY>?7Tmqt5jN*1V!4eF90*5n;E>,f1i@bbl(Z=D,`EJmF-TVR$+Jgt3q/"-6]Y>D+lf
%(PIbHd+kJ:)OSQCF"Y2RiKAd2NRRCNC_[fZ.$7/8>!RB3@$OLV`Zhe5(#C@q7e>,\L`9(,="#8r/M)>E\Q("pG=B>!")/_+O@6[8
%@qsE1ZR!lno,PKbU/d8nKMK=%&]Kp4FBq4&b53!EM7e4Fe>Xl=L=[=QO?Q)l+MuI-(b1;HnZjM98N_fBe*JhL.tpCJZKXc:I,cK=
%E-CS;:O]1niY66H#eS-2%e6L`C&L!-TU^>@kQ26=2?Y`S-A>7!l0YNqpV]YWML#TJBtJO=4K!/"5$Y55l"Y),lZt;#[[a[A!YRh6
%KPkCc^<=JT^)b5`#[0qSbM\9O%kOe)WE]rDpK-,BAS6)6mnbb?ZB2I'\n_@M"%<u?96NsOh1TuG`k(\7-7Y1Qjj[Qk1@oHM3!#<i
%i!3Q`0HcsB7i,1+/md<2_/%ekh"A&8[V^6&fQIX"PeM*#7k4/pHqkuV#Nt]'LpsRZCnM5M]Wk%lK@,E?'N_>X!aWeT"%<8>2GS/\
%<i"Kb)Mg:SlIE*]A]`6BCJ@=ocjiR?m\Y;XIGEj*+-]c'29c9cH9q6+6[++JH)'K,'I)@bHE,%o^G*<kNQDH"i+0Uh?GW2pp3TF)
%LPGs5.Amh[]StO=BD#.?N5?'mCd@%Dpag-e.((s`jLiJRR48[E!2%3-,'^\QY;-PXM*G6;14=pq74a;c'+hY_iEX=Z"!K+co6K]T
%M&@m>#Z9P5M4l\'[K*l9r:k2;]b>r&$q"ilm"Z]NZHX_?PSh-P>'nq+q_[6&VZD!?@0Let^:VY]CA5D/QAg]7ADI?V<Xaa4jud.Q
%J8,T=1'5IU"6A*ma*Ts4hNO/'fPo1h5-33ma^<iebC^bIlf:VZN\HPnTOoqqY9%^3ib_oTW_M^]eW@nGW["#6;3d5W4&Gn@C*@7"
%ej.BOR3f1$1p22;3k:T8PC&UY%uQs:BXI/ACb%9o]m.hh#LE58HU:Usn6#$FBKLUX;N;D`WEDgG'DYgZ1]jikbm8Dmgk*kR2#SP#
%\2&7+]c,!dFdMi3TUme@lA*]3[a4g7`GUOLV\f"!`Cp(GR?gWZg0nFWfYus`ShAVBId&Q(*eHUt\KW2I8DWAqM`*uRNgB6RZ5GaY
%\PkdD;lC/,XVA0Vfh\3:Ej0h9PJj%bdEOQS`2^(A_3-_m3Yn<qOKEs+=Z:[mYS=D%-B8A@;FkJ_a'JVPZcWRQMmhlq@FKX,H0<L%
%Xo&>p.mKc8L&`$S3g$'sd9":2C]#kB(K86B'.>`+Ck_,\c2&1UP3B;diu^gU--tB5D1-SEqE+CnS@S\*7EsXsktthZdOmklFEn^A
%J4U(m3L2/!":oV9p3^cl?urMbXK0GO89_]('t)U!qnuS:?Gj^X]/hMpOBUgK-kL7N]/d8e`6buTl6cpt1kaTDl?a2UD3Ubd8dd+6
%E-2NiPrHNY1N6#det5'E>,S@Q?NcLkm1G4d@,_nsC"uf\JlVXr;9LO>Xs&M?&gmfd:@#h3Od:ZkOKKj,3l%sF8[PmUdV;u187^`I
%(n.%rn8f:M+^g/:MX&n*#(=o<RJ#02i^nAJN?XgQCZZsF6)pR6d+]@TD.&<k@1b&',nW&.psU5<:c\dTV9">rY/p@."),_h\6K@\
%nGR9A[_\6L-t+K8VKssa-NNA"?*Q"[`-EB],g(I3Xg/QiPQ]kXEebL5-LXL<ngdBCZ*>&(GH1t,O6h81_7%O-j"_V!Y]=-6K]/\E
%+hB4=)fZe!nTM&O-fp"KNKE>Wm]mCRPls,'OAgHHe([q+rIb9Q-OsgGb87EU7Y(O[gn%L)Hk!!V],n#:pd3VL/b0iM31t0:ZVQ*&
%B9!Xn;b.oJAlEbkB.KI6#=qWY4@;`kn2LieW?g=SYJ>k"AW,78H"]fII$M6L2tfsZU_#.^bu!@3'Yeoul.":bWWP]6eEl9P<hBTg
%p;J.ille+[&!T!NpA7)PlEA4:hu*3&n,M,k4"=P*^O$9K^'$u6!i.IMd['su97ZX\5l)*9I0l"l^3Y!0!i.IMd['su97ZX\5l)*9
%I0l"L"@ul$Ub;bsQN68CJFk-Qg:k6'87)Fo0*0Lf!9m.,oHcd!&g2T/OM1ig?NR#V!Rd;7kt?R!,s_;>+FOQX^'$u6!i.IMd['su
%97ZX\5l)*9rUpjHI0l"L"@ul$Ur""^"@ul$Ub;bsQN68CJFk-Qq@Xp!$';k(87)Fo0*0Lf!9m.,oHcd!&g7/'97ZX\5l)*9I0l"L
%"@ul$UcS#l5l)*9I0l"L"@ul$Ub;bsQN68CJFk-Qq@Xp!$';k(87)Fos.9RYhIF>"a1qVC?iKuls7lTV5Q9p1++F%;DuUTXhZ1ra
%mk;t)^]!hTrpqdmr;!7/^\Rm+^Nk>/kE#Z8Va(33@t4CChr)S*L]@,A:[e)IDr9F_qO@N;s7(#WrkmJ$s8(b/hgK\Zr;,l3q!#j!
%o#hPnr*M\fnuKP%l(<G"QQO!@nFP!$q&fY2rI=\;dk<rbe"?[4bE(Q[l$r]srucoWNY?m?lbED1s7!)(qS/@QR",~>
%AI9_PrivateDataEnd
