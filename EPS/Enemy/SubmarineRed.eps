%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: SubmarineRed.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Daniel
%%CreationDate: 5/2/2015
%%BoundingBox: 0 0 254 108
%%HiResBoundingBox: 0 0 253.5235 107.7598
%%CropBox: 0 0 253.5235 107.7598
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">SubmarineRed</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2015-05-02T11:37:02+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-05-02T11:37:02+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-02T11:37:02+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>112</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAcAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq+T5fNT&#xA;DV11y2ZrfVZLpLiPVYuLzn1ZKyKzMCHT02ZQjVUbbbZZWzF7T+XX5g6pquprpOqvHdfWYJLjT76O&#xA;P0WPpFQ8UyAledH5KVpUA7ZGUaSChr385ruK+uobbSLSSCCaWFJJ9QaGRvScxktGtrKFqV6cziIr&#xA;b0HQNXj1nRLHVY0MSXsKTCMnlx5itKjr88ilH4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXyv5g8yazB&#xA;d3f1++v5NRSVotV9O8uIY3KTMs0PBHVRHHvw406e5ywAMWU/lp5mi0jUbaSzlmXTLiZbfUrKWeWZ&#xA;F9ZuKTp6jPxKSEciKfDyrWgxkNlBZx53/MnVNF80fouyezS3hgjkmF1HI7ySSliVVkkjCBUVdyGr&#xA;y9siI2klkXkXzfL5msrqaW1S2ktJvQcwymaJiUWQEMUjIPFxVabeJwEUkMlwK7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXgHmr8iINE0HWdVfVmuLHTLOebT7NIjFIHSM+l6sokbl6fso5Hr4ZLiRSr+TZP6c&#xA;0oVJ4m6FT/xhyUuSAwXzhpeqaX5s1myuLVnkS6nn5RvEVMcz+shHJ1P2JV7YgpfTPknSrzSPKGj6&#xA;ZehVu7O0ihnVTyAdUAYAjrQ5WlO8VdirsVdirsVdirsVdirsVdirsVdiryrzd+RUPmDzNdaomrta&#xA;WOoMr3tmIOb8gAsnpSc1C+oBU1Q0OEFFPMr3SoNK80+ZtCsh6ECPdJbRjYRq9ZYlX2VZBTJx5IKK&#xA;/NmDUm87S3vp+vBq1ta3toI2UUjNukRBDlKHnAx+VMEUl6/+TWh3eleSoTdw+hPqEpvfSqpYJIiL&#xA;GW4kipSMGlfxyJSznArsVdirsVdirsVdirsVdirsVdiqB1zWrLRNKn1O9LC3gC1VBV2d2EcaINqs&#xA;7sFG/U4q8383/mVZ615W1jR4dC1Jbi/s57eBpDYqgkkjKoXK3bHiGIrQHJcJRbBPIWqal5e1LT7m&#xA;80q6eK1lleYQSWhLLJA8YADXCA/GwO+TI2Qo+dbzUNc806jq1ppNyltdoixpLJaBwVhjjPILOw6x&#xA;nvgAK29ZT84tLZgG0PVUT9pyLJgo8SEunY/QCcjwFNs4sb21vrOC9tJRNa3MazQSr0ZHHJWHzByK&#xA;VbFXYq7FXYq7FXYq7FXYq7FXYqp3VzBa20t1cOI7eBGlmkboqIOTMfkBirAz+cmlHdND1V0O6PSx&#xA;XkOx4vdKwr/lAHJcBRbyPW59RvvO+r67BpNyllftyhieS09UH6ukR5AT8RVkJ2J2ycRSCqeb7vUd&#xA;Z1jT7210q5SG00m20+RZZLQMZYWmLMoWdhxPqihrX2wAFSXp2k/mxZWml2dpJoOqNLbwRxOUNgQW&#xA;RAppW7BptkeAptneh65p+t6bHqFixaGQsrK44ujoxV0dezKw/iNsilH4q7FXYq7FXYq7FXYq7FXY&#xA;q7FWC/nDBf3nlm00vT2VLzUdQgihd2KIphD3ZLMA1AFtj2OSiLLGRAFl5S35c+cRbfWjqWlGLjz5&#xA;fWZfsnev+8+ZX5fJdVu4n53DV8Wyg/kLzgIIpYb3Tbpp6iCGK6o8jDbihmiiTke1WGCWnyC7B2WO&#xA;twyqpDfkxZry/SR4pS8U0TNHLE68XR0PFkZSKhlIoRlLlpjoGqSpfoJXqrbV6bd/64Qh7r+U+qc9&#xA;MvdGkasumTepCCan6tdlpEJ+UolQDwUZXIbsgzrIpdiqF1LVdN0u1N1qNzHaWwIX1ZWCryboN++K&#xA;qGneY/L2p0/R2p2l6T0FvPHKf+EY4qmOKuxV2KuxV2KuxViv5q34sfy48xzmvxWM0C0/muF9Fe47&#xA;yYhXgGkaPrmrabDqI1XToFmDH07m4kWVeDFDzAgYfs+OZkNNkkLA2cHJrsUJcMjuw++84zWl5Nat&#xA;+99F2T1o2rG4Ukc0LIpKt1FQMoJcsbhMTrV2lus8qzRKyLIVePiwjdeSvQipVl3BGKgg8l+geaPX&#xA;u1JlAYScVRiAxHY/TiCmnu35U6ssWr32lM37rUIl1C1B/wB+RhYZx9KGIgf6xyMwkPT8gl2KqV1d&#xA;W1pbS3V1KsFvCpeWWQhVVRuSScVS6w82+VtQbhZaxZXElaGOO4iZwfAqG5A/RiqbYq7FXYq7FXYq&#xA;7FWEfmNdMl7okI/3UNSvq96wafNAu/8ArXYy/TRvJEeY+9xtbLhwzP8ARP3Mb0b/AEvy6sR3JjeE&#xA;/iB+GdDl9OS3kMHqxV8Ei3m8q/5VpcfcG/tfMjlk94cTnh9xYh5/QnzKLwmralZWl458X9M28h+l&#xA;7ZiffOa1EOHJIeb2+iy+JhjI9QEgikMcquP2SDlLlPWPIGtiy8xaXdlqQXwOnXRrtWUgwMfE+sqo&#xA;P9c4zGyh7dlTJ2KvKfzq1qRL3R9LhajRCS/m6bEgwQ7HrUNL92TggvNr7U+drIbq0hvVRS3pSIp5&#xA;UHT4vhybFAW35grZqWSHUNN4A0+qXE8Uew7rCwT78GyX1JpIvBpVkL1i94IIvrLkBSZeA5kgdKtX&#xA;KmSKxV2KuxV2KsG/Om1ur/8AL690qyiM19qU9pbWkIKjlIbqN6VYqo+FD1OGI3QTT5ZlhvbWSaJu&#xA;SNGPTnCmoAbfixXalcyJRnAkd3Nx4ZMeQRkKN7j9YtvS9MmvtQhECRNLEfUBmHJAB/Mu3L5ZZpMU&#xA;p5AI18WntDPDHhJle+23Nnn5g2v1zRtAuHJ9R4brT7mdBuRbSRyxKa1p8FywX2y/tGHDlPnv+PkX&#xA;F7Fy8WEeW34+BDD7KwjtAVjNUrVeQHIHv8WYDt3pHljXTYjT9ZB30uZZZ6HrbsCk/TrSJ3oPEDEi&#xA;wofRSsrKGUgqRUEbgg5UydirAfzm1ZrTyzBYxsRNqN1Ghp1EcB9dm37co1Q/62SjzQXkb6nNIhSe&#xA;OOdD1WRAQf4ZZbFKLTztFZEJHYXemqh2awmltwKf8wzD9eDZL6M/Le8vr3yVpl5ezSXE1wssiSyk&#xA;mQwtM5g5E7sRFxFTueuVlkgfOnnG9srz9EaQY47xYxNfX8w5pbRuSEVUqA0r8SRU0UbkGoBw9Tqf&#xA;D2HN2Wg0Pjbn6fvYNP5guJDW417U7h+7Rym3FT/kwCBfwzXHVZT1d/HsqA/hCFl8xenG0h1PV+KA&#xA;s3+mz9AKn/dmI1GU9WUuzMYFmMWF2Gu69qVv9cu9V1B5JWZlRry5/doxqqCjj7IOb+EaDxuSdyJ5&#xA;Lp1luHV57q6ldVZFZ7q4YhZKc1BL9G4io70yY23DVIAijyWR2/pLxinuEXrxW4nAr9D5M5JHqWsY&#xA;IDlEfILRZRhGQSThH3dfXmoT7jnj4s+8/NH5fH/Nj8gpzaTZTFDMJJDGvCPnNK3FaluIq2wqxNMg&#xA;SSbLbGIiKAoLP0Fpf++m/wCRkn/NWCkqi6ZaooVDKqqQwUTSgAqQQftdiMKpjDqOsQSLLBqt/FKu&#xA;6uLy4ND8mcqfkRTBQW2d+V/zxvYLqHSfMlk1zI9FttTtOAaX2kgYoOY78G+L9lO2UZZcG55ORhxe&#xA;IaB9TEvOHmK317zfqV7E54VjhtopFaOVYIkAHKOQK68pC7Co75PFkjIbFjmwTgfUKSO/bjaSe4A+&#xA;85a0pfo1kb/WNPsOPMXl1BbOD04zSrGxNPANkSl9e5WyY35z81TaNHb2lhGk2r33M26y19KKOOnq&#xA;TyhaMVUsoCgjkTSo3Io1GcY425mj0hzS8g86uvMd/KxN55gvp5K/ELZhbRg+CCBY9vmx+eauWryH&#xA;rT0ePsmAH0/NCnXiOmp6uf8Ao9n/AOqmD8xl723+Ssf82LDT5k1rVNQvnOraibOKYxWkL3tx8Kx1&#xA;Rm2fcsyk5utPE8AMty8nrSPFIiKANOle6m4Ga9vJPSYSR87u4bi4BAZaybHfrl9OIgTounFXUo5W&#xA;Q1kHqy0Y+/xb5Pjl3ndrGKGxobctuSn/AIc0b/ln/wCHf/mrIU2Lriz09EgtpjKYXkPoxtNKUEhW&#xA;lQC1ASBTJSkTzLGMIx5ABpdF0lq8YyeJo1JJNj4fayNMlVNKs41Kp6iKdiqzSgH7mwqjorjUIVRY&#xA;dRvoljAEYS8uV4henGkgpTtTBQW2YeXvzq1nQ2hs/MELarp7kJFqCsiXMZ7LLz4RyDwcsv8AlE9c&#xA;qyekW3YoiRq6Qf5meb7LX/MdmkHqRQWlrSGK4RoZTLM9ZqI4HIBY4/iWo8Dgw5Yy5Fnn0uTH9QYt&#xA;K3CJ2/lUn7hl7jMdkkSNGkf7CAs3yG5wJfXHlnTv0Z5b0rTSOJsrOC3I94olU9fllTJ80eZvO3mM&#xA;eY9WvbO8Vbe9vZmSJoY3Bjib0oqsRyP7qNBmlzSEpm3tdJpOHDDfoti86ag0jRXdhbX3p05tBytZ&#xA;fi77mRGP3ZRQ9zmeHkBqJukzsNR0fVy1vaSMl0ynnp10BHMQevD9mQf6pw0RuozD6Ziko/wesLFI&#xA;r65hRdljpGSoH7NWTlt75mjtCdcg6qXYGEmxKX2O/wAKN/1crj/gYv8AmjD/AChPuCP9D+L+dL7H&#xA;Dyow6ancD/Yxf80Y/wAoT7gv+h/F/Ol9iHvdP1PSYvrcd097bRn9/E6gOE7sCuxp3+HL8Gu4pVLZ&#xA;wdd2J4cOOB4qREWp2MsaukoKsKjr/DNi8/S/67a/79GKu+u2v+/VxV3121/36uKpZq9wl4Y7GyJk&#xA;vmYNEY+sZHSQn9kKaGuVZZxjEkuRpsE8kxGHN6dLJ5f1eFIdQijlZR8JmUAg9yjj7J+RzmwTE2Ht&#xA;J6c1uLSLXPy3+twcdM1GWAA8khmYutQNgJB8dP8AW55mYu0Jx57uqzdmY5cvSUo8naZqHlvz3o0/&#xA;mRjFpkczuZ0jabk0cLtGF9AMx/eBeqDNlh1Ucmw5un1Ohlh3JFPpbR9f0bWYXm0y7jukiPGUIfiR&#xA;iKhXQ0ZDTejDLXDeBfm15t1uHz7qb6ddiGOySCxCmNJAwVBM32xUUeZgadafLNVq5Azo9Hq+ydL/&#xA;AIPxXVljsPnfVyY0ura0vi68yODW8lPASIWX/hcw6DtRimK4SmVjr2jX8q29X069fZLa7oEc+Ecw&#xA;+BvYGhxr4p8YxNTFIG78oIl3KyXM9oXcu8KhCAzGrFeSkgE79czMeunEVs63N2LhyyMwSLUj5UY9&#xA;dSuP+Bi/5oyf8oT7g1/6H8X86X2O/wAKN/1crj/gYv8AmjH+UJ9wX/Q/i/nS+xTudB1W0haezvpL&#xA;l4xy+ryqvxgfsqV4ivhUZZj7QJPqDj6jsACJMCSR070uuTpuqQJcJIUuKqDu3w7gMKHoQK5s+bzR&#xA;BCO076rZwmEXIkjrVOQoRXrU98UIr67a/wC/Vwq767a/79XFUFq1/ZNbG3H7+WeixwIOTMT2AyMp&#xA;ACyzhCUjQFlnehy6dL5fstM1hVnkihRJVuFEiFlFOpqPh6VOc3lPrJi9ti0s44wDuaQ+q/l9Y3lq&#xA;66Zey2iyDZORmi612JIkX6Hp7Zdi12SPPdwc/Z2KfSj5MNl8pa7o2oWh1QiTSHuIYrm6UGVVikkV&#xA;GPwBZa0bpwPtXNlh1sZ7dXT6ns2WMcQIMfk+otF81+Xtado9NvUmmReb27Bopgp25GKQI/H3pmRT&#xA;r3yHcO0lnZyOau8YZj4lgpOaD+IvotVCPuTG1k526N7UPzG2VSG7lQNhTltLfi7upY19QEE8lYd0&#xA;I3B+WESLCeKJBsWnemeauUccWteo0ZAEOqqvJwvYXKDc0/nX6cnXc4dSx7jeKYXdsbm+s0guBNaz&#xA;W9xNFLazUV2jeFRupFeIlrQ5naDFGZlxB03bOtlEQ8Mkc/0IlNBnCKRqNyjECsbejIoPhUxBj9+Z&#xA;50WI9HUQ7Y1Mf4r+AUU03WGkkRL1AENAZrYtUGvdJYx2+73ys9nw83IHb+cdIn4ftSy/8sRwkSSW&#xA;thPLKTQC3ZKt8+bdf7exw/lSBtOTV/KcCbOKHyX2ug+Xri2inXToAJUVwOA2DCvhmrlmyA1xF6jH&#xA;otPKIlwR3Hcq/wCGvL//AFb4P+AXI/mMneWf8n4P5kfkoXuj+WLK1kuZ7CARxjekYJJJoFA7knYZ&#xA;OGXLI0CWrNpdNigZyhGh5LdF0i/njd7VrbRoydraGFZJSOxkYkD7hmyGiB+smRebl2vKJ/dRjCPk&#xA;PvRFxc6jpNxFHqbxz2kx4pexKYyjE0AlQlqA1pyB+eY+o0PCLi7HQ9uGchHJ16/rTq3vru3P7mUq&#xA;P5eq/cds1lPQygDzQGva3cyapYOxERjtrvk69KF7c136fZzZ9mCuL4fpeX7fxiPBX9L9CN8g+ax/&#xA;irTLi1m5zPPFZz0qpkhuJBGUkFNwrMJF9x7nNnLcPPBj/n9DP5o8wPJKkYTULjlJIeICrIUXoD2p&#xA;mhz75S95oKGlglOnNZPbQ+ndpKrsyIUDci6/Ew4sFaijctSmVzwyBNhysGsxyAAN2a/HuXSaaJA8&#xA;ssLPGwCtyBKU+nbKgSHKMIk7ozRvM8tvAtvexzXemIxSKWhNzbgGlAG/vY/bqPwyZHzcHglHeH09&#xA;zKLWGO+g+sabPHfQd2iPxKfB0PxKfY5E7c2cc8SvWwu2kaIRESKORU0BpWnemNthyRq7Wy24igLy&#xA;yLHIimR4X+FliB4mQ1/ZDbHEbsDmiDRLG7yHSbhzeSaSk9t1kvHRQWUbl0Ujk4UCte4+zXNlj0+Y&#xA;Ru68nR5+0NGctGIl3yr8Wi18ueXmUMthblSKghFIIOYnj5O8u1Gg05/gj8m/8NeX/wDq3wf8AuD8&#xA;xk7yn+T8H8yPyWyeXvLkUbSSWNusaAs7FFAAAqScIz5D1KJaHTgWYRoeSC0awe8naTTIrbSLZhWO&#xA;X0Q9xKp70PEID4b5s4aQyHrJLzWXtWMJHwIRiO+t0XqVxqOhBZr66hvbMmkhCiGdB/MFqVcDuBQ5&#xA;Xm7PFenm36Xt6YlWQXHv6oqHzTZw/Ha3Eklf+WdJJAfnxUr9+YI0mQ9Hc5e09MBvIH7VmsebtRvI&#xA;LZVspP3E4lMzGJCw4OlApfc/H4DM3SaSWOXEXQdpa/Flhwwvmh7HzqI5E1C0n5Xung3VqxBRwyLy&#xA;KE03Rx8DjwJzZHd0jFriJ47C0VxR4kCOPBgoBH4Zzf8AEX0fnjifJU0ybdoj3+Jf45GY6tmCXRMM&#xA;rclbLH6kZTkVr+0pocQWMhYpU0Gf6nrdxJAifDbKJWI7u9amlO0ebrs0HhJ83jvaKUfFjEdI/eyG&#xA;TVr1+jhB/kj+tc2NvOqS314DUTP95IxVEfp2SOCQ3C81VGJZdm2Hh0xtQEj0rzfqyWcFtHb6eRBD&#xA;EoZ7WQkjgKVb1hU+O2c1lriPvPV9A0uCRxx9X8I+73olPOestK8YttOBSlSbSShr4fv8ht+C3DTy&#xA;JI4j+PilWtear28ltI7yC2S3t7kO5t7doiWVGpUtJJUCpaniBmf2eBx/B0fbkJRxDckcX6ENq2rw&#xA;wXQadXlgZVNrxcxxEU+Ill+01ex6DNw8sl8uvaRKCJLUMrCjD6w1CPcDrgtVVfMem1oguF9kvJ1/&#xA;BWys4sfUByY6rPyE5fMqN3rdhNGVpdCUo6Rt68kpHOlRSQmoJUVGGEYD6RTHNkyyrjJPvNo/8vWc&#xA;eevLorTlqNoGA7/vlNPvGSLSGQ+eR6Pm7XTKteGoXDlK7MHdioalfhYMK7dM0Oo/vS952dvpI+55&#xA;qsOowaq8FizJeLI8QMDFehINGqDx26ntmbhyRqpfS6XWafJxiWLad1szHTLOVII/UDS6nICLiYyN&#xA;Kzj7QHJgKU8BtsNzmBqMokaj9Pyd/wBn6U4o3k/vOpu/x7lV1PxKaqdwexGY7sVO1t/q8kUkLutz&#xA;FQJcKxWU/NloT8slxlpOCBG+/mmF9ceYdZtDa6JcvElwWi1SFlAtR0+OOQqeBY15pGeu9N8ztNpJ&#xA;T3Ip5zX67FiNQPF7v1ovRfLi215I2sma/ls441t766flDxNW4RRsTTg381fambbFgjDkHndRq55e&#xA;Z27k6m1axEgYR+q6V4PQbV2NCd8utxmODzJf6XenTbW1sxZuDLZG4gaVgOrx8leKgQ/ZFNhtmn1+&#xA;AA8Y6vT9iag5P3RlRHL8WqnznrImEP1bTuRXkD9UkpT5+vmu2q/0u/8Ay8rriP4+KW+YfNeq3WnT&#xA;2UtvZKj+n6rQ2zxtwMi1AdpXG/Q/D0rmTpAPEDr+1cc44JVInl9/vQ+qatbelBO3NrF1NVQlQZKi&#xA;iSMPsgCu3fN88Ulf+II4wXsrGGIV3dI+Zr7sAB9+C1XR3nmO/jEiSelGxIDMwToaHZAT2zEy62ED&#xA;R5u20nY2bNESFCJ71G80y4RUkurouGLBgooa8GYDkxbuvhkMGs8SdVTdr+x/y+LjMrN9yXyVjgfg&#xA;ePFGAp4Upmc6N6D580R9N8za1ppUgR3Uk1vXvFOfXjp7BZOP0ZoNRHhyF77szL4umHeNmIRu0bq6&#xA;9VNcgQ3g0bTuORZEDr0OUEOcDYtdilDG2uUnlmt7gxGbiXRkV1qooOtD+OZmDWnHHhp0uu7FhnmZ&#xA;8RBKsLvXF2528o8Sjofwdsyx2mOodXL2al0mD8K/W2mpasgANrDJQAVEzL0FB1jPYZYO0odxceXs&#xA;5n6GPzP6lK81DUri2lhFkEaVGQMJVNCyld6qNviqaeAw/wAoY2H8gagdB81WNAkaoOigL9wpmkkb&#xA;NvbQjwxA7l2Bmo3lql1A0TGld1YdQw6HLMWUwlxBxtXpY58ZhLqkwg1e2rGofge8Zqh96Vr94zdQ&#xA;1uMjnTxWbsXUQlQjxDvC630q6upQ92CsX7XM1dh4d6D55TqNdECoblzOz+wskpCWUcMR06lPc072&#xA;SS+YP96LT/Vl/wCNM2nZn8Xw/S8r7Tf5P/O/3qM8gkDz35cr/wBXO0H3zLm0LyweifnDpR0/z9cX&#xA;BSsGqRQ3aV+yXjUQSL9HpKx/1s0uuhU7ez7AzCWEw6gvM1ufq86lIVUwlilalgzghmLClS3Lft7b&#xA;DKbtz+AA+5MvQuLjS2l4sqzRuqyDs1Ctdum+Qh6Zg+bdnHiYZDqYlD6T5kg1WWGyMBF5JCzSynq0&#xA;0YB+CnZlViduuZWo0fADLzdV2f2x404wI34d/f8Ai0TcRMAkjQ+qsTh2t3HwyBesbfMfjmPpsghM&#xA;E8nYdpaeWbCYxNS+/wAmZ6PJFDpSTm7NzbyVlhkKhOMbbrGFX+XpnSh86IS6+vpLhyzbRr9lPAf1&#xA;wKgbi7traJpbiQRIpKsX2NQaEU61r2xtIFpJPLNqE8MixGC3hf1EkkAEr/a6KKcQeX7W9KZq9Zq4&#xA;GJiN3peyOycomMsvSB8z+pFZqHr1k0STRPFIKo4KsPY4YyMTYa8mMTiYy5FJGs9Us3IgLsh29SM0&#xA;JH+Utc3eLXQkN9i8Vquws0JegccXLZaneOBMXRBt6khrQd+K45ddCI23K6XsLNOXrHBFO4YkhiSK&#xA;MURAFUewzSSkZGy9rjxiERGPIJfr/wDvJF/xlX/iLZmaD+8+Dp+3/wDF/wDO/QUjuP7iT/Vb9Wbx&#xA;4d9K/nj5QkubWHzRZoWmsE9HUVXqbWpZZP8AnizGv+SxPbNdrMPFGxzDvuxNcMWTgl9MvveC39rw&#xA;b1U+w3WnY5rISesywrcLLS7aBqHeM9R4e4wyjbHHk4fcmqSJIoZDVT3ykhywQeS7FLsVdirsVdir&#xA;sVdirsVWSTRR/bYL7d/uwgWxMgOaEl1RRtEtT4nYZIQapZ+5INckvJ5IHRqvHzKjoO233ZtOzwBf&#xA;weX9oJGXAT/S/QyT8oNF1jV/zE0UiKq2dwl3MFHwxxwMHLuamlSAo9zmxLzYfR35teTpfMXl0TWU&#xA;Zk1bS2M9nGvWVSKSwj/XUVX/AClXMTU4uONdXZdmazwMoJ+k83zVewCRBcRbgj4h7eOaaJrYvcZI&#xA;iQ4ggr7URYWMa2000d9OtSVoI/S5MpXqSdx4bZfCNuDmnXLmx5EuEf1oeaSQkN6iVBQ9jUdMyoZi&#xA;NjuHUZtIJeqPpmOoZtpEtxNpaTtfyXwlK+rzJPpSKDVOJ6fa698xNXtKqoO47J3x8RmZy6308nR6&#xA;jdWLT2ylXiI+sWySvwRasBMKnYfa5fTmy0GbihR6PN9u6Tw83EOU9/j1/X8VebWpbiqadEHQ7G6l&#xA;BWP/AGK/af8AV75Zm1kIeZaNF2Rmz7gcMe8/o70PFZKJBPO5uLgdJHpRfZFHwr9GajNq55PIPXaL&#xA;srDg3A4pd5/R3InMZ2bsVdirsVWvJGgq7BR74gIJA5oWXU4l2jBc+PQZMQaZZh0SXW57m5tgoalH&#xA;BUDYA0NPxzO0IAn8HRduTMsH+cENouka5ruqWmlQRVuLuQRRRqKlmP7RoT8K/aY+AzbvIPuplVlK&#xA;sAysKMp3BByCXg/5kflRc6NJLqeg27XGiPVriyjBeS17kooqWh9hun+r01mp0n8UXquy+2BQx5fg&#xA;XlU1gGX1bYh0bcAGu3scwRLvd9LFe8UKkk0L/CSjDqP6jJ0C1gkIuPVGG0iV9xtkDBtGfvRC6jbH&#xA;qSvzH9K5HgLYM0V4u7Y/7sH07YOEsvEj3t/Wrf8A34v348JXjj3rTe2o/wB2D6KnHhKPEj3qbalb&#xA;jpyb5D+uHgLE5oqL6o37CAe5NckMbA5+4KD3d1Iacjv2Xb9WS4QGs5JFabeQL6kpWJO7yHj+vG+5&#xA;HARudvegbjWtLtzxi5XcvQAfClf1nMnHpckvIOu1HauDFyPHLyZ5+TemaN5g85rp3mK1jvLR7aVr&#xA;a2JZI1uFKsDxUry/diT7Vcz8Wljj36vPaztTJnHCaEe59K6F5Y8vaBDJFo2nwWCSkGX0UCs5HTm3&#xA;2mpXapy91qZ4q8j/ADQ/KmaeabX/AC3BznlJk1HTU6yMd2mgH+/D+0n7XUfFXlg6rS8Xqjzd/wBl&#xA;dr+F6Mn0fc8TurMSOskShZ4AYgjDiyEMSwod1apoa9PbNbxGOxeoOOM/XHdA87iElalGJBbsSVFF&#xA;qe9Aclza6MSq29+YWc+mKy09Ur8Jbj0LU2JFcZWRVrj4YyMgBZ5q73WnzlTPGCUNV5qGofbrkRxR&#xA;5Ftn4WSuIA13hEC8tT0kH07ZXwluGSPe39at/wDfi/fjwlPHHvaN5aj/AHYPo3x4SviR71NtRth0&#xA;Jb5D+tMPAWJzRUX1X+SP6Sf6ZIY2Bz9wUHvrl9uXGvZdv7ckIhrOWRWi3nYF3HFepdzQfecbCOAn&#xA;coO51TSrWoaQ3Mo/Yj2Wvux/hl+PBOfIU4Oo7QwYeZ4j3BPPIJ0/VfN2i2mswo+k3lwkU1lyKK5m&#xA;qkQZ0IZv3jIaV9iMz8WjEdzuXQaztmeUGMQIwfVWheSfKWgTPPo+lW9lO44tNGg9Tj/LzNWC7dK5&#xA;kunTvFXYqwTzZ+T/AJZ12WS8tOWkalIeT3FsoMUjeMsBorHxK8WPc5j5dNCfvdlpO1M2DYG49xeX&#xA;a7+TfnWw5FbOLVrdek1m4EgHi0UvBx8kLZgT0U4/Tu9Bh7dwz2mOEsH1LQprBit/Bcacw243cTw9&#xA;en96qZQYTjzDsIZsE/pkEELEMKxzo48a/wBK5Hi8m3w75EOOnT9eSU8a/wBmPGF8EtfUJB1kjHzb&#xA;+zDxI8LzDorSOWQRx3Eckh6JGebH6BvhFnoxPAOcgnVh5E8yXpAtdJ1CcN9lxayxxnv/AHkirH/w&#xA;2TGHIejjT1umhzmGUaV+RvnW74maygsEPU3lwpYD2W39YfQSMujo8h5mnDydt6eP0gyZro3/ADj7&#xA;YxcW1bVpJe5gso0t0+Rd/Wcj5ccvhoYjmbddm7fynaAEXkX/ADkJ5Gs/K3mOybTEaPS763DRI8kk&#xA;hEsR4yjlIWPTi3X9rMzHijHkHUZtVly/XIl5tpVv6lx6h+zFv/sj9n+uWuOz/wDLTVBpnn7Qrwkg&#xA;C7jhJ7Bbn/R2J9gspOJV9hZBLsVdirFPN35Z+WPMxa4uImtNTpRdRtaJKadBICCkg/1wadiMpy4I&#xA;z5uZpdflwH0nbueU6/8Akj5wsixslg1q1H2fTYQT0945Tw+6T6MwJ6GQ+kvRYPaDHIVkFMC1Tyxf&#xA;6cW/SFhd6dx3LXEMkcdB3DsvAj3DZjyx5I8w7LHqdPk+mQSxbKNxWK4jceII/gTkOI9zeMYPIh36&#xA;Om6hkI8Qf7MeML4Ja/R8vd0HzP8AZh4keEe8LRbRcwhuYuZNAgYEk+wxs9zEiI5yCbWPk7Xb0j6p&#xA;p19cg9HhtJim/jJx4D6TlgxZDyDRPVaePOYZPpn5KeeLyhOmLZqekl9cRoP+Bh9Zx9K5bHSZDz2c&#xA;PJ2zpo8rkzPR/wDnHsLRtW1fgO8NhEFP/I6bnX/kWMvjoR/Ebdfl9oJ/wREWF/8AOQn5aaX5b0bS&#xA;dS0VZVtzK9tfGSR5WeRl5xN8RIX4VevEAdMy8eCEeQdTn12bL9Ui8Qsrf17hUIqg+J/9Uf16Ze4b&#xA;JrO8ls7yC9iHKa2kWaIVp8cbBl3/ANYYUPt21uIrm2iuYTyinRZI28VccgfuOVslTFXYq7FXYq4g&#xA;EEEVB2IOKpbceWfLdy3K50qzmbrWS3ic1PzU4OEdzMZZDkShR5E8kCX1h5e0wS9fU+p2/Lfbrwrg&#xA;4I9zLx8n84/NEReVPK8JLRaPYxsdiUtoVNPoXHhHcg5ZnqfmmMUEMK8IY1jTrxQBRX5DJMCbX4od&#xA;irsVYL+bn5cy+d9EtLa0khh1Cyn9WGS45cDG68ZUJVXIr8LdOq4QVYLpH/OMUMYrqWt0U9YbO3CU&#xA;P/GR2av/ACLw8SKZnoX5Ffl/pNxBcmCe/ubdlkhkupiaOpqCUiEUbfJlIwWl6DgV2KuxV2KuxV2K&#xA;oC70DQrwk3em2twTuTLDG5P/AASnAYhmMkhyJQT+RPJDyCR/L2mNIKUdrO3JFOm5TBwR7mXj5P5x&#xA;+atH5S8qRuHj0WwRx0ZbaEEduoXHhHcjxp95+aY29naWy8baCOFelI1VBQfIDJUwJJ5quKHYq7FW&#xA;OfmH5SXzZ5SvdFDJHPMFe1lkrxWWNg61oCaGnE0HQnEK8l0j/nGCdWEmpazDCf2orS3Lk/8APV2j&#xA;/wCIZLiRTMNM/wCcevy/tKG6F3qRG5E8/pivt9XWE09icFpp6VBBDbwR28CCOGFVjijUUVVUUVQP&#xA;ADAr/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:005743CAAAF0E4119CFCC5E12360082C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:005743CAAAF0E4119CFCC5E12360082C</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:2f1f9d9f-c730-4573-b6d1-2665ebcdbf9e</stRef:instanceID>
            <stRef:documentID>xmp.did:6D2B05E40DEEE41188DF9E2A5E2E0EFA</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B40050004D8DE311B51EE7A961CC5C4D</stEvt:instanceID>
                  <stEvt:when>2014-02-04T04:38:34+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B50050004D8DE311B51EE7A961CC5C4D</stEvt:instanceID>
                  <stEvt:when>2014-02-04T04:38:45+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B70050004D8DE311B51EE7A961CC5C4D</stEvt:instanceID>
                  <stEvt:when>2014-02-04T04:39:35+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D2B05E40DEEE41188DF9E2A5E2E0EFA</stEvt:instanceID>
                  <stEvt:when>2015-04-29T03:20:15+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:005743CAAAF0E4119CFCC5E12360082C</stEvt:instanceID>
                  <stEvt:when>2015-05-02T11:37:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>256.000000</stDim:w>
            <stDim:h>112.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Standard-Farbfeldgruppe</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Weiß</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Schwarz</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Rot</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Gelb</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Grün</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blau</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -107.76 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 107.76 li
253.523 107.76 li
253.523 0 li
cp
clp
[1 0 0 1 0 0 ]ct
113.278 82.5547 mo
113.097 82.5547 112.916 82.6064 112.76 82.707 cv
96.8115 93.0107 li
96.4492 93.2441 96.2891 93.6914 96.4209 94.1025 cv
100.574 107.097 li
100.702 107.498 101.074 107.76 101.482 107.76 cv
101.544 107.76 101.605 107.754 101.667 107.741 cv
117.448 104.624 li
117.965 104.522 118.302 104.02 118.2 103.504 cv
114.214 83.3232 li
114.152 83.0137 113.941 82.7539 113.65 82.6299 cv
113.53 82.5801 113.404 82.5547 113.278 82.5547 cv
113.278 82.5547 li
cp
113.278 83.5088 mo
117.264 103.688 li
101.482 106.806 li
97.3291 93.8125 li
113.278 83.5088 li
113.278 83.5088 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.227451 .231373 .25098 rgb
f
113.278 83.5088 mo
97.3291 93.8125 li
101.482 106.806 li
105.563 106 li
114.014 87.2393 li
113.278 83.5088 li
cp
.2 .203922 .219608 rgb
f
105.563 106 mo
117.264 103.688 li
114.014 87.2393 li
105.563 106 li
cp
.309804 .317647 .341176 rgb
f
116.646 100.567 mo
114.503 102.334 112.016 103.476 109.074 103.872 cv
107.645 104.064 104.267 104.155 100.544 103.87 cv
101.482 106.806 li
105.563 106 li
117.264 103.688 li
116.646 100.567 li
cp
f
101.559 30.4702 mo
101.14 30.4702 100.761 30.7471 100.643 31.1616 cv
96.2607 46.4492 li
96.1426 46.8623 96.3154 47.3047 96.6836 47.5273 cv
114.348 58.2441 li
114.499 58.335 114.671 58.3828 114.843 58.3828 cv
114.979 58.3828 115.116 58.3525 115.244 58.2939 cv
115.532 58.1602 115.734 57.8916 115.785 57.5791 cv
119.507 34.2935 li
119.589 33.7725 119.235 33.2837 118.716 33.2007 cv
101.711 30.4819 li
101.659 30.4741 101.609 30.4702 101.559 30.4702 cv
101.559 30.4702 li
cp
101.56 31.4243 mo
118.564 34.1431 li
114.843 57.4277 li
97.1777 46.7109 li
101.56 31.4243 li
101.56 31.4243 li
cp
.227451 .231373 .25098 rgb
f
101.56 31.4243 mo
97.1777 46.7109 li
114.843 57.4277 li
118.564 34.1431 li
101.56 31.4243 li
cp
.4 .407843 .439216 rgb
f
107.48 52.9629 mo
110.69 32.8828 li
101.56 31.4243 li
97.1777 46.7109 li
107.48 52.9629 li
cp
.498039 .513726 .54902 rgb
f
118.234 36.2139 mo
118.564 34.1431 li
101.56 31.4243 li
100.977 33.4531 li
118.234 36.2139 li
cp
.627451 .643137 .690196 rgb
f
117.806 38.873 mo
117.776 38.873 117.746 38.8706 117.717 38.8652 cv
110.051 37.4902 li
109.778 37.4414 109.598 37.1816 109.646 36.9097 cv
109.694 36.6377 109.961 36.4575 110.227 36.5059 cv
117.893 37.8809 li
118.165 37.9297 118.346 38.1895 118.297 38.4614 cv
118.254 38.7031 118.043 38.873 117.806 38.873 cv
cp
.227451 .231373 .25098 rgb
f
115.857 51.9043 mo
115.807 51.9043 115.756 51.8965 115.705 51.8804 cv
108.07 49.4321 li
107.807 49.3477 107.662 49.0664 107.746 48.8032 cv
107.831 48.5405 108.112 48.396 108.375 48.48 cv
116.01 50.9282 li
116.273 51.0127 116.418 51.2939 116.334 51.5571 cv
116.266 51.769 116.069 51.9043 115.857 51.9043 cv
cp
f
51.0605 102.756 mo
20.1826 102.756 1 88.1289 1 64.585 cv
1 43.5132 6.43945 41.9922 15.3975 41.9922 cv
18.0576 42.002 li
82.7744 42.002 li
83.6465 42.002 111.391 52.8418 119.875 56.1641 cv
119.919 56.1816 119.959 56.2051 119.996 56.2344 cv
122.165 57.9443 123.939 62.082 123.949 65.459 cv
124.045 79.4023 li
124.045 84.2529 120.115 86.0664 114.165 88.8125 cv
112.752 89.4648 li
94.3516 98.0361 72.4424 102.756 51.0605 102.756 cv
cp
.839216 .290196 .219608 rgb
f
51.0605 102.756 mo
72.4424 102.756 94.3516 98.0361 112.752 89.4648 cv
114.165 88.8125 li
120.115 86.0664 124.045 84.2529 124.045 79.4023 cv
124.014 74.8057 li
123.664 75.0645 123.313 75.3223 122.958 75.5771 cv
116.598 80.1475 109.264 83.0527 101.91 85.6016 cv
86.5234 90.9355 69.9766 94.6719 53.5527 93.8916 cv
38.854 93.1934 22.5933 89.2676 15.5356 75.0908 cv
12.0269 68.043 7.84717 59.8076 7.82568 51.7993 cv
7.82178 50.3911 7.54297 46.8823 7.52002 43.2476 cv
3.35645 45.3193 1 50.7183 1 64.585 cv
1 88.1289 20.1826 102.756 51.0605 102.756 cv
cp
.670588 .227451 .176471 rgb
f
15.4014 40.9922 mo
15.3999 40.9922 15.3984 40.9922 15.3975 40.9922 cv
6.09668 40.9922 0 42.6343 0 64.585 cv
0 88.7461 19.5654 103.756 51.0605 103.756 cv
72.5859 103.756 94.6455 99.0029 113.174 90.3711 cv
114.584 89.7207 li
120.657 86.918 125.045 84.8926 125.045 79.4023 cv
124.949 65.4521 li
124.938 61.752 123.035 57.3564 120.615 55.4492 cv
120.503 55.3604 120.379 55.2886 120.246 55.2358 cv
83.8965 41.002 83.1104 41.002 82.7744 41.002 cv
18.0576 41.002 li
15.4014 40.9922 li
15.4014 40.9922 li
cp
15.3975 41.9922 mo
18.0576 42.002 li
82.7744 42.002 li
83.6465 42.002 111.391 52.8418 119.875 56.1641 cv
119.919 56.1816 119.959 56.2051 119.996 56.2344 cv
122.165 57.9443 123.939 62.082 123.949 65.459 cv
124.045 79.4023 li
124.045 84.2529 120.115 86.0664 114.165 88.8125 cv
112.752 89.4648 li
94.3516 98.0361 72.4424 102.756 51.0605 102.756 cv
20.1826 102.756 1 88.1289 1 64.585 cv
1 43.5132 6.43945 41.9922 15.3975 41.9922 cv
15.3975 41.9922 li
cp
.478431 .164706 .129412 rgb
f
122.538 83.1436 mo
120.712 84.2988 118.314 85.375 115.44 86.7441 cv
98.6777 94.7227 77.1201 100.357 53.6147 100.357 cv
23.3926 100.357 3.75781 85.7568 3.75781 61.6133 cv
3.75781 52.6597 4.6875 47.2324 6.37451 43.938 cv
2.92676 46.4302 1 52.0454 1 64.585 cv
1 88.1289 20.1826 102.756 51.0605 102.756 cv
66.8096 102.756 82.8408 100.188 97.5488 95.4131 cv
102.853 93.6357 107.861 91.6191 112.492 89.4141 cv
117.378 87.0898 120.9 85.6045 122.538 83.1436 cv
cp
.839216 .290196 .219608 rgb
f
123.949 65.459 mo
123.939 62.082 122.165 57.9443 119.996 56.2344 cv
119.959 56.2051 119.919 56.1816 119.875 56.1641 cv
111.391 52.8418 83.6465 42.002 82.7744 42.002 cv
18.0576 42.002 li
15.3975 41.9922 li
8.92676 41.9922 4.29346 42.79 2.21826 51.1729 cv
2.21826 51.1729 2.21826 51.1733 2.21826 51.1738 cv
3.00928 51.1611 5.36621 51.1338 8.15186 51.2104 cv
11.5835 51.3037 22.2251 55.8677 25.6265 59.3447 cv
29.8105 63.624 42.1909 67.3115 48.7363 67.3115 cv
123.962 67.3115 li
123.949 65.459 li
cp
.478431 .164706 .129412 rgb
f
123.949 65.459 mo
123.939 62.082 122.165 57.9443 119.996 56.2344 cv
119.959 56.2051 119.919 56.1816 119.875 56.1641 cv
111.391 52.8418 83.6465 42.002 82.7744 42.002 cv
18.0576 42.002 li
15.3975 41.9922 li
9.40186 41.9922 4.98633 42.6831 2.71875 49.4512 cv
2.71875 49.4512 li
10.9966 49.7319 18.8472 51.8301 25.3545 57.3779 cv
31.6738 62.7656 40.7886 66.2832 49.1851 66.2832 cv
123.955 66.2832 li
123.949 65.459 li
cp
1 .658824 .509804 rgb
f
120.283 64.2275 mo
119.589 62.0195 118.521 61.4463 117.311 60.4697 cv
108.818 57.2598 100.32 54.063 91.8076 50.9087 cv
85.2275 48.4702 80.5352 46.7769 73.6494 46.6289 cv
52.4233 46.1729 25.1851 42.7959 9.35938 45.6147 cv
8.43555 45.7793 7.0918 46.4824 6.21191 47.6592 cv
12.9663 47.9912 23.5859 53.248 26.0923 56.02 cv
30.1104 60.4639 42.6465 64.2275 49.1851 64.2275 cv
120.283 64.2275 li
cp
.929412 .435294 .372549 rgb
f
62.0625 10.3701 mo
58.8311 10.3701 li
58.3047 10.3701 57.877 10.7969 57.877 11.3242 cv
57.877 24.5874 li
57.877 25.1143 58.3047 25.541 58.8311 25.541 cv
62.0625 25.541 li
62.5889 25.541 63.0166 25.1143 63.0166 24.5874 cv
63.0166 11.3242 li
63.0166 10.7969 62.5889 10.3701 62.0625 10.3701 cv
62.0625 10.3701 li
cp
62.0625 11.3242 mo
62.0625 24.5874 li
58.8311 24.5874 li
58.8311 11.3242 li
62.0625 11.3242 li
62.0625 11.3242 li
cp
.227451 .231373 .25098 rgb
f
62.0625 11.3242 mo
58.8311 11.3242 li
58.8311 24.5874 li
62.0625 24.5874 li
62.0625 11.3242 li
cp
.4 .407843 .439216 rgb
f
62.0625 11.3242 mo
60.5391 11.3242 li
60.5391 24.5874 li
62.0625 24.5874 li
62.0625 11.3242 li
cp
.498039 .513726 .54902 rgb
f
63.5693 4.17676 mo
57.3262 4.17676 li
56.7988 4.17676 56.3721 4.60352 56.3721 5.13037 cv
56.3721 12.6733 li
56.3721 13.2007 56.7988 13.6274 57.3262 13.6274 cv
63.5693 13.6274 li
64.0977 13.6274 64.5234 13.2007 64.5234 12.6733 cv
64.5234 5.13037 li
64.5234 4.60352 64.0977 4.17676 63.5693 4.17676 cv
63.5693 4.17676 li
cp
63.5693 5.13037 mo
63.5693 12.6733 li
57.3262 12.6733 li
57.3262 5.13037 li
63.5693 5.13037 li
63.5693 5.13037 li
cp
.227451 .231373 .25098 rgb
f
63.5693 5.13037 mo
57.3262 5.13037 li
57.3262 12.6733 li
63.5693 12.6733 li
63.5693 5.13037 li
cp
.4 .407843 .439216 rgb
f
57.3262 5.13037 mo
57.3262 7.65332 li
63.5693 7.65332 li
63.5693 5.13037 li
57.3262 5.13037 li
cp
.498039 .513726 .54902 rgb
f
57.3262 5.13037 mo
57.3262 6.65332 li
63.5693 6.65332 li
63.5693 5.13037 li
57.3262 5.13037 li
cp
.627451 .643137 .690196 rgb
f
51.873 8.21582 mo
51.8579 12.3848 52.2124 25.7183 52.5435 25.7407 cv
51.1709 25.9604 49.7983 26.1802 48.4258 26.3999 cv
47.5049 20.6465 47.2402 14.8145 47.6313 9.01611 cv
46.1279 8.87109 44.6245 8.72363 43.1216 8.57373 cv
43.3555 6.73926 43.6509 4.91504 44.0083 3.10449 cv
45.1035 3.14014 46.2065 3.19434 47.2861 3.34619 cv
47.415 3.36426 47.5317 3.3916 47.6216 3.4043 cv
48.5435 3.60156 50.1733 4.20801 50.811 4.90625 cv
51.5918 5.69189 51.7871 7.47119 51.873 8.21582 cv
cp
.4 .407843 .439216 rgb
f
52.8364 7.98096 mo
52.8506 12.1597 53.0791 24.8125 53.4468 25.3706 cv
53.4956 25.8838 53.2041 26.6641 52.7129 26.752 cv
51.3794 26.9849 50.0464 27.2178 48.7129 27.4502 cv
48.1997 27.5439 47.4219 26.4863 47.3389 25.9185 cv
46.5381 20.6343 46.2822 15.2881 46.5718 9.96484 cv
45.3818 9.86719 44.1924 9.76807 43.0029 9.66748 cv
42.7441 9.6416 42.5811 9.50586 42.4243 9.27686 cv
42.2588 9.03613 42.1973 8.74219 42.228 8.44238 cv
42.458 6.59082 42.7505 4.74951 43.105 2.92139 cv
43.2056 2.41064 43.5947 2.04785 44.0332 2.02246 cv
44.0532 2.02588 44.0732 2.02881 44.0947 2.02002 cv
44.104 2.02148 44.124 2.02441 44.124 2.02441 cv
46.4219 2.10254 49.8979 2.32031 51.5425 4.17432 cv
52.5493 5.09033 52.728 7.05029 52.8364 7.98096 cv
cp
52.5435 25.7407 mo
52.2129 25.7183 51.8579 12.3848 51.873 8.21582 cv
51.7871 7.47119 51.5918 5.69189 50.811 4.90625 cv
50.1733 4.20801 48.543 3.60156 47.6216 3.4043 cv
47.5322 3.3916 47.415 3.36426 47.2861 3.34619 cv
46.2065 3.19434 45.1035 3.14014 44.0083 3.10449 cv
43.6509 4.91504 43.355 6.73926 43.1216 8.57373 cv
44.6245 8.72363 46.1279 8.87109 47.6313 9.01611 cv
47.2402 14.8145 47.5049 20.6465 48.4258 26.3999 cv
49.7983 26.1802 51.1709 25.9604 52.5435 25.7407 cv
cp
.227451 .231373 .25098 rgb
f
52.5435 25.7407 mo
52.2129 25.7183 51.8579 12.3848 51.873 8.21582 cv
51.7871 7.47119 51.5918 5.69189 50.811 4.90625 cv
50.1733 4.20801 48.543 3.60156 47.6216 3.4043 cv
47.5322 3.3916 47.415 3.36426 47.2861 3.34619 cv
46.2065 3.19434 45.1035 3.14014 44.0083 3.10449 cv
43.9326 3.48779 43.8594 3.87207 43.7896 4.25684 cv
44.3511 4.30664 44.9497 4.3667 45.1167 4.39844 cv
46.0322 4.57764 47.4971 5.19189 48.145 5.90039 cv
48.6558 6.46973 49.3804 7.97266 49.4668 8.74121 cv
49.9214 13.6729 49.9668 20.7275 50.4922 26.0693 cv
51.1763 25.9595 51.8599 25.8501 52.5435 25.7407 cv
cp
.498039 .513726 .54902 rgb
f
52.5435 25.7407 mo
52.2129 25.7183 51.8579 12.3848 51.873 8.21582 cv
51.7871 7.47119 51.5918 5.69189 50.811 4.90625 cv
50.1733 4.20801 48.543 3.60156 47.6216 3.4043 cv
47.5322 3.3916 47.415 3.36426 47.2861 3.34619 cv
46.2065 3.19434 45.1035 3.14014 44.0083 3.10449 cv
43.9551 3.37402 43.9033 3.64355 43.853 3.91309 cv
44.7725 3.98682 45.8569 4.09668 46.1753 4.15967 cv
47.0913 4.34424 48.5596 4.90479 49.2061 5.61035 cv
49.7144 6.17432 50.4238 7.75977 50.5088 8.51758 cv
50.6401 11.3945 50.5322 20.7769 51.377 25.9277 cv
51.7661 25.8652 52.1548 25.8032 52.5435 25.7407 cv
cp
.627451 .643137 .690196 rgb
f
44.2441 .189453 mo
43.9497 .137695 43.6553 .0864258 43.3608 .0351563 cv
41.9551 -.220215 40.562 .949219 40.3291 2.65039 cv
40.0513 4.6748 39.8472 6.70654 39.7158 8.7417 cv
39.605 10.4521 40.7368 11.8706 42.1655 11.9009 cv
42.4644 11.9092 42.7632 11.918 43.0615 11.9263 cv
44.4922 11.9565 45.6841 10.7021 45.7861 9.13281 cv
45.9082 7.24316 46.0977 5.35693 46.356 3.47754 cv
46.5688 1.9165 45.6514 .444824 44.2441 .189453 cv
44.2441 .189453 li
cp
44.0547 1.31982 mo
44.9238 1.4624 45.4985 2.36572 45.3652 3.34131 cv
45.104 5.24463 44.9116 7.15527 44.7886 9.06885 cv
44.7251 10.0493 43.9819 10.8179 43.1016 10.7842 cv
42.8032 10.772 42.5044 10.7593 42.2061 10.7466 cv
41.3267 10.7134 40.6465 9.84473 40.7139 8.80615 cv
40.8433 6.79492 41.0454 4.78711 41.3198 2.78662 cv
41.4614 1.75342 42.3013 1.03516 43.1694 1.17822 cv
43.4648 1.2251 43.7598 1.27246 44.0547 1.31982 cv
44.0547 1.31982 li
cp
.227451 .231373 .25098 rgb
f
44.0547 1.31982 mo
43.7598 1.27246 43.4648 1.2251 43.1694 1.17822 cv
42.3013 1.03516 41.4614 1.75342 41.3198 2.78662 cv
41.0454 4.78711 40.8433 6.79492 40.7139 8.80615 cv
40.6465 9.84473 41.3267 10.7134 42.2061 10.7466 cv
42.5044 10.7593 42.8032 10.772 43.1016 10.7842 cv
43.9819 10.8179 44.7246 10.0493 44.7886 9.06885 cv
44.9116 7.15527 45.104 5.24463 45.3652 3.34131 cv
45.4985 2.36572 44.9238 1.4624 44.0547 1.31982 cv
cp
.4 .407843 .439216 rgb
f
44.0547 1.31982 mo
43.7598 1.27246 43.4648 1.2251 43.1694 1.17822 cv
42.3013 1.03516 41.4614 1.75342 41.3198 2.78662 cv
41.2129 3.56592 41.1172 4.34619 41.0322 5.12744 cv
41.1445 4.09229 41.9639 3.35107 42.8359 3.46973 cv
43.1318 3.50879 43.4282 3.54736 43.7246 3.58643 cv
44.5972 3.70459 45.1973 4.59082 45.0913 5.56885 cv
45.1719 4.82568 45.2632 4.08301 45.3652 3.34131 cv
45.4985 2.36572 44.9238 1.4624 44.0547 1.31982 cv
cp
.498039 .513726 .54902 rgb
f
44.0547 1.31982 mo
43.7598 1.27246 43.4648 1.2251 43.1694 1.17822 cv
42.3013 1.03516 41.4614 1.75342 41.3198 2.78662 cv
41.2666 3.17627 41.2158 3.56592 41.168 3.95605 cv
41.2944 2.92188 42.1245 2.19238 42.9946 2.32275 cv
43.29 2.36621 43.5859 2.40918 43.8818 2.45215 cv
44.7524 2.58301 45.3398 3.47754 45.2202 4.45459 cv
45.2661 4.08301 45.314 3.7124 45.3652 3.34131 cv
45.4985 2.36572 44.9238 1.4624 44.0547 1.31982 cv
cp
.627451 .643137 .690196 rgb
f
71.4033 23.8091 mo
79.1338 45.2192 li
36.6069 45.1543 li
38.6436 24.2192 li
38.7734 22.7593 39.6035 21.8691 40.4033 21.8691 cv
69.1436 21.9092 li
69.9531 21.9092 70.9639 22.5693 71.4033 23.8091 cv
cp
.4 .407843 .439216 rgb
f
40.4048 20.8691 mo
40.4033 20.8691 li
38.9746 20.8691 37.8154 22.2407 37.6475 24.1309 cv
35.6118 45.0576 li
35.5845 45.3379 35.6768 45.6167 35.8657 45.8257 cv
36.0552 46.0347 36.3237 46.1538 36.6055 46.1543 cv
79.1318 46.2192 li
79.1328 46.2192 79.1328 46.2192 79.1338 46.2192 cv
79.459 46.2192 79.7646 46.061 79.9521 45.7944 cv
80.1396 45.5278 80.1855 45.1865 80.0742 44.8794 cv
72.3438 23.4692 li
71.8105 21.9644 70.4932 20.9092 69.1436 20.9092 cv
40.4048 20.8691 li
40.4048 20.8691 li
cp
40.4033 21.8691 mo
69.1436 21.9092 li
69.9531 21.9092 70.9639 22.5693 71.4033 23.8091 cv
79.1338 45.2192 li
36.6069 45.1543 li
38.6436 24.2192 li
38.7734 22.7593 39.6035 21.8691 40.4033 21.8691 cv
40.4033 21.8691 li
cp
.227451 .231373 .25098 rgb
f
38.6387 24.314 mo
38.542 25.4043 li
66.4326 25.4043 li
67.2637 25.4043 68.3057 27.6377 68.7646 28.9111 cv
74.1865 45.2119 li
79.1338 45.2192 li
71.4033 23.8091 li
70.9639 22.5693 69.9531 21.9092 69.1436 21.9092 cv
40.4033 21.8691 li
39.6035 21.8691 38.7734 22.7593 38.6436 24.2192 cv
38.6372 24.2861 li
38.6372 24.2949 38.6392 24.3062 38.6387 24.314 cv
cp
.498039 .513726 .54902 rgb
f
41.4194 23.3418 mo
48.3569 23.1753 67.2559 23.3877 67.2559 23.3877 cv
68.0596 23.3877 69.0723 24.6597 69.5156 25.897 cv
76.1611 45.2148 li
79.1338 45.2192 li
71.4033 23.8091 li
70.9639 22.5693 69.9531 21.9092 69.1436 21.9092 cv
40.4033 21.8691 li
39.6035 21.8691 38.7734 22.7593 38.6436 24.2192 cv
38.6045 24.6348 li
39.5459 23.7295 40.4775 23.3643 41.4194 23.3418 cv
cp
.627451 .643137 .690196 rgb
f
57.4487 34.0776 mo
56.9971 31.3813 54.9312 29.1958 52.8359 29.1958 cv
38.1738 29.1958 li
36.8335 43.3892 li
36.8105 43.6235 36.7661 43.8457 36.7134 44.0615 cv
36.6069 45.1543 li
59.3135 45.189 li
57.4487 34.0776 li
cp
.192157 .694118 .909804 rgb
f
52.8359 28.1958 mo
38.1738 28.1958 li
37.6582 28.1958 37.2266 28.5884 37.1782 29.1016 cv
35.8379 43.2949 li
35.8228 43.4492 35.792 43.6187 35.7422 43.8242 cv
35.7305 43.8701 35.7227 43.9175 35.7183 43.9644 cv
35.6118 45.0571 li
35.5845 45.3379 35.6768 45.6167 35.8657 45.8257 cv
36.0552 46.0347 36.3237 46.1538 36.6055 46.1543 cv
59.3115 46.189 li
59.3125 46.189 59.3125 46.189 59.3135 46.189 cv
59.6074 46.189 59.8867 46.0596 60.0762 45.8354 cv
60.2666 45.6108 60.3486 45.314 60.2998 45.0234 cv
58.4351 33.9121 li
57.8979 30.707 55.4385 28.1958 52.8359 28.1958 cv
52.8359 28.1958 li
cp
52.8359 29.1958 mo
54.9312 29.1958 56.9971 31.3813 57.4487 34.0776 cv
59.3135 45.189 li
36.6069 45.1543 li
36.7134 44.0615 li
36.7661 43.8457 36.8105 43.6235 36.8335 43.3892 cv
38.1738 29.1958 li
52.8359 29.1958 li
52.8359 29.1958 li
cp
.227451 .231373 .25098 rgb
f
43.3589 45.1646 mo
48.6094 45.1729 li
45.7471 29.1958 li
40.4985 29.1958 li
43.3589 45.1646 li
cp
.580392 .87451 1 rgb
f
49.1675 29.1958 mo
52.0303 45.1777 li
54.335 45.1812 li
51.4717 29.1958 li
49.1675 29.1958 li
cp
f
52.8359 29.1958 mo
38.1738 29.1958 li
36.8335 43.3892 li
36.8105 43.6235 36.7661 43.8457 36.7134 44.0615 cv
36.6069 45.1543 li
59.3135 45.189 li
57.4487 34.0776 li
56.9971 31.3813 54.9312 29.1958 52.8359 29.1958 cv
52.8359 29.1958 li
cp
52.8359 30.1958 mo
54.4341 30.1958 56.0952 32.0493 56.4624 34.2432 cv
58.1313 44.187 li
37.7183 44.1558 li
37.7725 43.915 37.8081 43.6987 37.8291 43.4834 cv
39.084 30.1958 li
52.8359 30.1958 li
52.8359 30.1958 li
cp
1 1 1 rgb
f
58.5234 55.5293 mo
55.8652 55.5293 54.5234 52.9878 53.4771 51.5293 cv
52.0996 49.6099 47.166 49.5293 44.2412 49.5293 cv
25.9111 49.5293 li
25.2861 49.5293 24.4951 48.7998 24.2764 47.4946 cv
24.1982 47.0381 25.0762 43.4316 26.2021 42.0957 cv
26.543 41.6904 26.9092 41.5293 27.29 41.5293 cv
84.0654 41.5293 li
85.9238 41.5293 88.3984 43.5918 90.54 45.5527 cv
91.8438 46.7275 95.9297 50.123 93.4043 52.5479 cv
92.1348 53.7666 90.0371 55.5293 88.2813 55.5293 cv
58.5234 55.5293 li
cp
.4 .407843 .439216 rgb
f
84.0654 40.5293 mo
27.29 40.5293 li
26.7988 40.5293 26.0781 40.6895 25.437 41.4521 cv
24.1934 42.9272 23.1396 46.7793 23.2905 47.6631 cv
23.606 49.5435 24.8477 50.5293 25.9111 50.5293 cv
44.2412 50.5293 li
46.0435 50.5293 51.5288 50.5293 52.6646 52.1123 cv
52.792 52.29 52.9243 52.4849 53.063 52.689 cv
54.1016 54.2183 55.6714 56.5293 58.5234 56.5293 cv
88.2813 56.5293 li
89.8867 56.5293 91.8438 55.4326 94.0967 53.269 cv
94.8438 52.5522 95.2295 51.668 95.2109 50.7124 cv
95.167 48.3379 92.7295 46.1655 91.4209 44.9985 cv
91.209 44.8101 li
88.7842 42.5894 86.2354 40.5293 84.0654 40.5293 cv
84.0654 40.5293 li
cp
84.0654 41.5293 mo
85.9238 41.5293 88.3984 43.5918 90.54 45.5527 cv
91.8438 46.7275 95.9297 50.123 93.4043 52.5479 cv
92.1348 53.7666 90.0371 55.5293 88.2813 55.5293 cv
58.5234 55.5293 li
55.8652 55.5293 54.5234 52.9878 53.4771 51.5293 cv
52.0996 49.6099 47.166 49.5293 44.2412 49.5293 cv
25.9111 49.5293 li
25.2861 49.5293 24.4951 48.7998 24.2764 47.4946 cv
24.1982 47.0381 25.0762 43.4316 26.2021 42.0957 cv
26.543 41.6904 26.9092 41.5293 27.29 41.5293 cv
84.0654 41.5293 li
84.0654 41.5293 li
cp
.227451 .231373 .25098 rgb
f
84.0654 41.5293 mo
27.29 41.5293 li
27.1387 41.5293 26.9902 41.5635 26.8438 41.6201 cv
26.2134 43.3286 26.166 45.7129 26.9321 47.1958 cv
29.709 48.4199 32.9824 47.5708 36.04 47.5708 cv
38.7622 47.5708 50.1187 47.6636 52.6758 48.7876 cv
55.3296 49.9546 55.2104 53.5708 58.8467 53.5708 cv
66.8164 53.8296 74.8027 54.0371 82.7773 53.9038 cv
85.6563 53.856 92.082 54.9136 91.8975 50.1333 cv
91.8447 48.7456 90.3652 46.1738 88.627 43.8887 cv
87.0225 42.5796 85.3877 41.5293 84.0654 41.5293 cv
cp
.498039 .513726 .54902 rgb
f
62.3105 75.8291 mo
53.0732 75.5039 43.8945 74.6846 34.8252 73.3828 cv
36.2266 68.4561 36.9365 62.873 36.9297 57.7295 cv
45.4453 58.9561 54.0664 59.7305 62.749 60.0391 cv
63.3096 65.1553 63.1943 70.7852 62.3105 75.8291 cv
cp
f
36.9297 56.7295 mo
36.6904 56.7295 36.4575 56.8154 36.2744 56.9736 cv
36.0552 57.1641 35.9292 57.4404 35.9297 57.7305 cv
35.9365 62.9385 35.2026 68.4004 33.8633 73.1094 cv
33.7842 73.3867 33.8291 73.6846 33.9863 73.9268 cv
34.1436 74.1689 34.3975 74.332 34.6831 74.373 cv
43.7759 75.6777 53.0591 76.5039 62.2754 76.8281 cv
62.2871 76.8291 62.2988 76.8291 62.3105 76.8291 cv
62.7949 76.8291 63.2119 76.4814 63.2959 76.002 cv
64.1719 71.001 64.3311 65.293 63.7432 59.9297 cv
63.6895 59.4365 63.2813 59.0576 62.7842 59.04 cv
54.2007 58.7344 45.5498 57.9609 37.0723 56.7393 cv
37.0249 56.7324 36.9771 56.7295 36.9297 56.7295 cv
36.9297 56.7295 li
cp
36.9297 57.7295 mo
45.4453 58.9561 54.0664 59.7305 62.749 60.0391 cv
63.3096 65.1553 63.1943 70.7852 62.3105 75.8291 cv
53.0732 75.5039 43.8945 74.6846 34.8252 73.3828 cv
36.2266 68.4561 36.9365 62.873 36.9297 57.7295 cv
36.9297 57.7295 li
cp
.227451 .231373 .25098 rgb
f
63.0537 68.3652 mo
63.1455 65.5537 63.043 62.7256 62.749 60.0391 cv
54.0664 59.7305 45.4453 58.9561 36.9297 57.7295 cv
36.9331 60.4336 36.7334 63.2568 36.3447 66.0439 cv
45.1714 67.2285 48.7109 60.0918 63.0537 68.3652 cv
cp
.627451 .643137 .690196 rgb
f
40.3618 60.1543 mo
40.3618 60.8213 39.8213 61.3623 39.1538 61.3623 cv
38.4863 61.3623 37.9458 60.8213 37.9458 60.1543 cv
37.9458 59.4873 38.4863 58.9463 39.1538 58.9463 cv
39.8213 58.9463 40.3618 59.4873 40.3618 60.1543 cv
cp
.227451 .231373 .25098 rgb
f
39.9609 60.0918 mo
39.9609 60.5752 39.5693 60.9668 39.0859 60.9668 cv
38.6025 60.9668 38.2109 60.5752 38.2109 60.0918 cv
38.2109 59.6084 38.6025 59.2168 39.0859 59.2168 cv
39.5693 59.2168 39.9609 59.6084 39.9609 60.0918 cv
cp
.627451 .643137 .690196 rgb
f
39.1377 71.248 mo
39.1377 71.915 38.5972 72.4561 37.9297 72.4561 cv
37.2622 72.4561 36.7217 71.915 36.7217 71.248 cv
36.7217 70.5811 37.2622 70.04 37.9297 70.04 cv
38.5972 70.04 39.1377 70.5811 39.1377 71.248 cv
cp
.227451 .231373 .25098 rgb
f
38.7368 71.1855 mo
38.7368 71.6689 38.3452 72.0605 37.8618 72.0605 cv
37.3784 72.0605 36.9868 71.6689 36.9868 71.1855 cv
36.9868 70.7021 37.3784 70.3105 37.8618 70.3105 cv
38.3452 70.3105 38.7368 70.7021 38.7368 71.1855 cv
cp
.627451 .643137 .690196 rgb
f
62.2627 61.9043 mo
62.2627 62.5713 61.7222 63.1123 61.0547 63.1123 cv
60.3872 63.1123 59.8467 62.5713 59.8467 61.9043 cv
59.8467 61.2373 60.3872 60.6963 61.0547 60.6963 cv
61.7222 60.6963 62.2627 61.2373 62.2627 61.9043 cv
cp
.227451 .231373 .25098 rgb
f
61.8618 61.8418 mo
61.8618 62.3252 61.4702 62.7168 60.9868 62.7168 cv
60.5034 62.7168 60.1118 62.3252 60.1118 61.8418 cv
60.1118 61.3584 60.5034 60.9668 60.9868 60.9668 cv
61.4702 60.9668 61.8618 61.3584 61.8618 61.8418 cv
cp
.627451 .643137 .690196 rgb
f
61.3252 73.2168 mo
61.3252 73.8838 60.7847 74.4248 60.1172 74.4248 cv
59.4497 74.4248 58.9092 73.8838 58.9092 73.2168 cv
58.9092 72.5498 59.4497 72.0088 60.1172 72.0088 cv
60.7847 72.0088 61.3252 72.5498 61.3252 73.2168 cv
cp
.227451 .231373 .25098 rgb
f
60.9243 73.1543 mo
60.9243 73.6377 60.5327 74.0293 60.0493 74.0293 cv
59.5659 74.0293 59.1743 73.6377 59.1743 73.1543 cv
59.1743 72.6709 59.5659 72.2793 60.0493 72.2793 cv
60.5327 72.2793 60.9243 72.6709 60.9243 73.1543 cv
cp
.627451 .643137 .690196 rgb
f
49.9502 72.3418 mo
49.9502 73.0088 49.4097 73.5498 48.7422 73.5498 cv
48.0747 73.5498 47.5342 73.0088 47.5342 72.3418 cv
47.5342 71.6748 48.0747 71.1338 48.7422 71.1338 cv
49.4097 71.1338 49.9502 71.6748 49.9502 72.3418 cv
cp
.227451 .231373 .25098 rgb
f
49.5493 72.2793 mo
49.5493 72.7627 49.1577 73.1543 48.6743 73.1543 cv
48.1909 73.1543 47.7993 72.7627 47.7993 72.2793 cv
47.7993 71.7959 48.1909 71.4043 48.6743 71.4043 cv
49.1577 71.4043 49.5493 71.7959 49.5493 72.2793 cv
cp
.627451 .643137 .690196 rgb
f
51.2314 61.1855 mo
51.2314 61.8525 50.6909 62.3936 50.0234 62.3936 cv
49.356 62.3936 48.8154 61.8525 48.8154 61.1855 cv
48.8154 60.5186 49.356 59.9775 50.0234 59.9775 cv
50.6909 59.9775 51.2314 60.5186 51.2314 61.1855 cv
cp
.227451 .231373 .25098 rgb
f
50.8306 61.123 mo
50.8306 61.6064 50.439 61.998 49.9556 61.998 cv
49.4722 61.998 49.0806 61.6064 49.0806 61.123 cv
49.0806 60.6396 49.4722 60.248 49.9556 60.248 cv
50.439 60.248 50.8306 60.6396 50.8306 61.123 cv
cp
.627451 .643137 .690196 rgb
f
124.573 61.2695 mo
124.573 61.2695 124.573 78.6992 124.573 81.5195 cv
124.573 84.3291 122.644 86.999 120.273 87.4697 cv
119.903 87.5391 119.543 87.5791 119.203 87.5791 cv
117.344 87.5791 115.974 86.5391 115.974 84.999 cv
115.974 80.4492 li
115.974 61.9395 li
115.974 61.9395 115.974 59.0889 115.974 57.0693 cv
115.974 55.6094 116.983 54.7593 118.453 54.7593 cv
119.004 54.7593 119.623 54.8794 120.273 55.1392 cv
122.644 56.0693 124.573 58.8193 124.573 61.2695 cv
cp
.309804 .317647 .341176 rgb
f
125.523 61.2695 mo
125.523 81.5195 li
125.523 84.8096 123.304 87.8389 120.453 88.3994 cv
120.033 88.4893 119.613 88.5293 119.203 88.5293 cv
116.773 88.5293 115.023 87.0391 115.023 84.999 cv
115.023 80.4492 li
115.023 61.9395 li
115.023 57.0693 li
115.023 55.1191 116.403 53.8091 118.453 53.8091 cv
119.144 53.8091 119.873 53.9492 120.623 54.2495 cv
123.373 55.3394 125.523 58.4189 125.523 61.2695 cv
cp
124.573 81.5195 mo
124.573 78.6992 124.573 61.2695 124.573 61.2695 cv
124.573 58.8193 122.644 56.0693 120.273 55.1392 cv
119.623 54.8794 119.004 54.7593 118.453 54.7593 cv
116.983 54.7593 115.974 55.6094 115.974 57.0693 cv
115.974 59.0889 115.974 61.9395 115.974 61.9395 cv
115.974 80.4492 li
115.974 84.999 li
115.974 86.5391 117.344 87.5791 119.203 87.5791 cv
119.543 87.5791 119.903 87.5391 120.273 87.4697 cv
122.644 86.999 124.573 84.3291 124.573 81.5195 cv
cp
.227451 .231373 .25098 rgb
f
120.273 55.1392 mo
119.623 54.8794 119.004 54.7593 118.453 54.7593 cv
116.983 54.7593 115.974 55.6094 115.974 57.0693 cv
115.974 59.0889 115.974 61.9395 115.974 61.9395 cv
115.974 71.0684 li
116.729 66.1318 117.872 60.5596 120.086 60.9482 cv
122.427 61.3594 123.706 63.0547 124.573 64.5781 cv
124.573 62.5986 124.573 61.2695 124.573 61.2695 cv
124.573 58.8193 122.644 56.0693 120.273 55.1392 cv
cp
.498039 .513726 .54902 rgb
f
120.404 57.168 mo
122.183 57.8105 123.718 59.2949 124.543 60.9531 cv
124.389 58.5869 122.543 56.0293 120.273 55.1392 cv
119.623 54.8794 119.004 54.7593 118.453 54.7593 cv
116.983 54.7593 115.974 55.6094 115.974 57.0693 cv
115.974 57.3232 115.974 57.5898 115.974 57.8633 cv
116.69 56.7744 118.4 56.4434 120.404 57.168 cv
cp
.627451 .643137 .690196 rgb
f
124.573 81.5195 mo
124.573 81.0615 124.573 80.2148 124.573 79.124 cv
119.896 85.7451 116.891 80.7793 115.974 78.8115 cv
115.974 80.4492 li
115.974 84.999 li
115.974 86.5391 117.344 87.5791 119.203 87.5791 cv
119.543 87.5791 119.903 87.5391 120.273 87.4697 cv
122.644 86.999 124.573 84.3291 124.573 81.5195 cv
cp
.2 .203922 .219608 rgb
f
120.273 85.4697 mo
119.903 85.5391 119.543 85.5791 119.203 85.5791 cv
117.344 85.5791 115.974 84.5391 115.974 82.999 cv
115.974 84.999 li
115.974 86.5391 117.344 87.5791 119.203 87.5791 cv
119.543 87.5791 119.903 87.5391 120.273 87.4697 cv
122.644 86.999 124.573 84.3291 124.573 81.5195 cv
124.573 81.1191 124.573 80.417 124.573 79.5195 cv
124.573 82.3291 122.644 84.999 120.273 85.4697 cv
cp
.309804 .317647 .341176 rgb
f
102.773 67.8008 mo
102.773 72.7373 98.7725 76.7383 93.8359 76.7383 cv
88.8994 76.7383 84.8984 72.7373 84.8984 67.8008 cv
84.8984 62.8643 88.8994 58.8633 93.8359 58.8633 cv
98.7725 58.8633 102.773 62.8643 102.773 67.8008 cv
cp
.498039 .513726 .54902 rgb
f
93.8359 57.8633 mo
88.3564 57.8633 83.8984 62.3213 83.8984 67.8008 cv
83.8984 73.2803 88.3564 77.7383 93.8359 77.7383 cv
99.3154 77.7383 103.773 73.2803 103.773 67.8008 cv
103.773 62.3213 99.3154 57.8633 93.8359 57.8633 cv
93.8359 57.8633 li
cp
93.8359 58.8633 mo
98.7725 58.8633 102.773 62.8643 102.773 67.8008 cv
102.773 72.7373 98.7725 76.7383 93.8359 76.7383 cv
88.8994 76.7383 84.8984 72.7373 84.8984 67.8008 cv
84.8984 62.8643 88.8994 58.8633 93.8359 58.8633 cv
93.8359 58.8633 li
cp
.227451 .231373 .25098 rgb
f
93.8359 72.7383 mo
89.5879 72.7383 86.04 69.7725 85.1309 65.8008 cv
84.9834 66.4443 84.8984 67.1123 84.8984 67.8008 cv
84.8984 72.7373 88.8994 76.7383 93.8359 76.7383 cv
98.7725 76.7383 102.773 72.7373 102.773 67.8008 cv
102.773 67.1123 102.688 66.4443 102.541 65.8008 cv
101.632 69.7725 98.084 72.7383 93.8359 72.7383 cv
cp
.309804 .317647 .341176 rgb
f
94.7339 70.5205 mo
92.4624 70.5947 90.5234 69.3574 90.5234 67.7568 cv
90.5234 66.1582 92.4624 64.9209 94.7339 64.9951 cv
115.986 65.6904 li
117.201 65.7295 118.156 66.6563 118.156 67.7568 cv
118.156 68.8594 117.201 69.7861 115.986 69.8252 cv
94.7339 70.5205 li
cp
f
94.54 63.9922 mo
94.54 63.9922 li
91.7271 63.9922 89.5234 65.6455 89.5234 67.7568 cv
89.5234 69.8691 91.7271 71.5234 94.54 71.5234 cv
94.6152 71.5234 94.6909 71.5225 94.7666 71.5195 cv
116.019 70.8242 li
117.777 70.7686 119.156 69.4209 119.156 67.7568 cv
119.156 66.0938 117.777 64.7471 116.018 64.6914 cv
94.7666 63.9961 li
94.6904 63.9932 94.6152 63.9922 94.54 63.9922 cv
94.54 63.9922 li
cp
94.54 64.9922 mo
94.6045 64.9922 94.6689 64.9932 94.7339 64.9951 cv
115.986 65.6904 li
117.201 65.7295 118.156 66.6563 118.156 67.7568 cv
118.156 68.8594 117.201 69.7861 115.986 69.8252 cv
94.7339 70.5205 li
94.6689 70.5225 94.604 70.5234 94.54 70.5234 cv
92.353 70.5234 90.5234 69.3115 90.5234 67.7568 cv
90.5234 66.2041 92.353 64.9922 94.54 64.9922 cv
94.54 64.9922 li
cp
.227451 .231373 .25098 rgb
f
115.986 65.6904 mo
94.7339 64.9951 li
92.4624 64.9209 90.5234 66.1582 90.5234 67.7568 cv
90.5234 67.9727 90.5654 68.1816 90.6333 68.3828 cv
91.3579 67.7002 92.3311 67.2842 93.3892 67.29 cv
116.719 67.417 li
117.268 67.4199 117.754 67.7168 118.104 68.1885 cv
118.136 68.0488 118.156 67.9053 118.156 67.7568 cv
118.156 66.6563 117.201 65.7295 115.986 65.6904 cv
cp
.498039 .513726 .54902 rgb
f
98.9131 62.0586 mo
98.792 63.1328 96.7646 63.7861 94.3877 63.5166 cv
92.0098 63.248 90.1807 62.1582 90.3018 61.084 cv
90.4229 60.0098 92.4502 59.3564 94.8271 59.626 cv
97.2051 59.8945 99.0342 60.9844 98.9131 62.0586 cv
cp
.627451 .643137 .690196 rgb
f
12.2368 54.1543 mo
12.2368 54.8213 11.6963 55.3623 11.0288 55.3623 cv
10.3613 55.3623 9.8208 54.8213 9.8208 54.1543 cv
9.8208 53.4873 10.3613 52.9463 11.0288 52.9463 cv
11.6963 52.9463 12.2368 53.4873 12.2368 54.1543 cv
cp
.478431 .164706 .129412 rgb
f
11.8359 54.0918 mo
11.8359 54.5752 11.4443 54.9668 10.9609 54.9668 cv
10.4775 54.9668 10.0859 54.5752 10.0859 54.0918 cv
10.0859 53.6084 10.4775 53.2168 10.9609 53.2168 cv
11.4443 53.2168 11.8359 53.6084 11.8359 54.0918 cv
cp
.670588 .227451 .176471 rgb
f
19.3198 56.9258 mo
19.3198 57.5928 18.7793 58.1338 18.1118 58.1338 cv
17.4443 58.1338 16.9038 57.5928 16.9038 56.9258 cv
16.9038 56.2588 17.4443 55.7178 18.1118 55.7178 cv
18.7793 55.7178 19.3198 56.2588 19.3198 56.9258 cv
cp
.478431 .164706 .129412 rgb
f
18.9189 56.8633 mo
18.9189 57.3467 18.5273 57.7383 18.0439 57.7383 cv
17.5605 57.7383 17.1689 57.3467 17.1689 56.8633 cv
17.1689 56.3799 17.5605 55.9883 18.0439 55.9883 cv
18.5273 55.9883 18.9189 56.3799 18.9189 56.8633 cv
cp
.670588 .227451 .176471 rgb
f
25.1953 61.8213 mo
25.1953 62.4883 24.6548 63.0293 23.9873 63.0293 cv
23.3198 63.0293 22.7793 62.4883 22.7793 61.8213 cv
22.7793 61.1543 23.3198 60.6133 23.9873 60.6133 cv
24.6548 60.6133 25.1953 61.1543 25.1953 61.8213 cv
cp
.478431 .164706 .129412 rgb
f
24.7944 61.7588 mo
24.7944 62.2422 24.4028 62.6338 23.9194 62.6338 cv
23.436 62.6338 23.0444 62.2422 23.0444 61.7588 cv
23.0444 61.2754 23.436 60.8838 23.9194 60.8838 cv
24.4028 60.8838 24.7944 61.2754 24.7944 61.7588 cv
cp
.670588 .227451 .176471 rgb
f
32.1538 65.3623 mo
32.1538 66.0293 31.6133 66.5703 30.9458 66.5703 cv
30.2783 66.5703 29.7378 66.0293 29.7378 65.3623 cv
29.7378 64.6953 30.2783 64.1543 30.9458 64.1543 cv
31.6133 64.1543 32.1538 64.6953 32.1538 65.3623 cv
cp
.478431 .164706 .129412 rgb
f
31.7529 65.2998 mo
31.7529 65.7832 31.3613 66.1748 30.8779 66.1748 cv
30.3945 66.1748 30.0029 65.7832 30.0029 65.2998 cv
30.0029 64.8164 30.3945 64.4248 30.8779 64.4248 cv
31.3613 64.4248 31.7529 64.8164 31.7529 65.2998 cv
cp
.670588 .227451 .176471 rgb
f
75.5703 69.6953 mo
75.5703 70.3623 75.0303 70.9033 74.3633 70.9033 cv
73.6953 70.9033 73.1543 70.3623 73.1543 69.6953 cv
73.1543 69.0283 73.6953 68.4873 74.3633 68.4873 cv
75.0303 68.4873 75.5703 69.0283 75.5703 69.6953 cv
cp
.478431 .164706 .129412 rgb
f
75.1699 69.6328 mo
75.1699 70.1162 74.7783 70.5078 74.2949 70.5078 cv
73.8115 70.5078 73.4199 70.1162 73.4199 69.6328 cv
73.4199 69.1494 73.8115 68.7578 74.2949 68.7578 cv
74.7783 68.7578 75.1699 69.1494 75.1699 69.6328 cv
cp
.670588 .227451 .176471 rgb
f
67.7363 69.7793 mo
67.7363 70.4463 67.1963 70.9873 66.5293 70.9873 cv
65.8613 70.9873 65.3203 70.4463 65.3203 69.7793 cv
65.3203 69.1123 65.8613 68.5713 66.5293 68.5713 cv
67.1963 68.5713 67.7363 69.1123 67.7363 69.7793 cv
cp
.478431 .164706 .129412 rgb
f
67.3359 69.7168 mo
67.3359 70.2002 66.9443 70.5918 66.4609 70.5918 cv
65.9775 70.5918 65.5859 70.2002 65.5859 69.7168 cv
65.5859 69.2334 65.9775 68.8418 66.4609 68.8418 cv
66.9443 68.8418 67.3359 69.2334 67.3359 69.7168 cv
cp
.670588 .227451 .176471 rgb
f
82.8203 69.6953 mo
82.8203 70.3623 82.2803 70.9033 81.6133 70.9033 cv
80.9453 70.9033 80.4043 70.3623 80.4043 69.6953 cv
80.4043 69.0283 80.9453 68.4873 81.6133 68.4873 cv
82.2803 68.4873 82.8203 69.0283 82.8203 69.6953 cv
cp
.478431 .164706 .129412 rgb
f
82.4199 69.6328 mo
82.4199 70.1162 82.0283 70.5078 81.5449 70.5078 cv
81.0615 70.5078 80.6699 70.1162 80.6699 69.6328 cv
80.6699 69.1494 81.0615 68.7578 81.5449 68.7578 cv
82.0283 68.7578 82.4199 69.1494 82.4199 69.6328 cv
cp
.670588 .227451 .176471 rgb
f
241.278 82.5547 mo
241.097 82.5547 240.916 82.6064 240.76 82.707 cv
224.812 93.0107 li
224.449 93.2441 224.289 93.6914 224.421 94.1025 cv
228.574 107.097 li
228.702 107.498 229.074 107.76 229.482 107.76 cv
229.544 107.76 229.605 107.754 229.667 107.741 cv
245.448 104.624 li
245.965 104.522 246.302 104.02 246.2 103.504 cv
242.214 83.3232 li
242.152 83.0137 241.941 82.7539 241.65 82.6299 cv
241.53 82.5801 241.404 82.5547 241.278 82.5547 cv
241.278 82.5547 li
cp
241.278 83.5088 mo
245.264 103.688 li
229.482 106.806 li
225.329 93.8125 li
241.278 83.5088 li
241.278 83.5088 li
cp
.227451 .231373 .25098 rgb
f
241.278 83.5088 mo
225.329 93.8125 li
229.482 106.806 li
233.563 106 li
242.014 87.2393 li
241.278 83.5088 li
cp
.2 .203922 .219608 rgb
f
233.563 106 mo
245.264 103.688 li
242.014 87.2393 li
233.563 106 li
cp
.309804 .317647 .341176 rgb
f
244.646 100.567 mo
242.503 102.334 240.016 103.476 237.074 103.872 cv
235.645 104.064 232.267 104.155 228.544 103.87 cv
229.482 106.806 li
233.563 106 li
245.264 103.688 li
244.646 100.567 li
cp
f
229.559 30.4702 mo
229.14 30.4702 228.761 30.7471 228.643 31.1616 cv
224.261 46.4492 li
224.143 46.8623 224.315 47.3047 224.684 47.5273 cv
242.348 58.2441 li
242.499 58.335 242.671 58.3828 242.843 58.3828 cv
242.979 58.3828 243.116 58.3525 243.244 58.2939 cv
243.532 58.1602 243.734 57.8916 243.785 57.5791 cv
247.507 34.2935 li
247.589 33.7725 247.235 33.2837 246.716 33.2007 cv
229.711 30.4819 li
229.659 30.4741 229.609 30.4702 229.559 30.4702 cv
229.559 30.4702 li
cp
229.56 31.4243 mo
246.564 34.1431 li
242.843 57.4277 li
225.178 46.7109 li
229.56 31.4243 li
229.56 31.4243 li
cp
.227451 .231373 .25098 rgb
f
229.56 31.4243 mo
225.178 46.7109 li
242.843 57.4277 li
246.564 34.1431 li
229.56 31.4243 li
cp
.4 .407843 .439216 rgb
f
235.48 52.9629 mo
238.69 32.8828 li
229.56 31.4243 li
225.178 46.7109 li
235.48 52.9629 li
cp
.498039 .513726 .54902 rgb
f
246.234 36.2139 mo
246.564 34.1431 li
229.56 31.4243 li
228.977 33.4531 li
246.234 36.2139 li
cp
.627451 .643137 .690196 rgb
f
245.806 38.873 mo
245.776 38.873 245.746 38.8706 245.717 38.8652 cv
238.051 37.4902 li
237.778 37.4414 237.598 37.1816 237.646 36.9097 cv
237.694 36.6377 237.961 36.4575 238.227 36.5059 cv
245.893 37.8809 li
246.165 37.9297 246.346 38.1895 246.297 38.4614 cv
246.254 38.7031 246.043 38.873 245.806 38.873 cv
cp
.227451 .231373 .25098 rgb
f
243.857 51.9043 mo
243.807 51.9043 243.756 51.8965 243.705 51.8804 cv
236.07 49.4321 li
235.807 49.3477 235.662 49.0664 235.746 48.8032 cv
235.831 48.5405 236.112 48.396 236.375 48.48 cv
244.01 50.9282 li
244.273 51.0127 244.418 51.2939 244.334 51.5571 cv
244.266 51.769 244.069 51.9043 243.857 51.9043 cv
cp
f
179.061 102.756 mo
148.183 102.756 129 88.1289 129 64.585 cv
129 43.5132 134.439 41.9922 143.397 41.9922 cv
146.058 42.002 li
210.774 42.002 li
211.646 42.002 239.391 52.8418 247.875 56.1641 cv
247.919 56.1816 247.959 56.2051 247.996 56.2344 cv
250.165 57.9443 251.939 62.082 251.949 65.459 cv
252.045 79.4023 li
252.045 84.2529 248.115 86.0664 242.165 88.8125 cv
240.752 89.4648 li
222.352 98.0361 200.442 102.756 179.061 102.756 cv
cp
.839216 .290196 .219608 rgb
f
179.061 102.756 mo
200.442 102.756 222.352 98.0361 240.752 89.4648 cv
242.165 88.8125 li
248.115 86.0664 252.045 84.2529 252.045 79.4023 cv
252.014 74.8057 li
251.664 75.0645 251.313 75.3223 250.958 75.5771 cv
244.598 80.1475 237.264 83.0527 229.91 85.6016 cv
214.523 90.9355 197.977 94.6719 181.553 93.8916 cv
166.854 93.1934 150.594 89.2676 143.536 75.0908 cv
140.027 68.043 135.848 59.8076 135.826 51.7993 cv
135.822 50.3911 135.543 46.8823 135.521 43.2476 cv
131.356 45.3193 129 50.7183 129 64.585 cv
129 88.1289 148.183 102.756 179.061 102.756 cv
cp
.670588 .227451 .176471 rgb
f
143.401 40.9922 mo
143.4 40.9922 143.398 40.9922 143.397 40.9922 cv
134.097 40.9922 128 42.6343 128 64.585 cv
128 88.7461 147.565 103.756 179.061 103.756 cv
200.586 103.756 222.646 99.0029 241.174 90.3711 cv
242.584 89.7207 li
248.657 86.918 253.045 84.8926 253.045 79.4023 cv
252.949 65.4521 li
252.938 61.752 251.035 57.3564 248.615 55.4492 cv
248.503 55.3604 248.379 55.2886 248.246 55.2358 cv
211.896 41.002 211.11 41.002 210.774 41.002 cv
146.058 41.002 li
143.401 40.9922 li
143.401 40.9922 li
cp
143.397 41.9922 mo
146.058 42.002 li
210.774 42.002 li
211.646 42.002 239.391 52.8418 247.875 56.1641 cv
247.919 56.1816 247.959 56.2051 247.996 56.2344 cv
250.165 57.9443 251.939 62.082 251.949 65.459 cv
252.045 79.4023 li
252.045 84.2529 248.115 86.0664 242.165 88.8125 cv
240.752 89.4648 li
222.352 98.0361 200.442 102.756 179.061 102.756 cv
148.183 102.756 129 88.1289 129 64.585 cv
129 43.5132 134.439 41.9922 143.397 41.9922 cv
143.397 41.9922 li
cp
.478431 .164706 .129412 rgb
f
250.538 83.1436 mo
248.712 84.2988 246.314 85.375 243.44 86.7441 cv
226.678 94.7227 205.12 100.357 181.615 100.357 cv
151.393 100.357 131.758 85.7568 131.758 61.6133 cv
131.758 52.6597 132.688 47.2324 134.375 43.938 cv
130.927 46.4302 129 52.0454 129 64.585 cv
129 88.1289 148.183 102.756 179.061 102.756 cv
194.81 102.756 210.841 100.188 225.549 95.4131 cv
230.853 93.6357 235.861 91.6191 240.492 89.4141 cv
245.378 87.0898 248.9 85.6045 250.538 83.1436 cv
cp
.839216 .290196 .219608 rgb
f
251.949 65.459 mo
251.939 62.082 250.165 57.9443 247.996 56.2344 cv
247.959 56.2051 247.919 56.1816 247.875 56.1641 cv
239.391 52.8418 211.646 42.002 210.774 42.002 cv
146.058 42.002 li
143.397 41.9922 li
136.927 41.9922 132.294 42.79 130.219 51.1729 cv
130.219 51.1729 130.219 51.1733 130.219 51.1738 cv
131.01 51.1611 133.366 51.1338 136.152 51.2104 cv
139.584 51.3037 150.226 55.8677 153.627 59.3447 cv
157.811 63.624 170.191 67.3115 176.736 67.3115 cv
251.962 67.3115 li
251.949 65.459 li
cp
.478431 .164706 .129412 rgb
f
251.949 65.459 mo
251.939 62.082 250.165 57.9443 247.996 56.2344 cv
247.959 56.2051 247.919 56.1816 247.875 56.1641 cv
239.391 52.8418 211.646 42.002 210.774 42.002 cv
146.058 42.002 li
143.397 41.9922 li
137.402 41.9922 132.986 42.6831 130.719 49.4512 cv
130.719 49.4512 li
138.997 49.7319 146.848 51.8301 153.354 57.3779 cv
159.674 62.7656 168.789 66.2832 177.186 66.2832 cv
251.955 66.2832 li
251.949 65.459 li
cp
1 .658824 .509804 rgb
f
248.283 64.2275 mo
247.589 62.0195 246.521 61.4463 245.311 60.4697 cv
236.818 57.2598 228.32 54.063 219.808 50.9087 cv
213.228 48.4702 208.535 46.7769 201.649 46.6289 cv
180.424 46.1729 153.186 42.7959 137.359 45.6147 cv
136.436 45.7793 135.092 46.4824 134.212 47.6592 cv
140.967 47.9912 151.586 53.248 154.093 56.02 cv
158.11 60.4639 170.646 64.2275 177.186 64.2275 cv
248.283 64.2275 li
cp
.929412 .435294 .372549 rgb
f
190.131 10.3174 mo
189.063 10.1807 187.993 10.0449 186.926 9.9082 cv
186.404 9.83984 185.919 10.252 185.854 10.8301 cv
185.304 15.6675 185.227 20.5513 185.627 25.4141 cv
185.674 25.9946 186.146 26.4229 186.67 26.3711 cv
187.741 26.2681 188.814 26.165 189.887 26.061 cv
190.409 26.0098 190.793 25.5317 190.749 24.9932 cv
190.377 20.4644 190.448 15.915 190.96 11.4102 cv
191.021 10.8745 190.652 10.3857 190.131 10.3174 cv
190.131 10.3174 li
cp
190.012 11.3018 mo
189.493 15.8691 189.421 20.4805 189.799 25.0718 cv
188.724 25.1592 187.65 25.2476 186.577 25.3359 cv
186.184 20.5352 186.26 15.7134 186.801 10.938 cv
187.872 11.0591 188.942 11.1812 190.012 11.3018 cv
190.012 11.3018 li
cp
.227451 .231373 .25098 rgb
f
190.012 11.3018 mo
188.942 11.1812 187.872 11.0591 186.801 10.938 cv
186.26 15.7134 186.184 20.5352 186.577 25.3359 cv
187.65 25.2476 188.724 25.1592 189.799 25.0718 cv
189.422 20.481 189.494 15.8691 190.012 11.3018 cv
cp
.4 .407843 .439216 rgb
f
190.012 11.3018 mo
189.507 11.2446 189.003 11.1875 188.498 11.1304 cv
187.969 15.7959 187.895 20.5063 188.279 25.1968 cv
188.784 25.1548 189.292 25.1133 189.799 25.0718 cv
189.422 20.481 189.494 15.8691 190.012 11.3018 cv
cp
.498039 .513726 .54902 rgb
f
192.709 4.29443 mo
190.677 3.84424 188.645 3.39355 186.614 2.94287 cv
186.1 2.82764 185.578 3.20459 185.458 3.78711 cv
184.884 6.55811 184.464 9.35596 184.202 12.168 cv
184.146 12.7583 184.535 13.27 185.062 13.3105 cv
187.135 13.4751 189.21 13.6396 191.284 13.8042 cv
191.812 13.8452 192.27 13.4517 192.318 12.9263 cv
192.553 10.4146 192.927 7.91504 193.439 5.43896 cv
193.546 4.92188 193.225 4.41064 192.709 4.29443 cv
192.709 4.29443 li
cp
192.505 5.24561 mo
191.985 7.75635 191.606 10.2915 191.368 12.8374 cv
189.296 12.6436 187.224 12.4497 185.152 12.2563 cv
185.412 9.47998 185.824 6.71729 186.392 3.97998 cv
188.43 4.40186 190.467 4.82373 192.505 5.24561 cv
192.505 5.24561 li
cp
.227451 .231373 .25098 rgb
f
192.505 5.24561 mo
190.467 4.82373 188.43 4.40186 186.392 3.97998 cv
185.824 6.71729 185.412 9.47998 185.152 12.2563 cv
187.224 12.4497 189.296 12.6436 191.368 12.8374 cv
191.606 10.2915 191.985 7.75635 192.505 5.24561 cv
cp
.4 .407843 .439216 rgb
f
186.392 3.97998 mo
186.202 4.89551 186.029 5.81396 185.874 6.73486 cv
187.927 7.08057 189.979 7.42676 192.03 7.77246 cv
192.173 6.92822 192.331 6.08545 192.505 5.24561 cv
190.467 4.82373 188.43 4.40186 186.392 3.97998 cv
cp
.498039 .513726 .54902 rgb
f
186.392 3.97998 mo
186.277 4.53223 186.169 5.08643 186.067 5.64111 cv
188.114 6.01709 190.161 6.39307 192.207 6.77002 cv
192.301 6.26074 192.4 5.75244 192.505 5.24561 cv
190.467 4.82373 188.43 4.40186 186.392 3.97998 cv
cp
.627451 .643137 .690196 rgb
f
179.655 5.41211 mo
182.751 10.3403 181.525 27.7954 180.791 27.6724 cv
179.417 27.4551 178.045 27.2378 176.672 27.0205 cv
177.691 20.5757 177.432 14.0186 175.936 7.71826 cv
174.456 8.02051 172.977 8.32666 171.498 8.63721 cv
171.188 6.89502 170.774 5.16211 170.255 3.44775 cv
171.24 2.96631 172.233 2.48291 173.254 2.1001 cv
173.376 2.05518 173.492 2.02393 173.577 1.99268 cv
174.48 1.72803 176.228 1.53711 177.157 2.01758 cv
178.273 2.50342 179.294 4.53271 179.655 5.41211 cv
cp
.4 .407843 .439216 rgb
f
180.458 4.77344 mo
183.589 9.84326 182.633 26.9487 181.774 27.5298 cv
181.644 28.2036 181.062 29.064 180.569 28.9697 cv
179.238 28.7256 177.907 28.4814 176.576 28.2373 cv
176.069 28.1372 175.708 26.7769 175.788 26.1709 cv
176.611 20.4434 176.406 14.6362 175.204 9.01953 cv
174.029 9.23438 172.856 9.45215 171.683 9.67285 cv
171.427 9.71729 171.235 9.63525 171.025 9.47266 cv
170.803 9.30176 170.665 9.05908 170.607 8.78516 cv
170.299 7.08252 169.887 5.38916 169.373 3.71484 cv
169.232 3.24756 169.396 2.76221 169.763 2.52148 cv
169.781 2.51367 169.801 2.50635 169.815 2.48877 cv
169.824 2.48486 169.843 2.47754 169.843 2.47754 cv
171.875 1.43994 174.93 -.359863 177.409 .849609 cv
178.815 1.34619 179.984 3.64697 180.458 4.77344 cv
cp
180.791 27.6724 mo
181.525 27.7954 182.752 10.3403 179.655 5.41211 cv
179.294 4.53271 178.272 2.50391 177.157 2.01758 cv
176.228 1.53711 174.48 1.72803 173.577 1.99268 cv
173.493 2.02344 173.376 2.05518 173.254 2.1001 cv
172.234 2.48291 171.24 2.96631 170.255 3.44775 cv
170.774 5.16211 171.188 6.89502 171.498 8.63721 cv
172.977 8.32666 174.456 8.02051 175.936 7.71826 cv
177.432 14.0186 177.691 20.5757 176.672 27.0205 cv
178.045 27.2378 179.417 27.4551 180.791 27.6724 cv
cp
.227451 .231373 .25098 rgb
f
180.791 27.6724 mo
181.525 27.7954 182.752 10.3403 179.655 5.41211 cv
179.294 4.53271 178.272 2.50391 177.157 2.01758 cv
176.228 1.53711 174.48 1.72803 173.577 1.99268 cv
173.493 2.02344 173.376 2.05518 173.254 2.1001 cv
172.234 2.48291 171.24 2.96631 170.255 3.44775 cv
170.366 3.81006 170.471 4.1748 170.571 4.53857 cv
171.099 4.34033 171.663 4.13232 171.827 4.08838 cv
172.727 3.8457 174.325 3.78516 175.229 4.25732 cv
175.951 4.61621 177.242 5.98584 177.587 6.84229 cv
179.987 12.2417 180.289 21.1138 178.739 27.3477 cv
179.423 27.4556 180.106 27.564 180.791 27.6724 cv
cp
.498039 .513726 .54902 rgb
f
180.791 27.6724 mo
181.525 27.7954 182.752 10.3403 179.655 5.41211 cv
179.294 4.53271 178.272 2.50391 177.157 2.01758 cv
176.228 1.53711 174.48 1.72803 173.577 1.99268 cv
173.493 2.02344 173.376 2.05518 173.254 2.1001 cv
172.234 2.48291 171.24 2.96631 170.255 3.44775 cv
170.333 3.70264 170.408 3.95801 170.481 4.21338 cv
171.337 3.87012 172.354 3.47998 172.667 3.39502 cv
173.567 3.14941 175.147 3.02539 176.063 3.50488 cv
176.792 3.86523 178.138 5.37109 178.491 6.24316 cv
180.215 9.43408 181.229 21.1914 179.625 27.4873 cv
180.014 27.5493 180.402 27.6108 180.791 27.6724 cv
cp
.627451 .643137 .690196 rgb
f
168.995 .911133 mo
168.723 1.03174 168.448 1.15234 168.176 1.27295 cv
166.873 1.86572 166.3 3.4209 166.794 4.77246 cv
167.395 6.40771 167.893 8.07471 168.284 9.7627 cv
168.61 11.1567 169.94 12.1289 171.354 11.9097 cv
171.649 11.8604 171.944 11.8115 172.239 11.7622 cv
173.65 11.5439 174.59 10.02 174.21 8.38818 cv
173.762 6.45459 173.191 4.5459 172.504 2.67285 cv
171.923 1.0918 170.294 .318848 168.995 .911133 cv
168.995 .911133 li
cp
169.43 1.92871 mo
170.241 1.58691 171.216 2.06836 171.564 3.01807 cv
172.238 4.85156 172.797 6.72119 173.235 8.61377 cv
173.463 9.59424 172.911 10.5239 172.046 10.6836 cv
171.752 10.7397 171.458 10.7959 171.165 10.8525 cv
170.299 11.0122 169.464 10.4199 169.259 9.53711 cv
168.857 7.80811 168.349 6.10156 167.732 4.42725 cv
167.418 3.57129 167.789 2.61182 168.601 2.27051 cv
168.877 2.15625 169.153 2.04297 169.43 1.92871 cv
169.43 1.92871 li
cp
.227451 .231373 .25098 rgb
f
169.43 1.92871 mo
169.153 2.04297 168.877 2.15625 168.601 2.27051 cv
167.789 2.61182 167.418 3.57129 167.732 4.42725 cv
168.349 6.10156 168.857 7.80811 169.259 9.53711 cv
169.464 10.4199 170.299 11.0122 171.165 10.8525 cv
171.458 10.7959 171.752 10.7397 172.046 10.6836 cv
172.911 10.5239 173.463 9.59424 173.235 8.61377 cv
172.797 6.72119 172.238 4.85156 171.564 3.01807 cv
171.216 2.06836 170.241 1.58691 169.43 1.92871 cv
cp
.4 .407843 .439216 rgb
f
169.43 1.92871 mo
169.153 2.04297 168.877 2.15625 168.601 2.27051 cv
167.789 2.61182 167.418 3.57129 167.732 4.42725 cv
167.973 5.07959 168.196 5.73682 168.403 6.39795 cv
168.133 5.53027 168.55 4.59229 169.377 4.29102 cv
169.658 4.19043 169.94 4.08984 170.222 3.98975 cv
171.049 3.68799 171.998 4.21387 172.3 5.17676 cv
172.072 4.45215 171.828 3.73242 171.564 3.01807 cv
171.216 2.06836 170.241 1.58691 169.43 1.92871 cv
cp
.498039 .513726 .54902 rgb
f
169.43 1.92871 mo
169.153 2.04297 168.877 2.15625 168.601 2.27051 cv
167.789 2.61182 167.418 3.57129 167.732 4.42725 cv
167.853 4.75342 167.969 5.08057 168.08 5.40918 cv
167.788 4.54736 168.183 3.59863 169.001 3.27637 cv
169.28 3.16943 169.561 3.0625 169.839 2.95557 cv
170.658 2.6333 171.62 3.13721 171.946 4.09326 cv
171.823 3.73389 171.696 3.375 171.564 3.01807 cv
171.216 2.06836 170.241 1.58691 169.43 1.92871 cv
cp
.627451 .643137 .690196 rgb
f
199.403 23.8091 mo
207.134 45.2192 li
164.607 45.1543 li
166.644 24.2192 li
166.773 22.7593 167.604 21.8691 168.403 21.8691 cv
197.144 21.9092 li
197.953 21.9092 198.964 22.5693 199.403 23.8091 cv
cp
.4 .407843 .439216 rgb
f
168.405 20.8691 mo
168.403 20.8691 li
166.975 20.8691 165.815 22.2407 165.647 24.1309 cv
163.612 45.0576 li
163.585 45.3379 163.677 45.6167 163.866 45.8257 cv
164.056 46.0347 164.324 46.1538 164.605 46.1543 cv
207.132 46.2192 li
207.133 46.2192 207.133 46.2192 207.134 46.2192 cv
207.459 46.2192 207.765 46.061 207.952 45.7944 cv
208.14 45.5278 208.186 45.1865 208.074 44.8794 cv
200.344 23.4692 li
199.811 21.9644 198.493 20.9092 197.144 20.9092 cv
168.405 20.8691 li
168.405 20.8691 li
cp
168.403 21.8691 mo
197.144 21.9092 li
197.953 21.9092 198.964 22.5693 199.403 23.8091 cv
207.134 45.2192 li
164.607 45.1543 li
166.644 24.2192 li
166.773 22.7593 167.604 21.8691 168.403 21.8691 cv
168.403 21.8691 li
cp
.227451 .231373 .25098 rgb
f
166.639 24.314 mo
166.542 25.4043 li
194.433 25.4043 li
195.264 25.4043 196.306 27.6377 196.765 28.9111 cv
202.187 45.2119 li
207.134 45.2192 li
199.403 23.8091 li
198.964 22.5693 197.953 21.9092 197.144 21.9092 cv
168.403 21.8691 li
167.604 21.8691 166.773 22.7593 166.644 24.2192 cv
166.638 24.2861 li
166.638 24.2949 166.64 24.3062 166.639 24.314 cv
cp
.498039 .513726 .54902 rgb
f
169.42 23.3418 mo
176.357 23.1753 195.256 23.3877 195.256 23.3877 cv
196.06 23.3877 197.072 24.6597 197.516 25.897 cv
204.161 45.2148 li
207.134 45.2192 li
199.403 23.8091 li
198.964 22.5693 197.953 21.9092 197.144 21.9092 cv
168.403 21.8691 li
167.604 21.8691 166.773 22.7593 166.644 24.2192 cv
166.604 24.6348 li
167.546 23.7295 168.478 23.3643 169.42 23.3418 cv
cp
.627451 .643137 .690196 rgb
f
185.449 34.0776 mo
184.997 31.3813 182.932 29.1958 180.836 29.1958 cv
166.174 29.1958 li
164.834 43.3892 li
164.811 43.6235 164.767 43.8457 164.714 44.0615 cv
164.607 45.1543 li
187.313 45.189 li
185.449 34.0776 li
cp
.309804 .317647 .341176 rgb
f
180.836 28.1958 mo
166.174 28.1958 li
165.658 28.1958 165.227 28.5884 165.179 29.1016 cv
163.838 43.2949 li
163.823 43.4492 163.792 43.6187 163.742 43.8242 cv
163.73 43.8701 163.723 43.9175 163.719 43.9644 cv
163.612 45.0571 li
163.585 45.3379 163.677 45.6167 163.866 45.8257 cv
164.056 46.0347 164.324 46.1538 164.605 46.1543 cv
187.312 46.189 li
187.313 46.189 187.313 46.189 187.313 46.189 cv
187.607 46.189 187.887 46.0596 188.076 45.8354 cv
188.267 45.6108 188.349 45.314 188.3 45.0234 cv
186.436 33.9121 li
185.898 30.707 183.438 28.1958 180.836 28.1958 cv
180.836 28.1958 li
cp
180.836 29.1958 mo
182.932 29.1958 184.997 31.3813 185.449 34.0776 cv
187.313 45.189 li
164.607 45.1543 li
164.714 44.0615 li
164.767 43.8457 164.811 43.6235 164.834 43.3892 cv
166.174 29.1958 li
180.836 29.1958 li
180.836 29.1958 li
cp
.227451 .231373 .25098 rgb
f
182.69 41.4883 mo
182.69 42.7666 182.45 43.9995 182.04 45.1807 cv
187.313 45.189 li
185.449 34.0776 li
184.997 31.3813 182.932 29.1958 180.836 29.1958 cv
173.751 29.1958 li
179.124 31.7988 182.69 36.3262 182.69 41.4883 cv
cp
.2 .203922 .219608 rgb
f
171.961 32.6543 mo
175.285 29.1958 li
168.334 29.1958 li
168.648 32.0918 li
170.523 30.4043 li
171.961 32.6543 li
cp
186.63 41.1172 mo
185.449 34.0776 li
185.249 32.8848 184.723 31.8066 184.028 30.959 cv
180.648 33.6543 li
183.461 34.9668 li
179.211 38.7168 li
186.63 41.1172 li
cp
180.81 45.1792 mo
164.607 45.1543 li
164.714 44.0615 li
164.767 43.8457 164.811 43.6235 164.834 43.3892 cv
165.342 38.0137 li
167.648 37.5918 li
167.336 42.4043 li
171.398 39.0918 li
173.961 42.2168 li
176.586 41.0918 li
180.81 45.1792 li
cp
.192157 .694118 .909804 rgb
f
171.961 32.6543 mo
175.285 29.1958 li
168.334 29.1958 li
168.648 32.0918 li
170.523 30.4043 li
171.961 32.6543 li
cp
186.63 41.1172 mo
185.449 34.0776 li
185.249 32.8848 184.723 31.8066 184.028 30.959 cv
180.648 33.6543 li
183.461 34.9668 li
179.211 38.7168 li
186.63 41.1172 li
cp
180.81 45.1792 mo
164.607 45.1543 li
164.714 44.0615 li
164.767 43.8457 164.811 43.6235 164.834 43.3892 cv
165.342 38.0137 li
167.648 37.5918 li
167.336 42.4043 li
171.398 39.0918 li
173.961 42.2168 li
176.586 41.0918 li
180.81 45.1792 li
cp
f
179.774 44.1772 mo
165.719 44.1558 li
165.772 43.918 165.808 43.7021 165.829 43.4829 cv
166.363 37.8267 li
165.342 38.0137 li
164.834 43.3892 li
164.811 43.6235 164.767 43.8457 164.714 44.0615 cv
164.607 45.1543 li
180.81 45.1792 li
179.774 44.1772 li
cp
174.324 30.1958 mo
175.285 29.1958 li
168.334 29.1958 li
168.442 30.1958 li
174.324 30.1958 li
cp
185.225 33.167 mo
185.318 33.4624 185.396 33.7656 185.449 34.0776 cv
186.63 41.1172 li
185.559 40.7705 li
184.463 34.2432 li
184.293 33.229 183.84 32.2979 183.251 31.5786 cv
184.028 30.959 li
184.198 31.1665 184.357 31.3882 184.505 31.6216 cv
184.516 31.6396 184.526 31.6587 184.537 31.6768 cv
184.67 31.8916 184.793 32.1162 184.903 32.3496 cv
184.944 32.4395 184.979 32.5342 185.016 32.6265 cv
185.091 32.8037 185.166 32.981 185.225 33.167 cv
cp
1 1 1 rgb
f
186.523 55.5293 mo
183.865 55.5293 182.523 52.9878 181.478 51.5293 cv
180.1 49.6099 175.166 49.5293 172.241 49.5293 cv
153.911 49.5293 li
153.286 49.5293 152.495 48.7998 152.276 47.4946 cv
152.198 47.0381 153.076 43.4316 154.202 42.0957 cv
154.543 41.6904 154.909 41.5293 155.29 41.5293 cv
212.065 41.5293 li
213.924 41.5293 216.398 43.5918 218.54 45.5527 cv
219.844 46.7275 223.93 50.123 221.404 52.5479 cv
220.135 53.7666 218.037 55.5293 216.281 55.5293 cv
186.523 55.5293 li
cp
.4 .407843 .439216 rgb
f
212.065 40.5293 mo
155.29 40.5293 li
154.799 40.5293 154.078 40.6895 153.438 41.4521 cv
152.193 42.9272 151.14 46.7793 151.291 47.6631 cv
151.606 49.5435 152.848 50.5293 153.911 50.5293 cv
172.241 50.5293 li
174.044 50.5293 179.529 50.5293 180.665 52.1123 cv
180.792 52.29 180.925 52.4849 181.063 52.689 cv
182.102 54.2183 183.672 56.5293 186.523 56.5293 cv
216.281 56.5293 li
217.887 56.5293 219.844 55.4326 222.097 53.269 cv
222.844 52.5522 223.229 51.668 223.211 50.7124 cv
223.167 48.3379 220.729 46.1655 219.421 44.9985 cv
219.209 44.8101 li
216.784 42.5894 214.235 40.5293 212.065 40.5293 cv
212.065 40.5293 li
cp
212.065 41.5293 mo
213.924 41.5293 216.398 43.5918 218.54 45.5527 cv
219.844 46.7275 223.93 50.123 221.404 52.5479 cv
220.135 53.7666 218.037 55.5293 216.281 55.5293 cv
186.523 55.5293 li
183.865 55.5293 182.523 52.9878 181.478 51.5293 cv
180.1 49.6099 175.166 49.5293 172.241 49.5293 cv
153.911 49.5293 li
153.286 49.5293 152.495 48.7998 152.276 47.4946 cv
152.198 47.0381 153.076 43.4316 154.202 42.0957 cv
154.543 41.6904 154.909 41.5293 155.29 41.5293 cv
212.065 41.5293 li
212.065 41.5293 li
cp
.227451 .231373 .25098 rgb
f
212.065 41.5293 mo
155.29 41.5293 li
155.139 41.5293 154.99 41.5635 154.844 41.6201 cv
154.214 43.3286 154.166 45.7129 154.933 47.1958 cv
157.709 48.4199 160.982 47.5708 164.04 47.5708 cv
166.763 47.5708 178.119 47.6636 180.676 48.7876 cv
183.33 49.9546 183.211 53.5708 186.847 53.5708 cv
194.816 53.8296 202.803 54.0371 210.777 53.9038 cv
213.656 53.856 220.082 54.9136 219.897 50.1333 cv
219.845 48.7456 218.365 46.1738 216.627 43.8887 cv
215.022 42.5796 213.388 41.5293 212.065 41.5293 cv
cp
.498039 .513726 .54902 rgb
f
252.573 61.2695 mo
252.573 61.2695 252.573 78.6992 252.573 81.5195 cv
252.573 84.3291 250.644 86.999 248.273 87.4697 cv
247.903 87.5391 247.543 87.5791 247.203 87.5791 cv
245.344 87.5791 243.974 86.5391 243.974 84.999 cv
243.974 80.4492 li
243.974 61.9395 li
243.974 61.9395 243.974 59.0889 243.974 57.0693 cv
243.974 55.6094 244.983 54.7593 246.453 54.7593 cv
247.004 54.7593 247.623 54.8794 248.273 55.1392 cv
250.644 56.0693 252.573 58.8193 252.573 61.2695 cv
cp
.309804 .317647 .341176 rgb
f
253.523 61.2695 mo
253.523 81.5195 li
253.523 84.8096 251.304 87.8389 248.453 88.3994 cv
248.033 88.4893 247.613 88.5293 247.203 88.5293 cv
244.773 88.5293 243.023 87.0391 243.023 84.999 cv
243.023 80.4492 li
243.023 61.9395 li
243.023 57.0693 li
243.023 55.1191 244.403 53.8091 246.453 53.8091 cv
247.144 53.8091 247.873 53.9492 248.623 54.2495 cv
251.373 55.3394 253.523 58.4189 253.523 61.2695 cv
cp
252.573 81.5195 mo
252.573 78.6992 252.573 61.2695 252.573 61.2695 cv
252.573 58.8193 250.644 56.0693 248.273 55.1392 cv
247.623 54.8794 247.004 54.7593 246.453 54.7593 cv
244.983 54.7593 243.974 55.6094 243.974 57.0693 cv
243.974 59.0889 243.974 61.9395 243.974 61.9395 cv
243.974 80.4492 li
243.974 84.999 li
243.974 86.5391 245.344 87.5791 247.203 87.5791 cv
247.543 87.5791 247.903 87.5391 248.273 87.4697 cv
250.644 86.999 252.573 84.3291 252.573 81.5195 cv
cp
.227451 .231373 .25098 rgb
f
248.273 55.1392 mo
247.623 54.8794 247.004 54.7593 246.453 54.7593 cv
244.983 54.7593 243.974 55.6094 243.974 57.0693 cv
243.974 59.0889 243.974 61.9395 243.974 61.9395 cv
243.974 71.0684 li
244.729 66.1318 245.872 60.5596 248.086 60.9482 cv
250.427 61.3594 251.706 63.0547 252.573 64.5781 cv
252.573 62.5986 252.573 61.2695 252.573 61.2695 cv
252.573 58.8193 250.644 56.0693 248.273 55.1392 cv
cp
.498039 .513726 .54902 rgb
f
248.404 57.168 mo
250.183 57.8105 251.718 59.2949 252.543 60.9531 cv
252.389 58.5869 250.543 56.0293 248.273 55.1392 cv
247.623 54.8794 247.004 54.7593 246.453 54.7593 cv
244.983 54.7593 243.974 55.6094 243.974 57.0693 cv
243.974 57.3232 243.974 57.5898 243.974 57.8633 cv
244.69 56.7744 246.4 56.4434 248.404 57.168 cv
cp
.627451 .643137 .690196 rgb
f
252.573 81.5195 mo
252.573 81.0615 252.573 80.2148 252.573 79.124 cv
247.896 85.7451 244.891 80.7793 243.974 78.8115 cv
243.974 80.4492 li
243.974 84.999 li
243.974 86.5391 245.344 87.5791 247.203 87.5791 cv
247.543 87.5791 247.903 87.5391 248.273 87.4697 cv
250.644 86.999 252.573 84.3291 252.573 81.5195 cv
cp
.2 .203922 .219608 rgb
f
248.273 85.4697 mo
247.903 85.5391 247.543 85.5791 247.203 85.5791 cv
245.344 85.5791 243.974 84.5391 243.974 82.999 cv
243.974 84.999 li
243.974 86.5391 245.344 87.5791 247.203 87.5791 cv
247.543 87.5791 247.903 87.5391 248.273 87.4697 cv
250.644 86.999 252.573 84.3291 252.573 81.5195 cv
252.573 81.1191 252.573 80.417 252.573 79.5195 cv
252.573 82.3291 250.644 84.999 248.273 85.4697 cv
cp
.309804 .317647 .341176 rgb
f
230.773 67.8008 mo
230.773 72.7373 226.772 76.7383 221.836 76.7383 cv
216.899 76.7383 212.898 72.7373 212.898 67.8008 cv
212.898 62.8643 216.899 58.8633 221.836 58.8633 cv
226.772 58.8633 230.773 62.8643 230.773 67.8008 cv
cp
.498039 .513726 .54902 rgb
f
221.836 57.8633 mo
216.356 57.8633 211.898 62.3213 211.898 67.8008 cv
211.898 73.2803 216.356 77.7383 221.836 77.7383 cv
227.315 77.7383 231.773 73.2803 231.773 67.8008 cv
231.773 62.3213 227.315 57.8633 221.836 57.8633 cv
221.836 57.8633 li
cp
221.836 58.8633 mo
226.772 58.8633 230.773 62.8643 230.773 67.8008 cv
230.773 72.7373 226.772 76.7383 221.836 76.7383 cv
216.899 76.7383 212.898 72.7373 212.898 67.8008 cv
212.898 62.8643 216.899 58.8633 221.836 58.8633 cv
221.836 58.8633 li
cp
.227451 .231373 .25098 rgb
f
221.836 72.7383 mo
217.588 72.7383 214.04 69.7725 213.131 65.8008 cv
212.983 66.4443 212.898 67.1123 212.898 67.8008 cv
212.898 72.7373 216.899 76.7383 221.836 76.7383 cv
226.772 76.7383 230.773 72.7373 230.773 67.8008 cv
230.773 67.1123 230.688 66.4443 230.541 65.8008 cv
229.632 69.7725 226.084 72.7383 221.836 72.7383 cv
cp
.309804 .317647 .341176 rgb
f
226.913 62.0586 mo
226.792 63.1328 224.765 63.7861 222.388 63.5166 cv
220.01 63.248 218.181 62.1582 218.302 61.084 cv
218.423 60.0098 220.45 59.3564 222.827 59.626 cv
225.205 59.8945 227.034 60.9844 226.913 62.0586 cv
cp
.627451 .643137 .690196 rgb
f
223.317 70.2383 mo
221.107 70.7715 218.959 69.9531 218.635 68.3857 cv
218.311 66.8203 219.958 65.2158 222.197 64.8281 cv
243.149 61.2021 li
244.347 60.9941 245.47 61.708 245.692 62.7852 cv
245.916 63.8652 245.169 64.9658 243.987 65.251 cv
223.317 70.2383 li
cp
.309804 .317647 .341176 rgb
f
221.805 63.8848 mo
221.805 63.8848 li
219.05 64.4551 217.228 66.5205 217.655 68.5879 cv
218.083 70.6563 220.576 71.8301 223.331 71.2598 cv
223.404 71.2451 223.478 71.2285 223.552 71.21 cv
244.222 66.2227 li
245.933 65.8115 247.009 64.2119 246.672 62.583 cv
246.335 60.9541 244.713 59.915 242.979 60.2168 cv
222.027 63.8428 li
221.952 63.8555 221.878 63.8701 221.805 63.8848 cv
221.805 63.8848 li
cp
222.007 64.8643 mo
222.07 64.8516 222.134 64.8389 222.197 64.8281 cv
243.149 61.2021 li
244.347 60.9941 245.47 61.708 245.692 62.7852 cv
245.916 63.8652 245.169 64.9658 243.987 65.251 cv
223.317 70.2383 li
223.254 70.2539 223.19 70.2676 223.128 70.2803 cv
220.986 70.7236 218.949 69.9082 218.635 68.3857 cv
218.319 66.8652 219.865 65.3076 222.007 64.8643 cv
222.007 64.8643 li
cp
.227451 .231373 .25098 rgb
f
243.149 61.2021 mo
222.197 64.8281 li
219.958 65.2158 218.311 66.8203 218.635 68.3857 cv
218.678 68.5967 218.762 68.793 218.868 68.9766 cv
219.439 68.1611 220.309 67.5566 221.346 67.3477 cv
244.217 62.7441 li
244.755 62.6357 245.292 62.8271 245.729 63.2188 cv
245.732 63.0752 245.723 62.9307 245.692 62.7852 cv
245.47 61.708 244.347 60.9941 243.149 61.2021 cv
cp
.498039 .513726 .54902 rgb
f
140.237 54.1543 mo
140.237 54.8213 139.696 55.3623 139.029 55.3623 cv
138.361 55.3623 137.821 54.8213 137.821 54.1543 cv
137.821 53.4873 138.361 52.9463 139.029 52.9463 cv
139.696 52.9463 140.237 53.4873 140.237 54.1543 cv
cp
.478431 .164706 .129412 rgb
f
139.836 54.0918 mo
139.836 54.5752 139.444 54.9668 138.961 54.9668 cv
138.478 54.9668 138.086 54.5752 138.086 54.0918 cv
138.086 53.6084 138.478 53.2168 138.961 53.2168 cv
139.444 53.2168 139.836 53.6084 139.836 54.0918 cv
cp
.670588 .227451 .176471 rgb
f
147.32 56.9258 mo
147.32 57.5928 146.779 58.1338 146.112 58.1338 cv
145.444 58.1338 144.904 57.5928 144.904 56.9258 cv
144.904 56.2588 145.444 55.7178 146.112 55.7178 cv
146.779 55.7178 147.32 56.2588 147.32 56.9258 cv
cp
.478431 .164706 .129412 rgb
f
146.919 56.8633 mo
146.919 57.3467 146.527 57.7383 146.044 57.7383 cv
145.561 57.7383 145.169 57.3467 145.169 56.8633 cv
145.169 56.3799 145.561 55.9883 146.044 55.9883 cv
146.527 55.9883 146.919 56.3799 146.919 56.8633 cv
cp
.670588 .227451 .176471 rgb
f
153.195 61.8213 mo
153.195 62.4883 152.655 63.0293 151.987 63.0293 cv
151.32 63.0293 150.779 62.4883 150.779 61.8213 cv
150.779 61.1543 151.32 60.6133 151.987 60.6133 cv
152.655 60.6133 153.195 61.1543 153.195 61.8213 cv
cp
.478431 .164706 .129412 rgb
f
160.154 65.3623 mo
160.154 66.0293 159.613 66.5703 158.946 66.5703 cv
158.278 66.5703 157.738 66.0293 157.738 65.3623 cv
157.738 64.6953 158.278 64.1543 158.946 64.1543 cv
159.613 64.1543 160.154 64.6953 160.154 65.3623 cv
cp
f
203.57 69.6953 mo
203.57 70.3623 203.03 70.9033 202.363 70.9033 cv
201.695 70.9033 201.154 70.3623 201.154 69.6953 cv
201.154 69.0283 201.695 68.4873 202.363 68.4873 cv
203.03 68.4873 203.57 69.0283 203.57 69.6953 cv
cp
f
203.17 69.6328 mo
203.17 70.1162 202.778 70.5078 202.295 70.5078 cv
201.812 70.5078 201.42 70.1162 201.42 69.6328 cv
201.42 69.1494 201.812 68.7578 202.295 68.7578 cv
202.778 68.7578 203.17 69.1494 203.17 69.6328 cv
cp
.670588 .227451 .176471 rgb
f
195.736 69.7793 mo
195.736 70.4463 195.196 70.9873 194.529 70.9873 cv
193.861 70.9873 193.32 70.4463 193.32 69.7793 cv
193.32 69.1123 193.861 68.5713 194.529 68.5713 cv
195.196 68.5713 195.736 69.1123 195.736 69.7793 cv
cp
.478431 .164706 .129412 rgb
f
195.336 69.7168 mo
195.336 70.2002 194.944 70.5918 194.461 70.5918 cv
193.978 70.5918 193.586 70.2002 193.586 69.7168 cv
193.586 69.2334 193.978 68.8418 194.461 68.8418 cv
194.944 68.8418 195.336 69.2334 195.336 69.7168 cv
cp
.670588 .227451 .176471 rgb
f
181.458 68.2881 mo
180.811 67.6641 181.535 66.4619 182.101 65.3037 cv
183.018 64.7061 li
182.436 64.5391 li
182.634 64.0107 182.722 63.5234 182.523 63.1465 cv
182.067 63.4844 181.643 63.8457 181.218 64.1895 cv
179.603 63.7256 li
178.014 60.7217 li
177.14 64.541 li
174.005 63.3809 li
173.338 62.7695 172.704 62.3018 172.166 62.4209 cv
172.729 63.1973 173.479 64.7197 172.021 65.1533 cv
170.051 65.7373 167.936 62.8984 166.115 63.0605 cv
166.875 64.501 168.446 65.3047 169.489 66.5225 cv
170.382 67.5645 171.067 68.7813 171.814 69.9316 cv
170.936 71.2461 li
169.619 72.0508 167.505 71.1299 166.521 71.9004 cv
167.767 72.1777 170.357 72.1738 171.113 73.2188 cv
172.061 74.5322 181.913 68.7285 181.458 68.2881 cv
cp
.478431 .164706 .129412 rgb
f
178.014 59.7217 mo
177.971 59.7217 177.927 59.7246 177.883 59.7305 cv
177.469 59.7852 177.132 60.0908 177.039 60.499 cv
176.419 63.208 li
174.532 62.5098 li
173.869 61.9189 173.146 61.4023 172.34 61.4023 cv
172.208 61.4023 172.077 61.416 171.95 61.4443 cv
171.621 61.5176 171.351 61.751 171.231 62.0654 cv
171.111 62.3809 171.158 62.7344 171.356 63.0078 cv
171.755 63.5576 171.882 64.0049 171.868 64.1504 cv
171.854 64.1504 171.813 64.1719 171.736 64.1953 cv
171.651 64.2197 171.562 64.2324 171.465 64.2324 cv
170.856 64.2324 170.059 63.7383 169.287 63.2598 cv
168.331 62.667 167.343 62.0537 166.269 62.0537 cv
166.268 62.0537 166.268 62.0537 166.268 62.0537 cv
166.187 62.0537 166.106 62.0576 166.026 62.0645 cv
165.693 62.0938 165.396 62.2891 165.237 62.583 cv
165.077 62.877 165.074 63.2314 165.23 63.5273 cv
165.782 64.5723 166.629 65.2861 167.447 65.9756 cv
167.923 66.376 168.371 66.7549 168.729 67.1729 cv
169.354 67.9023 169.874 68.7305 170.424 69.6064 cv
170.489 69.7109 170.555 69.8145 170.62 69.9189 cv
170.249 70.4736 li
170.02 70.5625 169.706 70.6035 169.268 70.6035 cv
169.049 70.6035 168.827 70.5947 168.609 70.5859 cv
168.371 70.5762 168.137 70.5664 167.911 70.5664 cv
167.302 70.5664 166.523 70.6289 165.904 71.1133 cv
165.6 71.3516 165.46 71.7441 165.545 72.1211 cv
165.631 72.498 165.926 72.793 166.304 72.877 cv
166.673 72.959 167.117 73.0156 167.587 73.0752 cv
168.43 73.1836 169.998 73.3838 170.303 73.8047 cv
170.502 74.0811 170.899 74.4121 171.655 74.4121 cv
174.006 74.4121 181.875 70.0166 182.391 68.7422 cv
182.549 68.3525 182.474 67.9199 182.201 67.6191 cv
182.205 67.3281 182.574 66.5928 182.8 66.1436 cv
182.875 65.9932 li
183.563 65.5439 li
183.892 65.3301 184.064 64.9443 184.007 64.5576 cv
183.967 64.2949 183.826 64.0645 183.622 63.9092 cv
183.663 63.5146 183.623 63.0898 183.408 62.6807 cv
183.272 62.4229 183.03 62.2363 182.746 62.1719 cv
182.672 62.1543 182.598 62.1465 182.523 62.1465 cv
182.311 62.1465 182.102 62.2139 181.928 62.3428 cv
181.604 62.583 181.295 62.835 180.99 63.084 cv
180.287 62.8818 li
178.897 60.2539 li
178.723 59.9238 178.381 59.7217 178.014 59.7217 cv
178.014 59.7217 li
cp
178.014 60.7217 mo
179.603 63.7256 li
181.218 64.1895 li
181.643 63.8457 182.067 63.4844 182.523 63.1465 cv
182.722 63.5234 182.634 64.0107 182.436 64.5391 cv
183.018 64.7061 li
182.101 65.3037 li
181.535 66.4619 180.811 67.6641 181.458 68.2881 cv
181.867 68.6836 173.95 73.4121 171.655 73.4121 cv
171.396 73.4121 171.209 73.3516 171.113 73.2188 cv
170.357 72.1738 167.767 72.1777 166.521 71.9004 cv
166.87 71.627 167.362 71.5664 167.911 71.5664 cv
168.343 71.5664 168.809 71.6035 169.268 71.6035 cv
169.867 71.6035 170.455 71.54 170.936 71.2461 cv
171.814 69.9316 li
171.067 68.7813 170.382 67.5645 169.489 66.5225 cv
168.446 65.3047 166.875 64.501 166.115 63.0605 cv
166.166 63.0557 166.217 63.0537 166.268 63.0537 cv
167.882 63.0537 169.713 65.2324 171.465 65.2324 cv
171.651 65.2324 171.837 65.208 172.021 65.1533 cv
173.479 64.7197 172.729 63.1973 172.166 62.4209 cv
172.223 62.4082 172.281 62.4023 172.34 62.4023 cv
172.839 62.4023 173.408 62.834 174.005 63.3809 cv
177.14 64.541 li
178.014 60.7217 li
178.014 60.7217 li
cp
1 .658824 .509804 rgb
f
210.82 69.6953 mo
210.82 70.3623 210.28 70.9033 209.613 70.9033 cv
208.945 70.9033 208.404 70.3623 208.404 69.6953 cv
208.404 69.0283 208.945 68.4873 209.613 68.4873 cv
210.28 68.4873 210.82 69.0283 210.82 69.6953 cv
cp
.478431 .164706 .129412 rgb
f
210.42 69.6328 mo
210.42 70.1162 210.028 70.5078 209.545 70.5078 cv
209.062 70.5078 208.67 70.1162 208.67 69.6328 cv
208.67 69.1494 209.062 68.7578 209.545 68.7578 cv
210.028 68.7578 210.42 69.1494 210.42 69.6328 cv
cp
.670588 .227451 .176471 rgb
f
195.854 73.8906 mo
188.033 78.8174 179.983 83.3018 171.753 87.3271 cv
170.141 82.4658 167.588 77.4502 164.688 73.2012 cv
172.42 69.4258 179.983 65.2168 187.336 60.5879 cv
190.677 64.5029 193.748 69.2236 195.854 73.8906 cv
cp
.498039 .513726 .54902 rgb
f
164.126 72.374 mo
163.929 72.5088 163.785 72.71 163.722 72.9443 cv
163.647 73.2246 163.699 73.5244 163.862 73.7637 cv
166.798 78.0664 169.263 82.9951 170.805 87.6426 cv
170.895 87.916 171.099 88.1367 171.365 88.248 cv
171.632 88.3604 171.934 88.3525 172.192 88.2256 cv
180.444 84.1895 188.585 79.6514 196.388 74.7363 cv
196.397 74.7314 196.408 74.7246 196.417 74.7178 cv
196.817 74.4453 196.967 73.9229 196.766 73.4795 cv
194.678 68.8516 191.599 64.043 188.097 59.9395 cv
187.774 59.5605 187.224 59.4775 186.803 59.7432 cv
179.534 64.3174 171.946 68.5439 164.25 72.3027 cv
164.207 72.3223 164.166 72.3467 164.126 72.374 cv
164.126 72.374 li
cp
164.688 73.2012 mo
172.42 69.4258 179.983 65.2168 187.336 60.5879 cv
190.677 64.5029 193.748 69.2236 195.854 73.8906 cv
188.033 78.8174 179.983 83.3018 171.753 87.3271 cv
170.141 82.4658 167.588 77.4502 164.688 73.2012 cv
164.688 73.2012 li
cp
.227451 .231373 .25098 rgb
f
192.271 67.3018 mo
190.765 64.9248 189.09 62.6445 187.336 60.5879 cv
179.983 65.2168 172.42 69.4258 164.688 73.2012 cv
166.213 75.4346 167.635 77.8809 168.882 80.4053 cv
176.847 76.4189 175.759 68.5283 192.271 67.3018 cv
cp
.627451 .643137 .690196 rgb
f
168.891 73.2744 mo
169.266 73.8271 169.123 74.5781 168.571 74.9531 cv
168.02 75.3291 167.269 75.1855 166.894 74.6338 cv
166.518 74.082 166.66 73.332 167.213 72.9551 cv
167.764 72.5811 168.516 72.7246 168.891 73.2744 cv
cp
.227451 .231373 .25098 rgb
f
174.118 83.1367 mo
174.493 83.6885 174.351 84.4395 173.799 84.8145 cv
173.247 85.1904 172.495 85.0469 172.12 84.4951 cv
171.745 83.9443 171.889 83.1924 172.439 82.8174 cv
172.991 82.4414 173.742 82.5859 174.118 83.1367 cv
cp
f
187.982 62.4043 mo
188.358 62.9561 188.216 63.707 187.663 64.082 cv
187.112 64.458 186.36 64.3145 185.985 63.7627 cv
185.61 63.2119 185.754 62.46 186.305 62.085 cv
186.856 61.709 187.607 61.8535 187.982 62.4043 cv
cp
f
187.616 62.5781 mo
187.889 62.9766 187.785 63.5205 187.385 63.7939 cv
186.985 64.0654 186.441 63.9609 186.17 63.5615 cv
185.898 63.1621 186.002 62.6191 186.401 62.3457 cv
186.801 62.0742 187.345 62.1787 187.616 62.5781 cv
cp
.627451 .643137 .690196 rgb
f
193.571 72.2852 mo
193.945 72.8359 193.804 73.5879 193.252 73.9639 cv
192.7 74.3389 191.948 74.1953 191.573 73.6445 cv
191.197 73.0928 191.341 72.3408 191.893 71.9658 cv
192.444 71.5898 193.195 71.7334 193.571 72.2852 cv
cp
.227451 .231373 .25098 rgb
f
193.204 72.458 mo
193.477 72.8584 193.373 73.4023 192.974 73.6738 cv
192.573 73.9453 192.029 73.8428 191.758 73.4424 cv
191.485 73.043 191.589 72.499 191.989 72.2275 cv
192.389 71.9561 192.933 72.0586 193.204 72.458 cv
cp
.627451 .643137 .690196 rgb
f
183.674 77.96 mo
184.048 78.5107 183.906 79.2617 183.354 79.6377 cv
182.803 80.0127 182.051 79.8691 181.676 79.3184 cv
181.3 78.7666 181.443 78.0156 181.995 77.6406 cv
182.547 77.2646 183.298 77.4082 183.674 77.96 cv
cp
.227451 .231373 .25098 rgb
f
183.307 78.1328 mo
183.579 78.5322 183.476 79.0771 183.076 79.3486 cv
182.676 79.6201 182.132 79.5176 181.859 79.1172 cv
181.588 78.7178 181.691 78.1738 182.092 77.9014 cv
182.491 77.6289 183.035 77.7334 183.307 78.1328 cv
cp
.627451 .643137 .690196 rgb
f
178.458 68.0146 mo
178.833 68.5664 178.69 69.3164 178.139 69.6924 cv
177.587 70.0674 176.835 69.9248 176.461 69.373 cv
176.085 68.8213 176.228 68.0703 176.78 67.6953 cv
177.331 67.3193 178.082 67.4629 178.458 68.0146 cv
cp
.227451 .231373 .25098 rgb
f
149.604 69.8496 mo
149.443 69.8496 149.282 69.8887 149.136 69.9658 cv
148.836 70.125 148.637 70.4258 148.608 70.7646 cv
148.509 71.9316 148.811 72.9854 149.104 74.0049 cv
149.274 74.6016 149.437 75.166 149.506 75.7168 cv
149.626 76.6729 149.611 77.6514 149.596 78.6865 cv
149.594 78.8145 149.593 78.9434 149.591 79.0703 cv
149.055 79.3145 li
148.667 79.2158 148.208 78.8711 147.763 78.5371 cv
147.07 78.0176 146.355 77.4805 145.473 77.4805 cv
145.409 77.4805 145.345 77.4834 145.281 77.4893 cv
144.901 77.5254 144.575 77.7734 144.439 78.1289 cv
144.304 78.4854 144.383 78.8877 144.642 79.166 cv
144.893 79.4365 145.214 79.7236 145.554 80.0283 cv
146.168 80.5791 147.312 81.6025 147.337 82.1396 cv
147.351 82.4199 147.36 82.6426 145.688 82.7236 cv
145.424 82.7373 li
144.887 82.7676 144.471 83.2168 144.48 83.7539 cv
144.492 84.3828 144.667 84.9297 144.82 85.4121 cv
144.977 85.9014 145.111 86.3242 145.087 86.7988 cv
145.074 87.0576 145.056 87.3125 145.038 87.5664 cv
144.99 88.2275 144.941 88.9102 144.984 89.6406 cv
145.007 90.0254 145.248 90.3633 145.605 90.5078 cv
145.728 90.5576 145.855 90.582 145.982 90.582 cv
146.228 90.582 146.469 90.4922 146.656 90.3213 cv
147.147 89.8691 li
148.29 88.8145 149.585 87.6182 150.908 86.9971 cv
151.148 86.8838 151.286 86.8672 151.347 86.8672 cv
151.512 86.8672 151.705 87.1553 151.96 87.5615 cv
152.317 88.1318 152.857 88.9932 153.911 88.9932 cv
154.098 88.9932 154.29 88.9639 154.482 88.9053 cv
154.884 88.7842 155.167 88.4248 155.19 88.0049 cv
155.252 86.9355 155.415 86.7021 155.444 86.6689 cv
155.445 86.6689 155.445 86.6689 155.446 86.6689 cv
155.456 86.6689 155.501 86.6582 155.592 86.6582 cv
155.95 86.6582 156.527 86.8154 156.93 86.9336 cv
157.441 87.083 157.93 87.1572 158.402 87.2295 cv
159.092 87.335 159.687 87.4248 160.25 87.7246 cv
160.42 87.8145 160.606 87.9502 160.804 88.0938 cv
161.33 88.4756 161.984 88.9502 162.869 88.9502 cv
162.914 88.9502 162.959 88.9492 163.004 88.9463 cv
163.303 88.9297 163.578 88.7803 163.755 88.5391 cv
163.932 88.2979 163.991 87.9893 163.917 87.7002 cv
163.699 86.8525 163.084 86.1729 162.589 85.627 cv
162.493 85.5225 162.4 85.4199 162.314 85.3203 cv
162.084 85.0518 161.703 84.7461 161.262 84.3906 cv
160.926 84.1201 160.339 83.6475 160.1 83.375 cv
160.292 83.1338 160.908 82.752 161.293 82.5137 cv
162.281 81.9014 163.397 81.21 163.556 80.0469 cv
163.566 79.9873 163.573 79.9248 163.573 79.8613 cv
163.573 79.3086 163.128 78.8613 162.575 78.8613 cv
162.57 78.8613 li
162.545 78.8613 162.52 78.8623 162.495 78.8643 cv
162.096 78.8906 161.703 78.9365 161.315 78.9824 cv
160.798 79.0439 160.309 79.1016 159.85 79.1016 cv
158.881 79.1016 158.22 78.832 157.566 78.1719 cv
157.264 77.8672 157.029 76.7939 156.858 76.0098 cv
156.535 74.5273 156.229 73.126 155.102 72.6787 cv
154.982 72.6318 154.857 72.6084 154.732 72.6084 cv
154.526 72.6084 154.323 72.6719 154.15 72.7949 cv
153.874 72.9932 153.717 73.3174 153.733 73.6572 cv
153.765 74.2891 153.654 74.7266 153.568 74.8848 cv
153.553 74.8809 153.532 74.876 153.509 74.8691 cv
152.931 74.6875 152.496 73.71 152.076 72.7646 cv
151.588 71.667 151.083 70.5313 150.093 69.9775 cv
149.941 69.8926 149.773 69.8496 149.604 69.8496 cv
149.604 69.8496 li
cp
162.57 79.8613 mo
162.575 79.8613 li
162.57 79.8613 li
cp
.929412 .435294 .372549 rgb
f
150.398 80.5293 mo
150.398 79.1582 150.481 77.7646 150.311 76.4043 cv
150.11 74.8135 149.278 73.2852 149.417 71.6621 cv
150.944 72.5176 151.159 76.0518 153.023 76.6357 cv
154.402 77.0664 154.592 75.3799 154.545 74.4209 cv
155.736 74.8936 155.585 78.5957 156.668 79.6885 cv
158.46 81.498 160.34 80.8066 162.383 80.6738 cv
162.251 82.1846 158.564 82.9141 158.891 84.4043 cv
159.025 85.0234 160.898 86.2383 161.37 86.7861 cv
161.86 87.3545 162.569 88.0146 162.761 88.7607 cv
161.891 88.8096 161.266 88.043 160.532 87.6543 cv
159.38 87.042 158.199 87.1299 157.023 86.7861 cv
154.829 86.1436 154.144 86.3369 154.005 88.7607 cv
152.446 89.2324 152.677 85.7852 150.295 86.9043 cv
148.629 87.6875 147.092 89.2119 145.795 90.3945 cv
145.74 89.459 145.853 88.582 145.898 87.6611 cv
145.959 86.4531 145.313 85.6035 145.293 84.5479 cv
146.44 84.4824 148.225 84.5215 148.148 82.9043 cv
148.087 81.6152 146.033 80.208 145.187 79.2979 cv
146.365 79.1875 147.565 81.1104 149.023 81.1543 cv
150.398 80.5293 li
cp
.478431 .164706 .129412 rgb
f
161.37 86.7861 mo
160.898 86.2383 159.025 85.0234 158.891 84.4043 cv
158.564 82.9141 162.251 82.1846 162.383 80.6738 cv
160.34 80.8066 158.46 81.498 156.668 79.6885 cv
155.585 78.5957 155.736 74.8936 154.545 74.4209 cv
154.592 75.3799 154.402 77.0664 153.023 76.6357 cv
151.159 76.0518 150.944 72.5176 149.417 71.6621 cv
149.278 73.2852 150.11 74.8135 150.311 76.4043 cv
150.43 77.3486 150.424 78.3086 150.411 79.2666 cv
155.168 80.2354 158.788 83.374 159.416 87.248 cv
159.79 87.3379 160.163 87.458 160.532 87.6543 cv
161.266 88.043 161.891 88.8096 162.761 88.7607 cv
162.569 88.0146 161.86 87.3545 161.37 86.7861 cv
cp
.227451 .231373 .25098 rgb
f
141.262 59.6084 mo
141.001 59.6084 140.746 59.71 140.556 59.8994 cv
140.348 60.1074 140.132 60.3652 139.903 60.6377 cv
139.512 61.1045 138.784 61.9746 138.407 62.0215 cv
138.377 62.0254 138.348 62.0273 138.32 62.0273 cv
138.279 62.0273 138.262 62.0225 138.262 62.0225 cv
138.165 61.915 138.09 61.3535 138.053 61.083 cv
138.025 60.8877 li
137.954 60.3916 137.528 60.0313 137.037 60.0313 cv
137.004 60.0313 136.971 60.0332 136.938 60.0361 cv
136.417 60.0879 135.979 60.2539 135.592 60.4014 cv
135.217 60.5439 134.894 60.667 134.528 60.6797 cv
134.318 60.6875 134.112 60.6904 133.907 60.6943 cv
133.369 60.7031 132.812 60.7119 132.218 60.793 cv
131.827 60.8467 131.504 61.126 131.394 61.5049 cv
131.283 61.8838 131.406 62.293 131.708 62.5479 cv
132.105 62.8809 li
133.009 63.6348 134.032 64.4893 134.588 65.3779 cv
134.617 65.4258 134.637 65.4629 134.649 65.4912 cv
134.558 65.5781 134.373 65.7041 134.254 65.7861 cv
133.793 66.1006 132.712 66.8379 133.241 68.0781 cv
133.399 68.4473 133.762 68.6855 134.161 68.6855 cv
134.171 68.6855 134.181 68.6855 134.19 68.6855 cv
134.279 68.6826 134.364 68.6816 134.445 68.6816 cv
134.792 68.6816 134.989 68.707 135.096 68.7295 cv
135.092 68.8535 135.063 69.0928 134.959 69.5381 cv
134.864 69.9443 134.831 70.335 134.802 70.6787 cv
134.761 71.1602 134.726 71.5752 134.541 71.958 cv
134.487 72.0703 134.395 72.208 134.297 72.3545 cv
133.993 72.8057 133.577 73.4229 133.693 74.2373 cv
133.735 74.5293 133.903 74.7871 134.153 74.9434 cv
134.313 75.0439 134.498 75.0957 134.684 75.0957 cv
134.786 75.0957 134.889 75.0801 134.988 75.0479 cv
135.692 74.8232 136.221 74.3105 136.646 73.8984 cv
136.723 73.8232 136.798 73.75 136.871 73.6826 cv
137.088 73.4824 137.317 73.1768 137.583 72.8223 cv
137.75 72.5996 138.029 72.2285 138.224 72.0186 cv
138.405 72.1758 138.67 72.502 138.842 72.7148 cv
139.408 73.416 140.114 74.2881 141.178 74.2881 cv
141.47 74.2881 141.748 74.1602 141.938 73.9395 cv
142.128 73.7178 142.213 73.4238 142.168 73.1357 cv
142.122 72.8359 142.06 72.543 141.997 72.2539 cv
141.744 71.0732 141.654 70.4717 142.359 69.7256 cv
142.553 69.5205 143.449 69.2656 143.985 69.1133 cv
145.166 68.7783 146.283 68.4609 146.659 67.5615 cv
146.72 67.4336 146.754 67.29 146.754 67.1387 cv
146.754 66.5869 146.309 66.1396 145.757 66.1387 cv
145.755 66.1387 145.753 66.1387 145.751 66.1387 cv
145.739 66.1387 145.727 66.1387 145.715 66.1396 cv
145.68 66.1406 145.646 66.1436 145.611 66.1484 cv
145.508 66.1611 145.353 66.1758 145.182 66.1758 cv
145.126 66.1758 145.074 66.1738 145.028 66.1709 cv
145.328 65.8975 145.915 65.6025 146.339 65.3896 cv
147.198 64.959 148.086 64.5137 148.523 63.7266 cv
148.617 63.5742 148.672 63.3945 148.672 63.2031 cv
148.672 62.6504 148.227 62.2031 147.674 62.2031 cv
147.669 62.2031 li
147.668 62.2031 147.668 62.2031 147.667 62.2031 cv
147.667 62.2031 li
147.666 62.2031 147.665 62.2031 147.664 62.2031 cv
147.664 62.2031 li
147.664 62.2031 147.664 62.2031 147.663 62.2031 cv
146.699 62.208 145.858 62.501 145.046 62.7852 cv
144.579 62.9482 144.138 63.1025 143.706 63.1875 cv
142.952 63.3369 142.167 63.3896 141.337 63.4473 cv
141.264 63.4521 141.19 63.457 141.117 63.4619 cv
141.031 63.3203 li
141.12 63.0938 141.343 62.7744 141.503 62.5459 cv
141.923 61.9424 142.4 61.2588 142.245 60.4258 cv
142.177 60.0605 141.913 59.7637 141.559 59.6533 cv
141.461 59.623 141.361 59.6084 141.262 59.6084 cv
141.262 59.6084 li
cp
144.751 68.1387 mo
144.756 68.1387 li
144.751 68.1387 li
cp
146.669 64.2031 mo
146.674 64.2031 li
146.669 64.2031 li
cp
.929412 .435294 .372549 rgb
f
140.329 64.9209 mo
141.435 64.8301 142.563 64.7988 143.649 64.585 cv
144.919 64.334 146.102 63.625 147.418 63.6191 cv
146.82 64.7939 143.984 65.1826 143.624 66.5859 cv
143.36 67.624 144.73 67.6523 145.5 67.5547 cv
145.19 68.458 142.197 68.5908 141.382 69.4551 cv
140.029 70.8857 140.699 72.2168 140.929 73.7041 cv
139.703 73.707 138.895 71.0557 137.714 71.3926 cv
137.222 71.5322 136.354 72.9824 135.941 73.3643 cv
135.513 73.7607 135.022 74.3232 134.433 74.5117 cv
134.342 73.8789 134.922 73.3701 135.191 72.8076 cv
135.616 71.9238 135.476 71.0654 135.682 70.1826 cv
136.068 68.5332 135.871 68.0449 133.91 68.1016 cv
133.437 66.9922 136.229 66.9346 135.185 65.2637 cv
134.454 64.0957 133.133 63.0713 132.103 62.2002 cv
132.854 62.0977 133.566 62.1221 134.313 62.0947 cv
135.289 62.0605 135.936 61.5313 136.785 61.4473 cv
136.906 62.2832 136.981 63.5918 138.28 63.4297 cv
139.315 63.2998 140.328 61.7041 141.011 61.0244 cv
141.17 61.8799 139.692 62.8848 139.743 63.9551 cv
140.329 64.9209 li
cp
.478431 .164706 .129412 rgb
f
147.418 63.6191 mo
146.102 63.625 144.919 64.334 143.649 64.585 cv
142.563 64.7988 141.435 64.8301 140.329 64.9209 cv
139.743 63.9551 li
139.692 62.8848 141.17 61.8799 141.011 61.0244 cv
140.328 61.7041 139.315 63.2998 138.28 63.4297 cv
136.981 63.5918 136.906 62.2832 136.785 61.4473 cv
136.021 61.5225 135.409 61.9414 134.585 62.0527 cv
137.64 63.8955 139.893 67.0254 140.654 70.7402 cv
140.761 70.3164 140.97 69.8906 141.382 69.4551 cv
142.197 68.5908 145.19 68.458 145.5 67.5547 cv
144.73 67.6523 143.36 67.624 143.624 66.5859 cv
143.984 65.1826 146.82 64.7939 147.418 63.6191 cv
cp
.227451 .231373 .25098 rgb
f
192.887 46.521 mo
191.911 48.8589 li
194.092 51.2393 li
189.636 50.5933 li
188.646 53.2964 li
187.986 50.1484 li
184.228 48.8784 li
187.029 47.3525 li
186.943 44.0908 li
189.74 48.4961 li
192.887 46.521 li
cp
.309804 .317647 .341176 rgb
f
194.316 35.7549 mo
191.365 34.0073 li
188.106 35.0532 li
189.602 31.1655 li
186.884 28.9023 li
190.333 29.9023 li
192.098 27.3188 li
193.326 30.3618 li
196.679 31.6367 li
191.932 32.2051 li
194.316 35.7549 li
cp
.227451 .231373 .25098 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.2
%%For: (Daniel) ()
%%Title: (SubmarineRed.eps)
%%CreationDate: 5/2/2015 11:37 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Blb4`Q7i)@&c*%5iWsnf+hD]nbc:BTNPOiQD0ZH2h;`j[-PR*u8JkC!/sgb9^]$CZjN4O(5Sc9lTSk+R5ba@*bK7(SH1J;f
%VIrubPKih"o^#q7*XO8b7m[n7AP7:<o#576rFPT<qP&8a=Bf:nL8#_^<KqkmPSP%L1I!t8qRGBgIXcfi]Y:nCSXl@C?i51+qfT:e
%IC"51T<(N^B75)Pp<.,q\iTg.^,,SrI'_UuY*Wea+'4dR1G5V&]qI+Zm/k!*(#WjW[r9"[#XtrKQ^?&MW#K[Tm"_dAkp)mdY0[.6
%qpi[))CdrNH+j1F0C[Q7f>^hhHMqQ#^:N*iD4r`K**f,RLSO\Ah<O:tdQMXcmt-mm?];4Hs)7Pc-S2g$D]*e]TW@"o]b=BonCJ6^
%EcPC]'u#tY2:CnQhg[l2B1R6!.7Un%O!T9AZlX`DT2QtS"Fj[+r,fN]>gqb*?&`9q8fM.5gL0[<Q6Qi5e4,FO/B"JdAu*S$hXI(U
%HIr2PXFL';kV)8PanhN?EH6O(HLi*"Q7U9O#g(%M>b/%Ds0g`g_JgABX5*o+F*=iQL$lp`02GY+V+L.>J%js`ebT+8,uE^VknT6Y
%T1;o?5Pt0>j/^_6CSWl)&,GYBHMcaUhl3;,&?ganCDb5-`_W&G:QU=1&p5sL^.S;eIbWII'`L6,hfn7QpRCQBO(8RgWCk']q:5<'
%,grNSUWWO*>o6YbDs`%bV9n\SbOsFF?-"t2D\<C1`nu0)cX(E`AnN3*!\X!0F:G>PZ9LL!c_&39oGLVJonbat"`M+<K.h&L=RjQN
%hn%.62rC66_1uBgT3ZmAHMd-sjbqG4-YIALUE@f`a)L5*]=7gH4pKa@r7fclLYp[Pit'o;(>eWFYHKjNlg\`]l&-MGK5R9a8+'=N
%3k^6^n*k7fn&*9N-4qbIV18;rZMO38]fl5,<u7p\h`dX&>b/a0MsWa\Ve;XQUXf'KoUi2U:OO;SrTS(/3Zl`SrX!;PUT_.nlgrZQ
%Q^`Jb5-@Xp(g_(Y$"$rRYkEAEd*a9Y:APUZP<\HG)j68.4_f-8!Vl#-HZB^5T5<DWiXB.1hmZ(63o]Sr;uQ#h5JB9Bh->=9Q)>qe
%FjHAjY\q51\gF%V?$mLfG]n6KCB!A\!cIe?fj:aU)m'=YiP)d&%gk7>4_2,a4ZS<gbZ:X>S+l*H:EML8>u18HJ,X>lmX3ZIn+WQZ
%A"'F#VnW/;rb\u&m<iC?CO>\-*;4TG/VqU_1!T2!X;2]Nqt7r)o!_8"Q,)U&_8@(TaVSFZjW!.P.6g$X\t7B'Lmr;2>J<.*SSUQW
%r#,;+qJ:M=Fo6[ZILC1/%F=5d7-SATe!$+Orp/[(@Vfmq.o!4iU-Njq(mhY1-,$;d;7TI1X%P`35YWeFH<'7A!!PZL5'o'hrS]tI
%^6k=VS^k'gCc\'3e\%EAq.'sgkDP%!W.fuL/h4B.M[<[q`>l&BZ@GS#2-f7kcp`Fk^4<u[d_]Sjs7g;"QV%00q(qbOdjr+2<3N$'
%B^Sd6P6<uYIg^Yt@L:Y<Icp>bLN_W6V-hj&R]hTp@,Wk[Q&G4p$htfjVWa1^$+Pj]0ji@_'tU$jHqM-e\n\f+\h&dS?6ro2?d(B4
%MCqJeTW=FrZR&n[Jb,<,RF3sDOiOMS3P`hb<R14FAe=rCE(RPB>fCdkf4$db?_'ri'=qqgWi:]q9O[Sn(X4GdM;R=-n6N%cnD=:>
%-%%Vk=&@KOC7WfQ1TGF5ri`!GH4#lo/Z/r)oi/f3RYo3"?58Y-r_@(P&H&*7s-$#;WT\gn.Hso0%/d,^T\fg#lc%$`0U)t?S^MF^
%=7g:nP("/Eb.>CGC'hW_)"]9Uf(<`."2AED.p4=r"]C-U$Quu?9_BA0A7d3t[anLKCFh(WD5C65fRcY7!J<OjhhcnSR`ZHL7[DFk
%)?mm0JJs(Z(Zc&PGZIS^WiSit)YbmW?-6'1U+FFg#\gH>0P(o'kuq;.2#\mTFJ0'b0I2ODR]&ip,#hT/oh$a2KG&<^`!>?YPnUZ8
%%81rQ/>\(o8LY#RG(?48g<p6EphT,tWAS$B<g(Hqe=p.;j[aO:f*"RFXst8G9-X[@9B2r*pf.KW*f_8$h@rEi`t*)HHpQq'r,;ep
%(ug.9)^N'&NF;GM"cXZ6&p=o"@K_W8>U;!b*(M+q(sBM/#2j/5)GNYql,OH-'ZY<q-bufu(fsAj$9,i3.NBEHgLV5X.?*^`e^uj+
%E/?Na&QT'oYo@7Z8heOD?beomLVl[C%pE2Q?@WL3@M:SWE#EI+:)$s-+SGn1H4&9"TE0ZQ`j*>A5S\82rpd<e4:/P0Eh>A^RL8fs
%EYILSF'.cdn:hQV0!8hlWN[R\4jjZ?`\cf-#4&<rd`S$KC8*QgCM*jX?blkZ=sFDW)cL&Z-*.D=F#g'W/857nSh6H[i$pEN$7Oc[
%qLiG`l!,Etdk'Dse3HWl7UIUd,<pCI%c_D_\rj-1b^gjUA<SeM9S#YQRR1Koe^CDV:I4$T/EV'!i,[igC]po`blc1@V2L-=abVQ<
%Q_[82XrHQ%s'3!F<N+uA40DjRXelH(Q^YSBE@l?=o?I`aE!H91[BAbSCU3!#dgKoLn#@Cph/Sjc$Yh5:>^FGeG$L%35b%8H_UUO!
%%JoS#$6t5a[fBD2D\4ga$>:0bKE:@,Sl$.Y:P#O.[MMKr`5hC<&SEb**T1\2L_h5tT+Z@:".+Ts"3j9?Og'_)O-LtF/BSL5-Etcl
%0pn0qZ@jjj@ZeSF[0Bq?ldET6X@O7(Ll9PdeKS(#da/;`>mcrJrh)BS8@AO$!T#p`Kk:>m),>]90Oc:>20!b+JtN0?!C@ed`f+Hl
%!p(k)U;0M)$V#;FP0?AZMrJJ<np!X0).^Kf!\*&8U$TdrQB`V=?BL28OM%$5lpB6D8H^>iPMlLTdLZi/6IZl"VuQkERuqa"W0]o>
%!XBJ8TuKhn;_@2Y'lZbB6!XZE\ODlc2kM;<V45Rfbi0hjTF/#,dEG>`XO3QK)1spToAsS"*bJ$U=lL<>oAaFq).l?n=fM@Y!!d['
%,/RTP0Fq)H#<W)<N.)L2*lm)r\JoOQrI2C,@B>f(SD>UJ0Z(.M[N^[2)qEZ'kfXbbMjD.0"NVkmA64@l?st6pcm,H]=jB=b>QU*$
%5jA]`gQHB6MQMpW8@lcV$-Ptlp8gOYTiQ"q)6%"Q-_uNM<AIn_>8(hBPTW%b\$&*PT9<ae2?D';@c<u+1+e\_LJ&q[%%!V;ZG%Vl
%cE+g1cCr!/dWh[cohJ'8X\&,d-DWUqBRp`fTa$JP04%27Ji)C3>g>U&Zc&HO3+F6la_o:*?:gJ1g.,j0Lq07'[ik'U7[i.d1qSXP
%@RIK&8[FVKAr!tRN-2b$F?@Z,JCEgpVUs(E?3`M3DunGsPh5+i1X>YRS*4l*FZD/8:g]UcF[jSu_:OWHQ5f1Z02a?XQ^/mUE@je/
%ji$/1V4HY`TZP%BbXgIGU:2CT8sUJG$Ok2]a6+0knf-Zhh.6NDe/11%"91K0NM>qQhg=%9ZJE8o@BL@FYD<5_##hhR]WU0@U^XHU
%Z82@NTBYF?@_H-tI;-s/Nk>hR;Vts36XV5J58f&je3pr?`^nHT,4dmP-<Os5#cG:j-4iDn#cG:j-;X`G&PdN^9u*'u&Pgr9-GM*f
%_)&]9p?su*(Ca,=38ri8$/*)SJ?dtZ-Dq:%%DlaE:N/PDEAQcn5o2S)Q9kOoegK^6jSVk#-oD<(]F6ge$jf[%_QtEel7OHLpbD,K
%Ra]741$=F'/&40D?s0_OauQX^?_dk2Mp(\Qr!>5fc6_U6_iJe$1T6EuEpQJ(Z7Y)2^?!JJhFK/&P^EM*"J^40?b>ZrE/EnaQS4Zq
%g.U7@l/i.,jsB,sQau&Vq$].7CTcsVX7!Ql`qXFl__o]BVAdu_;qnr-jTa?."5jI#!Ba.SS`YOe%$!8+ma*j.*1%d3!D:\nnVW(C
%i-7`5I)@`.W(G[2daE-4"("W$Elih3No8DFc%\X.C7S;nS4QSa=YX?-cn.U?0\ZF-3's+8a@m2*l=m9*-I1F;(:F$FUD*T4bj.[A
%@m;2")8($"7a;D)oO(aW;^U0d,K\VlYFO>2<)Bc[\qujh>P8K,L^r*;T[Vf^E/H,q%Z5gJ<?Y3_=pd]uF@:n=s4])_2>cS"/b&0<
%`GI1$[=?e-LO6NapPW2f22Ylf/fJ3?c;S8u'kFr$3C6T,KkACU;e1k&A;SRarc5F`fNhmMBlA!r[5DGI]!J_8[]i0hS'T`mWY2?^
%g/K13F.4YeW"OHWBh`0I'R=&$p:m?28!?/B"E1gAKf`)3$,0O)#@@UPCean2kPnT!s1Juj7LU4^hUjT.@LMmY]-UJ+1,D=]MT@ID
%BU^-oFX,>sUMYT'Pfk?7(8Gd8ElnQa;+^C3`o#R:7,`agdZ23OG'n<]%b)mKO./(;E`6#6l4BGc)Y#i*b*Z,O=A=DdAVelni(dQu
%e8@R74*UMqSbn7@]K3!P,lQA:@2aTQgfop9.T/KbT8BFA^JP=$<$O/Pid*KC3X$ji#)<S$bY,*?UKVD7j+9]"2.!3%?*=J#;BFl1
%)\g\sinEXVZ>=p<4T!M_=KjgDc%+:Da;'2*q17sSFhap>46gaappk^C.e\>!9f_q7IY'U&<;BdU%gkG<fdld=\I3-t9k_]>q&*ZJ
%>jU=dnWtl2cS9kbn!At5n5t4(&HY3BKJJA5dR4e6WERRH8$%9>1TX[KS,qLl%)IU$>#?@]kE<cMAhYRQB,!eq-5;Y"M.[2UB]e2B
%+0kS-c\_$@afCIl\F\l.O.MF>%RrG"F[7@aeke$hGNA<.iqT0kZf`C+!NOs.%ZPL<_XV>>]?rFtU=Yj/fbK3t-O,fFo&rM<4\@&#
%].JAe/ZIPS_-HmXQ#=\j\KmHp7GM[=^r(t*4FZ8Ko,Of4*4pE7r/0P2;i^IEP[-6O!2BQ/UB:cN!:%!=A_J$i1H++[GN#b1+M*lS
%mhFdn*%&M=3\mq2-57?js5Ri\"+5uUiS=RFnJp,G`)jISi3hLXYhmG[/_o5F.,%FmEf->t:ZR2]o%\LB"X.s/NT4J:/lGYi]K)#c
%Gm^Pa8']?+:l#TYD!9sgG3E%Kk]iGSGNokV.E<B#G3mj,.Pu?H+f6gL9KJ((ROfp&%D)e!jTJ$GOc7IkhK]3Al4#kM18$EWoNXf*
%UBi>mrAZ$?*o'!:!T[KN,uL1L`.Y!]H-!5&jX\D"mdL`:+<jL6PQ79BOj0e9oJ$+[;h(Mb#G2G^;?cO^PT5/5fnLF.m+!N*<cQDL
%kPgAL^^3LJ4ln*O4rd]6mQ[E_TG-enF3[!nrNYBYZdWh*GRYSd8-_Zd2"riiB[#L!:CUtS0Z.S<qa_BhlO2\i)Mk)=q3iIFTK."^
%!6sjVXne.2q%QP6>gmR*_cj0V[Gj5H+R]l.2?duVEX\e1JOrAB1aa`*d\g>l)o]E5]$8="b[r<9TZ/s4m;#d&\hf62juX\"dVDpK
%]\[X>d<DND^=sC5Do_WcT$H%+`Bq2??%07gK.V\Ch>Gr[L.DjhM*lG-/@S3,Y8NA#q06'TCcH(HGrr1geaMO2^k"lNC_850'H(K7
%Y4IsMa<G9'G2s(ARq=`X-HNJQ.;MlQ(--0Vj.^XQMdia5gO3W.!=/>L?PZ@G)phf?h@=Xn+C_*&A"uGr#+[m_ZCbu#D\Y`pPftgZ
%F,uFj(8B(#BE9IaZasQ*c88pQ]Y3M\7d6!cCc0Lr=lS4BOL@"mP\*A*bgP`ZBGZgh3+q#Xbui/PloMN:$:7\:a^RV#$q?1lZ]_CE
%a]M,iPe<b]!9g6--ZF9j!74<8:Z1X^!RME?I0+We#_3uNknCS`,EQ%fNrVsV"BD#?1nlUSX[Of^/LL[iU)t0$88KIGDeCb4\40=%
%^c(4>a!_S#&C<k5.T@urc+s>:1nbgc1X&]085s148%4_\$kl(&BEE0!G`2pOH-&=lF@f9Lq<S*B*qG+#kngf;cptH7?pGS0kq#'6
%eD4+.0Vj=gl=AT2ON8;b$4%CR%%tb/I_,"bftuY.(ign[#XBVe"p-1YPin^$Q5r7C%q:2;K@KE'/Mpk_A6mXPP*WL"pph[A1c7qR
%#Y!C$^gFSc$3$+C9KFmgWrN9Z`oSD_N^PQS"WR;%lD$N34E3gN;&buAPBP!Yp3YuXB\n0N6R7^/FZ;TPe>_gD\_b/b3A5CX"c^tn
%>TQH)XpCi,&f@o#<p3W;OoV?e&uE,]/H`N8Z,@r@Me<GN-:&!?d1CAX!+Urp'a.0`'aX,E:9/>"`eF;\Og3kRB_WAY;sSl=L0Olq
%)#om)m4QL7f!KTXR4n!3AoktE^Eokk_SO#BSqU![>i,Zp?BR$"&*nU<#1>>Y@A^^"-cqgdUeY]/pU'Xf7MT=l&kt'=Xg*C`:peJu
%b,7)C3&D-EXN@7?`>sq#>3i-2f*j:8BT8de:[iC,iOHVL'UTF;[rr%.L8,O9'QSNgLn0[?@m]M-&/\Q6!ste`P/iMHaYgW'8qJB?
%Zsmb0_31=Ypf#T6JW_"=Jt^=C!\7><gsTd7EXtiqOS'e5(,YOH),XC&oV;Q,J&[Ll_m"U+JGpubq+CtPVn$i<\8oB5(jCgH9k-:3
%NbW64AUs)..!$EIV&,FHPhC+KK'*@n\_Cuh*TnKR>d=1='<E1H.Q7Ep'=dQ7!#Hk<KN,qr!%p`W#cu,Q!A6iX#W\P!!4WlN+[EdQ
%!aL\g`Kr7S!Z)N+EL26"XZ=sLH6idJ:.'p[$gCZ'QcUjXMkEP_=4OhGm$_J:ZuO@M77!hsFtFV6k)jT7ms4Zk#?9COUU!O*=4t)W
%G1h,&Ea1K)3kHa,8moVr0K\.\<Par!L(X)'k=95%T]:sW>PK]B8HgJ_);=</inVd"9Kl6WL)s6Q/)A+c*DkG"&$#[`T9.nh$]`./
%.7lr.RX;!DAuDAI.jA$p)2(fm#+a)QMie\hmq.db4lQM+L1I*$2gQ>;P[\HML-@7]-$$0/k^:k\PjVuEhVIQ=OUdo,mRZ=mjH9Xo
%6O)<PEh&;7%u3@=p_.[C2M3rLj>up.X!2U`W<=<IbLttGJgNO;BFBQ=#YbpZcnt6OVCO$YG.VCmXXl'L&2]4nCpEV:.p\h"LNjVD
%467_)p"leEL:oP5_70`nD\b6%<c$VO%=E*N2\#[uhTm%+%0lgT(VC3^/*,T!gj?`Pd^CTCegEpM@2Q[Ln#]#kc@[hn6:7&>WZo^k
%l^5+C/P&r^(0+**Ju'(0`#U,J636)?TXgJS1iW&C1L-(A:t*Wm6GFA3Q'*RcECepg@n!&nS#Pm@5JmHHR+A#$#a:(,n^,lP3f[pp
%VnAJP5P#hsfl\+\R+cYoYK76?&*X-1`n-3N](*(3(Xs;ZRH>5bdfZ>5;'(iWn6i2,PTIUT*Y?k\H7Ns;CG]*W1?eunJr@VX<^*0g
%31Q:B-K?F'DG/Vo"a5@Jg1hAmP"i$R8iBn][p'FcdVTP)?!B#J;$RN;A`Rq97*Jkc#S2]0?jNDC`]m7$';%#5RD9>-l-28*.`6FJ
%d<$=&Q7O!016W]MoZ8rC2E;(J-.@j8L4N7bg9$=L[41=(>(4-rH2$J\7+mU'(BGT8BKEK<&o.-I4=/<LK9"&D[*/I>2!dR,dJdl)
%o=afc[MR/0[(`:5Q!.SP#4kl_\&8+JZ:TSQ&<m@n9u.U5$m:ko95G_5rJX._AGcB3R#`7P;1<ipB@IFI-5<pT`G#BK/#\)di2G)g
%&5/p"5UW(^iUdRH\5u&-f1LSl6CQ#THl>W^[U==topEc0UE=H7R9(uT3[J*Q>q7R2]A=iPj)pRX%WWV*gnb$VX%*<V<pLt)PeUBd
%+e3m,+R\ZjgWLCW"6/_Y\oGlR>6Akh#MhB$a,[Bn*uTg1/cm#8aro2kXWL:G_^T$bKJ<!C+cHMcg18s=B#(A'^umHUe_=O*(g'ka
%NN0*TWbH]@"P=_3LUX1m\S?"Y[2^%aC"J4P,_>Y.D/[6Pjt&m%k2^6=bgFe<ik1pGI%WclS-=.D]'V\!]!"0.,2OQ-GXJ.7/Un%3
%d3!C%NsJ#Pl4?Z\\*%s^7(bIsHU>@],QP,8:NW)u4Wk-o42sK^=2fI#%ccnT"Q?=op5o+.]OGO#4Yd$f!1G&,d'Q:IW<ZjY8:nor
%cj>E5LN7csTK="#e5m4W<R,f/*n%Ir98!RW\<=O2h7L)c=BX8$XN!H+,SG?Mgb+ZF>n[gG)S<c=g`bfgXu\uB7#9d3oN1[OpW+qL
%'NcDO&UcAd6CL>f.*Ak=:J@4u$HSBR!gXOU"W`KqOc.R]M$J=)HP$:A'F1TDCc3GcL8n4h5Zd#j8<aj?'5QT`=?5k@MH)/.SiLJY
%-+GIO&#TI!3o`c`!dQE;a(57dqR,=39`W*m0;=N<!saSr1ej]co<<]!mh-e'+gU83Zp+3HTsQ<IKjWO>n"YY!M(4f_[*atG$1UR7
%Y3Q&m_S<DobCgd>FE7r_aa#@%;K3C-676W+N&^juN5:]P>Hd,K%PaNoPh*(fe,;<s4l+rpMVJB,lNT4I]Pj4NNgqS1ER"LE1d71F
%joAXsqjsp:OJ?q&>V(^*,0*,I4!f2U&iXq5kpl2G-,ZHM#"5eg_n7\2F(PIJXN4_.(="++38RE&3(PhmRE7Jp?<@fDEQ6?p6*dsF
%G]H5-;3]X)#;rC/<"dR*OtD<P$o1*Wpdg0nTG/5tf'.i#o?BB35K,s"4(fWL>"(@CK0lUe6.LTSWu+.lJC#e$nc#c>.Z,>@KN9D5
%XpIJcd]47<ZItM`YHldre6"W'?[61`q3/EYnsi9EL&q.<>Vf]Q8+U?GeVjVX;*q4$dYK)*@uN=Xo(Z`:];0rle/2\bH0"SnA6aED
%4n8LODeg`Ul:A,o!KTf54dT!k1>\iQWqD_q7\'\ol%5X2*dopQM$dOW4WA?R3ln7*82QB$fni*A1eIug/O?*k*89HX'H4kb2+#TT
%!JK1BUX=su3*@?+)\5G=7#6Li9+q!D*BjqrG8e8rFeF.YkFS8.jVB#9h]gG*1r*+JXuMU3.E>ACVZoBSMoQ&_3eo&BZXIq$\M\/3
%`jk&BOed&c#"+NjAKes)gtfK9gk"=XoU/54][(T;3ut6c3d&H>s3%L9pH:Q-X6!BJjFVI4+<%"!Cb^$,>JJ@$&r]^]@%^njJq5C<
%W6XKYS-DpAKUbWj#\@gr![^<m5fuP('70gE,nQaqEJ?g)d]_C_:m8\aPPCZSpf-mDc9I[?IY[>Vc+j/oQc<+s=-6n@r2D1u.-QLF
%dU.ZUDub"%Y/benL<dmel&o`0"LkDQ?"pTmXh:Eo'6V7+Z@;gg^1Xh\ZY!G`f`9`Iq*Ggq0cg?[$`5rI"D(uB(UBWP<?19TIK!#7
%hiJ6"*9llnP%R:C7,WAn>XZ*^qK7&F-*s(sDN@pbEHNl9jNV?7F9!n\!46JB\WrCj;DNL)k$4K1Ml-r[>0[P`gPtCfE\;%&C75l3
%C(d\E1b7aJF6./^aZ8Ai\/Hb4WHVOt1^>=drL>[rQ6@2[:&/KL)#uHJ)UQQEn221=6VtUN`hk(2+H-Q1fK#!\M>9n\%&Ur_%:qF4
%!PDW`kUqpI#Gf=ega*+HG3-s7iV6)i.G86u;N_?KTe%rYA%^7Y6#"ft*<Z93%[l)ue'*HSbjlnA&Ff9759KNeP?Jd/+SsGl\SJra
%QHI.$!IZ)P6@lMA5L4oE6\9S]P=Z%Tb\[j`o'idr.b"nCl@oZmJ0EX5&HPcRN3u9n:0jNdSZj9)K21W,R#N(He-R2=iBo:(hIY7E
%+UU#k6&:8#NOM]>Prhgqi+dm\k?UoN_#G?->N/KC\,]Ml5](WtWuR1EH*T<j$spBJ"r#XT9rM_jiEU'YjGUrunl_EPd?L(n_<C8?
%:K%?Q2,>$JrFF;<9nErCm%.f9l7O;=2,h*r<VRjb+HC$^=H+17K?8E>JMtoS;)E`-kZ"qGVqLM[$74Xc&qolA`qS=%gC*)M"5UQs
%gZtc?K2p]c1:`-Bct5Y+<kJ_`IIel(3!,d\O-AFW2du>KaH`%PaYMheBni^'`.Id.=<SV!@^"8YH4^nOE?QA@P31.r"FNa%AHkst
%Q8G?DLk/,gR,N,HEO(N5`(2@]]O5_g,mkA7;Im)HH:#>`-V0aE+X'29fP(m?N[e9XLZk`0)m)i-JiW7MC&'6V:6D3Z9cK9Nhr1i1
%AXJN>+D'`[KQ=oY7"BC.)Eemi<1^V18T3k)D:;]&hZVF1.lmH'4ZXio]<0VQTJi1b'G4E9^[FKWmSn6$JI*\To=cj5VF)/chCb/_
%*OBAjGjJH@h.n,72a?aL#;VEQ$p.f,'Y)hQ%,)1BSa.<</\"%SnqSoK)X*f:g?p<KR*&0T$"8=N0poF,RoDKZ-Cb;Snj^U";4K9h
%A@.@n!#T\ms(3VD#R^&^')Q2Z1n[4ZS;4>)(F<s5=$`'E]`92-QcNQb<ES7*bp]dMN."<>mpui_;AK)&2#F*X$ZI&P^($Yja8!I\
%:OHKt+:P+umX5is%jYudeq.PZ]cn%TrjHO(9?b)ecb(pUY[>_%pl%l-)K]':.AU4l=@>#e3Mh"kHkn(sCENBh4C1qn),8f91hY^4
%s*s9\;pJ1XrtgN19<rb7OY86ZHO8gud>&M9Ag7#m&e>oV^uc>UT(BChRSPuLm&Mql+7,JiZ,QOSn\B9tk.pDt4>-/t%58>ZBcWc6
%FoW(Fn23T,D@A0j-aX2S@tWF*PJo"")jAU<;e6a&SDbDm*X%(/J.7lXbX']`-+731Jq@(o3+!/#?LUuM92;30H\b-jnKokVaa'6V
%M-L\']kiM\3GZb_+a$IK/U13MB#pVMff7O'.7R5S@E_VKo#T*j9GIa.CE,b]5>=.M-=f!/ntRUl?=SL$`^<XQW]F[V.67FXSGHA$
%aE1%e7KSXU$n6<ZAMc]G.a%^SAs@jH8Lm@Gjjg_!(@?K)Hk+RU3<q"qb4dZc/)Njfb)-at&KirY^5q]'OA]G!bk;X^TfrnL"-K&M
%-o'J3%nQPYADPo-hmMQq)Jj6DdRjO,+/4uCK[S0<@7.7S$!6O'(3PCj=ofkfmY$*&XNDA8l4+_TL5jo<,9Jh<OD7k\W&&\*,CHjK
%JCGT+b(</J1mjY,6]R9Vc7tJ%WAsJ!NI5Rf?eL8$)YpC&^8@#4flCm9;3%^rK<6E(in#hjI.l]rl^_A;^TD'%WpCR5R<l)L-<5'o
%"\e@j:TuHO?2I!pa/5"b(g&-sB3FdaX0F'q2J.1.[X5012.Rug>nkX/75(dTT=Ro>lp;.'#p!c27;%hIhkuc%oY2G?>Ni]mT>1>$
%PYmL$QIUUc#$:Uc/ZakM<GV2f/bE%@$h7FfQjW:O*^hfD.[$#Qo_=%\)5tZm$ghQF<@#Si;TVm%6tL8kMTSQV!V"j4mO\bJ4X\AX
%'FF,3@bJ7(R&5opP%,qW3arUrg&8r`N\(Nf#9#+qm%J)dN<L`5%n^>:j[6FPNtnV1&)'@Qd^@Fe@h!n?_QBhK('NW(L^IIeU9#i7
%(B]jDlVI\^-RkbFVj@5/4U=h[,p%m1\[$R@NZ"V?G2L^+=rr9U,h*"/*7e8Lio+!SZegJ3q0EHAnUm";WtF*AXu(X<[m-L3a-kaJ
%S6`3cpi^e;VfenU7fk16a)jhX>:-s]B#-X(C!U)(k&ZJ6W$Jf:iG-Zo6#!)S_ikV:VsspbL:'N<cT$ob"$--![1.,RR?'F\=W6<0
%LA-7F\&>o_BP>7#d.h;@2PsbCq0qAr8B9k!A"U'9jFkq[A<u:UQ4Rj&+OOf.W>T^@MD\tm-3Bh8'3Ogm;iEd5e"#\Sp>huEZQol8
%T.\3=^'O/K4P-S=m`PH<-_K*UT'sUq4Q4gMl,d;WpZX\7SQFqTE_[[@\TTa`4uCl$p5:3pE!0AJBFc8/Vn>qbk,Xo^'2k!04O1>-
%0f."GPA,Q;//WE5"Ok_q\+Te2a`%p<-GQ8<RS.&TS96X&VhEhuDHDAHSL'^76ZiBm#R?7aZ)1q_eq/*T`EagZ&g4g"-&)h<9"+`i
%"i]anG+)XuVX`tfb%F9sB_R;.F15Z_Y[g7s,ZER9"j2q+`iq8!Af"n#Haqk6&;1tGfR:_cl?IO/14Z<7o#b8+(i\qIoTsP6mjIWq
%L\n.?]I(6D+2\`ZE/NatZ(*I[F=]jTLIW3<pOp/LMNB1YqV;Q'q"=2H#_+]6@!N#/%>'9f=;Q&^<cnh*l"h0t,(uqmXW<X3q^4B]
%1%;J_G/S%6m`?_;E<MYNm%8B@7`XB+6U(Gi8tW8r+7;6YSmuO(%"02ek5g.Z5YpS*N$rf2mSmTsK(Fp9_>1VM\9*L"pZQ^[;"lC2
%8\h@X!O;&GC-8Rb)_gXCeb,\]?f@ZB?*r7]`jj3p9oU;198@31@=OiG`\\gm7?9/S)kfqFR&.+llO_cc;e4*tZn#:&K-goce7VQq
%IctV'e_?fkiY)W811g0Wc($gP+!-M@BX0^o8YISmG#9^9.3E(>BsgO7,3E`\:i&b3$0>'h-dlq&N[LASh7>?hkC8VJ9p_MGNg(B]
%)N8!.O'rl!C-5jMT=<B;?'YXCarhjC9A]_:6\<F2L5(Sc1!'@<1r%j*DlHUK55t&plMS,@=KC>^cekq7mmk,uNW-NC?ER/C^@#KE
%L^G'pfZKq/mTsCg`c),=\,s(3U/,PA$[O,?K1<$i(jWN9<RUTik[K"Nb*'c(I!$Z@gW3GSno]q><?nZG@nn)B3]>7N>?1Kl%4`O%
%>n>Yj>Eea;[bK?QouZD\(QAPqF%7[\V*N!!d<SPY"-=KZq@li,_C9sYjF.K13R[M/:7)@PqfTtK4"Vcc\u5]me3FLt*>1Q8Qqn0W
%DEOi'hh$*t2o[dPo:f0q)TRhDO1S/Lf@MD:WY1hN)JO,!YPn1PY-Ve8(2IQ5)[O(<6)3:q[2i)Q79?dr0L70[gfO&$OYOgb),gG/
%FH:m_FZuK_m@u`\I1fFB\m5MhVnkJBI3^%5KQKJ2@W!Y@#1?r[JL3)3mZaO]MViP%/`lp9A-ReF\lQgma>&+o/>UbcD4Yas1jpCn
%j5R*CSX5Oi5&GZp-IHs[/EiWH&XQfYq)#'j)ZEM-Du2Q>"CUkk/?+E[4cQm<!:sP61qqL+Q)nWS.qBXPJj8bP+8$IlJGP7DiFk_F
%f!,SX5dN%\masR.8Uek;0(<*b51]t0$h-1Mf#5cm3I%\G51]e\"kM8K]&.L,@$8X-4/ZT4Y*A'\lH$TiR7/jmR>Qm%%[Wp7NW,+"
%MOV$6-K\n"36lIgB1k0(@iC2]SEQsc-oDAT0NF5O]0_iA3ac_9T^\<'l><eRO%MCoCPC0siYAJl-2Dipj*^^Sh,!Q(k>\Xi7cA)I
%/QlUMPl'(OnGs1=;NjEJ2c9="M-<Ug.IKlg1Q[Bj9?4YO4nhuYG3CG#f=Du9f6L[IhLEuE_6ssUdJKr]WRp+)lbilEO3()cruV-R
%aS#W/>l\:\5S,q5q_hCA]?`gLU^VJ2U%J.NSDRTbI*G&BN/qX/SEII6j%)T.qg9V;JmS[LrR?,</!9_IqH:d_[XaBc!Pr85S$]gc
%SE:5nB+;rR#.-,j"G$2uAT+=QYV$=9"6FDn5sj)Ri7s8mlJ,((RIMYK@A^d2GrT9)_\h&EK`4lkV%`a_T1<SJ;bB7sasY:g9<NP\
%EOs])l,I(EmL7sn8a0\1+']nKYP2,`N?Ch$@U!A<XE6ruh`V.2P/AYff6dipY2X[MZ:$r5m.$^%FPMmmOD*cE0GV-bFP*'BUL!,M
%G,40W+*0IU#.^BgpgZV1ZIF![LZ6"re$+$7&,M[@0c,XJF1VnuF@_:3agu2aiKSMFCJ)T0GKI>C`QE7lAnO^"+O'qV*g3&UG+9r3
%N".r>f/1$9H;%W3kte*c'/-:=opquG5UBL#:F=>oOrR$VF-kj?,Bi/DCS"dF<,*=Lkl6FmQ[H9;8@j$,;J>6R8!.o^b&r9&],a>g
%^$,hOjAnd5F>s7dn^'OPkcZC,6^eUthOO-;0Apn%G'NClpJpZ/1aS):W]Gh8EM`GGg>gKf`RO-V7Z9'A62&[[J(m2s'Eq;fC,.WW
%r6<Zt&sOMiY?EF:D81=6[7Jj(H4cB#!!(uMnGfY2mQq/C)3YE:bHIDj_IJm[gnoV)O71nSXh+B?j_=a)`7[SK9sTTuhnYk%htPk2
%<7&Vt#(c='4=Ao)[d@]9JtbdbMjT95Y)hZ?-uQb1UZk5TW?17sLc!f&+u#!g/p7nKZ)@IGk5c[`(l9LmUKamtkZhk7A!_bWGkP$H
%qen2"]AF8B1U1`P)r8`Ph3EUUh'J%bQ"IN,MK_U,g<<LC`Zs8>JX\.UU2HV8A=s:!TFYXCMb/6]ED5n!L\#LP1(g19>p<j(?<>mL
%7"je0<iO;V-p9>tRD1UR,3&2iek$L:G_1pQW]ZQ&h[1&HbO<AT-5;co(l9N2Z9!df(/0S>;J$3)*Vo\uD#]s1rL9IMVQNQF[$j(!
%4*QHMM?5]"m^8rEHpg>ZP?dLL#u;/^)lR0XOAfJnE0PleJ%?>QH#e;Dm%=QDWbU\j"^1npn4@18=./.AOC[sB\U=;'7&5^rF>:Oj
%/njj3AKB,r7n>V';2D-4)pX-[@ja!RQmY=8[nb/9@*nBl&_"Od&n?Y@c:u2'\K33aKqN,$Y+reEnsPrd&af*f-0A.e,5+TTRd#.B
%%\@gF&e&lOEic^6M_Zo*-SO@d7KJ!Tqii;R$d*5M&:QN^,F4!;;RF-?@O0hd3P:n@fo]G'[LuVORSm$$5/>u2[bK1AmMuPB:M:-:
%P7EI\6g\CdD*4(#+sI?PE^KA#Ga.A/ZT)H\jSD?)`\)qa%Co8A^:=,Bq<P`g6\bJDfhZOqjbkp2\ccT.,Xn+_f1NuG@foF61bm@q
%5SMbt`&2-c=iFkfhs9ZA]#-s\C*>#11WE*p&gK&!e<QbV#;?.D^[CiUi/WF8VK8)BhqMZpGF7_nT#PdTPC5.<#EsQifa!^h0\H\p
%I5'=ZPC69H#P2c)M1HuXRWp<GrBKM=ED%Z6'U1b"6>.X7=Z<O//kU1`BD3"+DJ&4=WO'!h0#4[N`m1`(F>D'!*K8*Zm$KB;\[>@[
%CnaS3G'YEpcQD"d2!-!UN*Y-#r-9:XBcOcGoAtl1p%'<@q/qpB1Tf$g'A^46G#:l)PAi"*V\),f.V/I7B2a'/T]Ea/B4fEA1_n9@
%>Ij"0c*uuHo>rn2^;K4gdVZR(%B%ljrCRjI#2T"CVWeLI2s0srNum-qF3a%Nl-/+VZT+GEDa-HnKb&RRAi/WcXM[>"=`-NTZkFuH
%T3lQkatMt"o+`Dr?Sf0!c5C<85p,g2"a>!CN(6Q/0"mcNE8EP%fk8MZ3k7\TM:Qsn9tOsX[_'i%HC]emYB=p`/(CLZ2J,G^hu*?2
%D;-";#s/s4^ePP8a>[aUe&+;G#Gd)n&6P>s`,00So<DZ]d'#!]A"%Vipq2fQ14m0+LJ3\Eb)g_&MpKL)h]Y(Gcat$-A![>O,ss_-
%!a%9o&u\<n(?'ClRWXG7jf@JF;($J&:J&U!(<O;"GfgP+=qT.sRDYgJr?+U-csYoY1HK0$:Kq92/(01rr$l^hGHurb]!/!@/dT?U
%,n-jIB55d%\e?qNR^%+3L?Ha"^%,?\nXa+*O`-QBXgL`'/ksRb)=h#.ba.j2(Y"+>.P2GA*T`i-I)Z_(]]2^t2SEd/\,*Ygs,d")
%]"FHAn*1[db5fl##EH48k7)am4`IK..+[>:^(ZO7qfJ7^37c$OkgT8"3-57uH?SYpD%GH1O2St`,Sn`rnk)ID99eM*W6jXdY&R-a
%]j)%(1!mj('*Cu$U5<^`j/iBn`E3iIS\r8@m2_R4;iJ,aG@q"LDRk/q]=;@?*roqkWpZN;PW*RD@Hk^aF7\@-f.7k97GhE2c)&nE
%.M=[ujNC'?7^T;u?T]nfc\g>>9HX`4Ogu,mI-E@)1!#]8OLreC9!dDPn8HpX97Gd[Hocb-E)5Yr43VXO<WlnR$_P\\Vao+eX"o%`
%'MMI_61(IRT0>t9b]aZJ%)`8LZQ3`lMBjX&+pWfdNmT4?Y[jKhBb4kZMr8+OW)Rh1GtGVA'doMAe[o:a:ihNj)<\m^7@c8G8\#r'
%5$"5NLknVH>eea0&LQT6oC"6@;f!'rZ^_u1%RIEm:u(*33Z5uLom**VDaL4*LGANm5lN854KZHJX"*0\JW&5!>A6H11#*TFqD(\j
%TqNNs,Xb2`#;s*?P>#&X@>6HNVHHb;^k\HVU-L=pbSJpj5mA\-!']JnK1sAsn*NJ;]`GqcE.\lDp8#u$!l/N5$6c92#ao9aj[>DV
%U60V.5+fYRc9gNI4S;*(q1K+</JkPM'-[;WT-fdMTP16raA-\HcZ!VFTtj'7bu:.83QJ+=P#HCe'76p6b(/';h_RLA.6Gj)GYMEY
%dn+T1iJJRWD/u%FDP&2h&(IO<9h(^(UGH&mNcZ011gL=K*qGQC04Dl..5NBLSYaTpRl"VFg'ge&k4*("Y%_q(KXGqqPW>#P4&H7m
%4Po2;&2g[Jb(mfYf?tlL;GHOrhrh(F=t%TF+c?EO)+r-sAOYbn`4T2[c+(^7<Oj>ggcau6YP'BV&W`(TO/_QW"(kPTj<j<E_\*M&
%)*+qN;QuG<_H\.@)/ES'jLrV8I$<(HiBtn@A]>B8",+u@<p%`1'T))7%%m>XYgACTW==K?)M_5J#Y1@2&>Ne=Non>PVe:oG`i>F.
%.uY+G-P(H<)hi0gEe#CNd_\SA0r+0l6h/$5=q5Qf:U?"+HL-%^E!8BU3WN69F5D5Fh*XCC:&&??C.1Y-<t2rF(Z_TYp)tEXjGk@`
%PLDmIer]qPg&W-r"PAfmYT`:?)`T)Vi6WJ+9(4B7b,Ke0CrcaSI+A<<RX<sh@X^E!4/(+"*`\H*,qrr_.4.1f.V^FZT_nICW2L`h
%%TN:trM-]0GPA<(@8(qg_%u9X(fRc%@1FC;^o=]-d)-)JE%:6"6'(K]a0pf,/3FDj+f1mfO\e>H\Dqjne0OLq\1QJ:%eq4p5KJQ?
%6e(8:GH#PpO3$9Y8kQc>FBRQ]62am)\<!G)00$ib%'EDIl+%k0[eksQDFr[tjQoJUFtO1b(P\Ig_p3sEkJFHE@G&+Els(BN/e!Qs
%!Mr!,`'=t<:&P"4#&]-_aB\kVrT4T3aL1gD+2Bkn@@alJ!VY4OOS`F'fE0D)6lm\V(P'.7"Bk*\Jp#Z>E&si!YnsKu5YZZ8DL5`#
%Sol(g>tQaWo;"B,]&L%Z$_6o-9PV=]E%4!'[4]oRoFG!ce"u0USa0*ZlQu/203Q#"=%"-5)opU!Z^8=8hV6G4@GU8nC\fl<DdS-(
%2"<[E&&[\VfUH:dES!Xo'4%p%?OFW,\4/eCZ=V\n@$O=A08BJSK1M=P"IK>nfmdG5AK7F8Ti:BM#R:@On@AQn9$&:%Ns_&oYWU",
%%BA-)%Sc2XrgbFa7$(5g*_eU/`LlVY:SS63.jn]1ZY0KVo!WEqMh_6j7&u'pF%%pTSk&qlS?bo9h.\\dB@81lR^=?_G)):4F9'*%
%JR^]Ic3!YD,m_7PHWm_#at8$+b*m2G*3<-e<kl-A*@/hEYu4\&KNV$$=!7/He,e(]]`mhh5EBE>m%9/S[qTlW:>EH90Cgo@nkU'L
%EmU?%`lV$(M9rfq)*@)2H/2V;j0YBFF*H%GGT8#(83MdL=N0e:d(]_!2(7beXf*TOeWR.$F.046J0IGWOTukOLf&g?0p!f7%a>;J
%eoaeleHm@^.=eLBC(\:+8Af/6>LYjI86gLZd58_[.!hK%`nG&AH-fZHNAXKaark2Qk3[h\"i/cb"W4:c]5tPXQGI$`Cn]l8P'L5#
%UfPE!dB(U0gbloY4.p,d6fL/#A35<PSS'Rkb[1T"Rrq!;DE)VBC@$6.d^@H,"?Zmq[.DM<S\VL%\>!n'S0C7H$*L`)CdHaS8^FM)
%lqfB=;1c?1E*B]uPbHuiEN:@DgVA!gYG.pL<Qe,H\SQ$%_mtE;\V%f1K>Y6P_mtDHHLB_jS?@(.'*C&#p-!0$Y>d?L;UI>W[t@X"
%UuEL3#H9[R`BBKDq]Ugi8NPa!.b[XsBEucOJ2nZ)`rkIK^`3lPirO3`@#bK9nK08L3T*O8RM]^ITS^@WM*D^:\2u?Kok7/l:=dM5
%Y<)h,HU7NkCp+<8;qZMiV2B:m21U*(PckJIQTDEHd=`K_6eQi&[Pj@EVfa_YN>,%2g1:mF>FPAg%:kr]fBb>DGj#o_4+p)YO5'>Z
%.`Dff9rLr'W3l3b8'Yl!"=cj<@M>]iE9BCk1oCR4Vp2!$0NsZi;+aJX&g/IHigm!pV['5<iK=Z"\h*-HMe1_NU8QsXFXIEpn'&UG
%k@-9^]#!)(jV.9@=708)L4^eg^*I@R%^<C!0#aAdYFPbn[.mrd?S%`"9C>FJU<6efrg.5YoGfF.)-KjT`Nmb/@W9Y7Uu)VWHI$,S
%TS2-oJmHR@DIR0/AeoBQ8`IHJ\B>XT]-20$h%cc$0Ya+YG-SnB9C-,Je'<&[D2-_USDB%m4?GD@=(&%FL8f_(.3hN[A6mcH.ufNa
%##ffK*<G_Q(T4o]%DN:/r6Np4`VLS-,/8^Zb(LKB-+RQ!"iG($AUIMmS1H,bRGg8g($0pgM9r+?.C<]_e&O:KOek&[js2W;@V<CZ
%p7!\)M"@3:@[[!)4m=hNdY%!F0YusIoA3gBn$O<qm#9uuWQ/'fb"s=GI%<:I0Sk*4DD9,60ufYP1PNKW5)ccQTp-BfEOkBl`IQ(V
%b:,3g#Km.6$+\G;RHB_XaU[k[#B%Wn813pIciFAdacH^$gGdorN>XepUSL8PbdeSDq2Il\Z,TNO0C1-X1`VoPZ;h%FFdBB,qQ1o6
%hYr1O!WJ`kFUiVR*b9MUbHf6-pE%W;[KAJ"DKGW<3,T%1'#RA#KNoA4O:$S]qGRHO,`pa@.3S[?&C)U_q'^(UX)@)f\?-"08U>dt
%C1$;QO&8C;k49Hso.8JV&4/Q1jATml\7<+n/+3"tEMR86i\sT@m8ImM8[g]0kq<]&b?)YabpSkRFPNB8p/,9*4jHs9=,ifeIG/6Q
%P$7$qURGe)6m]B,6ZIknE7M1G/Y?$AO[#]%,i)3eY5.W<1J_qF@JJ$N(YW%$27esM01l/gq;%!RSBX.Q2;U][1QLeG49+`K_>eAZ
%OP:VW?`E;fOQiFc77MfZgH!AnaOWjOL>Ba9es3A@gMIi_9-1PVP;t`&;V[]#ED2Q-hlHOX0u5Y:X12N7A1?]j4Zf04`&a`OTD^C6
%QiPh`T7Aa8rtLV^LV5in?j3,ZGZNdkLM%tag$p;\7N(F$R"hm0^b%Fk92,gn'?QL+F@f;'Z>k`@<MW\h*Db-32tt0GGJpj%.d+ER
%)LH"f`b_hP;ku*gl=4aV*V-MZhG+1C&^8_k1\;PkF*MQ53P$F1e)u7Jjq096%FPmtXJ5s*PmR>$E,<k.j1\Q46:Wl6#mpAOk76oC
%6CUHGBoX`UMI89B4'BelbD#u^dP()?g*9:(7S:\B3m=\?FFou6H/Gjg=!d;X2Y>/\,c:<%L3P][mtQ7dXl)jqGHaW>l.gbbB6J7$
%FEPXl9gOR)2"km3GS;DA!],%_2N@k>hBX?7anSQ<YHr@&5^G+L7)Hf'_47q,Gj][fG.V*;+2\SL!f\,JGcPBP4'f)l$O\iKS8Q(\
%&%a(B4rr)+5fIp-bUmUg*a2P[Jp%DL?ktVsNWh9@[h5LjACKl`e[VnSVtkB%=d-b'!YpXA\6QHWk0"i><L8H1aCPZ?Ms;b!&/O^i
%Pc`eBAF6m[Fc\NGrfqI)IT9@%0Xt[G1dPLW&-8&?f[Q8qR!)J5bY^\aP]A=_Q0B(/Hdop#KRoK@cArIj>AEn1f2Y+^r@@)KKf)-I
%We11<V&0<$88%3O[60?0#tj'%Ha`nPI'^NACu6<TV&lW.PF!r:rC!8,pY#;AbKKSSp<TM[Ioou^Y.)1D_chKfDLICKX(Kc#N(_M`
%7m`0".HRKXJODpaZLo&j_-l<,>Rpu3iMU&=qu7,/rs)/G)<oO-U]:2Z@W_/RbCB?h5AsNu0e)._8$B.un[uN]J,<59NE!@RWoE'@
%Wp&9;Xm>\)S;O3K&VG`[khI4a74=9H^]S=Q6/.7pTb/%UG_le:">hN'URtRhM(ZiVJq[R#0o@I4DH0'YC,(;N2/iosBPERb)hgo$
%;E"(2YIa"p_KY5l8csK/A$W"(M<hCiT9^5gVtmO2lDcX(c'2^;pHfnm['GETY&$<$^5f9+(-%+pR5^gBBDZClI'TYIj(qeTIA)-o
%2S@9qj3sIW6Ve@QYQAZZVDk3g6E2(OriU&!ZY*j?i+HV4r2cB%.AIHKqT@k5@O`LGWUi0V6;Jd(l`[nbCsO!LTl`J22q,.+Z`FJX
%3oe]eMU'eAXi=BXIHKA.YlJhjDaLeUp=$=Tk+?fQ:&Ci"bGn]Xqe=`rq5<U$+(+6(Q;(5_c8J,f3\lT:L4Uj0.q=ILR@<!;<!Jge
%P29_K766;?TI%-c2AWBmTJjVnG=W;/%)d<0PO78_r_.KZK5Y)!IcgJ_g"d%E59o`C(AW#4mqFSOrh?/P1Z'cFqMW>lb^?m%9\H<3
%>1$HI4h5g4Wn&u3%M]GUe!#-&Xf76pC-4@H<B2XAX11CcDUs(L;:2"]pCnA53`4:sH$?R2T#u_Yh#>NE[kc?<;=\oHq/\UcBs6Lp
%,,nL^Y/Rn+>'8`5>9r#UDR2AdjnkruhV#/g\^q_dq_?=9WP8FLep/'OgY$&n\'@&sBKn4IXRWqJQg-`qCnn$*N5*&RZ$>LA82**X
%I!g3@/$s>h:!^!q5(pKKLl@3];#\GW@YA(=d8.NiHuXin;?O8[]QD0T&_PuKW!YtojiCIlNXZDd.sdHs'm0u'@Yh8`M]G7a`@\KN
%)Y4tPoK[kJ9mNMLUao+$'<&%jeQ\tU9(H)G:B384@e9cu7V#AYl"@*GP+4V!;.W29?t&<d,b^kToY6&X"pJ$)dtG@PUL.=o7k->?
%JKcR@JBDBX>(TdJL#urMri0*26_LP'OJJIRjftDdNN+8*_b/KBh!lo/]NGti$/sHP?I,eF=O5a!-Nsa_ZX:ss81WTJQsJaVA)*_3
%YVtdok?j0sqTh59`"C3P0Gs^#OI6<U;HZf)C(+J!8N@G;%#:p@/EL!aQ0.YkN8``m=l*"?cXHYUJL"@+VN?_*K-Ob8&>^9`Ua5HX
%<dD%FSJ0XU8#n(Ah7KV%`us^g1^f7IRhG$QSnRHUqXjKaP70+_=;R]L9QC=!b?/8oja<5bg]E82Cnn]-D&c2OQ*'V#rAUjECf!@m
%b*CCdA$Fp@&=-/B(o5uIg"#lmgiUuUg2k$F:?maJSW6Q6f%9Q*X&WH5#F=#6b`BC5rAkN:pCdg,2NmUjFSWhT8f>Bq5i>:62cigG
%4nkA'Y33:JQ*Ifho&Ia`-N/;'A))!)FKmqGWX;]Y)!Y:36ar&K])R/$4g`c7XHBbMDe*M@)ksD'Raa/jm;aMT^[a;2\uEH$dH"4j
%/P^OB:&u.c`0s\._,2'Xmf[Zu^ldW#G*OGT>euEjC*O@4+WX]6<Vd;/e_&A@-0;>!j`4Va7^H1@H?PRoHF@g0*eY3FiJXf?VHqfZ
%h&@VH0OgE5(Ss]ljpEV`SJ3.BIV9sJIWNrJ=D_)0D)cEo:hdbQafFN3bM0gda$K?:K9MeR$1ZQS`rTq"pBWTogG[7BBcbcd_W]b%
%I/M9mnr2`0UZuj$$f.]R\5[K`O6%6Z-hZgUs#m;D[P"KOZoh/HYXD]q#.7NBpeS>s*VuIpOKGA<4-qOn=I;p32F;sGA$m0Tq_mNb
%*ZLX)S5)VR[P\PU7.&O\WP-bULSjCBcj>cYMBk`BFs?`8Fqj%krZDmZdqb0_UMjI"%8rEjqXBQ;T:&=Hnk,7mcXc-AML]PN#S4g>
%$Nsk\a:Vud.p$$b/bipk.dGEe)Cn[p6>2!J'c3U(EpU3gZ7ZiXH`ep>FleiJW7La<](R_SV"W[NaoZA2Pnulgq.ALcKA=CHg)'u`
%A"UI1e)^FI^,`p_S8D?j^Q/;PAY1&1_e`aso>TohY:n3\g\7JhVpicXn^YZ%c7W1Co,"0Oa'6<ss*SG^58P50.c^*Y*fr"/X7/77
%,D*b47&?*([B?R?1b04d<mXChTRl?(BUg\W,:Z0Y'C3RI&m?U!`%!B-!-4H/a!NKT<E7/Z<n<TV;20qX2-9+uJ5Zi_8o9(j.?g__
%C2U7T@:H)%YgVX3Etf[.@MLhUU(>#^e4Si@@f[?=3jke;#Mp#XB>oR.'VWkji<lX.g2q(0c"=+U<L?t9m&^k.C('>8Xk)adC1cG5
%Z6DuEf7QC/E,*K:!H"bM0X>5(9uRPo92>d^ehqZRX9.;#a5KlB2a"RhQN&"iX5+GSA$!f58f#AYpItJ+/\)G?qdFNAFlFDYX%Fbk
%Q'PFPrR=H_)GLZM+\]"MWKk]-E(.iHXe.j_H(38I*,!gf(;s.8=d@boOt;&_Xm]2b!bLHqn2Rc>].L8KO$0P:)i7Ite09#^RP*0q
%O>Ne3X><FPZeU1!$\e(=='4G`$&TEM=X^K$)!5R5;*1AFcum0A-n<Jq[8%-kZ7<Ci(QJbt_lG%!L,M;*XaM-\RBR-,ZIiPhHJO_:
%#'LI+P0S&lnB&X>n8k:cf^dp0EZN-9=B0Jed`IcggfAQb>f3k.F>?(k:.n',B[C.#EWmE^;Y[5&g(co'TrBX>5'$ZK;_*:,$@7#8
%CL=&Z!D]c$g]D9VFD;O`AQ9GY#&XNb%.U?mc;AhNWKge.Yh8O(ASS>k9o5Maj"-Rd"XS.]5IHX^F]F)];m>GPFQPQj\mi!8.ig"H
%oX::t%Kd8)^/4-;Ec!D<]X0^n0!P_af#^Keb>mZHL^PSO/%iD=N=L$q"ZUeI4,;d7k12c+XrK4TET\*r!\9\`=s8L0J4osoOO63R
%EeU6b!!)RWb6&-+Pr%PV`iOc;%-<ebS>$+1']3/]"W(oV=Z1.*Bj#<(>(hTJJ]F*Nl+1EjY\p_VC2N3N+QLVPTrq+kTa#7BQ!PqY
%@)K!Q7W#!leMbG+i?oE_;&65XQQ4M'oZ8sJO*7Yj17_\7b@RZijEedJ'd=>mMKNHFKCM9lld]EHg+^(kX2Cga.SR!WIUGiLVNWP/
%c*m?;=Of8FL,RuN$H%2$/7glQau<Ea,E=,&0R;0E;mG':n0jL$]gSm)jc;U9TS+f6Zjk$VN;f-K/:!A0%!+7dH>(R/Q+5IDk*[Y<
%b<6@')<D*('Z0@aV'rt_<EHm=@&dI6$5'd'6?kUEQ',9p3NbUuF1&^k:h[7T6UDhj?5_X.gn3R5.6j!]>-33]@iQP=E`(^IQpH!7
%_BVeCF^D_m!-:Qe5(*>'YEkYVW9WK&5D@_Ai'724c)Yd/:=f%un&mR1I6%0%?QW(QnDOs9n9jj$l>h;=]n.Cf?T%:4rieCG3FBCI
%bL)rrhHn24n\<7S5HX1fc\3u89*R#^l(>$*/&(>9c,o(&*Oh_@PO=#,n9t>Nf:D`AhRrl-fqUM*`i&+IOmLPf?[MG+f7!,+^Nt"]
%?Vf:1ak(GXDr7bUSZ[u;>d"+<g0Uqsfj)6Trda?EqaTAr_9GQ4*o]oohQJ$u`^a@-?(E(@-`<S#XEk;p[a/>tT5MC#SmIuFgl:pu
%`RSZE7cJ?6Wp])?qf6\%111'&_rC7,*p'm*UtK%5(Y:PD`g4ADJ$ll!\Cdmke(q?r[/Khmf[opZl,+Z?SrcD7ksHOiFn13kWo(,>
%HgZ%MmbPkYns\*J:EK4oC]-?[gHi"5;q*/AN&X!_4Zi]80-<*=lTU:'f@+$7jW']V)j\d_\oI7SIJhpO0)@UsfjFFqZ)dJ?X5im=
%j&J<9bAMeb>H^Q3?o"o\=6HormDUC8m!\`]qT>#pYNXl[`P4U-D:c8^@/S/u)B;831]$Ucj0D`>p=qh9,JR;=Id>C@hk")nq#5*9
%]mSAV8bDJ4f8S=o<*uoeE0*]</c>aVQ[U%f5X?5dS_q+N4,5r_bh8oeq<IOPLS#^"oniLlm-Nc1Z]!Yj_L?QV*b+*k?-\(E3q0"0
%<]5G.IJTV.Xq,sC@95\"5)B0/LHZpCkJNB(HS5i!FT:WRp$'BVp_h/ke'7"KX3FC,l4A[/l?m[KiT'd?ci!^7L#X<p_7/t,hIc:@
%jb/)h5(C>eOZZ0OV`tE3T(DKNXa%u(&;'*-#5i2LIQ.,ojh@L=MW]Zhl.)2S62`nJbg/(2r1MO(Ts6aVUF*YPTCqa9o^$=>!c=I!
%m2Gj;^\cc/F*Z0.F4oA4jjh*8`654Q[o]Knm;\2[XS^S._\+GKZ49#B6Y:]=qJpY&]LsAY+`k<ba3Ek[&+*tQ58hK](Hhi-Dc[b@
%jn\cQ>lg5a&HRmgT;ltEg_`W/[T=Qc42+tuZe(/42a=Qfr8ULFA&#.2IOnrI7/cQP)+#3n.6!W7K./aHEXuj+omeG$VVH5HjkcQ3
%5X.C0p2"e)(iu7=)2u*r2<K3EN=OI(lbPpn>AfK^`*gdemen#>\\XTtXf9Ut+1CM&RpBF-5L>GM*^bI5H!^0+1B,:EV*.M%:,]#N
%5+C.6Ofa%QG5gaDg$.2e*a774f5A^^beVhV%)Ka2#/3"b[=dCQMt=9=c2)faf`m^Y^KK;0#^,'A")#4JB,d)D6"q8tgVDL6$YT?O
%FnH9Am)ALMp%a*?2od"h_uI12o7r>;+!RU%ElAK'l9X$d*S+2N+W/e[Ybj1E&`n)Np%@Uo_;P0M`%s[Pp$9QqA,H7GG5Bt6e]%C_
%C1iF"!T<^r!.N8=K^G0jF5L\U8=TRZe[Bnd!^k].+`6q*-W>9pCcH$\3FAEN9YEFH!WW+A-_-d!ST#52\#6:eT>)AVU9dXrj3?\h
%IkJaS,gSd;"fH6%K/M2c+,@:`Q:Q6*\Vfglj:21fhKQ["].gqnYW=fAAbJeus6h72L]%PVQl0j>Wpef(PKg^`=+,7#mQD*Eh33Io
%pcVEGaj7*RdBD[KSuR9'G%'s;hVs3Mei3<4GE0K8T'MQqrD^K,*KI0\7#/6J4U,NkgZINrYAdmZo;SUT=@A4_:jXi19TQRGlVi&[
%dmKY\qo%dKHp\>1l-DY`4-"[7a.PO.D9eapot8QZH1$"*E!4s8"C+G%&,ljEB;lRS3mjT6h;"+NCq*cnd1`/=dp"mPFM5ND4ZL'a
%rQjG]\3>>n[6Zk>KA(+#HLK19lSB(KIR[TBW6,$3`TN!+*R9H[K]CoD[!`aN_Z?e7+WR,t!NNU_Zh@]j50f:AHet#R2Ej(QG_dF%
%]7ENM0>aWWf\mh#6_9?/D8ee=`%sO*iKauC4W")Vk0H7[nc,[$Wd)gE%e^4#%jt@>ajb]C6$5?])B8kj(ScScY#h=Xk2+P05(r-<
%49Rj_pHn0rq"DZaW2BaSgIIa:^:A-`m5LMZ?J<d_h)mUVaOorMFS$Q9A/t8=;tiIK`oD?4StnI*%7qo?H/7@hH4D&uEXR#,moL'H
%hJn-rHsT<i%LB[pj9N.=[Y%aF4gkqDbi05p5+?[!L&1$LdW:U;5J:9n0/r&ikl9;E)89@hm5)?ZiLQ4.*c>r^nDF,S+1&SOR%#Y1
%[`:TP,TD#(6oMKK@eAHtm&P]]SsmmAo4M[a-O#9eM1]#aIlq(T0Ac@^9OSHGrmi"up>5+T4$DsRe4qqoO/I44Y)gEl_<iVkgZ8!K
%Y]0$A!!e>Aj$5.;W<LW6*2Ho]e/ZUk8G[V&K@Hq`qgK#QfqT)TIgjb4s.QOnE4VX4pVKGhI1ht,*2GdrADAR-EEEGZ58Si<T0DW=
%,(*-V[?Jl"W_](u6T!/-Gu""I`h%M8mlU.+K+Za[k4P602$<I(>NXHD@Cu!deE;>gHJ;qnc2KN$hJ)on)""QlpsGDLhQQV8E-B%'
%67tIfNRC6;"6Dd,9(r=U%f<&oA7g!26qc-0hh:r(S#O.=]AA#W`q'b44ihC<7;%ZV*/s+:Kj[X8:U:S4m<3pSH@<@gmUtFd^[bA&
%S+MLKhS+L,Y<9(sR;X]ASZ\")+4o8jDcWJ?;WKs@e/U4A`i/Q.A1qlhnA/Yukf)EQ?:OVWWU7HZlHtGUF6+Bf:6Ak9[J-_sLWR")
%X.r04%Ru*:Et[0pY\A19<nk7Xp%l-=Ia`M1S`ni5@d!@ir?T"NIi@M7Z`2L2[E#*>melE]TBW$'SkQ]\0cb2ams?d1^@0/lX,"E;
%ejnIYHb)DB:4HFFg1*a*;dZ]QHh)9&k>QN&#KKS#(*<H,p#3pY2=>so:7eZ2B'n!\PEX8Qk+B>u(2eQ#?>\#sICaNJI.d$p)IQ"b
%WT<3>lIP33]3b.i8,.=OHMl#jT5>.]X\W\7XL=UZ^#n;2+0,Rk+>q,82'>ci_E^23%S2gJSN&J#`ILA0-i\"dA[;&GrAbutqK1_)
%S2&>0M)+/Y+0[0.s4$[;/IquBdYhQ&58N@+#g_[a7Hr9XK+X[W(1k:Um"rf/hH1K^#Jd)+@deXsURhQ'V,&HKc'`Y:=Hm-F[J-`^
%3FG_\FQ-[b\37[&*(#nP&2?&U(>LLO``(1E@38A%$\gUa`8P:_31PhMe5e\C$_C?*_o^MK^>Jj(I<tEtZT`g/*+Hfs0e.MeWbr`)
%k[geApHDT\L6QaB#3gO6nSBQ[m*IH"U(<.R!'n6D#RpS=JYZa#^6HT-Pjj/WK&86?2>mCc53R!(`kf1^2VXGg]?PMCT($Rm5-7nQ
%o3P'?\bE)7G*=0jJA@^])h>_be#eO(#R14&"+g2@20rU)CZ"Q'YT8n+d]XSpj5%+qGP;)^^iMPaW$`\>GBS/rc`m65C=bL27"-g0
%3OFiPTSIIPk?ZKmF?8og-aR!'oO/QM,O9u.6GH'P54%QIed&J;o?^!`r;;4'jHc8)hTNjl$'U")NK:I4lY1a'kF9X*+4lj-1pK9P
%O?CHH`%?gh#QPA9i;Eo]5DK]#6NB+3i=H"W*17rM49U1QYI$I-!&/Cc$j"Q2bFY5F#l5#sh]_2F"FZ'l:ODNp*J2"PBV#Vuh]_3q
%GN?4,MuR>ZmbQF"3'=it:C`*_r45'T4o=@'%\7LoJ%1.NNfJ+'ClaT6^[Pd"GRlmkc0FY3$hiAac`FOgZ,aP!'_]+N&tSCW-aRT8
%aJGs/G@4kOm8e[_:V!iNio#*-aIYu[o>*f&cQ4hhhS+Ae^0Y`m"EeJXj^rkFH%5PL5<!5QlcUs-f-apsSZfI`K2R?fCp.)V^!r.[
%J(E;\_1+B<ca&j$C]Bg$H:1,$^MQ/@?1,l!RLu"'o;S\4o]XTs']/NTe0OcPZ(#@>+X?7eZM#XLVp(]3pPNP+6'D1&E>`&0=s!iN
%5C["4HI+RBZ_uo/0\c=[IC(BS><%c!?eOb5j45j^oa0-X>BMWKAT59jNgITPnjdZ3Ya`Tl?J#WQrg1Ik1,rSEa33Cc)&t;^j5hC'
%0;mFs,n:6n0K>02P'O-`]OlfZTKPilD,9Q$>Y0QXCreN>NuMg-2TrqNB:J,6LOIK,d3hl1^1Wr!1CsASD5'7TFoS;tXn,-O\Qh8Q
%>^jHAluYlBU/2i89FSf.klo8E$caD*ds_SC>FJ]A0-L-"P_5*X6OK\TTQ!$3Gl'&uG"BA)UgJEt17`gkk4S6LW-#_$(8pU0Bo73U
%c@;pDq$3Z0oLONkChS=8`REjXg63S5ma=g*7:UcBn8"X[r4;@?Idai!ft2GElUtIlkNe>'/G[XfU]-;Mpd_[mmP;E#di@#LR<ca/
%_;S)1@&"`oN@&c;g!(6-bN>T:(le!2.X<C@T?_gdpB*a9)kX,l8##@tSNaX7'<4t/3mgHsI6sJ_ojg1?1t%"(A+4"K[O8s$SrC?`
%JZEGAalq3/_3;.5[dN(q3#"qGGV\uXN=VV>_38j]Sd`!R/jXir38Wbr(bE%,Atcn"?QELV:;8sHoKf%[n(frWU&$/$dd[ELHCguI
%cbW-"V\9;F/oT'B?Z%LnE5i9sn&N[eYDa+Ih+uS3@b`1mceI!hH?m7(Iokt'E?CsXEW8u1X\Wi2mFB8GJ.MXcf8QOb+"5ln<p>@1
%9=CNXC[g0UfuH8i6FT*`:O4#XEI$,*P;mp#?9HPu8^B8@:`nXQ,S02,g5nG\EOn"Q%sgXabPK8[o=%f!YhBW@/bj^6T_(!ApYG*U
%P(YsWMLAO.;GfP(cr[Er*";&3:M9A@o$sWGq[`Juqtg5Wc2$,el.,M+RpEZ(&':M*KG8_@dcF2\fqAQ`YX=$fqbS9c`Uib5pHVY?
%[Ng.'k5GqC>X+N5fQ2[.2qW2(4gt[9csY2uhY(1b2/BGZSqB3#$mB)47<_9<?&s(E#AVWYkh0@j%0kWrcj^38rY]gM9thC^S&P(H
%(j8kZ@aUZ`caM^u/TdT9&XQ;`#e]enQS6)OjQiKM?iTummF`p<Rof'-qhN_u"0.e+^TBH8+4f2ok\0V_Zh%PnK6'kf?5B<Xb88.]
%VdEcE\>"JlkWA]<N!d.FqA%odDg:q>;"i(''VfS9s7P9gkQJWrdgn*=*8.p1UIkeH/k7#J]b0;Y8F6ei`8I,*>UjO+HWe.>1\V?+
%Y:Fkt._[Rd=CX3kNMUbTdPL-IX$P>9]rOHaEIeXYhiL95-bZEjEXd_@e#W7-BlgB'pPPP6De=uKJ/Y;'ET#V0rIBRoq;8VO![jc;
%kGsfk)Q:l-JKKr\/juDlV&1.#NT@p"s%d'\V&>W.Epo(e)gJ#Vpcq!.AZ80u)#SUQbj"c]MgrX4*8=XrKn1U";;8t!ej(l\=i9:>
%-2rU%a&QOuW9^?]16a+Z-Zm#&W_eKt!oM(=%D<5>e"IJ8Tu?]BN!l^6X&6r[-tQm:AL%O9f(cKE%9)D3def9)ap(G&H(/<'^/p>j
%9S9."X'pi@3)@\t0L"oOacir_>_6nY@i\l&j$`@"EME3EIEPV7MPP*`aP/&)&Q[TPU(.pcb@FlAI53GIhDL?EnI:QXS2L0AMC@lL
%rq>p%h].dYFRo!V)1DM'kbnI!JiU.LRB[>eqW=V%=s_3]Q*h^M!oN7<S@Ug`FbpQ*C+P<eZUQlfTPRj06.CmNeo%4U)FkW0htRfk
%bB0K%7`WY2R,qGcP"`S5AR6at:C1>Sc/M?qYpiq!A+N\\2MNV7l"Dst1WMMe\:sk_(U#FK@DE(^@Md2N2S1r#g[I^nNg(R9Kn3lP
%A-9P&1;h87EqIi$p`6jZ=/W?8pNLH8QHf'sp<T/`i]4f!@6#`^:>flt=@,l<"B?*/JXI.f1-m@N(XcJG.=PIb5+ln$)3l!5YJ/^R
%oMX)h)dnn^#JYd:!99A%njce3ar4<90FET/'&uSU2]]cP6m73W>n8T=QP\(%5+iN;99P4M23Fa>?B'ZUa3]$@kEiTbj.\/;nn"8^
%4$IoCqn]d_X8KToI!t\me@s+2Z2O%6k=6X=5oeEhp5J6XJoK0\c7WVl$i#&Eh9hk/4hLW#I=-3e!cp`$?T[t2qI.&urFQ3Dp_VdK
%qKt3sqCA/b+5`W[Irq=QUHfumS=I8u^R9IT^O]G#^ARYGr?a_chhM.k8joP3"=%hV0[8_E`[\2g6-<:@*)Y";PlCq7hio1Ap\t0Z
%Y1Wf/GC"FU$GHICPi$EY[6FP<IK",4I-D?e^T=jkI&_PWr86pEf4)@<Hb03%mDlMC>oW34hd]iboBd']_HpK='+Om'eS_<fNg.A0
%6IN*GVDbEJIXSeILX?34I<E7aq.k5JCd/J,4[6\T+-lIAgdDVOl=tCWek?p<g<WsPjB;NNYEBue^0Mb/(dW4m*Ye1C<QN,q,7m\O
%dUfQMPq3<F/(2Xq:o8!0>qLUB$E%#Kq);(50XW%J"IWgu%dNk_SfaDISndF8C?IlC[l]lHWk)=nf8lSplg'gWBNCjt2f/q#cHA!/
%B0$s_X6-A5.KOj5:sQH`b3i6SiK;Ka!Z-$hdVQp$<N;mc)c3o,mf#rbS^G;bb'Dn-1mR[uSg3>6(jFM#3S-5h.]u5UhS4s:AKBXn
%cM)?1X'0bE?&q9)D(,.#+7NGaME3?[O1IW`[n'9@FJl$&`C8l&9C.otdW71pfRbFYP^sb0OgM8cE<)DIJX6FZY@nj=6OW:6$=V$q
%?0PYP`&Br3<Df6j/j\g>Tt\ESVmh#S)ab0_FY?2__=[NjU##kT^5FTJrV]Lf]>]7d4Bqb)88gSgmt:I#W:,B8IUMHQ1'd#I0,r.X
%eG%![h^^X9Ss\`TN1<8c*Ud#!*nb(1U_U7lA</?o2bNDdqJn-@Cu/DCn*cpe(T>;_a/#tM=_Q;=Mn2==Cu'K%/mXI"Z&<?Tlc@]h
%#m-e1%#&:n(f:tq=;68*(:rP\Q%2A?Tfq!s`L^]::/@J<ilQ(7iDUK*h*\.h+p7rC!7(CU`dZ;%T8d_AT"f/m^-;O83@OWSE^(uH
%K5uHLb5L7f+-cXCaut_sZ5UXX=7L_(Msl%cq<!qBhFdWVlC0Fs/`1sPW&s59]4]Fd`k*5G7),]k55?,L,">Nn^K/jL")-fffDB:2
%><V@n]^W!=%8,t/;i/3A?4J%A6&?VHfKk?7Ph89YI3qRfo/N(F2:?glVis6ac1`^%8%3P:Q['`.g:FFh]bRKm7X'#e7=K;o_-MK=
%&]>)W<E0sB-b*]P&T7UZCRK#ZpJL5A<FZ?;`pR%(;%&%lU\`)>0O<Q=mU,k17c2-]^XFF*I32$*=kD^T&!+@82U3$P%gj7oO8.Y%
%*jkcrd-CZ"ebMG2e]0lb9)YuRF&:m%21F2t3Gd_<fPR.9+X+rc:3^5VA](!2pZ:-hZ`i5eK^[^9M1m7M;@*8mmbr!LUeH0Ha_jX(
%[am`RP!,=Q-`'XZ-Y:>bJT9`&QR_ed%bb214RN#R*'ICOl=i1sG)uPBB]?o>c=$rjU5CU*s#`C#F?r4l/L]GJRn.C9akFlU$$P+V
%Lq6J$k,GI@ehb(kFW.i//*J+6'^2\b'1S&K$<AfqFspg8SWmWX)/DZ](CQLJ!jEY[a((dH@R3G9#`PM=R\b+V8l1)>b%jGW;ORuE
%IB]c&$Ftmn%UoL>n0AL/80si)PdOt3#2#2O9huL!0dg3KePLdR/jLP*ULGcSdC@j2ca%G@J#q4uO*=s>BhM`in>jFK]Naleb"uM%
%!2+@s[C*-a.dM(gXNlU06q'D,q':L]A*R5EKeon]l&q2?,WBK@j?]@c:hl]*bXVj%,/iAtSPHu8A`IBE6KtLb&42:iB"8s&5)1L2
%<!B:\2J&/<4'<^7am-<Waq.1Dau[ei#j"4UU^ob`BJdEkD6/[oiRXBN!Gn*s8o"UX%pF\.T,rd:(\2N3]i@ogD?cPqQAnTU>fDD)
%9_!(&#+@^Hb!'OncH`L"lhOq.;5CeQ/f]e'm-PE#$j2!IMNFnh)`Tdte;CY=cmpu;Lt+*cKcVb+[.siW8Ru5I]e4'I*j#=b[9Je/
%bVdYVX1%.W^\##F]HjOgW=#TE01hhdWf#X'7Y>[MUgsI%8Z9eC2-NfdS?:"j()dTnDe$f@`&6:8FOqHV3sF1e,S6oKkc9BQJA5h%
%g4kmC#`>IEp9B<LnVBNr0:UF7l_[3nnnA$t64'$bp!XBYcH@I8e3J2f;/em*1A:e::/$S*F^c!Uk1F_V;:XnOY[WkD-UUdo!<Z$L
%3^2&A)lstA-*IGJRq[/d6<m&P`*!6lT[9]!p8jgW<o>"dBsCNh9U\[oNnFF&*V4Knr[/H"Z-&\B=MLGj-H<ou1Tf&JR^u_=F\t_C
%F(p$@'7kL%D<2I)<E+FNKWQ_=SP=HAj$XSkBRZN-!N`hT(33:bnBD"O9(GrQ$0:P4YrZ!1W[+/W$^'Zk?%s8.jm:/'lf&,%a.[$4
%es*SbLm3EXS;GZaBM<C6q#O#9MPHG$<@BLlOs\2cUbhE.4q8S!LpH;Jitrae0EiZiUMjLVC6k/h#r7cGKpDn'J`%kil%QZ$FA5/8
%c9a5A$kG(X1p1"Z0\o>0Z&ok-Z"H`Ig2^G3(FQPl'5kGt0LBDC$S,sE["?:mUIA4.M5RJN814^t;V2O>",U`KlEU"AXA5su[.B\7
%A4(qV$frG-`tk95HNt'78OJ257_#:fFh$+tlU::<=Jq&O6EWVIDn']?N#OE"%L$%rPXs/p.W-h#ePq*SC8\F8gIgL6=YN>\HQus6
%KbM-k+j`-g;I;dB#:_9ajMr-@nXsSi:ZYd'RQ!F<:r;r.++g=)D,<_6V'eX[o8N33UF:e8)M(mLN2&[_Y]1"*kl#BG@!]1lXgo!c
%ab:L92WVM#<#o-Bl9jfN!8YA"D5@;J8N4PmZ=Td:3,MW&P&d32TZ[m!"VsU'ST_Od:E.e^8N1Rdk$#aMX4Yl*UC0_Q\ktFJ%&4;J
%6FdkudQ('B!4Cs+77Kqrs(!Q\O.p37luh/W;B@DpVj9]8![^B-2]6-;*)ZW3F+uE>lcP8M1t.h\-WsP1mSG;^l33=Q.(P=(G\Rt>
%Od(LhCkR;.eM[6@M6o<h9TTIIrF8Ts.-k0G81mo(1g&%<3K#!DeCL]4X>Lh[)9Ka^"*;gh3Qe?:Y[YbJflA$Z+kM6*L_9I-L]qAi
%8$"Ttbh<WOdftSBe#p*u_%"dZk`]T]/0"T)MZ[!$s*Akf[S(fY^Otrf@*'4:1_54VFrtr3bKWqPYg=LrCWj_b1rPC]<$PqmC0]^K
%EF7p^J8RNgnmM;rV0$#M&6pNP1)(gc<9Uh92iV[SdS!/2/!'tgW;o:pa]Qj3><RAQT%.4qC[5pd_C_gLc#V/DX>+O!<R,3>b2)FV
%baS"]_IKd!1G;F?0"\,8Rr+Pgn-PEtcj=D\%'0/Di:,1kB(4hG?)3sr[e[dMDq]5%d[R;?C9(qcAin$"Q03N;0go0ferV6?Z0r#_
%5c)ar#osq3B/ZR.TEK#dCq?W(br3dn%:#J8Bi6#L*Zp`-;J]Q$Up20/c#m*qFgDO`*TIoi'XUC$b;Y25.?An46K)B`aXEk0i&e7g
%7I6(Sq'2)m9ina"fnNYVF'NuSUe,juH[K'R9!N7/ON*<V2qM?cf$-+sG)TWB;KOKOpK]tY8U9ZLM=ju=O&?i8JGG:9)GK=V8oM.D
%e_4USI*g`:k<k]&a1fU7-)21/Q4I]r89/e<E`-aPQjmbVgg6gX(YU1TV3hm*Y]IHF!=QUo>_(D$GWp4:3hhE#)AS2UN]JZ@pZf$u
%NC*!%o%I7u#Q99qY\)F[H=&Y-!k!UO?F6QOZAcNUBGH.Xl1JK=7FN[5:g9(=HK8AedX`seHf7.a]\oaZU[n72.2!-QQrT."4tF0E
%-1A`t;\aS)I<f(9V/pm5\m2R]!]%BRr1pVrIM"L#B]`BM8A!)^],4VDD@Zn;i<uR7@kH*I/:f?oGbcnD<3-F:I,fUeILL=p><N\#
%eN*9Q\,]/W3'u[Nkh`AA.ZmEDX/%/h<ie?MdVKoYkQI0p;2hXc-;]>^US-CpT#T#O-I*&kD!,lT9F@$e0r(q^2QBU[lEVNGe^k@<
%aedun&6\>S)sbNU@j8eCCpD?[`orA[=9JD29^j=cp9C&+EMdh]5sW:$Q7Ob4"BGq-6;P*!a<ZII]1_/4^4od#PgJ2dF\DlHMI^;R
%8iA"I:1%*`!q.,l=f/mK\4X-<km:>nl4;3np?^+l]:gg`HY?\!F]O/*q7;NN^FQ_-WEh2'<X<M6f8_)pVu+>=q.jhHj(>5`\n.@1
%)[l6Q`:B_/U"ZkPXV!Nfh=qLk@Tde9Of,o_SAHEg>?C:FVk^$7oQ56+1qLV=nqeqNE>p.&^lXjk:U<Kuo!)=M^nPF;NZMC=Z*^,X
%3)JEM2u0[?-,jK6*B$<:P)>DhIO[F.@sJOF/i4:-`#';Y"@jO+aR@e9n?#@P9DT69Cj5`c+')=>0DH$.H`hnE),;VRo^h#g/<"nU
%;/$Ij$4X+'KEq'joWJmLe"U?QYUirBg4]a8*OX&[S)"J1-9t8NG5Yb2Qukm2O>>LN?B:'8fORM:SU6OAL=B_sVMmKFi?3BZSFdW\
%%OBYf.[l(4jj;K#6lF,Z$-7SA=KTP>%OC;q"bNgjnfrg77,cS<B6D21r5#X#Bk=A&ktfn!=jP?GVK1FC$DB>gB@-CU*!."r\8C[P
%5cC#W0`7&___S,:[t[`)#Fpp]%k#4BC@m2=%Ru/a'iF(X;EEa.0a)2Y:HN5*#Y;B:XKC1YP'M/_Mke5X9\'rhU!gf=/,?`^69hV/
%5H\6dN^9d:=cG+qQ-@:6h?P!o2AFY3mK4(N.o/sT``STm5*dR5NRbTMq<mBY$Vt4<aBi&PI::,]TlO(OkU[E+=q\si_P7Jpb3FWi
%Wl@<&3"X#G[E7lqS2I9#(?U[=j[iZd[D#;=e$I%:g_f^&Q$G)%_9$(LFhs9XQBXR&J,up9?G#3;gmP?*^/TZ89^t%R^$DNg5"&`p
%"=.r9S_jkP.)ct-C1ErU"4n+-/SM[uNj<EIKFuL[MJ_j:_$SEs:2Wh<*33q;6VfuSp;_'Z%T\L!0&g46[`70m``<;6V^e)^pC/5_
%$<lHO"W_!cTj62Z=o.V5-j?Dq=r/#>Ed/_iU@ErRcQGYno:'0:ZHk5U)U!L9N]i<ij`0$fX;-\C+.A-_n:`$5c0\5DNZClpD2lD"
%bRid%E)3IfCVk";HUEQ]Rno2_%abc?k:!"uZ!#@9E7`9"f"oPR[M0:NMCrTdih0>.A'/[Yi)N&CJu%+rd&'+R=:QS\1=*Ri\6=hu
%eda)CgY`IWZuCZHRmYejC>7e<&CZ7#%c!9+[e'*[csHaVju/kWMY64s'[78U)&_5`Z!<#CYC]sq\5j_E>HtBd1APs!LmK(#ai0`(
%;I9a$=.9nE)hQ&obH%;0a(c([9N7:d_&!=*"ueNT3HcuTgE)-*R$J?eXa[\Q2r%_Bf^Q6p91q.p,P%Opd[@uY(tD4E+dRK$O!^ES
%Gdn[HP+>Ll3Z[PH_D"P*GQbq/0Z;PI\YRrdOP18DRENb^IDFBbE@m\pQaD;O6ep6O38U0I/QUUILBeDPYTRqLK+g?E`jaP#61ATg
%[<@)X(L")5Zn@;pnI&^LK6'FU+&[X2V-tj/"=EjS"V,q=Z1f>U5'e?^).UsWC/c,[\IHB)m)r7GE"U3f>'+YmST.4?\1f&5I"UJ(
%8_7FZm;[@f8HT;hWP#$HDt<Vmdr*S=5aCh4]7qc:^$&&1'DH8N.A8-<4VNCGV(.\G^gE>*7=I%=@G0f[X%`r3%EI>/biKc5KZ`>W
%\QXYcaT0!:2Yb.!mmH1@-TB)K-.THEiB`b?XA?Y`NaHG$`Fkm*1Rf\'Wcp0Y>>`EU4)0AV?3maQ;S>SRp6Uer,,D/VMcPA:k]5\B
%U.#_F"P=).Qm3?gWKmTO@>5-nRi)LeXUSoi+O,JX)'5]hSk%S\26<n#btM4pp4!hfR7Z7QN7Gr`"h#tS(?j.MB^IV(;*lX5.hs-&
%Nj1)T'i::6g'=qd*)?P8(_1oEQ1R/I5WRn%)/V[,H$,$D1>q1"G0beTC(!K2&F?H=/rk/EJ-0YQ[P\)r;c9;6'Qgj-US]SQ[Gd@e
%aN<3Z/-MNNZj7n/BnG<Z`$:d8)(c:Q*6I9WmE>hGX^E:@Ds]eL6D:s66ied(44k*t3p&49d49iWfT,E8*;1$*CESe[V5[J=SP9#K
%N+Wp9S$U.V?1-bTn`CQ(/d49l]"U`a9t/NS^q`"oDsQ"eg;ot9Lg=(Fe%!5=>74`epYSekX*K*89m5-Oisi^j'Hk!'Q>dY$L[U@R
%'t1C^-*?!$32U]Vc3SPNSj>l<ouIU5^erNt3^PYG2`U/<X:o3KOHI&m3]OT!,\3`%'G4MNGXs6"BQC/Gd\Am,JN2&oC[]gT!#5hJ
%V5+$$SQc=eM+/#Fo*!Fm&\nYXZ1>>]j&O07'&YFAM:S@g.T`r,e@Lg7<s`dX)7N0E$SaIP+:[$S7So0W/5n.JG:!AFVD/m2AP8CE
%c.#/&25ZTt@Y52rT>97d6IOY65[tB<<n(,/Gh#h5^4EKh"TJKm+I):+"k9VDPEI[/'8*>i=i[.n`kWden4+*NFQ)Af>li0>EZ<"5
%aL2EV%[Kmt7Ed*Y@n9RdhOrcTM:7\+6:K9JDusGt]=nZ:@7hW"f9f'GHCL5,bD$.m5W)O7A5n.',Z`e%fVc@*llksNS+A.i9@%24
%QOYSFd:7F&MkC`dNe;"&jpeD^[c1@L&.NP?_%84O6M>DoCJo+6]6'ngPgp6\O"kMV=@93E:`KR4X9sk,0Zf[_b8W"Ug?mT=B8tdn
%JG=QLW.mkPL"EjIYg"'pkQ]8cKRm18D9kK8(!Gi\ncNdq7q]`Ef*-j?XG7BLi^/EpLVeqXTjV:pkS$YYJh#p,itIXZI\8KdaIe_s
%ibbWWZcf=2(&)*;s$(jKg=A`VZjXX@kIULSa?(4MPuX)P<<h2#!T(&c!Um'#!b?t;-.2\`HoSn>NB8>j(9&RPD9o_)k0/*_9IMEX
%aN3!h,*Fpr&2O[<+FI4p1_0I<W+[43nq%"*M?q$u%fs*)K-8@U5da%>.:JcCC;=CX'PobcXf-"0^dAk_;(+lI&j5JLaqlq_+i=1f
%fUS^DqiQcp2NGUIF;.?=$k>CC2un-\(WGDC(E&WVI;sj-K(_$?R$<#T7)^jb9M1*"6Fl$=-/h_lYn0S9Q24r)E<?`jG^]dJ](B>.
%IJK'Fj%esQiB5L1aWbF*]u"i4,cM,[FTjt`D-DiDA<1(CnS/@;*XB5c.BH3iBo7qfbn<Z9A9gU8$C!qm"QRF7QiR9!,pre?91gr>
%@)e,q#4:2I/kj9kKbSVm=Tn!*&pB%D4a1D"Uiuq[RX8`D-L5GV,&?:d0[PcKR3%+B;uf`-$^&aK#*B(P%;5iY][.oAQaZUXA"pj<
%=^;Z2:aq_326n$Jh8mLaXd"ePKj"5FK+^IkRKWS>>#V^j<i'3:C1$<YU3L/0-j:J+%a38B-H[L3e$fY35*B_bQ1AEi;\DO_3'b?c
%?h,q&Q$k;5JuXcZYni$fjmk/2JRXGH\Br$#lQJ@sH3LI\3G#8P>>@d,T*90Z%-g0#V@<r=+ppY*8Hll-!_">Ko)hU_>^A4+Y1uV0
%G#n/n1.dociDm;7MIP`f,l8i$eKYAEQi,bjAS\pJ.F2nJ't^j[:AV>Ud0M$C'*4P*\^GJfho7jJ>h0aK60;7Ce6%24Cc&20Kk]Ko
%,_sJ6'3nsb6_tZUFQDi&#lDS/44bW'W>T6iMZO'_h:`7NADsCeA&]ijj'kYO[W/%09;4t1&I"&*f(Y-JOCa/[4\f2K^*L5:Ue+R+
%ba'NB:rI^N1MpYI^-bs/I6+#.28\;$&!:,X_05?s'5PGY![.o`4,d+9;ZcV,`]UC]I<7uK9T:5JmR9?`;hPM_obZ]2Y*e$p`2`bi
%;.B9[I;MN=,XNV2<#a1['WT[IPTW"&[7^u*\B)1sL_TCh'c.fS3-`Q3E$]f_EKJ,$2$>QhA%<I7:AhE&Gp,Y1HNoQ+m>k).0"6sm
%@m5R1LR=nr#M>p!DfuFV0"!da)i1n,K5+7)(2R6'@#l5(E7S=QXU\U_1TVML3/Tk'-\::[6tgk[`)rL\l^G1tS^pSmj`25/f;-A,
%'@BBZbK4bE.Wh,(b[j^^)c>[6q2j\\Poc(-B!YZ.j1OpcN"[j=SC,WYiM"8tkE;0k&WaF6a-m!F&hSVFmWE`U``a"%R5ga\5p@-)
%^f;?`K/EP&\/4%r(O92@VN73SqB)lC)'psk_\g@6fUM6J7`tbPSYT$c:r"-L0S6>3Hs_^a%MB7[(\K?f>k\ohg2.%6."obhJ40r8
%[HqtF>XTlL'kr=,-J$(&P;?#U`P]W;b/Hi:=2BM;6:sAPR)%@t^Ej=:P+[f18t=8]D\nnS`#j9=/[n?^]NB/6/p6T/qF;r)Qe^-+
%.q:&K09J^<bJ(k_).`Ku[\a$dGEXT"bTPW#bBnKbm!r+[2e3nU+#sE5APK!T,@ln&UpWs7V%G<),HJ$C[Z5(e<tV$7_eVBQKS1sb
%aHdh8OFiRKJHQVCUC]8I7aWYYQsErf33g[?eqnW.;.%qPs3Ptcmb&Lh._F/0&=SI!QO2`5%?]hn=>u^-^8h7n74tnnK!+8LI-<Du
%\=LG+B&@Zl0C5SQG!!DShk;hPR`o\`q]Vs?=$r3#6pu][UY%LZ&Q*UD,r&@&>]$]t$"[=;]b!(ZYptEeqOoTn+;0]NfZ:>s\_%a=
%L+@lu8E1i;JeN'EaiC3Li%c1H&:>D0l3$/7?G[*chiMR%0Y#cFb[s]4MMMD\`gHTSq\%2Tcr^LkD\HAt_JD-M@Q'sp-ku0/H']-H
%FasDnWIJV0s/u8KQf1gXp[8>>P6_Yh//C&IpM@YXgucS=?A4%kPL\$'J#AttM)$=CL`]&42#7,k+?O[[;HYuGfX&toBr<4L\X8p,
%h#6&&Y8h,:\TZY8E]oGdHjXMB,ecXg"p]U9g9)d228rFARJ)=;1ZAdO(e>"&W:EIE$.D2"\3:8:>2kYLaF*)I3Si2kb/0#hb^IDL
%nCntI5,Y/L[\JthRZSf3QQ3Y]l+plmX)h(%HtPXg`DHL$4IG/>ER&9G3U6&bMnMp3XhOOrP2NcmG"-Q1]I`gEk>`HEbEsM==9S5D
%j2hRsCj&lP'8>A]cl+XmPLrKj.4ie$T]HlMPPD].O]TtJ#'=oWYM1%eYMiab8_YhZp%TLH0X][%KQE,o9?t*ha+G@o$&@Qce'45?
%f'$Mc1u%sU&ZPeU[^*j9OWGp;IOl,4>l*)LH+*FpCi9#',Rhl42]\DJJt%q.&]Bf:jb^gOdtk'C`&:q,qjHDY`6lU[gtGC@Y-^;K
%%gC:CRu3"8PcVnZUuUf>Bi6p,(,Dsr^+eb(FHN%ai[Ph#Z!8)cFYgd1]'B+pCnu1r&FQEIEC:s?9T!?q&VYS`J/(fb(uM3mBc"U:
%[":8Xb7%n<7W<F95e9VsLMEEZ1eAZj5O2/LpQ^EV6"c6GRfUbG#,QCD:KYg&&$*)@64GCf6?Yn.a8[>sNknnn8H5P)_)oo:7V?tm
%_>>k0UXk+Ri4o&a9C/pgTr]hTP6PKj)[+\[.28Gn2=t/oG9.#&(;hX5%;gOm6C6E4?"RRSLoH'+P7CZg;^bRO%'Cr/n+LfXfSjU5
%%[.-01Wi)6alg:CMp.56TR&&IVE>tDq3GP?C+f?oj_a(@Q8n"!#*bq7YROT#Vhg"o;d!R9;WoG2-SB.8j<&EXk7@al]WZad)aC'3
%?$>;_?Ps`A6I.;7>*:L1aq<Y'q2Udm1&OB`\"Y'LU.NQ>)k[miLqXPE)jPMBCmGF`-*bX;_62KWhE7LA6BHbVm`PW.(XWh%"sp_&
%eJ>")85eL[3]p"_8L^>YNc^][rJ2]nmH8j`I!_790R7%aUHCB(I(mdF%o`HIASJ%;;l6jATBel[((a.0O['4@1,PJ#Cr2hNbV()k
%qV'f$kIXD*bigJpjTau&P9$p"jn.bO/N6D7@Ih4N-E#44o(ap*,0+[[`h+62VIZV@M_+%#mk#F?f,_jK)/#^tq/rGLV3aKQQjB94
%=+SobKJeiG(W[;7'FIuTjIO6?TA`AT*<rB3$KZ01#im%):7C.e<m&N)OS$bVEq.NZP4A6DC*''pIK3sOJ9X)"PJKV?OCeNjkM(n^
%f<)Xo!+(%s`aYq=P#\ajOE?<*bP%cCX6NH.R;*`'A2=c18A%1-OVq\ufF:?]<*$UNS:J*c1MQ)Q:\H:@$;o!dA5L39,a%F[g1cp\
%%HV3[JC9(d2,C<3NKJ+V]su^3#0bC9KB=MMFdcOc3"G3iIn1$?s!23C]nTQ;O!B!kifD8b=So$E-E0N/&#%96U1HYd3#p&pqi4b.
%MV-2O<'Wi^/)_?.#mSOoMHqM/8NC1MBk:,*`fK,T;Ws@go8d>3!pbl`\?]>40lF9q$?P$8_#+TrBPt+YVn$Auj.K]m52#C%*_149
%WKqkR6.jkp2MEag/Bff%U4T1O^#qH<Vcl_A0S^l>W06Z!>[ufjW6`'"J;%;"EZ=9jRrt0(ei40)'6&#qJ18PVFCFbPI3!tYon=a<
%B"OHg"JZB2%DUo3;\\'2]mbX-0X;PS>fX/kl&/K3&:Bj?/s5lTnd7"XJ-2gsqq>][1)>r-ji=J$Pqdj'+;bRRZF*LQ,C).klqoL\
%5S,eg[)Bej+H%'5#i.c0N9)BS?4lkn\;<p:A8,qj1*Z%2i`9MU`jTnepIk*W9r`(Ji;fAS@!)q,OsZ.J^+BS\=5N6U08$+Xc&9=0
%EV[>416F.!F@d@ZfF)M?C#lLpFUHdF!(\GV.ZMqJ)$Qh.r/+9mrF1css+bq^6A^?"Y@M7*%Oh_&5g]aF>JM,VXu8]k^GFMa>,)7A
%\]->)'KY;f,7EOD%nXd'EnY7$U*VlHUd1#hbK@M]WmU&BH!i\$4><=L^-c%/IbaRpcnWa<iVJCqP<ps5k2,S=#rgt.Gos4u+mah.
%=>aM,(;0i3>pARfqu5e8Q%;8]8H7Jk@jN:b,>ZWmG4aKq)]^St_1c);#9qS[!^pDjUjaXK,8#cS;?Mi1":EMk]>=IVa8(W-OubOr
%0SkT#@dAohkGdJR+B(he;2D8<NY`5E9ZoK0,_]@,c0"\0B?(`OG=1GBl"'A#FP?O#cT+(tA!7^E)9.j3JEM5Lnh[c;0a#BK%+;K+
%V'uber6/(^*mhfGCkW@!1-0K2N1P?\jA3H]P9ZVaDUPjB6f`go4\^Ll[.>;malo=NAWq,$R9jP7FgK*G3C,)1p$h_:G5u^.,N&L&
%ZH_>$UOToL^S7Ah74h>dEho@M7>3u'No=V7>.HG*oZ*Q)r)^T%i"7IF9Nq6m\X,ibdY(6-R=UHY%F:<AN:3$a&1S8>l1JKCSq2D8
%UseF^U<#cBnCW;="sWVD'lf6T8kT7*qm[-f8]u\SW)kkXagN5qnV:N[,.k^Qj0:>YnZc5E'#Kr)kMC'm<L<l*AfqS'90q8b#8KH[
%j*_eLK,A32MU2]C)MKMd2H/JP0!t1>]!i);R"c"8@K".3TWLm,O):mrcS+35RK1KYpa`Y293c4$e\LCQJnSf\$4-8n&2-@%PtCu+
%\!lMsZA*jCp"iTB%pr+s`be+g[#8M"0:,"kl9gn`"#\"6a!HO\\<<9T"G.nIf)U!*[L$>]W8bZ;0N'7R*]n1temhGQ1n(i)2,[cB
%(";/A?s<d#OY0DBYfb2u(B%Z;%C)Qc@V9<6/+K$^IV?_YG8)mM38ua%Ik4-iZ\64<38,Q75KmbT&W*E3N8sngeU.L^g,L\uUa>Bd
%O%,.CMYP7giO%<<ADmD6Rr52<0?auGP1]Uo'/(qkO/Rnk'<MPC6Vh@^'Di>7/9)E5s$TJXF'o@Gkj:RM$k07E*U'd,j*G78C^Q.3
%`gUWe:We^iXSM6n1H#iiYIFaG'1[_S/X9F?W8Xb>C()he>:Zo;'bD8R<C/HqGXuN*)rIU2So0RT\Ac.HT9aFcnubS,Wk]@7SYaSf
%NT9Zm>k-Ofo!75O46RZt0,](5:cP*r3J(B)oO'*]NAh<r=Ka1l)`t9uATXAp'pXD(jhaH<9<:;>PY9GkYE3DWa7a@4:-2-n5Eqg_
%hc@FrZ\[D](;J6En`NH(M^!MW(Yc0;5CH9?^a+?T$IPdFatT.5%T68F72nfg6\9H,5]+JI]W)Ng.I&,OE%9^O`%>JrRb@G9ICXL+
%nCYDi4OQD:Ao*X8reZ5C??L6O-@H''3.Fn5p#Me`4M-tZM+03a`?,^a\;-\EiWYD<bTb4^iWh;1Gq7a8LiA%Y[qq"=IpAgX=7FY6
%/]0k9X$\dt%32RYX71oV'aG?+3e=\"b!$""nR+?pUU]qqP*bq[8$-'=<(+huY.+[;s!`1Y-7VbsVM'2ZB(+ffGLkTR%#u7(Xia4R
%Imj;t590>dN,jA<lb?_J3boeE]&dhWZ_)-;7@(*DJ$M[dio%)s(+>HF&4VtK=G6K>nq^+L/EAm,Ki0I9"]OEG>i&$><1jS@S/h0$
%iem2NY54A7TLLW]V>;?m;I8<N6,E3@#S^$-n+8FdN-$%X$j2Wf$;X("(JqZ6O;)kZJYo\&BE:&aT*FBqS]5N@<%hZ[H8b$B[9e@h
%>oTg`GUY2P),[ZKaeZ4,Uj[:cQ9,li2(8A#`oj]#^R.!jrnGE6j2U7Rg[9OdSrMns9"/,Uq6&!*/kWT[Iec//i''b)5^rM],+*n'
%m[QYL?cmi?B&EBRg[;hjabYrKXh@,;K1S"iM_)F`nIb9'l#:;]@"r[b74LiX1"cYs6)pkY)!@Dr%`HRd=3*RYRFQ2Y>DXRX<MFC2
%I.i>[5:\%fe;HplhRM8F3isXgUBV1.6;F>6Sn0EI)//BV]grKcZ0#G;SQ(e<,c_`Z01&$iPf![SaEprAH6U\cWBd=l'%g)Q*0IrX
%04IM,*?o,tiIP&BkT$gu>-FVU;:<I/n&j:1!oGD-!nrq_o\l>0>eVHBbN0l^hk]AG:qPL2pQ/C<<>?2m*#8cQ3nj`D0SU>RTdM:\
%Gfj6X%+#qc^A%D/'V\9A^E[;1+5%WdeCJSXTjo[X5\h(J$="4WXhKU9Y?7^1=$6lDjK^oGhRk86AD:;&*S9;5*r';_hCIT,\Q:4[
%'Y6!s=;VuY+UtPGWbb]t.L&N$,ZK4O.Af\/[O"WF8DY\[%1E<qB"+)m[`S!HT9`[(2<ND6pM?ECfNPqmK_f\QImiS)UGt@r,S.@7
%Gq;4f6%3gAK7B+;H&W);WS._m9($g\cXk;9IW^?HC^F]sY&I:?*%"ls=X3Vm4Z<dn7GrTb^>)7-b\GGDg:kt;S6X3RrA^@t-d^3%
%7=lJ?!>a#lrqPE+96^r_$=Y(u_Z3i?W47@s7t."2X1u"(E4<)2_/G^%Zb;%T0UAMMSR,De[K\q1d(,PH-18`r`0AZ1Z&l)r+`jIW
%p^SKlKq<;gnJNbL>Fn;"DqYhc,i?62gJ5QXPdi_kNm)d+FfO+U7Bg=dVml=K1#@.-DEaqik,2'G9*N=@G&oK+jIT`JP@,pF+g/,/
%YOj's9<?%8q%lL=9f\S!&u-_07h!bNdEP3h=-@FlI0UJI`_,)FZ9\&!.u/gdnEJh]P]O+]WNk3b.&@h$<tGQe1qDL/W5d.\NUJsM
%(tJC!eKEbmUb)Tro^;^e'<jX]Vn&2t\Wo_#Oq4V\-2n1AlK<IX:_HlCaY#VG-IWdG</3MofY=Z#IuJ>!a;0`SJ<4fi"B>A_+e:a#
%7C4^0;!g"?+Vm3XX\a%eVJQ'^#&f6CUGc[J()Ws=BcXM`3&Y':gmK_Q!a-5:Vk0#ri9*\SP%0S$a!buQdNJr_4!.,bJ;`T;!ake.
%nC"RIR)2ZeaeG*"-T:B>o2/K1%4Xdn'mhFL=-8&gWjF3(G[ia<kB1%A8B:YlPb042Uo[$lh3]&L0hTTFgOu(.9m:?:0M45HagM-`
%YAJob6Kn!Xb"ocrrL&chUchEZXS`lL:;PRs%op_cf1F(u2o36uF$d<VJnNd3]YeU%,tFjQGaMoc_SJ'/\2?b$]Z7Fr-6.E#Mt-#Y
%5C\LCKnfX@EVED/.`J/,aeI><l][k4&PDI5$_h<.&BP]J#bk.\#bloW'GYr?.9Dm%:>bmKP3:^mMg7Gb:ZtIe3qa`C4E$Bq4=/Gm
%ea4=aMVSd%d@Wt-jH.4</;jco3nh9M0gYl?MuZg`+V3oQHHHjcjI2o4'S)QHjLU<*[-dLKgu$TRD3RjiXLaCaE0PgAU2Il,!?^8%
%H^[d>Xf0gJlUAAMGV&\0ag>;9qjbt=E=j8i*RV\V4*p:tNK-mYW")iNXQ%NbfR0A2Zh\E_gskJmDV%uZ@J4o$XItd_fmQSi1G"4:
%>YmY;_XbCP^U7;bj9UZVBqt/;a=Y@(lX`^06drRmh^(ij9"G?A'K=B>?2(RIUF%)2Y2Fa[rQ)o*hD]':?"fm.PAf_OW8+OFDm[]0
%?l/h?+0Pr;%\U\(q-.RM)Lm6cf'>Ng\%>"rc,,'dZ\"_IjgT_%46>@/q<`IjN;e0>mjk)b<+rGW<N5Z;#"OrVNGdd\eZWf^pKRUL
%o7!d^YOtA_e#!e$HIQidVRs4X`QHd#N=IE#Ic^C0\iA9.:*0(*reW9-A>J`b8,?mUO"U@T2M*4j.RDWfqDeM=BM/<Qa4Mc>0IJ'p
%XY0#;;5*_fUYBYYWK$Pd/M1\$[!mJNC3NG-h*J)?H.$W=#Hbtu9%E>^;+,DBIfc07^_4^sUQaF<!#5B14(U'b@@c9I$3.u\o<]iS
%qtQ5OOGlFgK6GK:B9#0]ElG(c+:BQYiRL^B^-HQk^8tI_T)>5"^sBoJr`mPR!r@rs5PLeB3I6pL*moHi4o14'/7g1MduuR@'4%\!
%V*s$6o>QUa&'L^T'<Xs8OalmF-8?`=J".NR>Z<!X0*W.T39?(.'H/PYJf%^CoYL;0Ihp<Bq9>21*;oMk`@'Ku+'njRRRf'(A+:F2
%(W(T?Q#r;K>A9SG\ddTPBQja*r)rusdI(&2M1EQS?F4Rr9s$-`2fmlt<c)n+@(k/>l69e+'gJ-9r*4*G:MF9i$>S(2;k.!/*k/_G
%`a59@\%:($[ls*!m&/DD[1ttX1Jk7#7%%2Xn2D([BkXS;J&pH1/:(s]BHCN$d6#6pn$k7R,G5#"D"VZ*F'#Up%IFX*0&]';<rV)^
%l_(O_TbYo7qO3"rd<3udh>O\RE70oHIuMpLK?'tW:[bl%%U/25\%5f@q`K!jj,_#Kg='T&9OD;3diq-XN^YR@%tA"F\Q*0G9O.jN
%Zi5HVjr#Kj5B7PdgnN\Er)l&Fp"TN5Fbb(!50QErc?u#X#n5mE8+;!un9^1g#b9_"UH:`?kAapor`!#JZXC)G8_^XWrQ@a$'M1[D
%JQ5Z;n>&8ZaB3@t[_(,%<_c1?r8Hgu7W[5J]2,O+6<mITo31IaheEUX^Rb"GDnZ#FHs"tSX*eh^4GuQiDtTU%mZ;omXLFjLG#Ie"
%[RWim1Y=$?g9:sBr;76MVGg#%g2A!R8=t03$@Th=d#L^:g[eb+:*j]0kjJ1?gAbuScMpmQrYIXbs,h\TMsti@3b\0[>29sn8b?p<
%^;F"58Y\@`rKepZqI_=*5871'#7#n4&;J'L32U^\:<(cSK>rB%G=#m4W861>UftutmV@#k.OWoCY'2Q:\oVSHG,Kb/M=^Bn&i<MN
%Z`99,F38>>F1rnA8%]n(?tXptR/V5'#^V>D;L^tjrG54b)?BFt3R*e"r(im[E@:cnGrRENmZZM8O=GptO(qW"Z1h),%r\W88ajoO
%kJ7c0\8h5gJ,WSrg)(fjZUb"3r;[W^PM,!^<ZB$5SHQSJCK.9jZ$hWHq'd$K5M>NVP!AmMOjk@qTmd9ps0m=jG3EVfiTT9IVVUX&
%^*a^#s77`<b$skTf;nBH[j..CS_bIK%!eu440@ih2>2BH9P2@U"FkEO>cRX(*or46J"M%6f^/7$o738/iUBWOr`i1Jnc.'-F1,Ii
%m<-_84!ulY3o0c7G%5ot7qVP#ZI_0SFUpZ(`q3'\LR"W8s7]k"Y]W@`o]pP.Itpoar?c[RZqY3nq;a]D*uqXlE\3YCH'`-r8ZEl8
%Fq61H/3__?qmoMOE2PH(EDSZ6Fc6'B5J64!5L,Q%#@VT%6q'`=XqP<PZ[%fC,#6!U+Wbd*]NLfD'Y%=(*JomlU!AuQl-e2;KO!5m
%=,hYj9=N,%B2D%+2&M;Nc:l*'^",6@P;h,DrgJ:@r)o)@>o]"dUO5'#BtMo0i1TK2`d\qsa2f`B`TARdCmoU[efL?))Loo%s%_F+
%g?8LP*Wf/feX-=i$PNjD!FGBXjW_)QTp>E+O8.+L,[eXN:H8Oop*foqR"#KSlMiOGn:/+M;S52sjSal(F8pafr#Bo6b!Q)#q"]Dt
%F42-X'_*`&=Z]/d7=e?olY?\C"We5)+8K5*rq+SKnTOn>\k2mLHGD10!2Z0fAoi@n#<VYY3t1!%G3aZYN*k)5rL`EDn&aX?XH2\N
%haHT(H[jlIf4c4f16-=Hb:)CN&k#cK+`2\lHustWdmdQK-CsE]qi1T[B^PUkO*^bS:;V&%^AI39#&e%k@A*D?/Ge]-HVlsDFXo?T
%rT7Y"U8`n;QtK9%aKt[!c@Xpe?gQ5'msiQfiLT\aBd[E.'9<ltee]q$2pi*a?*eQNnXOjKYcn=l='tFakG$MQ%srf_kd9O^aZ?$^
%?"2eLn"2NCK3&#*N_$5JEL(V6k+=nFnV?$$n[r"Z-X8'LLk<]*\4cokE.C.kF:-LBX%@!79REMDr1LqV\))R1X).Nbkt#,IrH$OT
%2:3m.C$JIEr'@BiQaSh]KK@Uh:8>oLp-1rBfM1,[.CVQKK2t%[G1u2TnO`]*7b0a068-?sUJT")WFUfWgIpc=gHP7m,YIigBbQnV
%5.TfO)i(5G2:=/ITKj4_>!6=fi(BpmAE5I5<'']^`1/8?l6ek^dd(2("I049K;;DW)sSWunPU*EWU[PHK@#1qcUHO-YZ6Lp+kIH$
%69_pFa4+*sEa>A<]B7ec>hE#eBBLe&be%R(q]a[F]88K#QhD,qOWUO]a+LoU>+m$4#\W/20J=,tVTuhZB7\HbWA#Z>e@p#/`f@GE
%Ic.iT%n6e$OERKU1!I"J=!nmE)'/6'A;i2d<8/:^<5_!&r'/D!E0th2"(MA,/4_jt&JKGnTGf2,&GW\@_&1=!Zg8Ro9/6-ScO,)7
%5BJ7sN]kmSB/FZ!E@*QZR.UkKU'Nn51;UUselP8L[lBH=n?S,Z4H)JQXWn3\:hMl=N.!_n[C];'p(`A\Otu_o@,@"?#(\OcTM\nV
%T/P1*?$VUhp;iF*Ylc?-JN2Tn"],6U:Ek8*bh!09oRJ;X/Ik*ml[`FN#G]Y@#LmIY/XO[bYn3s`d%gp.[PD-k]gn0UJhUK4;RsN#
%;2f0Ae=&Tl[CKCG"4$^Pc1nXSc6f51l\cS`a7?4F=.q_\au(YoHK*;JT%kji0i!LI?%t\[R%Ni:%""@KbcVXE8^1`@1BdA\[CA*A
%Ko)c/'8tn0j$d4V%""]0TjpKB`6:\MN2Pe,Ns,?LD6B@pTe8]=C?VP6>i23-)t0dhGiu+eP#k8\50f=8#9o84h1=MU!"P_c012<X
%50aRi:78<A,X(Q<bh+/b:Y:Od&g!&_T(JcaB)AT\KKBQ(5B/?8A8K?W2Jp.omW:mXjjNk!>m5>1@]j"Pe_iQ8J2I[%>T-Bd1!#qs
%79?ir&+3nd8WXU;;'N?("0Ihb^!B$\o0&:VKbIm0H0!(X;f:SVlm6qCR0;4GH-ihh,86$W"_##f$6dp!-l)m@#[_.:cM(d"BA5?g
%MZR@2bf;lA<6Q?$&WKBO0Dm&Y>6ts`b_IEu730ApjPGjSdnbS>@t$[`/E09J+Alu99*c`a[RNV&U>?rODg(3YcigVT%!CIs\]@p<
%Rt,=YVXhs9r1G1YL_i=J@F*s^7m/n@5-.+9jHGPFep].]/.lFO=J4Iu?^S=i36$XI31GjVI4mu#?M^$g#p^%V[Ld2%_dEd\-I.kK
%)pAt469i5%i;SB:D>4*BI+H?=Gg%Uqmk[^P#`iu`H]dmpO^X0,:fn5D5ojOr`SdsN(0.W33rgF1&cu6qiQi_.KtN1lTD0sISDXaE
%R'tG@+LkNkjVT?7EM&A.4KX8aC+skg2T=9XNXd2E/?,V2%0REPfZt6Ei]&FKY7(mTo;dsrP]nmgcI#V0g-^fXI53W,5_U=@__I](
%_t@S/4!q@1#J?$.U#$E5SZ[!gcP'&j]4DBUbb3dSZ]72L?phEZC\82Wh8@B"cWou&F9g^QDmM`!grI`E]e6Gn(1+BZ]<FlP*G55-
%_?sVU'ln1F[b8TED>+6o$G;jfcFJAbgId5WgPrOJX8<-@d6D<t/lZTTiBQdP]mZuPQ@/=+/0p@l@&H#a7V=I7cV,%1qWad(&P+:0
%7/qIL]T3!/Z"[$n%mnL>"f)9:<XVG3ni]0e3f06E)j9kfUON&h:>ph_Ttun6`pSiT"gKafk/#arhT'h!;8e5RE75a(L[?tYo*6:"
%atZ_`KZr"6c%UY_WFN&aAJe0a@%f4Q<tOKgDfE.Ds,cLZ7'RIIXJ5s(BXW/TPZ81[ju3&Hf<rpuPAMH=n#U<d=fJ20]^s(i5%ZZC
%d5H6+PtInri^=XJ?rY)?R^jZ"N.cls.;".Di#W(H/0[$dd=8[/,E\S!K1%`^:/$pi:_gg2Y-?b0g,(7!U6EO[s#J6l6IlmecKW)"
%o9B$_I959<q;@BqDq3@Uc"lqnWRB_0AHXd_1S]q/"(/,bYWGkfM5C*3[4+O&'`U*L!a23'Z0Co<)-pQ(:r9Ni+P"^7]J`=76"mAX
%6=:qU<p1fQjE(K2H;05cF=e9f;,5fUGg[)VP.KGk]jM[V^),::]Goq06M?V``u]/on/elAM=n*)>#>!)-9fmqP`tPWBfjOr6;Mbq
%KjeYObE!hZGV!qgKbZ.WW.ZUf.G*tY>368eI9r8@rik&s%#_:)m&oK[o5b,6"DRlo4Z!"F0p(E*5ah+K/:CAH_htVr^YdI@GQ0Dh
%Yh_=t2*IY$nI4du:]Hg8B[ER/ghM1KLDP/X5fu>/*d,c>LP((s*XQ0$Hj3"2>D/en>FfnldehNpSTaaPE,M`5hXmu-SZthkGs&VL
%[<gBhs+)9g6QYd>fjUqFQDruZDKLU<*Ag(9bf!ldge[a$!_*OSNkR_==u"7hd$3@pjLj&ZSt37"_mRLG+4455!3*&#nC9>Qc-spM
%^&?N8T9h#`s*)oU;M0\CE7f*tOlkY\S1P(JrsQI76)3Mp236I^IEl#gc^00'5NBM5=nT7lS)(pDh])O1;D&"thtHe6k:CJ/*sNAs
%i`b0gMQ=7QoD_C\lLqfkMdWO5CEBtY08(\(FT.V/i*O%-:D6bF=X;D=:2BW`=*&qHk*uBAUA025W9Hj`(b47<Q[#3fEKQgk[hHX?
%RDPNP0?t?[p=CF3XL!11)"p^R!VZ7d8bC<$JZE2":ca@JVpp48\Y0?.C@h8I3m*)-5CNY0rYohI!@m@5a6^L#$HMX.foVYZbPn9M
%O$nU.m(7-195nh27FapVk1o'\%=<>A+Vp8"r?W5hTY.)c#G+,'Kn!EBEI[s3lbXU-@:[[@\Gs/X0D\\7jhgR8Y%Ops,ZS?\FYMV9
%\&kqhd.51@qIR#@AsYTmZ[T5\6YP_fTiR8^q^(BEdMb%;8`0@FP=`K81=u6%e)WhPQYTkl`p0=pdc_59HB%oQV:k1eZ?"I1i5mn/
%a>mr!NUH7p_2bSQ`c"o#Ofrn2XaSRgX5"u,RB8YNWfjr=809oTX_`)=G.,r)4R]b@!1,JgNRiZP36-oVlt)q7E%%=5f$Cfg\)2XL
%]]YpI<#(2'b&Nb!r8-,2EnKiOSW9EFI6MKWN[ieC_6DI.s-&Y;.bh'kYB-"V`H4H0D/.W=[V3Z42VcKeh`;^JddZE.E%Y%oL&/>l
%>itO_6%mtiP?->mY7._]5.=<e1@/<]e+q"`J.<o]rpQu3DX7=WQ1b+LYd)gJ["hE3Kt17r`i*XYd60U-*4@?CH`-]<EW%8Me&Eia
%gn9(9f#^--4!n<d<1]X=p;a,kKZb2I@>!%cE"pmeZlKsDgq<AWgJt]u(J!<IoX!ShqP^]G2XI90gmU(?&](^#l9&kk#p[r4X8cjM
%^d".nOgOLfYM&-tlkN^e>O94__U,-W^;f^pJ*r60DaOWMs.$)R%m%D;7VB>UHI`rJc:76fh;7Bef.!P@Q%P<T1ct)'+t]2#s$sGE
%8DO_ILb&MIW?\b+n#cR<4Oo(*#,,PaBm3dH+joBTRgqCgA2(=D+@F?O^`HjQ2*g#`c.;?nT6D;;)UJ04B8Tgd]nI)l'uF:PgIu11
%dT*L9k6/ZllD'?F:<+B;=04[U9Y\00Lf7hKVr(6RSE5AN7m?OIXoI94P8R:;KCKc3/tlhl?p?ug@fcAfs6e7=R-@(u?[I-"3]Gua
%,@YMs(%6%8j)CJ2BWNB6*l0G^3?8TigS]COqr?Aoe*FK)ZJFg9@jW"]ULTO@F!p9WjsRg+nk]JP5ORo%l5oRI\[+Bhrb6/_I<Lbe
%)'<K!K%dC>qjAe$o*:-lf5^TNp@)op3daMqgWRlGV;:8)g)IEJm>H"'F`YU?rt\rJ[FYc8Y&mDi9(N9?"gHD1[pjS]/dC1b=")g]
%7hk_K(-,l3($3p@o:67Aff%]mb[@?a%*m`:q0Laqj=r!`09.f%IqbFpB,<heGt5I4+>iumeNpOp*=Shc/2S9R3sGRrXO6:ka`2Hb
%k2T-LZj/=,?DD,IG<4gc+*<:grQY`6h,?@$UVYVi]!e8JYX,[\P6,<*;3S[OYW?XHK5.l<aSGJW>;^c`+l@lGCXc3@WK#jr4cD3;
%*&WQ"[;mXgZl-ebR^Sh5idA*44099p>8\oh&Hr,ufi*gcBsW"iMnq4YE/X\$m+Ab%_[\8^FL6\GLVT:n=naV"F@SO?R:9a`'*BVH
%S9:<")*YNEFM"N,3Mi/!J5!d`o;%hMeX:`E7-K)2A*^u)C62CYbWOV4W[QbXd=QkgpUlS0#:LOO3]c[&%bg.ro?0WKL>Q`iV]BLX
%[(Z2&U]Il>bZGePZdT0H,)$Y5pY_R=WRrAfh4,h!_-;560Z:tV1SC$=7!r\u-7cO$bui&P.(Eahdk!S?e*>=L)ub:-gM68jDu3I)
%7edpd9Pu)Q[&'lC,2:WWNbTkO#9@[U>6b^fGrP?5a[5f<PIbd@4/hnL=.crfZ7]7KH]A#4)G2e?coX30rd->2kY,kWm#="+-9(AU
%SC&-d/tPCB:etng1rmGRbV.=(S,!4+k@]6pk(T4i$F.H7cNYu,;:s`pG*5;:T(W\@h5Mcnjk:"Xal"-O+d(:nNeenqDe28.5K9*n
%Tdji(GTeC<nKg:KB2MEeF-bLa$@/4".3A@a0e?5CWg8::r"D2!9]b.#BW<):CYCoHe+)*B?ub.JCN&`CHb\*8I+m=jG:!Vj=EQ2r
%*fFXNfRST_#:u`leep5i:M3bc0:LX=3MAR3mHHgqA>aeE=e&6"[V./'2J\^[b>6W%^Y1jpSsVao.]iL:o[_^+f!.EBlhn;RrMZap
%l0Si`]3IOnnK0osBm+C+UX=7]HGP&Gcp$gYq0e["OW)Vop?H+%TA23*\P-km(l3&bNL/"4c;hO(aARoMUI802i]JkPj%r`'mX3u^
%F(Xg@h`Rq*p06oIZ5RGiG.5`(-H]m\I:#rN-Z*TqLelaQ<`-qt1C:Et8+X84NcR$iBQch6CP'.I5J2MA7?*g$V91A0Ytc7/<nc<=
%%B!oRdd"3gbkYLbcC7hcZ;PeXB$Us"^@1t%`6QtZBeOaT.3sq9X_E73U1[t[>^g7$7_9Q0+-l^n]LgA*K1VP0O5s%p4fjRL[dued
%maN=AMY1/RM/-]#)W'A_q0m5Wp"`hFNApHiK:?'Q[?^`DPG:3ph(+OFY0>5IWj`qt_0,A?iOZRCBBA6-HV_QVG;_\@HFhNhCIT9/
%rmUXs$H$YN2d#sgFu\qr?Wm5)]tL^6Il^[L4Rj5%R$FMm.t-%7nZ[33nAXP4EnK*F\*r0hY#VO3%`cTCgj_s!7V`r%mR6Lb%+i4B
%XG-*Yk#Y?)RtK6]42[i(Hfj&8``dWcFmWu-(7oJO47F<[Q1fAa8e.Rs0A_1\h5sac9cc1Lm`rk<jl;>].sD3JPI\*s)eU*G&,$NI
%(rk1IQd8lKCBkqg8%$W7kKTQMg<m-R'YREKN-r1Hel8-r<gN43H7^/bU^-QgLS&nbYFFG#*pl2';Hnsl?=2Mk\CQp:]P6`)d4i\o
%RCVI+;nn^!+,->RQ<.u-2s4r%k.f-Be8N%UW41&ihg>%kg<ig)ff7!dg2lQbRn#6@neN0A^O?((SbAu%qmF_/qmR@;F!&\.2g9.g
%_ZFFOQ6%+O1lPR`ol4QNgUqYaGPC@M@W_2"DEE^k#7&([^\LFF*T'_.Qd)qYK3*`:kZ03[*I.I*g@`DhD6eJ6G@k9t<U3'!:LjoQ
%2fGeI+"^iH]fr'%'LGrLo\Nib(Y*l)k*BBA^VAgt?2M_AhWs$k-/CAdY@1YlS(Hdk(T=oH4.\;;Q9\gEDgL^/[AReuNTHWK=6AB4
%0oWpZT=>\T6Gn%p=!*.oa5"@fAc&[mfBZ5.I=6SCMtH/HocFbL^[^ISh-6NGfBsa;[2lrp]=bNNp":_Lc#gtThc<I`@Am2nEB8f7
%fbDr[h/0N6KacF3C29FZh.s./rQr25?^n+.CL?8U%Mk[a>Al?9?*B[0QS4Nb2r;2Ph5](uY8uu:^TDn\Git0CWJ,87579g8RJh?q
%T@M_t>52]PCLcbtld,7t=0oDYE,suXUOI/d&J"8XM5'D9?8c3(oBkV\lIP+b-Q?j-qbI>V%bG_(5Q\jPlAN4MY8Z;/8bYp6=BX>u
%?<uB84?OQig^%qAQuJPbVLQR-[6l<TX,]<0olp9l%fJ'(pXd';%k@\0_=ErSNA[Gmg[fKo?LhfP^P^+WDm%h'+eSX%K/:L\<g-&(
%j37h0T-#S\S)q30V(WcD#>_A#hX^(rJ+i`:AXQ+%,N`f(Bl2)L4IrSrRI0&-\]sD/7^$nDhY*>im&]Z.:flk&S_U$[?(7r<*j#sI
%V<5tge``S(H?:7#5O?$4FFNo!qSN/:;RS1!EU-2eL0<>\\j&^/k$G>ogO+?Q2IC?jC\Qb(F?kUoh=pgPiR;f;)*ZrFIGS,\=OZa:
%\U+k$+?LlR)Qg&cYd(p>URG?<HH!OpWZJmCk>BhH^RX/`I3%aJe2lDe^"(r62qP$i-b%P7:=nZUchrcl$dnk%m=V0<o\$R?X8BSu
%2U7<Sd<IRa0frXq+6Vk[l][CA_8aXVh)G-%bM$9IoQp2lNTOVdrRIBmBtKk8gUlo9n^l('139q+(H[Rmd!P+2f8aK=gDe<He4bnQ
%^Y?KYaJ4H$P%3=jgH/W3\bkc:-@&(0"[UHCUI1JXCM0_7r+0d1dGTQMGOq9+WO'nIeX\@Slh8q@oukMK_g7T:I!J0Y@.Ru)]fZ,(
%\oY;!B"r@rn2,`eXRr!+DT\:,&*j)Do)5\:2i=1`Y'H(h?f(OKba`RtJ*kk#-Ye.]Hi3ST,6*fJB('Ze^DcMFr!P_s)#f?-O,%YP
%,BZP*be1KQqag]cN>;18L<9;R@H96B0Uk26s/!H\\VUadFj2e:O6f!ch_4W1r1Ym/p\46nc@!M(-gPZ<QqjfbrL+.Y/_@Cn/s#bY
%`o`T3>SbB'`1OBD*W,69lVAOUmB7teGUtp;j,<eWfRH$=>*^f`+2;1-GJp&uROs:;>'5Q:*rkcB>L,!^mANn*Y?@F!kM'W2Os39?
%QVp4kcZ<(FOCf*sB&uq&3jtmRY&$/9.o+KT^d[EuVj#0s(rBj-6m.uf&"[E.G]2"ncW9XC,f!^UT+9IOLD`5rJqoSt3t'C$0`I=B
%DA\rO:ZB&LC%Oc9DR-f-[A:K=9Gatu-X081DUhs8$\'oE0Nl5r>><6jGeh``RW3o<\]muCqAH0?\_l;dcE.LRehiHA!aa&X,D8jV
%h/'3AEEdaVirUZT?MG@sO>c,%fZZ58e^38L$+ar=k7MVj9SuC'#8u9=X<9G1A(jd1D<QbLY'GA:pXPJq`lbF70%h$GIU4WQX'Ln2
%LRT5iT"_nEETMB:aD:2!M4IhTE1M_,4_a;.jn6$JL\:A=cR\>+j)6kFB'+1O4a]HHN6:HGF0DL/;7G-e(M<,oY5/"Cm"\9%(:4/3
%g<-I#1J.Q/D#<&BP:,7&q'FQT[oTuMCKi;NTDEnFN1HoP@HQ3Q\b"&2HsU.SZI-i6aKLM'BA\mRr9AC;3PW1.1\:T4c=Bq_]u.8/
%mIc5p<GqR$=csq_L9Xq>LNk>Ygq:WnFtjEkUpJH1.-lLHGSAM<$baNWgE0HNYlulooXi<kJjjWmUZh7a&M$\E22X#'&OGa$qSZbp
%=Pf[11Wq37<;R3n5.nOJCt5dLO)(gW(K"bU.U"X&%fU^*B#L-H9)Ao!%3+i_N-k=#L<#LH\O@aemaYXF]Y@a!ET?'j.eoP.pjn;p
%:mEtjR/69>-e5Up?_bUHjt-L5]+73SY<&/bX'76L&D>Me*M(D">=MG8c^<JO3I"BdR)AYC2FjY"k,-kd>'k49UIFA4`A63u:&<K>
%nA4A>]d0"M$D/(1h4.jl/`5Pb=*H\UF7ekY2]>.C\*n82.ke(OekFr6h'.4eLZ^W;r--35l:2r!gn@;hrp326A!Ig7I8W.U3_.cI
%o7PDl"phmEHfS,mfY;bZq^j+@n':o(a2:q@/m.>7[^!LETpd%3B]IR^gXe@7]4YLK)p(Z&`&3$mnN@<p8'T<![27.jT)5j4:S-7=
%T"VhBqVp2R/"$2$LY#l89+ek,??CS'pY=LcX`b`o[T`Xo6dm`#UOW<jN\!+iqYd1UE'iE,qYEC:YiOVIq?"R?mN!SG8%HpS:2:AU
%iE=E(o.L>M$N'>ldqZ2\A0Ln[2uH]nYL9W?o.0d?Nur8pSt-C+(h-dSafq5kmuk37hUqTcHfYOV%9Aeh5'9q5^R2WYk@eb29`d'F
%b2f/SeRL4rLC7mYqmX>!&<5cQ2!HOVpS;MLOperdr,@d.m$lOp<[8H@0nf2o8IdNUB6KH]NcAq`36#K_p($BT6//I]/A*?9D#IS/
%q^]0U0ApE_p&!_U$$1<L"8/>dUr,ppW;+NANS1eeLT=5-Wr8/LhgP'3Ir532R<MUiF*6m.epVJ=rpZALFJ3p??<%sW,-tV5eTY2(
%DRM*r*^3r4FfO2RqVCCJ]#^FT0B8,ZT0M.V0@#g".kBLlT4Ut5G*GlHnR-G:"sG4:";u<k^:3m??.<\XJ%oXJJJI.5LI>-<:NnR&
%:;^U:UZGms[JjlUmk\Z/9Ahr<Zg5jrn&&m"PIr#Upc92h^lBLA>?S]?o&eZ$PP4mBIeBSLqVq5?_q"/1\W$hQ*dio]a(iB8g'`q=
%-nliQmOkY*HG=_E)TXhG,$qsq;`=T!pZD.>NR-3o^0NfCPgqhbp%c#91UAm*b%#RP_]-WU2sinOFm7i\c;@nbZD3."<jr>"F19C[
%?J],*:-[>oXh;5/*2Z)AdP`1R0uM7qm@)n6/n@0P$/E,O4aR-9g%LPc>kSsurH`F%Vg[mM;pt@$=#\^e5.k10\3`8?\+Hs"r^58T
%$0adW=1=r;c)%P)Ng<k@ArkW;GN[Z<;L<i+pJ)<ie7s+rDgZqO1;&#CmCiq6.2%fB*7kB?>Flmm:3,7)Gu/ukIs!tUpae#=SP&q)
%HW$iXD:;7`I*8LKQ7TZu@JKLE?cn<U[rrjnFASSHF*H[!_r\;OVTold]9f.m?!08Aq9l=QY?ogKhr3.$pYMZOad+OdiGJ7VVodD?
%7>5fhF_CZpb#7U`YEmqR/^LNj(QpRnk`s]^j8QBmKB158qRb>Jjp4SCYPh\;U^MQr]@o@#\iiA5cioqDQm!QWl-m$-5K],9]t5U>
%UQX\_Fa\Hk9"%lpr4I4B@dlcfL7RZu(2NTnO,"\IQ,E!EfC,_0X3'Akl:<G[AG,ZJPukSY)B6k8_q]?i042?&Ep%T2E$[^8J'PSq
%$cB(CZaY5'LmFVSN@];5>"/J7AqF?T+*=*Gbh\0u4C%^UDWu#L<Qq02:Y#c\3d<qIo(D.fX+T67>j(k*j0Q/YpAVqOSS);jF.,2h
%f<2ZqdB2.RU%I,h>P0pj-R9*.(Fq>tXj5p'ldHZ*DQD,gN',lV>C6-Z0Nah%gK7gS]meuf;<6JM[?I_>HCSYT>U>5Mr2t4UUh5GC
%Kf;PRgKe?8ZeHjScoX5/*Q:O$O'`s`fXUK_V17m]E:'=MYEmOP6?;^;(7.d72X1PAKCNID0nN3r0nt8E[;l/if='l.j.j!epMR?/
%mmrC^KU]1%%FT]l2J+#t^P2dc!Sl\Z>&3pI%#M=$;2,tDSsbR\J*Ah)8e8Z,\P]bbXRZ2./'IZ^YN6:kduNX!qhr!K]YXM-F73\M
%^8`!@]E$,OUVh$aT'*!\Ii">M-D[e^Cj+F"\k>CD<+eknF_`kgH+H<=nFlZmDtRLsrF6[2rKEU1!""VY0geQuGBi<8>k!2bGPC6b
%$Q[o7e5*sr%R>=^i!np1mrhbqs8L"G,-<NTHLku\YH9oLrT5$EpRpgi+fGWa=#t`2aXY?dh8et>X6r,XH>RPIXEC8&lYL:fMcPHL
%O6H9T=NC-+KnJK9]%4Ntip"?`YL_s.IMoQbMfP?V4\sdYl[.LZXh9g6]/9)rC8]Ir?-+s/,'g6D^!5Nir78?*Va)8pV)-HY%1dN$
%]m8.U"JtL-Y4O[(j6_UH![dd;E-menl(s#rRlAI)s([E@dYLrnPkb!![>\e#I?Q-!9<Zt1[Vj>%%R2P0aV!.mhGZIr:Ti0n)qCoT
%^Kt(2Cs35PV[E96D`^l-+J%V4ok3U4(D/@q#4I_6=7VOBcFfNm$hFO.ou6X443L[\FfdPcG8:WB9[d.$hAi]%`X`8@>gP-?bWK3V
%<EChL#"u'[2c",;gU$^LmsR:&lK.tVCQ*D-Xi>^cLH-Nom.]=o`^<W*Hf!2e=fXd0LjQV_(3<iYSf4IGo1^MmUl"PVCoeVZFI33V
%G5'<1A&H;@,6Lu`;^/!g4t.r(:KMc&=(lL^Dg+\WFM2sCp%)q2:q[3f-<8HP&/iTfDQ=Non*c`I00d1.U\j_>oqV9Y=(-eg?!2Ug
%Hs1mfAGKtdT0<&(dRN9ZqT@7,Q_]X20BSo8q"*C3`:Vq-P8HJC?/=r4f*.JqGdB/mI<0PualD=>lHZfkBc2,;_$/0B7D#2<]%!m3
%GO84rX3:*I+)iB;mX;^\:1hrAD]?k=9hU^"Y=dK4j%u&>%BRhEr8uejQ0@KO#<C.)51ZL"rSI*te*EVA1)#=q\[0'.gqD`,DEk=I
%(=_c)2t,UFBlAa6bl9%bSpf<Sg\C@0lj/^s\(Gq/kg&XO@sdVQ)n[Dk__8["Xa`>5''Sa(%T6>/kjjpe_GW*)%oVWc($W,uc3T2D
%D\.hREE<#1p$1tgBU@*O&c`-"j-?g;[.oj:"ZIe_rT,oYXAa&Al7G4^brJZ>?aX+]]5+n1Mp:AZ[ngb>nbaWuaNaF7:7,)f8$MG?
%aJs^TUgqrDX'8@@i]d,+/Wep-k4IX_abn[HV8hiXf<rTjYG@U5^%V<#2sbu9p9X7sV#;,$EpN[*bA9'q5"t<j@s5B3>Aos5?$eUo
%gQ&k+?HeE(Yf.f26+Xk\NE\g$fAE\`]T!G;iTjkp7fr'Ro7sBYCP1C(gQTYU]4=4ROS-#_M?B`hgqLD-GN\bhg;ipACJ8Wsp<7Zt
%k!-t\P=^0*0Bu%Xq[72#3q_)LC4PK^pi(([k"..2IK",uQ`Ya*(W`q>2U#.6^:1_W1H&AQqAo3bL\pH&G0Z=r$+jP(VC:L'cC_Q%
%q!rQV[<qqro8PCZ++5,d%r760*-f"#g<Mp4>'dRKE80/no5]mme(V%;,8$I-)iq["."AQ[_?Y)OVpQ%;cF&]LMMBR$kIL8`EsWl&
%\Tp5/]7]e=]nb+lbF>E]PF(V(Y:#+/q_YR5E9L@fXmR5fLR@*$]9gJsqFFDaCn2cOG>MH&_A]2#IliYI>>NR+_tIfB[5sHfbO;4e
%+r9d`m7bTh^L1Yn]6i<N%'.Y0=dlZRo7=,/+bJ9'+#Nj"rGNpcS<(8%'i[XSjP\02FO/Ps(1-\1LQ/t_Eb]nUpX*O,r3C@jnE2B=
%k5D&MkD[l#HMrQq@q+=1E/um(]Ka"H%Cnc$W.@"42bp2S6b>3-#!;.,_ss?WqT$3N!L.;*fR2?->cEVF'+XPtb:gsBmS4a2kA5(`
%)K,2Y_ehf4:CA1dTB&Tf>\)BE_q(UIWD9U1*>qPYF#'*iZe.Gh!8BBfDB/fG(YPY@IetDJFrG(jn\42ILQ2$+\oh>&<+2'(;\O1-
%lq&8FC4BF<D8%lEGbNj4q(p^JV.WKdquLiJ)oL7pdFlWJ\'aVK"IV#1HYT7*oO'K[_q2$(=7+Q\/kn[%o-eC`h.bu\j`Fa*qmG9&
%>q%r4UtskAaKk]&5>+3jk="6RHsU"Zi[0WsQ8EG=(oX%&I@WSc*li9?l1jA;0*a)k<kJ1_oBE<;@Qete24jk0I9Wq9O^4A/X)i$>
%9NuZM^!D%rG03-aeqe0E#)'V2IN&mpJt5rS3uGCeW'K5)<q]_aPKM0"=!I+.O?%_jTdDUU][.gahJ-+1SH2Bp[GEWN+B0kp>5^Zh
%ZoS%)Fgj^?d9qT-AN`9%I"bb#^K./>_<H^t%-:F#mFgpiLTL.A"bt-h<&P\F&mA'-]u,<ZjJ;?:gC@B^B=1X<P%\1^`$/@qC?Du3
%Od-U@F/*>r=8Kf6d9I2H"Ha^iP``kL>6@r;s.e+,k(YY1ZgM/c\C'DY:5*oU-gX4,h`f9sa7T)[P5G+=Zg!l4XuQg1e'h:[Q0*[p
%Cn!5c2Yt*#ig##cqT$!bZVMrt\p[nnkeo,-a@i*#Z.eR=p)6<PkZ31ZrhfS`Bs69,*moM?N%'aOXp?]15rl7X963Gk?Y9I*6;HA%
%?8&G/0VPkj`Tqu<B;A;\i+$-kIT[$TKWiECT.;QM3r+]`6p"IL?&H1ZIV&s>>mOM#\TLJC'gEb[eA]C/EQY,S1+lEJC;RdL=0B-M
%LXSn89k7*ff-jbP*Bofn&n#S\WH8^q44_:Q`jYMjbj*$C,eT@LJ$`!][h%1kZ_Q?cG)hWp9bL^+_bMG91>\9X$(%_e11F&,mo!Mk
%W,>mmG@qgS)8FZf\uVa+j]I+B17FMRg?>E1DjF"Sg>!Xr,EIZ9^b[8"j1!gM1+X4%`TmARBi.dE_cM*]a/`l=2tqdua36S/S"jRG
%Rp@qVBiS^JTO0ld,D03(J#:e+k^/r$3W1e(:%U4_,iZ;@hu*$!5L0'(h`c+BG#onANqhRCj$a8=c`38]r/-Xq@E=K<q=;m@qQqnL
%.JF%p-(aJsK<Q9Q]rcuJX<pf=.jk>:eL:(fb(B2+<U%H*C_G7lX,0RON2qD<63aI")LFNF/0J(U%]&2gVkq2SDuVf4(9EMnki&f(
%'*7BS\kI[*"Gq%"&k.[$G\NBc$L]XuAQ!ss/"0F>%:`s^)W<R0R":A,BpT,=),dt!G@c0@O>nCY$4%/JQZ[Z/Me1l$7%qMQMJ,d&
%R[BK=,ET>CD)(2nc7FW1%.K(P0!l#U`0c8:V(k57(`3WY.cF0;B+dGi+\^EZ_FRLm<'rd9a8;,I1iIo=-k6BuO,*gI,/`;mr$7p,
%W:<2\a9[aogt/D,ih:Am_`.e]W>?:*5itQ:4BfaLpUmjd%r[Bsp&GcY*^&+\gqr&Gf?:UPPA0(N99AT\T*^t#]FIJsDrcUHmISN.
%`qR.<!C&]Tl=VbMB#h`sa.]$_9?F].i;KTH@jjSe4J`rVKJAW+@QHPbiZU:C#MYH(?g#pi;=Yn]*HZ`q/l^!Va'o/F0QZ1/UWpKk
%>!1[g1R`]G9BKBgTEFEZ&"jN)%R<;"ksRSj`=OjKPgS"Y+Mb=9^87ll%O9ACH4i'ZS60M>,:1j5;?Fi2&X@.#ARK.bI)@>O*=dHh
%S^]='($,fF?&U=t#V;t!bZ<T50(@igB#/kfBmV?<JWH_))0[6qqu_b@We+@8Aal989hZ3(-?71-N=H73d]?qiA@3XFQGN,CQ%("u
%0*I/UL!JV5i6`+:bCG-<Qp&%MnJ3j#2O-h2-6T,7KmQ;E/0m-2=+)Yn2;FAWM$M#1'd4QH7hJKXX[F%&+A!2-/eR+U_ZcS:,MmNa
%"^Xkf5)I(6$GhW$6,hb%Xt6A$#Rp5iFJ0T>H7TW"R@tf'60,j,)TVUs]E]n19E8$'`5as*J-<k&"G0]k!V&K<s,^Ta%XB-@]Tn<K
%LT9XuJT_$A:c+V0@+u(+#XX7oinb(uZuRN&n/Ah'M"]<2<WUhbD\HXr$OE8QCu\"Z[pHN-)'aPYYK+B1s6UmT8+ON(7I_K%O87a3
%_L'.<7g;QGbEM%@5a+B#l<^+onQ`Vm9_"s4>Y=QuB;:.>&#QEqQD!6)"[G>C8D]q5jCMsb^P\?j]%<'%hN)2EP.n6dqa@>I]I(H2
%OSECYkMm.qhR3Cu2X*&a+5;nfAJ+#rjNI\&8R%j/MKu>4g*DAq]2tpmB@Y)faImt0nkuNd&q6",G]:ajbThQPM*/1NbfJhfr*V/6
%-Y7BbNSl$I-c*`pRE3E@\W`(5D&"9JnK#LdmIB?aj9M[7R(<gf=pQ:3Bg!gZL_k55+@GW(]KfH3&0gmG+F(8_q2_OjT,B<S8'`Yk
%MVgl>TRod.&2+*o$p\+BPa$tZ!X)=4RdqJj]4E,,aH0V[!V7&i]s5nFaQ)Y1#V],Bkm)s24oIa['1s6!UjiI`H="ZCTTo`j0ue8A
%-?I#!8fFUjBd@r[>Ot0]A<EQcU.<R/^gc-")\M%`qU7_Fo0*`t.q9(/JAAXR9]S!_NuCAB.2R,(1c.u-K#X:m^892pFll\6E!"T\
%!iYT,\eqLTheenga!2p>eWtaX1Br0$TQ)b.6Tknc/V[@0+>L)*8><f=8XM2dD5)Gf8$UlY]O\pQ&4-MLa%7ZjQ;%cb5ba"(&;fh.
%cU(u85q%]%)4c\]J=J_'lX^D5?H`oSXn>eY.3gMBdd[/SZ'*_?@q"YI7c'>aMK?qIML<5TCO<d6QmF-nIg2oR#$!Y]TX'9=Ya$JZ
%L`tMA'2t]\A\^!Q=G6bc%0HUY.h/%#704]o_@/[[;kU/k`ra&t(Y'%+6PV#b[%%m:"#l9,3oJ)4$:5_,Sk4Dt'2&[!5raCOecOoR
%(ZIhC848ah6R!ing)]1OnmPo:&*XLr6ME1)Yj-b'@a"fP[R:E4M4Y'Y&5`8RHm-MIbCKr<'W,:=)'2X&CkkHFAANr0qns0E[e:CA
%*mMJ'F(XqF]o0"%_B":inKbtnSE+m2I!b21C`tt!9DBfG3a406@q'he/gqBro##AoHZUt4HrS3\cVmAIHkPHq*FFma>mj<7MV&2h
%9!C:,CQ!\IN$=Hg(^*gF1^8iR'#I9'^WBU?5JnU3"4AOdm!)HF%:RpESI3?;f<[@Afn0,q(Z]-=6`H_mH8I/O&/J22kJ8C?6$fr(
%Sd?*>++$B;[1C65N)\A(EIJ<a$Ds2P;G$)N.%6?4P*jW0iN3k!<>R<1o.g_+*$:?sVEODVPHZB%#;<oWmPH:Y;@(PML3SaEf^h]d
%14`q$.lp1RBL"[gnM0Y\GgK"5[mrJW1#l@2+Yab&6XVOe$]+1YpWm7X.1[k91ui,s'W%/l?%CPaq(_JCZU+rPK.ZAMesHU9a3BI$
%,EHt9;Nm>YKO`g#jC`P+qHr>Jp&@_Ro,!*RrB#\U#]):QX5u:EJC)Wi"+WjR5_4jp_@46/Ml_OeD<7?^_h=]cA:VP&*"Z4R^a74N
%d/#lE:oQ6M-K#?Ic9^]A,#OsOi[A3,@@q<0"GmB&E;Nd*gG;Z!#Y<1]1.XI>5nL@e.>VJqQZ5tlAtFQP+G8abXiV6MTU::D8#4:2
%(q;)qFHK[_54`g0l7iHW,Amd6=MuRU^c5/J#rU:;+CrX;nVKZ?,7&s&>u%<m1jjX2M8"(JOs3:([077e%mN5Aj)d!^=S-BXV`G"r
%Gq'Mh\5=N;:[G7&Ys#WEdA!a1bGS'k6gJ#LJ6CSb?WiZ7LTq$['bUcFMFq>=?&"p*8rbP4TgT&E&/[9!,<"P=Et*OAYTO@B=V0_<
%%V"A?#_g/X)"Bs.&BuZ]J.IQ:M<u#tP8L=u!a$6VEDE*Y?=4dOSlZIP`9NRa5?t'6+=f?q.-MmP;()f2)T#f,ikks=j#F9Q%H3.?
%EnB4eYs*a>[#k>-8^*2o^.?&ENao[MUeJT'jdjgZJ(WR"EghX28W#@_<4;7\IH.Wm_ubi0APD6NlG[<9Cg>&@CZ=@uF%iToMV^o?
%65aD`WcOEcA-0El&bBDfGYj?4JI-4"86I[WP[OVE!5m2bZt6ElRE!q^"'1b-"FU[J6Hok%JX;?>1#^uhB>e\QfS'q6Vs-XA'!)_l
%"XF0LTUfKi+U<nS1-Z!))D)anMY;mC<:EmK:p@T4"<IW:KnD>g3/DY#2Tl@k(msu[/+FVmr^'C8'noKfN:@>\NWTk5gadE7nR"^_
%FQUG&8K%=/$[+Mk5T-@T#NDQK<T:Ml&]hY:A&/enhKlC/i&Y:@*O`]F5ln3aO%!Us$brEC(!CT,Db65aM57C-"#g>s,,,6N)#"f/
%dR#!7Kbgb.3>qQ?_]GV5LLI,qG?Ceh?Gr1QM/X?BO>ZtM50A[E?U?"F@QS0G-<%o#,&o5Y'4a%j8]%k&ZS^^S+!H)VJ(r.8Led`p
%#W7b"[Sli+qhK,$7<nG>W>mYM8V">ui`,NB.^10jXNqoR8$%f6Ca)>@3rsMb$Y]Ze&10Yh'NF*<8Q[f(]>3h?P*r.3^jnc0#t,^c
%[V(pD!B^5[oJIRcg+XD,N71fA)OB_5ma;`KXqHd%I;qc2L58=H<f*9Cf`I)"<G7[MF:8G#OlI1NmJpNH@n?sI0lVB`Ob\Y?bI2']
%1@8^[XH>M7>K3*9nO79[8KR(_d*(etaZf%".g<N12p;%K"m.GhE^)lXp0sFYg:%6[Rtro)R.Va5"GErjd'7LS7!T%K<L44"R%JgK
%W/2"imVs*Od`a;t6L"^W=Wjn%Zj/)XQ7*'u")7LT!)K=Ah[-N;XrL8=Q$/e&Hjjf`1/s:uaPV%j21](+WM#J^8h$fo?4MG"mF-a1
%K'DLHaZA?eSa=DurDBJV(_8^)M;`_P64kuG,46(u6HBGBJ35K;\W8\mH7T48cDLIN^55DKXKoP\cjo:"RQ:VP-kbc9*II-kcU24k
%5+<%LT7%3h\%>f;G^VAVj!e9AL"$LoYs>ofbs')<gHsN&Z+15uJtMrJd]V"uNa\kmL:/1O%a-8qFN;QqUPslK.-$)Q_Qd5YV@(-I
%?Z'9ZV81MJNDB2ZmqC%8DHo*+;W%_U4'f^Q-\[Z9'SHe*>,:2?nh056E2a#g(l1fi&-K,0+,T#;6HC#DkpqUiJG!e>FG,/fr$s7K
%7lus=N/"gW,e+a,_&5`U^o#3F8J!Pb^bINR+93$'%[o2L+_mW6,_WDV'%_IS`(3[9>7SFK*]$5WZLT9nM,a=*@,4H8,Qm%[p>d.%
%`GmUtRQW_W%*-mabH6pb7fNH6N%oO06Y]slK7&Dr#`Be='V7T1#_\am4E\R9ct"-uATid43'_35O9\Gj#88coQO4/ZH%t\&A;#8f
%@u[Mrl4N5:@3W@9'lK\7bYDb3!P=leZ?[MWY7]bE%I]j+!iARfs*=?.2nbgZmZie0qd,[I66MSo%&+Fk+t=hDZ&+alIq4D4L`"1!
%B.ltWS<fgR[O0::c1p^lDXob=N71E;<K5HK#%HJ,8tVqZ4AP8'#GUkGN$#7n,?T+e`t*:6Tc`;'#?I/LVZ9mV),+5eMb(X2pA"jt
%#Re0F%C[MQ.DFU<,k9hD@P<b)X"=;r?UbC\Wrp;Y#WO%::;Q/pL_>T'`OTj]<6RC.N#4Ijk=WW2%LCg7TTf#[`:jm7(SkJL(5[;8
%KJ6k4jUlCK!+g<M+AR<>D/g6k\%#^Oo0*r^o09`V(lPp;g5B!JDldHrjOn/P8hnPD#sq[:b]FFh@&QCkL$uO@c[g9?.USR9VciWb
%,R=SA.JDX#'#CI-%g+T;=`s<%D%XE_LaW:WSQFSN@XS8XF5Tk.La>[slP[YEKfQA5!-9=LRRoIC;0+S)q[cs9gRB#[)-!'VkX?U,
%\<CDS&8!F#E'V3'@LnIl*RO"PRY;67BI+5E'o_VR[*b9u!edb4Z0F?*-5(bXLKV&Di6.jVW?d:=[K8G]4^Y^\ZDsDfHq0Hn061@I
%R29o;4i**^*_$Z+4]D-i?\eJ49Xjil@(OVOA%JAS6*kZRA"bXf&mO;@kpU"sDfG/qMqCRUm^q-7YbZ$PO]WGRoJtca-5tPD,_5q(
%Y3bL;26Y?q8Jaf=_7^qT4[pgo$e-rKDns28:!itUU4EUVrA7o(o">)1LgqA)+mpH+6`TL.nB"./hf)0i+<`ZG*tgMrZ<&-X'$ZY#
%mDkNb>:QOJ/5PlNGS5f3&N]UbaS->.)qaRM)[h=J,FQ')^_K-4KLn%W+[<&)n_#Ecga?Q#NGFN(Q`$8%o:32LCOm:Xe'`1J%Kf9u
%84(-#a.<?\n0,-i1A7,d4cZAFFJofXR`KM@VE0e,\WMU[MIN'nI!8*\)b]#h[RY<;YemdKVFhCc18<sb&'Ub1&F'P:Y+<-@!mq#-
%82Ch]em6;sL?0]YF.>#t3&3J8%8ZS$0f'9YJPUk22[FpZOVUM*(fodXKE3dCpn#Wr+AB/)dXa5"<Ig&Hj24+*Hd((N&E?&cdZ*F:
%/-Tl\W!\KE4bn#nFj)6LQPEj73*d_[<!=uJj^K`[XTHl]GgdC?15Kg[BO<mfQ6``3p^0DE6&7*Y6Xg%.5_3XsnT3Rk$DYRBJ\=+l
%;"A;n4?3D9"RHCQ75e9W^a*=8n,'WQ?nE[^5Us]q[9]>3-&hg.Q`tXQ$"n2h0X3ZljL+eSOAU%SMRuqCgX:JJMU=?L5p9iAM3\Nc
%Z]H<&44FTRP6B76UkmIFGM75_<j@g/NX02,LWj]a%5/u+8V4?"Rmi$8"Q^=JNcSfXUGu0S&@oK3Og9b#%\miPKID&<qp8h1NHU1h
%7/6IJZ$6R#ZC:MMoL3C?;3anAYA49.,bbAbBU0eI;dg:H@f)i%5lhWCKEt$M-7h_+:IpA'Get#aH)JM>%(*@M!o2B\^mYS>qoJWh
%$k$dSccLcHV)&Ef[mXoaS2EVR7')kI0YoGe;JNTTG$<\?HJ-mK=D(o"V\gf'0rcfMmI:94G"*gKUp9MLIO%Q^mb%=VAHAWt@YC50
%Z^Xjq1sWb$^%iOmS%o-H=lhV)/`jS(b^#G(QZ.g(iY_V_a?nB1%A@^9RH>$f<G*.X<F!eo"SX'P+%![1'/:UsBSA]*VnQT6*"Kc>
%e-f43ba`^)o/K*G-\OE"d8R:@)%!t?)Wn0p$R"^_i`g_<*h'WpYstfdX]&`;)9ug;lto''qdE$4$KT*\)&Q)>"-\08FaUsTr/8pW
%A<_,,8]8j^$^WupE.H48b<kB45b*h>:'#2p%d_\3r(Q#pf#N>IL>a0*HP6HM\C)1`-\>d;I4#<*&<Z++()oHrcrd1NnZ=sJ2r.@X
%lOa`FKTI#t["PcEluu=jO3dstc%Hio*U\\\`tZSoGD_j-#En$9d_]r8lJ["gG$,qkS5-FrH"mtX0iVrhI?#dHoK+]:?`+>Bf9KS0
%6Xf%P,Ie'H2.j8=%;?tN:;VkK[TR-f64?%%>uDfB.m/H1LQODOrH^*ir;/AFd@$U(fU;_#&3U4KW2tliDerOP$dQKUdk<Cu#T$VN
%<#V/255-#4PQCir,Z!)B:)XmV/.:$X*6<^VY[`F,*`rjP=9_E?%U:H=\I3h:pg?.k1HI'!",TT@Ze4lFRIT5CAn:`RTMqY52QXsX
%;Lh=K2ut58AKeK@%^OD<,8D4-P,F$0!>>769U(eSr_V9QE*@EO<\HBf`YV#[NV#8-fgL:@"PWF/K_U=`7FK1'JKqtG`Z=n0'VOS9
%nEDVuqMlh"b-d=Wfp6PO!069PhlFps6V(T]#I,Sc2)Xm-`"H&NLC2q",/-&,M_J4B^qs'@8B`>Ao&;/cBKg?$5Z<T+AMS4o#8Y.\
%:%g2&K4Ch0!fKQpr6UMqL.Nbqm'IO(oB:b/4/>.H")6Jb-SY^tSr1L(,S92$j4O?^8d>uh%F7+jmWKdLYaA]f^1\:p@@T<7<fk8h
%X<R_8rC.8&o]_J93lXXa,D@F`G<8:ZbKrYXL-r1ja)$@NheO1QZBdHnj_::ZjR\_bAN_d2'-19Sn;YKpWgg/c8`J^s%bV8>_Vr68
%rhO[g#k2o6'_XN.id_VL5UoLD=l^J[:,Zj<1Jg&h>ja#5T`EUD!YLF#[hc&N=U9*.`+H)1TTs#<@L"7R2\U)GVa?E)p6e:+Q]<0h
%oIiI/bQ46\L*Sso<%>m/B*0p$9[_"=ijq$tUd?cDGfJGsNlLTK3j!`(oZL8qL(9!Z0s$@E[^Z>O[q]_bPCTX0OT(("H&%6`D[5&3
%+Q(#45g7D`_Lp#sA_11u+_HOjUui!,Hj);,H&Q-I<`^F(0p%VTA0<VF5\OQ]E?\S:YLj)`-1oj``ZCVrQF1-I,N4P&/^=?IK^p/,
%cuG$kMZ4,($PNj`e,mjV$3QJ3Duq<,roUpo2-#+$NKQ[a;-.E\J8cD,+9@m.mQ54:7H,*d"=_EN"VrTC-8L1ROLU;YUeMP)1B=$F
%1b@88U&%YG%&YLN3I2UAY^.2?N@?3MBIVnk<AL[9QOChQWX,MDn`dJ"dHkSt<b;Kc@)d<nQ[/ZdP`d3VGP(]!k7.b7Zl!n1i+SbV
%eDO(I$qE9I+LgYl<,;XSiC?b2"_aBX&G^.+NZ?E./p",>(9!DeH6]LajX*6IXl::<jff6@.4eQ]-VO@`WfhA,*>PBDd=t"[ka[a+
%)PtL0*?O6RB:giFpkU(G!W\;h+J^??Pn8c#3YZRH,pXjBV=WCl>JVTC30VK0rR[?8IpE7S@+Q(`6bY@Je3bj@&5a\r7eg3XNHcjH
%=cU_R!N-(3]3$)ijO(%ea^(j]*T_k^dtloe>d1:GlmKfi[05TCc`m!_NC-[H;Qa%+U1lqB`U(u<72J$2W%hbeN5[6&?7^:.-*R^9
%(p5/%deo&dH[94e86UF,PR?:Vo'9e_e:@Q1\!)%cOhdb=2+b1&aEi$nDr43(19u$rq$PO0r%[_>e0@3h\-ZTM%crT]c=Dm0('2e$
%/ll>iH@@mh9;s?^dej/AVr:fg5$[!&4eE=I*pH5(Vk3;2O49*YX$?CrY.jluX1oe5f)PDb>Q:aG>Q9/`c2Pr+oOhQg$I1[EAMeLk
%p>D'0,;c`O?]*0<k(sGT\_JIA"e%h7ni/f:8^,a/&p*maX*p,kIrUddrJ\*./R+o8krk,SFu$QrI2X/8\&NW4>hc+]"7\AJ5QV<n
%aL;h9auGA2'ZH5CS5oqeaK]ag8L.b!PY3=JT6;\bV!UmAAttE@W!YOs!a.K(s">T],u1G%Umroh>fu\,+P5K1np\"s.]8Qb>>s#^
%Yg!a$5fa*S@dOm*LU[ft`5K+N&NnS26WS-8M@u.US1e7!=r>o3kG'L1=eX1[$"F+"X_n.;fX"NN,[#>BbFakA"VZt!I%aoh'2ZA5
%:I!R>1r>.X"E/">YC>8@#Rr:lW1V)Z'K\KHOMp9P3S,<V,-X6J_WN"$^bP!h`f_;PlHS[)<E4W#_JoXs_)t2-"[-DIZ:Q1ocpF2P
%ZQ$+Pj-h,J2;r8U3>DhA,/oic$#$ar[V5#1:)-+)!5ri=/T#il3I00$+Ed4QEG6AD"Y`GGJhfG(U-7#&jG_kZZ8Pj0D[NCD!G>=U
%`lL\#Vq-61E5r:d^gR3d:W_78Bh[:(c<V;rg@iN3P05"FPk"kf*.^jQ9R(P7Zl@t<&(6.ICq/\9:s!X(BcrJ:XIfF2.9Vh2)R2"7
%]C9<e)MK?OBf[5)"eIsjM$:\X4A7L;dgDJ"1SS=&,#Hu`X=U?#TjgP@-.WnWZ7HUNNk5fggaVg76iIXU")C1'+C&P/0)(88AOLN_
%eq9#U_-@0Ff2KCoqAHG"LHmbW32a"rf$C>dk9Y\9/mRL69FTkM#P_9<E-(TRa3DA-pW%f0_^517c>Wh`_aG@N@jaPj8`s=qK4gq_
%&;FWY7M26pS1GWgNuV\kM^"h:Ti)Yh:.G'I_fR%A+q"er/hdY<Do<`4EI.a7*3I:(C+BZ/;="_=f#WcV6`.9uq#h!:)a"FPakkGO
%&Vl1-,RA&W_^Iu@'W/ZdQ6E\a+l@9T\<g@F`\qr^cr(]Sp(Q0jre[^A>RK(7,N.3N"t#KWbE[.,&0[B",8\^5"<0L>(>?uO%*3$"
%8.j6LJ>=J"@VnI?+qtdMS6r?KOs2>;)*j#MV%+?CdIoqn&dE7/8B>.[#M@2/8`NAsg&XcD-)!i'e,i$qV^9:'oAQK2D$LOV+>OM;
%46T3qlI6jjaM\jMM_5^73$l=:,-@2/m^Ro3]<<2N`@^#b)i8+qT*We_*@5#6$?i'[CVn/m:J<HnAW/@0ES`MI!8D?_3$;GPLZ'F0
%\-(V090$[V.SN3j%-rL!+ZO;!F%j)/LdGd6UjX$q=Ee=@e;rV#\BP:=`^R.jihQSGq'm0\T0pY=o+8uc#,gTC5Z@S0$(kb[#^#2*
%\Sa0QN+Kc00X&Vb-s8L-_]Ip[&jTB-BIDjZV,OhYN395Wj"@oJ79?rm-O$.rBq0R3,PdkDr$9Q=?Y9qNiH\Z@.W#C)<*\W:K@gbf
%i_gonOR(&QT5l/[LrGpU=P>=8,2:Z3)Oohg9Y[4t4=QNu50+Ho:("eP\dNdtbb,%c>n_Q!*Mb,S0k,8cCM(6c=]ZKZNbCXNJOB_5
%U$YGY'?uMM+mJ^j`*BYHMPR;X2?#jEoP>d*B5*aKU!EdKpTa?YfjH+NiNOO"[drs-&;p]M;R0=WMi'Zo&3HQ`/d4jlDVC;;Z5C.B
%/B!^USX+&W?]PZg*F7XMU.!)s!/?M*$QnP>+kQAhJES7fJ7_sMgGgbmBZ^cUCcK#Q2,`#R9"RXq17%m]_L*o3P3YU&T'+*+5kG"o
%mp15k8Wkm74TYP;g2J8Z'B/ELV0"Bm"=,\-(_"cl6/t_('$usZRN`".mjGi)Hc1bsS(1O5A>pu>>]a7E%mU%I2`J4dB,[HK1`FU^
%O)@_aH6)UZaa8o:LWf]gCn5l1>S^>_&JV&RbqF_/q=gdV!6'6OkWh`5HQS'uXTN+Cg!PnZql_$YmQRT&C^ti9FIqA#@m*4Lqa!N)
%r;K)8c=U@5k^lVHW4[p`jl@;;3@Jfd0Q^nBm*-:brq<KA-1;YfOiZ5uLTZfG8e8[MMAO_DS';F!E`_Ea^5rl#X`<PccIF_Q3"Q?d
%/PF^$GToi)jIbS1m;SBE?r98^Tnc4];gg[S!g(h?h;FuHr#u(,p$tr7j=gUYEgkF;i]L`Oih"(ZB%5+$F=o:(%+cuSdrlA8DI%Gn
%0>mdsP`QC"O9HHu!`W5_--bA5-R+^PIQDR.d/!BB2!%H':Ch8"43U6$?0:oCc>18,^"UR%-P?K1P1&?)iq9LgUn3(u,G]Vu*,mag
%#i"+mf[!<\N-$<OcYW%t.O&d10bM'5*mnYCR"tMuc0U5UT.VS6go8"]>1/,G]KZEE-JA0-"Ps(tN52fl^!39*e@h>;3+sq.L-).l
%QWF&-2qBF_LHjZQ5`]Qd)+1"OSEBK2QA\#KdX-P.q#-&:<0*"FPbDbR16SV]$rRKq`UiPdlGIGH0`C@jeYMsVrS]"+A[TjeK!Fb;
%?OXQD]anp;43YcOS`b6/^PaIDcf%[OoE+eB.h#:)b)7DR#B9o4.q3jLb,._Fjm]HLbmN5..j8=9p:!@W7_&e6p@7SXN!O)j"r+5]
%)=E+&Pj`L4]d)$QW=;=OohYYqR'cK_b[r8G;-[0r?1!lV&Nj;16c?31Od\]-6<N6(L^ihGcloM[SG,cnMLrdfZ:t9qF]SiJl+\=?
%?'Em:bU/]sn+IM>^j.IF9T@3qQl`;2R%8]Y.idTAY']nf22KM"hg^AD`^p*u`*+5MGrdl?^+RTCiGR6?[.r7tH/?BHmr.gUL-PSe
%h[C!A-;I%C0^C;dhm!+9n[P*_lTr-(`q/'#m79'a@t$W4D/]/cr(TDRb"]7nF4nKg+SiDS.kK[Q(ip9aaU4N'R!_n&Lr8Sg5J1dA
%GOSD,S0jnCXdoAQSmP?TRo"MXmO+>8D=QS'Uc2I0.#PPp,5T)HLW#E>,+rR)C^7ck@(?eYp,JG(fs#I4aI:AaCEVdug.g1a9@5Ai
%oG)Tuk;2c0CX1;]Df^YhD;JQoEg9N$$h9[[OQ)Jn%[#V]84;n._]ZGp!&QJY5Xs?oAQAkrC12OHcXN&6,Mq'EA=8VQ)O^7R4boj9
%']T:6eS9KsA;#2^&#,j9B%sYr[i$./&^/nC/Q5?7D%U4[RM#9b@-q5*e`CZi^HLJijG4Yr"/W'L_\4=V;CW^BJ65>X#A\qRmb9Pg
%Vs>7]m<MtPf:TSaULGAWPb=D+V`V6WgicC?WDl/3\hmMr$pDSi3in7>Qi4QToBBInnA6ikQ/4]K/,dYP-rE'\=>e%k-fq[?Pg=MU
%P.!$c^2iV8I+F5HRI?BdItKiSbhMH)1E<mTSpC4q_fU/DeC3HNc@LHEfe^9kT<>VjWI*!^&6/8I,\!%4mcgGGmR@1CL7g!:fRu2;
%IO-tX8"52l5^OU5n*r2P_KH_I".A>Mfa#]7jhpPSn>?%1*6W"O7dhs)PF9JUQ,+r:EP;D3EBSdH,!UOq,!UOq,!TrlG_euFs38%#
%]0[?;=3Mr?oI76*a2?fTEKrP-7'"Nq>!L?JchYUMV2[taAB>k'n=NL7Cm##Y3Z%r^:ZcXQ_5@S8S%>JDl/'`*+SJB>cL>-0TM*Nk
%%H2I;('OU`b8`1^>_j9OSi/d5H3@,\G!9$mQhp-$*;jp@\%@9Bk1_[r?Ol-BGp"NEJ[/QkTLd.7,kc45.)rpPKr@"emd-%?/EaFi
%fgg^2A4e8/:H_6?#tYFTE77k=a9G]tWg^jj0]8mc,lN]jXL8'b56Z?A+Pl`5!0BQj:bSuY)RUdu^p^!+0V#!G&f,a=SmMX>F?:*F
%^H[R7FTuDd;,:;S;LR<j#=3p]m-S]YhnBm-aN>X[s8AYl^_]Pjl:c_3B/)=XR2nAF/<Q643s6l&hsJ9F5$7T."sf@eX"juLJ_!"$
%@o+6+es4U1HS_oWe(m6!=(Dg-h]<U)H+b;DS+%]ok<G9q*I8oYdmuF*m6DrL&%3Z9P!#7()E9)K&+8=!c0_kTnZWk\e`Vt;_JjkG
%Fet02A_CDt!.nbnW,")cEjR,Y9RI."qjnJ-EMje3^(XAn-0rs]Y(.sRF9DJNetRm;kP-nm/l>n%CZ%3CRX&,Dg_]OohN&1*iO+7/
%Qh0iuAFFO/rd9g,]3p"!Rg19g)berh6-<`2/:n3u!@8.MEQ5^9b#Y,74B%RQ$Z2*<'fNV9Sq.*cm%=\E2XrX>Vo-P1$T\<C'2&+n
%7;P!M>=R^q"!,>'-j8,GAmR^BeYUDU-3OI`='*q$&fnJ7In#_tM/sD(kI#bcV77T8L!Q6$,%:^(;ii'Sdo:jc-pspcC7;3N2].qj
%=c*!MN7/%.'Zs7dM/Q@e]=L`M1`dj5TRV"nEf*q$\sQRk-H0Zc>u?&-c&`+nm6r`feuD,Ibi3ZS9<\=+^tq?hTF$o-%%[K)Zl9bF
%P34iSG;$Z1=p#U^J*giQ]W%MVOUK)JQ6%\8&7VP;"^u9O7TQK\-`ReLV4\>#]Q=J-PO7"Y!LLiE-D=*\p.id<_VDcF$Idd[/'h>C
%I6aRT*:i=U1p:?-qKsaYP_Po>p/oV2=<2p[U-RU%;7'/?f[-F=rW;B;RgkkShUSEd4dP\1;ul(;Q,@/C^N^%;f`sF)*G4B8c?&p!
%RK%!pbDUAuO@7oqA\Aacb63,_?Bfs@MIJIlACnIm343m&D)Oc\ic=C#Vt_),To&1&``Hp;Y*o^'*e)M$2\":>)pS)mO01*VHlXl7
%R%S1@Y2`O\6sEOG'U30#h'(uf;i+/8">7O!5V/Bc)^.rKWLkESL6ViMQ!TTL[Wg68MLFZkM;WOJOPFLkp#tR$[i`VA85*I5I\N3U
%5LC<<QiSZn@Q'Wt98-#gE^JHKliu-j0fq?+U3(th/Ll9`mj&NZj7#-MQJLAP1)eERNc%TJH6L$HZVQ,n&\S)A9PZ3I!67[s%b9Vh
%6l'+442I-L+kC/(bh<8VNckJRc(BgsLD/+%p3r_<($Dcg^sD/1AudZQg!OMO5Dn>j)S$0c-f:P0n1<No3IM2hN!,S/1*/j!PY.&.
%\i0tp#JG=:s4m),,7P066RTGl&&5L/dJIlPUVdeqc"TqVj1++)@#>UqhVXr]9ogY1>?XC2P"20aUF4%PBC=HH=`Ebl]rO`p0D`RX
%,d,1]Wt@,!s5G3-Fs#@QG*nE(3m[=dZ!N4?"]ZXpVsi%o7iKpd?4AH<O=H(bNg^Z1-X^,VSOsJM)s+7+>2?eN&;#gZn$IeJ\9g0U
%J:uW7J'.tD2$PlVbor-c:@icPqfQFS<>f/2;>bkeZ3Vs:Sp?9&C2$KH3oKTrfdU7881^XO=U$G3;ca22J'eX:U15\`?")g?^M&MV
%c3'Q\k29lRk;iMip05.E=47MRR-OjR1Sk]0gF1(aKKOd+YNuD9C2L,g4r[L'"eONi#UA\^Oqsrtb[)'_=NmBMJR?[lN(.m,URUFL
%]oMj<<O'U"QPne4+>PqpPT6#uQ"C@GEdMZV>%Z8E'Wi@HRgJD*n*30kP:S&#;,-.>=,WXVLL49rBbkbtZe6>rm-6^R+2iLo+R%.G
%mth7:'pg1ZbTYM%d*9%X4qs1*nK@Z.[&T4Eg!,(UEHIjFB'nDVWpRR/MnXU)ZdBc`kiO_*Qa%W]qcOKDT88_5TWk<3P\HXY4Gc6q
%=%+)%B(9ZXcWqP>6P(8oQ</jE/CP*D\;S)=^^eV\V<E&^5O1L_Yu<VJrM4sM#uT#K:4rpDA4&V!H^GAZD,f#MB-#M+O?&RY`^CM,
%=>"kB,dk:,H:pANoK<*4!]G<?;4'(j#YOAY[R!3T2^j96h^AWfHY?6eS@3bp"2pfV,nToF@LIJ[#o(Bd@I,gmK-JO,DRc-jk.M>I
%(_\R1jfo_T!(NWep'4.-%9XFEr,c$s;qPMTWl_MO&9&gB0iq7TnOb'Wd6+cl4_FZr9^TB)BfCT6<.+$KI0h%<oEZ)siebqq(/.u=
%J-FS8Jrqm2!?'&QbsYYf)$I9XX?=?#<t[@(N=]2;(=/mip9d^q>-jM'gEWtEgqr6FIb\f?`?F`Vn?72!^LcG0L51a\26h]Hes830
%N/NYIS/+:N"FpFR,,B*Go^Ng5)<^C?ra%ad)Top34[ImN9kL0;Mm3^C_2_6[A+EXV%V%i$TMGV>dIB+dYYdiSqCLF9X^Nt?-V+5#
%iG%oB0\YdO(N.4j`6XYCG'D?KXC)eS1]a<OKfI#N*m0",X?aJ]\:AtZKfQtQN>AOZ\./M'>?.E\dc2A8-rTkZL`_=V2Cg6ZlR8:/
%5m2ngF6J5T5>&B2eL>o2%nY*eB"?0:71^tR!dSP04P6YA"cZ>(QjIc^L_$EYCp;89d'G>jr,(p<A21s'E>#N3JON_"SS<kel4_)?
%7(PRRRVf[NM@q?HZV)@u([DW[`J)rPXMq4O'UG>"#Rq.!O]$fq*9$mRAS,B)#Hhabk-(qL$kVYO9rq+u"Y1bALGEsoWN,#_m(Nm]
%TL&0pS9l7h`"BHbG82b:S:H%JcMRLKg[sri!WC2_,g^1#2/bMSQB?)grpFUXE;\UCB-.*C"chUG^cF#/*':)la`G)8c+Rsu!f)2G
%)XiaSWPe2EZG7Vb[Oq9TdB('s(n^Mi;N9Us8:ZiGog:`_/"KLLK36eXICp%qjgiDR^E?jBcg/_J!Sh&?)T^'2,Z+i7-B\uJG.FR$
%*%2cDB2OVEZi(Cg\KQ3k5O,2!.!l8V!@fND&'Mf*dt&p"`7cL5N_Z?.IE0tA&/fJRLlb$8Z3fl7fVB@q]W$AN6c3QuTeAsn.-#ut
%3_@ui/ef[0[[AL@C0cRG8L_/4%?WFAk08TDMi!2N`=S-Ye+,W'ikt%NTpl5,O2eJupgo;/dn!ju"qV>V%gn@9.4#*K/J:59.#$BZ
%7!!#\SS`;m^a3a4Qir,nOP#:l7tB(<LY@n.Xo['`;pa05Han5b,M#RG,^PH%O:ZaNIT9k%;aN.rfs4eh/mjTMaU5V9G1eDRmj:p6
%rDe)C2X+!3/4V8qlObJ0MPf]X?_$-X541!?S)+nd-6<Ko8dW+)V"&;>-1P=fe<)j\61C[DVo<F?D(eAJ1.J4a:5q73i%i6X(F5jD
%'I<@E3'*YQP6a\$MBJVp?uLX'3edpEj=Tg'`2/!fP40*<:klB3$3O;dM3`6e"qB".AU[*'kVV^FZ9EYc7%&DNKg$N/3d6DW8V>I6
%.S>Uk?YRT8_M9\V)l1RUU+uaX+ughM+Li]d--Fi0;@GfAZluNT1(j!H5XUi@Wr0iQ!3<MqAQd"ch4n`/l6e)g`@s<&a9k/ESrs.D
%^[s.2p3(2[Q"DK=Z"l;QqfnApkFQha#&t[JAO>GAqD<=F@]'sPY2X`/^&E<q[CX+,#fsePa6Em;ZK++I#/VefbcD]>hu[R)(bFO1
%Q/&^Zn06aWHBS=L%C"6i0@O*qT@/s\"ngd]._GbeBiC.AHZfO"ib:e:',7A3O\5Qdk@]M6*G"K7'nM&mYVp$cCs0-+i3XLI'H71I
%2AUD$I>U")WB2;?]D3ZS*>NW\Q,.]1b!H<iUlNc:'*]U&;:fZ.Ch2&X(&H<I5Z+I,5l)7L80!O!elZmb+(PC\IJ_=sLFGTnK'%fi
%h@B>=T=3OHV9f%"Q9L@:.t&K=hip=>noB#'ic7',N`!dn2c`;%#Ca`d@iR<;b*e?8!_51'Z"L,mp[LQRfEoT$9k#IOn]FeH85ts=
%/h:)e8u?:ZbFp(8\l]/^=]E'X&HRQmbmeLUG;f%R6/:>pQB-sNc!a@VETGX?@%&Q-n,qbpD"Ebo[DF2DiW'7)C>8rUd9db-M;M6Z
%0gn_!I@M%?U_rkC!r6pi7?m0cX4,OnfF_LrpBRG:B[V]#S-\e?-fBiU1E@hQlJ_6QH-ia2nIb<EXSH"9%'gr<S@DZ,f_=f>+eC1o
%DXBm8H<8\SRVc;\T+_#:K/F^_>5<QbKnJP\MC=)"lLf*<iUl[NiXSWpj>9,IW[r.e7d?rYofut;U5=($besi8g1e?q7g)?#J)D6?
%%11>q*#%Yh753i;:@dDe596t,LDqN_d3u[*8kFg\-U@:[0VP^-l^adN@_l?raq1c[D9KGlaemAi6U[$:@B"R#aSX`ZGCpo928hQf
%U4sRiTl1Z3/)^>6G?I1kMM"olB-%m.gLm_(lW*Imiq%kE^2e,AinO@rHH4hiig1VUEiGXKhN&]`GChsj$TFp"PlRS$j"&]Z`"DM-
%%)jksKa5\N:W.Wu[;FWI0r'b!?qo.;!&Hq<U]J9(6-7paar99dcQmK"0PoqpOHW=:A0XtN,&uJ&1*5'*jF!a@'(rdN\VN/`qoVM3
%0M+%oVQZ!t(mL]pVmYm0Dg*c%m?j@mL`5b[?39pN2s)d?7=bPl>/Ue76!V+ls#3WZS[s8\Wbg%$>e%#\JMWPJ!@pSIIE8g/,(IEf
%1N`&p7*)HP'Fm\_HEd&H]Q1^gnC-(PFg_NGi(]5poPg!`W!r<Di^uJK)0eH4>6ea169$h!%PN33V25`"NYD^t`^=/<-@[julal-c
%Crg2b:DbN"9j]Z`Tt8;Nq#ee,qpEDI]ND\qo[6!Umsobe)Y(Ip$+,?:(GhtF<^CrqVElXH#:e@QL,V^iEN^cp%3d\**m4m(TiHk;
%pI#[V.V3FjFLqR8ilPXJX.VE@h#^RC;/@'.!k[L`\63KfjH.;p)Sk%qd3T2j<#$'S7f`C_]&I!K^'o_GN`m@KO@r.EaL!U<kFlce
%'2]lAdJ5"K"UL6U<d1?`3Q7q>.m-od]OU!qr8]RLl[E4P;]^/;F7lF/0[Eofg'g.!;'>O>NNfp#E+mD;"%BA?4>Th$)'>m,&(I&L
%nq:[GpG%I=l^=%ka7`!\j#&D=X/r@2mp]";BsNAcatSIV5\Z0F#RJDqJKMn_1t&)-TR27NCrD>'2:ARM:fPiTlP(FboDUbfq,0Qc
%Is#LeS;,*n@S/OVQWF!2_]mU&0?eCh<.@RcCUjHh>q5$+(HPY!A[1s68Flb4M"_<+'$od68j4Yf>9QV%n\]+GW^%6b[X"OmG`DBV
%Ol,Eg_lg(i2M7qPT#aJRM9TEW!FaH%1f20_J2/0)%'`&`K%L4"9tnE-,;'F=bd5#\FA3,2a\)>2r#Q!sG*d%.];tggYHfPZmZ5Wn
%*Zp\YmR4T\:`S09"DNc)2q_'<10d:t(r$]G"07]\r?:?c\c]QtApN(Ia5+bLQ@"XkS"F[EIWW(q#NU2ema'V[87%AEmHHgXJ?,(4
%8=Io#Bqa#N@7OkF5qq+7mMG<0k?X`&$<T@&5n$1TU6'Kb$I<Be=:m!?I5)9J\S)Luo5X@=\W0*f&/T,=i@`(6f!\4`Q3?00Qbm*G
%eKrdDF8L0n#H,3&<>T#r[K'02?qQZ8Ii"5+rYO_`;?Gf?.7)a(P_<-p_!Ak7lRkOG/?\KJ&Ha)63!bKpc?*#FrIE3;d?7<@,Ri)5
%Y)7RiVi)0-K)5qghQ?)n>V!\E$4rBcPd+MJ82f!8!g+[fC('Sg;=`m2`Q-fIJ&oTq?1!S*JO'<mOKGUC%#g5%1Kd9m9M!g%;1;NI
%[4eajV(r48MCp)6Q>XErZDb&O*\+F9FfBD06(2dtkN\qeBY<_u>A8%*;Im&h/#nhbU=+lH+.7k^/%Xn?#LC(V;;DL0F.92I<^?`t
%*C!b6JMJ?iX6AQtc57Cn#hg&p^c*8^)h7Rd.13=*IL--+Qm>c+h]m&'^t1j?%P3gBn$7?Y\iR+Zg$eCTHS:RL)_Ge0_Yh@@MG)/<
%9g<Zk:sK02C`<W]IkH*C\D,Znl,@jn\1\*JHAM"8g@\!CO6u?!^'K:jTX^=9(TDI'QnF0kGBNF]QL`jh5#3+m-A-sfej"p'&5U;\
%$&G,!08.7p;pcCg,8LpG"E,<8WZgd:(F>A8WC<aCNVBlJ&g<u_Q3ba+-=?u!PJVhDJY;q+m./S!pjC<58))An;ZaA<>I,-O%Um%>
%.@I+_?SU\&[\6M]6UQV`SuOIrW;%D2#?Mn!0X6*F(!=/uN>a+-aH3gnX1jMHrLAAP]C>cCpa7B<K%NJ#]PJ3,qM@aqGgj87!(c_q
%:g`Y;qEVj6#X#as6M=S7MdBt%ii:r7#k&nL71k[g=VH3`>s(r(=+*:iKB%l)I,5o-B[mh`O.[F7icLCbK]*!B.)<dZG6PfTE1O8;
%YVjVAc+[Ia0XALt@Pnr#R3iTj7RUZaS4S<[J3`^67>rc;*^,T\E5VFSjuP\A*%7Q]J?cbl/cr5k,Z\X1mjhoUFdi"$"`5hg["s5>
%:uiQd`9+o.MVg"IZ`Z"+kqR"='m?qiZ=%*&)M\W(eYJe@Iq(JV.Y`et<3e'`JE+#Qi-F/OmrBs'LptLe?\6Dm,.R4pUQIbom$R18
%Sd]s%_<X.$V&5gp*r0b<YKMCJRG7\`2Ig`r6iQ>A's7t/7Sr2WX"34Y^n2u,^>\[Qdr7H,f7S3mriX<6js8iUpLgaM'cjark&i4I
%-'+?t.d_c(b'kZg`HGsa\MBRggC6q%i8(X-+4iLShplF+9/;gu7]_Rc`Q0T'Ydbjc@W=Oo;"Ci'K.Gof"d-bIYri>q7WcTVSlisc
%("Zsq3k;%H@Ltb[XTX?ZJ:Z.=%8*^t3!RmE[[kRD-T,>$HfHR.VHi*+6s$>;]L]l_"2#%V</^<*jKnsN+B*f*-nBabX;g5KFi'?q
%;@qe0P3J`oks8DsUl1BuFP@:;B&2XDZdP::0+psGYS2RS5fR3i'Rgj'3#.l#Z(LnIp;-X[;-t;,=^f5>3?`>m"BaX4dDd6`WmQ9V
%37Y017t<Lfbj"0hOnDMD59L)p'Ik&`/!)`d?s/<C@B=/OMeYCJ\/0Ga'MG&pa^fa?rB\js*\TKA(7qMj3e.6L\lGZPQ:od;TAkmG
%\LI:S`S\N"\M>B2VZf@JQNQa2Hf,WhqCfG]hYrMi!,nL@!Q+=qUJM(^!#4'TFgVQV%#7;p?\(s8Ar,ftUA$SU"['q!B;>n7+.PkA
%Z\%`LA#NOAH"g8e`$/"o=D//@OM^%t0HIT9XC(Lp29iDr.CLqc"A@WO?u*B8LkscEZ\/^Fr\=<1"Ci)Nm?5$39)X\Sq8p3DLu/\>
%aRJ\uT3@>_WZ42jeia34OO-5_ep55]lJIZ?009Z%ja8<*1+;WFiN:,0$6BbE+@cLV1/A"3:g]Ho(s2Yqa9*"aD^l/p.D8&p<1!of
%bsuP]:3b8_)EFnC]F`oRm"\X42r2Q,/M'RD&`]p$CR&*3KO,VD7LQApJ5*.ORDLBM/?Oaf1JWPh)n9@02612=;K-_7pg28I`Ac`D
%'c)WJHObL\731!f*p/rZ+t2ch[=P!oH(bh:3jJ8Li!6+POd#m#m-(jb>mJ\<08]4W'Qd$26/E]9S=+[EU^o$g4+kRPf?)cbCGebl
%1^##cl3@^AT/9+i`X>0VfdL6,l:oAA(kii8m*^EYC<A[g4E-UgeA@M[AIaG0Aam3p=rc4hn1_faYh62Z7[+C?/5<mM4\g;<I+oHL
%dW`qI-l^<K_6O)"!j*l#1\0CRA_@l2oRDE03>clS^IL43o$QDs"blq7lpXIQrH-l6a5,&?%#"7+j$lH=GM#]C<%-T?mimK=*NH?.
%4/OLJ0$qugVa+[(dMG/uV)m4!22Y5H(&8T6XP%cro&'o'(VuOU^=-9,[A>ek`K:_JK'noPeY2DDm?0'r6%p2i6jmKhi2qo3OtI"8
%'bhMlTdJZE;Q?.qNWCf+i?(>sc3et$1"sVJ#mj4EZnimJUO$R_,37NWX#Q%M.;0p_"6+OVFab-h`UF%VCaJ@k.%F![_Y?,\)1A3+
%*P/e)Sf:P%'P^oZE.B/;iOXT$]3Th6kIelAn:BZ33ucfCF$4-eds-@O0B`1PqC_p0,;F5)2HP`W/%DbQm4&3V7HIODhFZO-iI$sM
%=#kbS)dMijlb.<`\R)6rIMP?KGJdrOZf!8d-)+Q\'5MC>MF=$c_pPVnkD,='(e!AfW"-f^M/S77\?:0SEB*FtL,Q6UOJMDHH:OlD
%/<%E20O``UPX<CZNY`9P^O\I46m7B+-6I/;i'"WKBa?T*Tlb0fR@-tWUBlk9GW;u)*8aBQpWI*>a6!<VYaH^-.faI=QqEJkeIF]<
%8mt$efZdF\pk,l.Ci@t&q0lti(7(rC^1irF[#MFED-E!X?6hB]5o6buCGV\_D2/JHrH#&[m^h&7^np$!Anbd*_W+*44S?^tWD=k!
%JD_PC_$nDSSED;MS]pmkjK\1(d/BIb.kVSVd?PoDO,B#)#4KF'l-aAr&%7q(cqCU.c*uf]:),K\.jgAj=@2IL9Wf-c"kB9mA%9*X
%-&Bgu.S0SMTtWh2BP@N;n*nP.7fPHD4b!6EF;a??CIe6UYOe$(bj3/2Y!J)(1#KkbEINJrc3Phi6tkkkRmK!J6!f+aPVqN5.-d9Y
%&88j+:Z@hm(ISE()?c^bj_HH.3FZ5QeFM-$8dl%34L9C0W>\1Adt=sS3/jO%LpRdIAi-4*7:.$24r.)8INX))$-RnZhO*2GB\$HO
%+Zi:3'UVTOqW]V33$8JoP`[F(G7H#.OKY[Y!/`J+Z>3V6_r(lKOm8FV+.Vg5OgVu4g2=5oN+U2&F%pr8mJ44%Lp&C*!fdaeRlC&n
%Ult"r!rOi6\.P^8h\>_4QQDc5"5_2-D3:*c6c0;*5@t(W[."O"Q.rH9KIH&o)/&1$$sl`1M,-Y<HK[#fiM.WAG?gc$oD-<h`hL;`
%KgdM7*lX\k;Q?NlYAJn%G$44Qb6ksMHR+"!2K6Nh^<>$J5hUs/*AKb4L(U`pN=`Pp#OGnEqV+c`njs(F<LJrAFQ0;h@'gd)&50mu
%(%.H1X8d$RUFKe_RS,*9-U-3;<7[:bd=`(7=J$jEms1ni?A58s5YS%4,p94hb+V6A3i6-_c_s5LaD';GWN,HM_rRdH'na@02CD92
%U9?H:59To;/c/g$Z'C`T(FcRgA1>\Z6:r@]A%'%"gg6/&gZoWH9$FkAle;ftKBq;5"a"(FlS>&eosc%AXX8!nN3S8,27p$WoC@C<
%;:fN17%>rXo,i71Bd*2a#P":>db>!=j"_el6k2'J'e=en#9j/:YkP'r+97CG)N]!j*2Lld!!-Fa`BF=HHgO];,2Hb>-j.c.&IU62
%?BH-29pVHRE*\QW;'=m[Q#NM5[.XG6r<8.sY[c$,Vh<V4`"+8Es4`Ze;\`3"DQc9iQUR$`9Lf7tj4kML.*P</OM6ca#6VKXRam[?
%\!;uS&XBE`^4_1u//;Va)1**P?].;$_h"G_*;6mP]8N!G3lG!NZW*W&i/.,U,\<Z>_OmbF<a_=b(K#4d:S);kA,hg7lIUr$=Gn&Q
%piM$0k7F8TP-VFVpet*8k]r2,#?eUnptH@Qh(>lf[i(U9@=(HZ.0SC2!]?_@8^8]:<qsZ?*.W;:2Z*G3&TCa1CneE?`7J(meuUAf
%e68)%d"0Rg23Xp;-J5a^g@\oG3RkF.%9I22ju?RO-i>5E=$[tu$\T8.ItnCK0.Z,&UAI?a$9Qq^Gf;Ak-oNs@C]N26=Vh#*2fYoA
%ifaaU%E976$q%qHN),)(<CK(3Y>a,TZl>TSqecDC,8#qZ%OiD6<'[!q.8N14+6ige?Y0;l^U)A'ZdMKKBsE<ur;WGs/#<FM[<Q8-
%3L.Pc'[N#>_QAbs.fpI\:oCqLSS:p=Vqm/VUOH/>Ug,VSe-uU$=H$P'Z1P33-Sd:9bre7-7$Fj1iNi?)cb&Dt=BJUk`\9%s7F*es
%0T:-)%d$8oh2#mc;ibB#AOA%A5S,5b;Z[&&Oq<Q/Zt`2h#07@\KK"cDK<]9/<DF$2=J4$@i=G$Eh2"3F8psaoaL2]hAk%YI[8FL:
%8XSB=E-`'?n3WN$K,caF1,C(,)uOl`JG#UdV6Fa@Im$lmai5mfnbKZ+5/i>6*tc!e@a&!t9(UOnCYY1ef'/K<g14tD:dZk@?A"Ds
%h%!/h3.c6h0'%ZUW4h:9s),d-%tC))8?g8=r!\h0-W;p2oku'U3>'?I:t674EET,5\U7m*TgHn1,kU^QLV<J^N')ha*'d93'mj&@
%MH?RaI?"(BE"nj<FlKDF#,7fs#^m4K^XZ,3W)L8>bH_K*`!U_nP%u8%L%;K(UgH"?9cXdu8L8%9@2AeX6rF#eYu2=%Lqj<2MMjar
%MGS3\G=p,h<RGBB:b#:f/:a9*49;sR6ouYZZT;NeMF23hjXM99[s?Ie-s<F\2gqWXb>PE%-c7TX8"bnu13b(,ks&POF?e"KrAU8F
%j"n%A/,Ao/g[jgmfCJ=ho6e1Mq<*B.1s&/13HQGkOSG^F.7U#J-nRFdW#m6sLd,65dBPd#@-n"Kg>l!VaJ^]c[/&\L`pc4NdZ!D7
%k+ki?7*+ZKYXSD*YC,+-kdWEgg`<QPWIR@d`o8'bX<18W6f!PC+u1V"#o'sN60X);GO_^Aq1`Sd5gUnf$3\qB)PH^9VNe1[?`s@g
%9tf<10G^>;4:o:S>Z_:U);>`'4<sY>X/BRNJju1e/38Z0:;W_07=$51;&u#7U*<+>bUb_[OWVGdYpgMPW<0_`ae<n2.T#T)g!;4+
%ZZt]7OVKW+*B/t<MH:osiD2uCGs&F^X$%UR;=qfqB%9N&]ak2Qcf;)ToGD40@ONZ1hre/8CfnogqrI;BB4SUcN="h\Y#@&,#H^'b
%*,A5<pDR0R(5)i.A2II](n1#-=!TRaAht\_0t*K__21=+&V#lei7KtO,7$8\j,kS&C?F@hFTj([_,$9cO:-jnoG_XoG&6'Pi8.-V
%#dP(f=VAMMC+;Q->n2^brYptr!ZU#PhB%'6TJqsr=UlBq0mR#,.0^;H<!dE](^o4.dIW$^:V&M&O%diuX:[o[.i;pA/u6dnB&EL+
%4]M7?:&?NCCko$l/qO\)`"fM3n9OAb:$.!es7N?/MOFN&Ud[@%huU"!?ru4Gp@e\/"5Fl]H8mdJ/kA#0q:.o%:dC^4G[8m1=cmIN
%k2)'M_(+$rXsTu["T33O_d8dC&m;_YM'jJs<V:\%&/BOIkIm(Jr&Y`u(6:iu1EcI^s5jSfTc_N+?!(cNX0RDh:tslMZ1E4C-IMZ#
%Ro#6$o[@sOp@*f<V2AUQrFabmN8tLFXQAE4VK4QRRq4T5gs+P:0E-*8Sp0\kqqF6Ci=A/r2hT#>M3AOTb^.I]=4Y,J*p5>$4_Qd0
%n[s'h#Z:gmLJLFSm-VNH^Nh%2_d-Y[#Q\/@E3?SXoQrXk!8uH:Ih9F"@WL$mm)ri2gE590=D7J*.*,-X<_ZYF*m_#<a%[]<l/\#%
%/O'(A*$i]2q.GV6]a%:nK\Y)9gYJ?A8"FQ4`l8<ofp(l4)97Ikq[kJpYh^_OKZ)`FjaQPW_Pbq:di!K32.u.?[lHgkWWkrL2fClY
%C/@E3M8EU8?5[LTe$B0pU9,*]NA-j[7o>b=Bs/qSQPS+(?tLk2]#SG<\\0#h@Ls'gb`K`oaK2jP"\K>f>E?U#O@AW,XhuCb=:5*>
%bdK<_Bp#0S,GkIW1<&>--KIs:D\.J5#\68PU\+?+4FVXk!S/[A.39mCJA+enB4J/0>ntk7`'Uch:(uD7hdb7q*8C'G8)MYJLJ_Zd
%""!/RnT8E(Ch8J",QR=1FD7sm%sj,RF]]G+Nr6OJoBBInnA6ikQ/4]K/%nEC4a@d_&?CQ\rhOqMMt5OR9@=;C10:VaPg=YQ54b?9
%q/:4bSp>[2DMGOEet.0ak/2:d*7WHtT[&+;+!NYRVXLEUf^X'WX@krEp@k--OEh:V`@@X/>8[YV@td&0-G7GkO9dl.2Xm3D6Qb@W
%nMC)TciEX0=!@I>apQjP`rs+/4dOK-N8@j1-8U_398apba7]Fia7]5hMu<>bMu<>bMu:)Qi6d<@s38%#]8U#HemjjmAOn+9IF%l\
%j1*MWHc$"FqIogis$#V,)@t0p7N7SE3-=+DT,-**%qKc9#'ulbj(<m=Y*PPdJU9Q(cPn##8S??<?'`C)k+)^gN6Fn`7\nb3.3#B*
%`UXKXT7t@Hpn4/g<n]gRHQX\#SbVU?i1Ki=`7ENB3Ct7t%%$I2Ne%roB<=?n"r0nt.%>9IckYjeN+G#Qh=+G0d!o@N7Cam1?W_CM
%#.8I;Bh#8X!h:oG:)Qccie%M!AgnsnYu!jmSo@oU<9KqnE?4r#8G4^3RPlQDb)OR+0Y>)V*J?.u3m,C&cG?bbW)CFB2_Z3b7fu1'
%OR'ek7'J=a14`J)F;dc%@2IWQ>fPAU^AV<Ec#(Gs?Ounoc$7&jEV8iT/97G:_SC`H[oGi`6WgZpm\'ft#!`K:.'_i/[GA*K+oj,Z
%]X]s&Xf4oH`YMV)VZ\;,P7*H:)YHX2I\BaZee$u,egsgU#]*U@<e+h.:\YE%A\k$+I.FOAI2,-P5;ZbV'sKXi,iXu[CdAKdf$d6=
%qgL.t>i>2O,sZ7L\M.1"&d-0#oIcSiDH8+(ap4ZFFAQXQq40/8j*oZQ,I.SgXEkCI%%_/U+=Wk7-+f#?>=Q"J0J;7hA6]>[1o')\
%bd]3FNq+524DaJnZt$%OeY55ZrSqKO?HP$%9Agb[l\bJ:pH.@n\X\P?Cl<ktdVA7fQKnOb@-YatJ[MK03=JtC/1k*bi2(>W-k*HE
%+t$K0"//3ON-A#-it_e[O;J7T+,#udGPS/'8.^>#QnlE^Pf*qk9i&4!2>`+tSQZm<MC-9c)&De?NtCFh@+L_:ee!S8_CQX,)D?[c
%rF`D+)W^/Qm^WlR,"p?8Q`%3i8mb<BFi[0OeUcK,jaVZ^-SL]+YOh^`O1cFr=[)c:2s[gB^'aZ,BmLF;Wh()q%$=D[(eOk^ngsZi
%>6t5sL;]I!PqU.Lm]+om&[[f--R>]7C]VomXG:&?(A0T\.>]WY<UJ*j"qkJQp$>iW$V,K@(_P&8Q:.T+(Ma)4GnWCs%LeZ<>e6t,
%P;BNbgE/u%X.[*4e'm$#="F'B4S$=pp@EttK;&J4WcuhN:9.()"@5&m/-^paVi)](9n:D&L25@H)i[JA:<[U!JptmMR?i\fFQb%b
%*oQNl,.qWC*meRWL[8p(o,;ec:D_eTc[P[(=e"<@LfN)j(j8tE]]3-tE%9Oob5^u/*G@6tQ!qV&?0r@+U-G/9-)g9<g#IMU78p^>
%F'u?-@7KPI1<6Gdj[F<"f24=2\D.RTgkj%A",05W'NK@XUK[GcE,'MhD)R"SIX13n;Z)IPd)<BW,[J[M<E%_o__7JLVP/<DZe6>r
%m-6^R(\6QH$F?kPbj\#);+;.^Km-sf7=\<6&5XI05gTXt0H1H9DsujSZ)-\M6a:e;GjHHYY<!!]f0o,>Gt=^X*;/[]1q+RGJuBmE
%&>k'mWSQN=#9%\S&<,?K+!G*tXR+qB9Sb!rCS)'1q-nMd+Q-?!NG4M1lHk@f<=chXB6DOK.&500m-*RgUYD&$)7u=Q.I</JmnYdM
%I.4&HZ.L[<?7j140]>_L5-<n:`_qZ1nmNpCTDMo6U_.HYmmQ13n4WXaYn(J(3_Y+\SEFuUF/8[cHrOqnLG0(4+)(E^iBO=dcm"*d
%OR'%,B+pq5TM?M/H8^X%_!L2K#VLD6dh]som+oHI%UFG\Q3mJ($tqPf6QY'Rk4LJiPE^6m#8omlhG6PYhBQQg]*P$E,6@n-Gs^15
%?8\!.fpbDX,4AeX./ZLeS;E/OmY@q\5uo"Td1idT#<&'r_9]:0F8S<*#ANJ''+-7\$UGe(/@cV_5\#DnBdH'=RO2ECW"MHtBf=,"
%+1%F=6&4Yh>%CdkHWaJ>qX@E-n>eR@d:ePbFRqVqfC<1Gc@3XE5[Se$&M#C?TI@dS\K!PZ*b;3,`G:d[.s<gLK%/Z-JJ,%B*JfUp
%hM86LQTO#Qd1e7)#<&'r_9]:0F1h)#nfj'cU"t%j60>>Q";44MgTGp=@bJ'<&aTm^7@=^8b;NA.F7CqN#&2C-'$QeajiKNneS\,0
%GQetfJ5STCh.8(W?\r`d>ZGosL@HXtn(CIj/+D@^%t<-jjgW#FO^28!3jo6Tc-=Lhk0DWBDS4L,'2m%!5>Erbe]"(K-Jdt]--Kh_
%#`s]j-W*;(#I.nJcOS9XYgJZP@Q+Ya,p.VPD!'`DW%i)"//HNS@;;4j:B4=OgTCclKI>GH(;]GFq]AQ_+uQRY"l"f5P!U'p&-=>:
%W<dM;!m?N\c*\bZXA+_X2BJ\SIZUKGI#t6MN)nPZJY>sYP_AX[WH`D,I?,FM1DoU?osHJW[jBQA^p'%0#%Q&t8Dm?X(7(m7G,-j)
%"<ffiYD*D(qk&Nmr->l=iPHEBH_S2NlYK<B"/j44hi&V&jnuSN"6?@e;Ju<Q8adbjgm'sL50ciLAb>Rk\2c+,"*HeOh`IOXBA(5p
%OhZd-o,@Im-6V_tWF6h,!M[%,'pOiG0-'S&TKG[ZCHAn]%]os>[\2r(5Kp-'4E4r%HgUqVC_^/lf2<9B?,EWP'JL(QlVs"fPfH>?
%6SS:OL76FF?\-Y2!8FrI$p2EQp!V&r!;jh4"=4VQomD?4J,;0kUZSB0ds8SIg%3>ZkYD9<7S)=WOuC6]QMm59@?)jiibb:\T_K=%
%=c^gXs!YL]nMuCeRR>p\Sp#pl+.FPoE%)`7H92L-MqG@(]a3Fud@=aj-F""*;Pp7O,)jU.)6tUak6)qf)eJ&t6T-T#Ye/4_aQ(1]
%k4Vui+mqpuo,kja5:!PO^`\f7aN'r!:mNpeG)HtLh1P!EA.3dFEgZJDD\SL,",/%X=ju)58d&_b$QVm!Sb]/<ecj`1I/1YNlMEC=
%$kYl7A\nmH#A$*&Enj_6C$`Ao2(D###@X`H"aP58rSmg8B:C^l,c-lb'Oq-O%6AMp[AO6GOAQc_9W@0O@`KmVP'8c90&",9$Wr>W
%EZ$6)`b>6:<%DLeA8Xhl\h]-6ko(nPX%Mt+ZE)Ll".>F=0]'XRT$E/@E]@X]\Ci:n_c72%/#l@ghC:4\OVA^^+N#[13)<lmKc_='
%YdUGQ2(9%"!M<8_KUlTB@F:/h_SVO%=NV1DmF[@$+\5]=gJ+&=D4#D!OP@t^3Y8@.D0V[<+"IK?W\sr$S4XomNOH`n3M1%g4A:*Y
%_'hXp\*Z5*NjTH5,]#$7`D07(VbtQm8^]Q8?SH#a@M)EV]1O5N1HBPW)/J(UE`T868p^i,5Y0iDqW)5)P),5".VjRmk!]k(KPgCQ
%UH="0#r==;Dtu@sXkF*='[G0181GJ&!Un(qHniG/p?EIC!)Q\n1ao9&0-7:1`Q5a5Ar=+Vj3*>DZMI_9'_D'(Sebna+S]_Ca^]S0
%V;pO#?6'BY2j:q0;9I*s+$RrT:)7-&f\5\>_Tm@+#]E:(.^icV/1@hf9Pt,p-:0aDWlTacC@);/_'(#31C9eDd6'sc]`jNp$D9)d
%QP>+b&A*o*=.9(eitc8g0Jjqe=i!YMd$@9FGjNpYM@rel5<r>!@:Eu5R\c+BEm`1T5s)t!#*?MaUnUAe!F!T[Ln^0na'd"#qbT9h
%mQ<UeE0='S<Lc8`_kPanD*.nqq62(-kSr0u&b!%[c-7S+/.$*l#jf+$3/<"2qFm*leEP59g(>9RA3@1f,Rf@uIKS9?g9HeCbO5)%
%1k4_qXR_R06tAe\PX)-3iii%*5n_34A)]#>pFrTRkl>O3$:D.eZ8cr]0JT-(._nk`8V6'.q(GT#WO>LMS]\QR]Fs9n:Ge2SrG_I$
%#fPrJq]B-cqgE+8OhP%J!J?Q%/A]Jd/H/IBKgW;Slj7NIe:NS,KiM.r.lb_5o6JHR&gu0:F!Rf]6;4_,2S^K=/5VWgITCK\FJ6aG
%K!^:\m`naVgcoXO5uqY`=d+n'RXnBk/G1\2Vd[b4=HcUB/j<F%7s;bV-6ENBRQP:B"4(k>Tm6Rf_4!Ik1`O[_O)@_aHC[J8O?3>V
%9g02$!o>?BS=*tu9I-43aXlcPA5,Ms^LtIVOYX&\4)pX<pTB7=GlPa820g:rU"ROAI@9+#f&Y-]I"Z)P&rHYC*@XY"bc4m]]&7jA
%R-U2b4&q5F&c\uB=[A)M!:ffr!d,#bKsK,I8plr)MhsVEl_AOpr/^AhN%Jbd\<_OV5-#9a1^h.k%13u.>3I\6^S03=3k`T.K.>$,
%2W"="JU9&-GJC6'qes5)^\,U=Bg37G<OTI!o#p;!X[Uol:pX7HrE[@S'NnpJCHsSE0O6Q*A-KH!RiY1e?\Y4BBjR(n@1ZV)k1)O7
%Gehjo4U>FFiuPH5r!=P>AQXF#nHkSk;l!;?6js?=crJ,=Mfj]OY#[\J<T&pl1n)Q[.IS>^Ku,mQ5DnNV/j'LCKgd(]VrI<8JP,.+
%f*Ts$\:rK,7b!kCRcq=SU'T8hcl?d0e.RQ(JOXJlUsY!%8ZOTfOM^"]TWG2&'+c^\ZsGGdJ07huHqDS:aOsEP5pc"DYK2YI;d_+J
%(cB&sM-`Pe-JSiX\AL(Q6DK23pnT)0jl3(6Pj9S`a:0h:i:T#k!Xds??X6*5'Qek$MoCmAf+b8ZF028FWiA,B+EfK!$qXjK?ng/E
%-@OZhmRp=\<1+PFAOYhSZ2Z3TR2nRaC%Er[k",NPGRcDQZ$NA;L(Z]^JgX-8Q)44!WQ@a@-LFIR>=r=_Xm:t>U*i'._"O7`3FRNH
%VYk3Fm7i&JFFnb0VtY7Vd4a4-6VuYj9(48W'KJBkk2J$ga06uQNXp4q7@LQSq&F$A;Ll<nOR]2lV[WW+BmG)=e(=aRR8RT'@Jr^=
%L(TG7'7::=G=K8f=a,T2f#8?l=&q0PgMd3G)ZRYZ/)J"r1;p'6o,QXo\Js^>)8IRB"W-a$@f'G!'gs0,1EmfibXY%\>(e\&kZjB=
%Y-P^QaaDkf6jf$TX/3E^Z!`Cqc,C!'TKuYebR0lI?\0\*S>7\NNiUl=c8aR<5RkNDQW^_:[=a:Q,)Go\ATt]1n40W/Uj.&>e8XXS
%mlBY"8<YY3.Zsm`RS]OOGYO[$TT(V*j74$*O3lYc8TM4Ce5O/u.M,"),=rNPRB&]`'S='Wa=k\hlY03t9nD1U4dYu&18?%0`u*Ed
%+5K?E3`#4@9DOb9[7K)6L,R*t#,%HPYQMEBWEWO@Xe<Ln\iLCo"e*(FF*21k(FZ`o[9-?>"9mDm7ZMk?DnnoTXGQ)9-EB1_`Q[:p
%$2\&Ni#$Rmml'd'9^L&A=OGlV[&K\#1]3C%r.<uOKU57#_K9W[E($)7+96a\ofGDS`M/ibnN>4=4\#'*aG6p)>4.b''U&#75cI`d
%-!RjQ>PLpZ[8I09GGMVu7-Q[/G$lF[M+Ugc6uZV8%WY-A45n\b<@a"N7$phA]Zfs]Is8p7@qIh.hA+Fo)M%me6(>[.Ll`)$Jm/ZH
%,ieu.!h?kb"0L\ekF`Pk+FA0%8n'*mX9V<em"+o(=)Y\B?u/gp_pmI1ag1C`A_VG?K](8E']Z]jG12t[Gb*g^r)ga`b*ij1ns1G]
%%C\qg&Vs_D&'"Uh]9dYKBN4*bG]cdJS#iB2(p$"m?CEnmA@#-8DM>>57$U,@nAW'iMF3X6n?*N`Ih[tK#I[Z9_H#X'=lF`IQ>jQm
%<gE$I@97Bh<?C>h*.N1q!b5Q#;Te;ZfYNZ/)\HlFL`;iu`%_7r"=Ka0CF5Nf'KQZ9-=5XRKL)(*p"E^4Z)+2r\U*TL:>%QFS8"2f
%LtG=e;BU@i)AaRgYb-'g>,E(Qps)=?NE=#;"n._0dq+EOmt8GCj<G.iM0/3pTe?n$UAp,eoVtTdVD@Jnk`<+9-L6H9h%XB"j`;j&
%d[F.e\*^G[C\H3W7F^WWO&?!"-0YHLPgrVNG%Os@6*ieDKe!Gr8AN0$dV$@Y]Zff!mD`E@FLqcc`b#>UWlAFoi:EcWqkqU<^sm)V
%Q,@m`#\08(ZNIH]<KpCcqC+46heq-g@m&\rAPK(7(f]WD/48]i#R\JR87Bbh=9q9YYBLc!*jMWu@0G_D'')ruV&GS0<OaS%^A&1V
%hpke((?FoCO>&fL[`p1rck"VGmGK(&IN^>ghslTaRut*K6'6N!.HpGuBns[c#pBs`'FW;6Bkb=+V--3Aiqfr+0$0td6K&-bG(GfD
%p4l%WVgo+aTF?%-]JiG8(5L8@l_<`:/;.J0ej[]uTEq9Vo$9al!S<tUHn[/s(Z=q`>hO?@"V-r'`6u8Mnk^7L8qc261T@aW@.]C5
%TGRc'o(Xb54U)42FATnfODL>WaY66>AKTfpiL#AoVlJ:iaIq)'&bHdS.Ng0Xf_@`^Iur17-7C=!d'1#n@@:-td,J9\[4\I69n<U=
%Xb^+WN8.cKpObVm=eCdBX&IfeTRK`c"3?)2fA2n7_3#V)7>1*_e6$8d7]_3opbi>KA@,pj.bBD0;sVY]gF,K$C`;*B>4h<:aMPr%
%S*UABEP<Z=CH8E+44)qbVWruY"5HA=.)lOd!@Rq6$=tlLbgl6CFi:$t1k5T\TWkd:CbKSP_O!NJm!Ak'*I,<*$*S)5lS@fQX7NoC
%KrU.eNY(>nam2*a4ihL43&oKPgBr*@d0/<,?CtR9:(kh>OCTW`jAV?%2$s8`c-Jj0`Lnr/,q:'3\@Mr[k]&9Y!rbHR"nN:\8pKCq
%FREl4mOGAn]W+A(2PI4"<1C1i^+^6V&%$1'/#tEL,%Er;gaW5_3m+.!;O@nAa8h7\AYcGJ&HeG^D6@69VkpumMddHFnErU$GFQ$6
%&,rieS2-^aTFg)_Rr!^(E1?qeb]UbH7,V]4D-,L6.91%i]ATi@:L^F;D?@u74ZsO8BHoO#p:NRRm!PlEi^]5Xo-'ifT:7^uObLjs
%gmF.Kh4X8Tk2="ffgmX3@9Rq:Gnuj/K`e,^nEE9t!n,D,WuAOH?.q<bgTifsCpA/?pc$,M+Q88_'Id;92;!Za]5oosrAqU-Y\]Io
%+U;(oMmE7rd4]jr_lbV@^(H'2%Jse8Tf%hY]8R9,@k.fG+jGUI2G_R#o)aeAgLXkPP1%?oMB;nZJdo]_#\HjrP(u`iN\D5%,;u^7
%O;OKieKsNtF6m9$>G4-7ldD)%2Ga=]e`M&a5_)934i[F2-&Jg4KOONc7$WMk[49B<'HS:9?NH/H]EpV/s6HlD3NDI$K?tr-RV)^i
%pnC#E..$8UK8pH/!a'_\1<-btMu^j3!pf`C&dbThIs^2Z9<]>_"C5.G3IZaua;Qt(e2gip,7Jil^,jUmFVf[IE+a8="PJaIU(#Pf
%h-3j6E'j"bOaj*a!:dA4nMN>;"p>>+!H3qif4FtulEABp:<SHMq-fG$,(`qL[dI^WX`.p-8k3gn@;#@eeWD"+)$n1nXZ/1c:#fp0
%LGrTe<Yp)cKjZ!dihN$d:^*\gg5F)sco6O=@SVAX`]?MC.L"j`.I"SWZd(%a-n'qUWMTd[n!%#W;%<K%2&@]lRAWt*Xq&'qO!FC%
%b_"FoBY$%#/e,<[R&a#DD;P[!9(eGB<ebEik>?F-D`^E=%cLbaJ8*m/RaD"[Egspo,\<T6aSnjs55YcJDXjo&EJ=.sWF3N)ZR>oW
%Kg_['P8H,+Ko^l'@+gjd';Y%ra"b;^hB2NTEVpX\&@K<2!.`ItN#@W\9cGtn>hY-J7PO$kaC1KA4H]DV^]OoRANqiH7cBa=*AT+h
%naI)O^XpK#jGA+1p@.nMFk%ko`.D<Oj3L0`BHZs,pAbs0"NC8G2OkG#"A7)?^Tn9die2-b"u:gZ)=IMMc-4=,*d1o0g-_u7I*"4g
%fLB!1k/q7Rg3-c)3'3(s!5lrs;k<muMB]7HT!$IQOt!aW(9hI>fgD,/10"$fb`6lq,LsLiW#%^qMUi5331pOkOuRml7J/@q0WUo+
%;,ZUR?C9jbq+X.M;'H/"1)CX&AH95`B$NpB3hZ6E\n<QR2&-s!hXk;L:Rb@l:F0G-PXZQXip,Nr]T6!Y[tTQ%,oGtS@7bD+l<6I&
%3-_`6@aN"<Z4Agd@$t*:NN=s"m*YDYZ1tC0[Q4IkZ=M?MLSc(gPl>\C-B6;Jb)6lD+H76&`8LJ9IT6e*?-6d*`I[_"3_qiog#SL6
%aEJF*%O0d\eJSE2dQlG$iDB,o_Rq@30B;;jSM>NCS%b)l";`uoi-Z"h1P5_g=V!#igND(Vi]G0Z=ZR#e4CN6>eOAq?8Vh\pNqj9r
%gb3#h_\4h9)/.AjHGVaJRcYfZ_E[59+XS\=GN<BEHT0S<,GcR/ZT\N3T*O$AVdnW0h#&ea1Ws.N`;RM4SZ_8Z]KN0Zj*X#\pQFJb
%5d!H9<Yet0elAeW7Gh*-?:F([UqI,rX3eQsmEQVhcAj=H2b;V;L1Q\J`7\4>/paq(WF0YCi(1aSOrNIPpX=!!Y&3PNT;R&_XTOla
%MaFVr]eI$TXK,I8Q$udXGnm,6o(Eu_4&UWZXl5T`G"$:d3`6F.,QH%3I_0C[,,VRh73g)qmlWu6!:DE#SbVTTjjABZa"+#J.J[8f
%b\-SkK&Rc%@&8^f'V[t_?)7XB:b+&T+Wh7F.O[)?E(uR!_3j4Q=BqA%;shmS2CjCV5Z*q#'RYGMLO``I;IT_9E8j4r9.D8hTj)dN
%b5MO[?o]G+ZSkX'Au"E\ZAa"e+4R<rdM]A'nVei_f#U%nYE2)qPc1l_*!=SKRC&**'9,aKXoqW@6"*2ZXqh^D'J]puRW\NQBR5%J
%)U7nK+r?EZU2ctg/\$`^bj$ZVOU+R>Lnr!"'M0V[$#`=_=@_@gFL39M2DA_N4%<3eLgq?K'[-'bi_m00if4$fQm-FB$gaS\Q1e$.
%`Ve$-@+)jLTEqV&'OKK>NU6G=PUV'K"thQDOX%TG7&?&e1\b!#;)MmOj#Ke7)j.<7mOM"XBL]`jP%L)EKp$Dt.GZL&7TR0[c:9VC
%"-DUK5UD[+:0X-gYQnsOplp<.5*)j)@Q2r6ga]/Sd/oLg]j%-tKf7B.5JBcn#apRhgO;mp"u'tj&0c<biCQa!bhJm"\54%]?I#Lf
%[k`hQe"A+=;(dnu!9ocTR)]+^\_(9u@n-XA0efO:d!;UuS`8P-fm^`M=`Ff$:8uk6F>QQ_aV.n`C-WJ%#/`asap:+UDcTC#_kOq#
%:h2at@cTLXFngP)Kk6C@^Su+UUB,eelc>\E%4`jH%Ktac#$_$[Ulf:L?g91UdYrp<[kB1'1a%=1r2NW+Rup7T17]OpGd(eNVNk$=
%/:iZD&rY?MGej4#hm"L0hm\D:!/683$r#nr[Ghm']Zc_5@p#)%WI_uGPR&+r\9ZI9b+C*c8<T5A@oh`#Q/j2hf-TjL\T`FQ+.=Y"
%XP(Rdh/o<8R4!$*E42eAE_pLhML8l(*onREJ]`MIjT@oJN%rK*@ar6kE9Z;@"/)1T98cp"+-lpM0@bIbRpg\a2DjGl*;C1o)L"MI
%b]oEU;R]'AIM,n9[h(pVZ0glVi?esR_iq.Z)P)t#>6ZL4[?[02@&"#.bS?P<SHY(dTJ*A50+]1TJl?oBR4oX($H.%)Q:>%L1!d-8
%P@Jc+bWUd%@kIlF0^W;\.l6dsTfBPcMt\:oHH_3c!Gla$giL$)jP^p0Lp*F'\"p]HW\,DI5R@N`X_22D+XE.(,4HI3ruj_1bG)?l
%A.]O+;25@8b3G*ceR;iejl$2\;#`kXIep"c8=DmSUHDGn)6:ZU"!Xk%Lg=Ch3-)SVV,u2@IA0P:o7rONH;"0)!TH$55P]]'Z&^cG
%`eSEH%@B[YoG)><ZuZ+!(`Hq'[\WCd$%6nZIBZFT>f:$2/!&Q._3K5+JXW8(l&DK)S&?"AHaUIM'[p-s>UO+L#,;0Yc((JG:GO@s
%<gqMuJ%.+6&2m5Sjn$2J1Y@0=B%&m]fA4cSC;]Oob#0pOM&"9EH\+g.ki7B(N4[rT9uRPYp4Pnk-OTNoIlN:9^^i78(]o955k1lu
%m2pqY=$o#2-+]_V:Z(#*;SD>^8=[B4HN#g-.*Gn7b?]&0q:jC0PlK`A7&s6,2]hq=Nl38.9sr1,#g9;_LS=c[(4=$Q-:9QI=PI-T
%C2`/iM[:VZ)uNt3.ogL.:LA3+![L=(,#m]S8eq3%UN@LhRU/h5jp*3cD#iSD$o"B4G&\q:aoj(b`rW6'<NqE+]6-V3LH:-a!@8ki
%Bk=UA$c<Y?C_@"<T)a;0.TfN+#K)pq38do+.>:;l:_k4+"QmjdHR"Mo@o'[B"O_[F8No?ua(daL?Z5qHf#a._'^Br,p(3J<:Q0X,
%$`T%NFd[&S-%']?IiKn037&?a[)4a'Wt<X:i@!H;nH67N_S!KSK7#qs@uNgu7HY169=;QZ-leUKW<ro*bi3\MHoNKNJKGoP3PhMX
%rO/_@,^[Zn9S-gdk+uPS[u\HG^*F/sO^RsDI%60e@R\)NO^)&]m]Zj[hRM]Q%&tXP;PTqZ8f.+4Teu%""^bOF!'2f=;LH;1EAbq#
%`u")-#"qFp`m$5W/9'?@9cT%loX[aJ0@ob47qOo,Q,6L"K9HXT[gL+;#%,6%-DM@V-@JhW!^I-g5(aF]K5sh!Th`b"MDZ0ur30_p
%JhN#s<G@f05_,8uf<Mf#3Zs>J^;1:1Ck3+d&?Ak!J4=9;DE+5+IP)ln10UU$]"Nf4+8Nu06D@,)[.Fm+Zl!?Zmijq3%-gYCH#!.j
%+&,?K>=$=<617Y?D?G\Ka^YMi>BqE48kLMboBBP84eqe\,^_8I2$Si/7Ij1,D)35_gQpkISa\1gOl!q4:r3'Gs3]#S29mmInmR\o
%#EV/5Nfj.1>t^LpBB!'Gr;!tTHic2#^E0ob"kN@)aEa+MG*Yg'l#eB6Y*/9(/^I(!&b*GXh^fR=COFrng[2T?l?VE.g#L4CGC4Sq
%`f4Pd"pc.-7EUFrj<]Z`$efZR7UDgqIj*<pfS2n.<A=W15iS.\<%a3/8_fWQ`sie9R0.8ik;qi&'cc7Q0;G_Fr$(Mm\.bGeNpG59
%HNRP,Wp=5>F6B+QBjX]>.V-S4AsTfDqFu!(>Tl"[J71dLBa5tLeHZS?AqUHrQ-lT3/]6R\$4L=m%?[.#6:*!^V.*[P73pkonfWt6
%Nk?hOcpWUaIE=p_n,@>&))KE;)e8IpSSp0%[pf+AdRm7'@Eu3F.ki+RHQ?$2N*:i$Cf$o-<=Emm_+[klU_GAI(*\aK+]HFqUp/=2
%@hBr[:rd0-QPU+_A2p1]V['SbP_>7^cP7alP.]#rDC4uB_HYps[nW+dYQ%,gYQ*Q's4b"Irf9;Bjia!Mn9=osO8n^Is883Jra10S
%dpN+JDuS^fs7idIqWX(@pl?!'J,6phJ,8COrplt:rdXq307Wi_TE!5eqX:*8U\Va`rS;tuO8o+7rltHG*qG6t~>
%AI9_PrivateDataEnd
