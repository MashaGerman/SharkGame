%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: SubmarineYellow.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Daniel
%%CreationDate: 5/2/2015
%%BoundingBox: 0 0 271 228
%%HiResBoundingBox: 0 0 270.2730 227.7198
%%CropBox: 0 0 270.2730 227.7198
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">SubmarineRed</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2015-05-02T11:37:03+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-05-02T11:37:03+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-02T11:37:03+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>216</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA2AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FWEfn&#xA;LfG18i3KfFxupYYJApKloy4eRKgggOiFT7HCOal4z5M86atpV/NaaLdDTIZhE/1H0Y5LNp/iDMYy&#xA;FdOSBQfTda9Tk6BY29n1H8xja+S9O19LeJ572b6rJE8hSKOdBIJhzCsSFeBlG2QrdNqfkf8AMifz&#xA;FrcmmTW1tGVtpLlZLeZpD+7kjQqysidfV617YTGlBZ1kUuxV2KuxV2KuxV2KuxV2KuxV2KsS/NOf&#xA;UrfyXeXFjPJbelJA11JCxSX6v6qiUI4KlPhO7A141pvhHNS+eE8wxyXiW18bmazoHt4pbu4dYWDH&#xA;n6Ss5oPiU/PLNmL2vyl54uYPJetvcSG7u9AtmubWSUl2mgeN2txI2xZucbRk1qQASanISG6QUt8v&#xA;/m/q0+oWlrdfU79bu4gtwIEkt5V9eVY+XxPMrcedf2du/fCYrb1vIJdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVSPzn5RsPNehvpV5JJAC6TQXENOccsZ2YBgVOxKkEbgnEK8I8/eRNN8ma1oFtZzy3M92l&#xA;xLd3UxAZ2WSBUAVQFVVB2HucnEoLKdd0yTUPyUR7VkDaZqFzcyo9VDf6XOpUEA7/AL8N0xPNeiD/&#xA;AOcf9HvT5j1DVZTGsVvYiD01ZmYm7lWRTuqj4RbGvzxkoe7ZBLsVdirsVdirsVdirsVdirsVdiqH&#xA;1LT7XUtOutOu152t5C9vOlaVjlUowr8jirxnzX+S2g+XvJuuakl1cX99HFGbWW4Ef7mOO5jlbgEV&#xA;fjZU4s3h4VOStCSeVY59R0PU9PhnWGWbRrmYs4PEixuYHo3sRIVr2rkpICE/KDy5qepec7K4dYEt&#xA;dPJu5/jZmIjPFAo4Lv6hB69BgkUh9KZBLsVdirsVdirsVdirsVdirsVdirsVdirD/O3n4+Xr22sY&#xA;LeOeeWMzzNLIUVI6lUoFDMxZg33ZIRtBLynz5rj+bdQ0u9Zrezk01ZUovqSeoJWjYVqFpxMX45MR&#xA;pFolfNEq+TbzyyPQ9O7eRzckyVUyy+qfh49jt1wGO6215F8zzeU/rnpm3u/rawIeRkTj6HPwDdfU&#xA;xMbUF6d5L8+ya9eS6fe2sdpeLF9YtzDKZY5YQQrkcljYMjOtRSlCN+tImNJBZhkUuxV2KuxV2Kux&#xA;V2KuxV2KuxVjnnfzf/huztpI4FuLi7l9KNJH9NFVVLu7GjHYCgAHUjCBaCXnnmf8ybnXfL2o6M0N&#xA;tbrqFvJbmYPIxT1F48gOIrT55PgRbENDmfSo7lFuIJvrGnXumkkSLxF60TF+h+x6PTvXCRa2mHkj&#xA;XZfKt9NdI8F0ZojCUb1EpVw9agNiY2tvSfK/5mTaprEGn31nFBHelks7mCVpAZEVn4SKyJx5KhoQ&#xA;Tvt3yBjSQWeZFLsVdirsVdirsVdirsVdirsVdirsVeP/AJh+XtN8w+eJ5b68ubWKxhs9OjS2Ebc5&#xA;JhPcMzc/s0UoKZk6bAchIHQW4mr1UcIBPU0x+9/Ljyxa3trA+qalS5JVTwtzvUDrt4jtmXHQSIJs&#xA;bODPteESAQd/x3sf8y+T4dOtrq70y+muorCRUvre5jWOVEdxGkyNGxV05sqtsCK16dKc+lljAJ5F&#xA;ydJr4ZpGI2lFjAdwahjUdN8xnOegeTdf+ozabqzNRbCYC7PQfVpaxzE+yKxf/YjEiwofQ+VMnYqg&#xA;9Y1W20nS7rUrnkYbWMyMiULMR0RakDkxoo364qxa1/NfRJP96rC+swKVdo45V+j0JJX/AOFyXAUW&#xA;mVt+Y3kmdVY6tDbBqU+uB7M7+1ysRwUUshjkjljWSNg8bgMjqQVZSKggjqDgVdirsVdirsVeJf8A&#xA;ORmoRpqXlWxeYxQO9zLeFAC6xcoU5KDtWjPSuTxizuwyEiJI3LzLzHN5Rt9JMmhX9/dak5Hox3Cw&#xA;LEAGoxfgOQ2rx/pmTkxxiLBu/wAdzi4M2SUiJRMQO/8ARuUm8p2/mvX57lbeBXjtIZJpeRKFvRXm&#xA;0cX88nEV45XDFKUTKtg25NRCMhEn1HohbzV7uK+it4wJAxD/AAHdkNdqHv8ATlbcz/ytqV09jzgB&#xA;W+tHS5tVc0/ewMHQMRXYsqg+1clzCH0rpeo22paba6janlbXkKTwk7HhIoZa+9DlLNE4q07qil3I&#xA;VFBLMTQADqScVYPafm5olwFdtOv4oHAdJ2SFlKt0JVZTKDTcjhkuAotM7f8AMnyVN9rUhbAbFruO&#xA;a1Ub0+1Oka/TXBRTbILO9sr62S6sriO6tZQTHPC6yRsAaHiykg7jAqtirsVWySRxxtJIwSNAWd2I&#xA;AAHUknFUjfz95JRiv6csmI2JSdHFRsRVSRlJ1GMfxBs8GfcVp/MHyQASdbtAB1Pqrj+Yx/zgnwZ9&#xA;yXn83vy8rtqvMdnS3unU+6ssRUj3By6mp5r5k87aBcavqN5aTySpNqkVxC31e4FYYLG2jDbxg09U&#xA;Sih8PfNp2dkhDi4jVh0nbGDJkEOAXRt3mHzh5fnjtpba4eSaCUMFEE42690HcDM3BqsYsE83Wans&#xA;/MQCI7g+SX6t5j0G4uNYSKZzFqGn3EMb+hPT1jATEN07zIuVanUQng4QfUHI0Wjy49VxGPpI/R+t&#xA;56JaivpTD/nlJ/zTmoekTvy7q1rbmWC7SUW8qlWDQykEEb1AU4QUPaPKH5t+Uo/Lljb6rfyRX9tH&#xA;9Xm521yxcQkxpKSsZX94ih/p7ZUQzZ3o+uaRrNoLvS7uO8t68S8TV4sOqsOqsPA74FYV+deqej5f&#xA;tNLU/HqNyrSL0Po2370n6JfSH05KPNBePieaNSUkZKDqCcsYpCnmTzRagubyOaJQWYSJQ0HXf4/1&#xA;YLS+rvK2ntp3lnSbBhR7Szt4XqKHlHEqtX3qMqZJn03OKpJceePJ1vK0M2tWSyoaPGJ42ZT4MFJp&#xA;9OVSzwHMhsGKZ6FS/wCVgeSf+r3af8jVwfmMf84J8GfcUDL+bX5exyNH+l1kKGhaGG4mSo6gPHG6&#xA;mnzy4GxYayKeQfnDq3lnzVq7ahZahNIun2EcdnCttOBLPLLK0q1dF48FSP519suxRibvbZx805iu&#xA;EXuL9zyyWxuY+FI5JOS1PCOT4T/KaqN/lhlCutphk4r2IrvZh+XWp6Toeq2l7dfWYpPWj+tB4ZzH&#xA;6YajUVFYfY7nfM/T5MUcUgSeIh1Gsw6ieohIRHBEjuuut9fgGPy2llHJJEkMk0cbFI5zDJydYzxR&#xA;6hQdwAc1xq3dRJrfmm+gaqlnfK8iSrEdmPoyn27L74hL2D8vfzP8rabo82m6neSQi2uJDZMbe5fl&#xA;BN+96rGacJHdQP5QMhIbpD0TQvNXl7XkdtIvo7oxU9WMVWRAeheNwrqD2JG+RSlf5n6r+jvJOolW&#xA;KzXiCyh4mjVuT6bFfdIyz/RhCl4KkkifYYr8iR+rLWCTTa75mgupfQvVePmeKSpWgB6Vqf1YLS+i&#xA;/wAo4LiPyFp011xN1dtPczMgopMszlSOn7HHKzzZBmOBXYq811vzJoOra9e2t9qFm0GmS/V7XS55&#xA;4l5Tx0Ek8sTGpKueCBhtSo+1nM9sarKZcEAaH3uw0+KgD3opr6/ESvGqeiR8DxAMlPYgkZyeTLmj&#xA;zFOdDHjPViv5ianqzeTtRSBi3qIkcwVRUQvIqzHYV/uy1czOxs/FqoCZ9P6a2+1jqsIGMmI3eWQ+&#xA;ZdGWFFNwoKqBSo7Cnjnpdugpd/ijRf8AloX7x/XG1penmTRXIAuUBPiRja0j4Z4pk5xMHU9xhVUx&#xA;V2KuxVYt/rGlT/pPRLySxv4x8bRMAsqD9iVSGRx3XkpochOFjuZRlRZfqkXmvzrpum+YYJIdRhWB&#xA;oktgBb3Eb+oRMpqTE7c0CkgoDxG2aT+VvCmYZRuOocrwYyFjZheryvp0Usd9DLa3AU0hljZXNdqq&#xA;KfEBXqtRm1w6vHlHpNtE8Mo8wlWhR2+q6tY2MZWZby5htnUb0E8qxksPblU5eWt9hZWyYD508w6P&#xA;Prf+H9Q1C3tbGCFZby1mnSI3UkteELBiCY0ReTjo3Ja7Ag6PtfVTiOCF+bmabHtxKcN3P9WU2KQm&#xA;0XaP6txdAPAcCRnGZcmcHcOxjDGeZS/WNY1mPSr2SzPK8SCVrdAq1aUISg3H82VafUyOSImajxC/&#xA;de7ZPBERNDenh2m69pNrZx28s4WSMUYMfirWprXetetc9YiRWzzhCI/xRov/AC0L94/rhtFNr5m0&#xA;Umn1lR8yP642tI2O+tpYmlhf1VUVIQFj9AGNql9lryyTLbTIyztIyjl8NF6rX37UxtU4wq7FVjG7&#xA;ilS6sLmSy1CCpt7uBikik9RUUqrdGU7HIyjYSDTLIb/zf5+8sW3K7hup9KuD9atJl9CUziMqHWWM&#xA;em6mOQlQY1pUgsaZpc3aMtNk4cgsdC5QxxmLGzGNShvNKLLqlrNZMtaCVPhYgVojryRz7KxzYYNf&#xA;iy/SWqeCQ82JrqFpJzf1AeNWkXowA3PwnfMtqfXnlbTjpnlnSdOI4tZ2dvAwpT4o4lU1+kZUyTPF&#xA;XYq+b5o7S5tLG8mt0aS7U3U/JByLTkSNyrXuxzzrLmlLLkN/xF6nBACNI2Dy5FBNNcWk8mnzO/KK&#xA;XT2NuQvgyr+7f/ZKfxzHGumKHP8Arb/ta5QB6IzTPNGqW8Ktr8RnsmJA1WKL0powDStzbL1X/Lj7&#xA;dVyeTDhymo+mf2H3FhUo8twyb4SiyIyyRSANFKhDI6noysNiDmryY5QNFujMSGyTz+atIgvJrWT1&#xA;y8DenI8dvNKgfiGpyjR+zDNjh7F1OXGMkI3E+YaJ6vHGXCTu1J5o8rSIVub63jQ9UuiIfvEwXxyB&#xA;7L1cD/dz+Av7kjU4j/EGGa1oVol+995YvLGS3uKfWNPWeJAslPtRb8aN3XbffvnTdldsZMUODURn&#xA;tylR+3q6/U6WMjcCPcoR6J5zkBMenROB1Kzwn9UmbI+0WlHMn5S/U440GT8UqfoDzr/1al/5HQ/8&#xA;14P9Emk/nfYf1J/k/J3O/QHnX/q1L/yOh/5rx/0SaT+d9h/Uv8n5O5D3mjeYI0C6o9potpJ8L3dz&#xA;PGdu4RFY829qjE+0GKYIxRlkl3AH7dtl/IyH1ERD0TybrOh2umw6XomoQXkVqpqiyI7kseTuwXf4&#xA;mYk9s43WZdUJnJliRxHqDXudnjxYiKieTJJrnStRgNtqNsk0L/ajmRZYz9BB/VkcWuF/zSwlppDk&#xA;wTzL5Q8ueXtU0rzBoipb3cd0GQS1ngXgjPyCE+pyqBRVcAdabUzrexdZkzSMTK4gOv1MREbjdnfk&#xA;z8y59T1GLTdWWD1LmotLy2V40MgBb0pInaRkJVSVblQ9NjSvRGNOGCwbzglvd6vq93LEjyy6jLGW&#xA;ZQTxth9XABNe0Izg+1M0jq5C+Qej0MagPcgoPLljJIt3EPqjGNfTls620yuOp9SIqT9Nf66z85OG&#xA;13v13DbOIKLsde8wWTypfRy6zp0L+mZiixX6AftLTilwv3Mcsn4OWuKoyPUcv2NXAY/Sya2uLW7t&#xA;Y7uzmW4tJf7uZOhp1BB3Vh3U7jNbn08sZotsJiXvVMoZtMqspVgCp2IO4OEGlYb5p8kSTXKanoKR&#xA;QXoHG5tqCOOZezVAoHHiev0Z0vY3bxwejLcodDzI/Y6/V6Lj3jsWOjyv5x5Ox0iMtIQzkywmpAA/&#xA;354DOi/0SaT+d9h/U4H8n5O5VHl/zt30pf8AkdF/zXh/0SaT+d9h/Uv8n5O5v9Aedf8Aq1L/AMjo&#xA;f+a8f9Emk/nfYf1L/J+TuUrnRfNkMRe5t7bT4ej3d1cRrEgPdiGY/hhHtFp5bQ4py7hE39yPyExz&#xA;oD3sv8gaj5e0m0/R2m6zbX17M5muSHTlLIQB8KVrxAUAAZyvaefVzyHLOEoR92wHvdjgxYuHhBBL&#xA;OBqdrcRNDeQho3FHUgOhHupzBx60ddky0pHIsG89/l95MGkzatZQLbTxPCqpGR6FZpkiBaJgQoXn&#xA;WicSc6TsnX5J5IwErif7XC1EKBMgyfy7+bF619FDrJtprOVhGbu2jkgaEsQFaRJHl5JyPxMKcepq&#xA;KnOvMXXgvUMglQ1D/eC5/wCMT/8AETgPJI5vngg/onSj2NrGPuRc81j9c/6xerxck702f1rRD+0v&#xA;wt8x/ZmHmjUmExRVLuCSaIJHM0LcgeagHYHpv/n9G2RhIA7i2KBjj1DR7qNdEkKW9wzNLp8yGWyq&#xA;NyQAVaFm8UNPY5m49SJRIyDiA+f7WEsYO42KW2l5Z3Nzd3lwI7e5+tzF4UlZ1V0/ckVIXlsndc9D&#xA;7KhGOmgByq/nu8/qSTkNqt1qlm0bRrI9T+1GNx/wWbC2hyXulTUWRRUdDKoP474NlVfL/wCh9J1w&#xA;ie8tLCG6tpH9WZ47eNmSROI3oGb42P6ts5n2m0ssuOHDzBdj2fk4ZFlP6c8r/wDUwaX/ANJkP9c4&#xA;3+TM3d9/6na+OO4qdz5i8rQW0s/6e02T0kZ/TS7iZ24itFUGpJ7DJQ7KzSIFc/f+pB1AAui8xi1S&#xA;RryPWr6L67qV5vFFs3pow5COItQIqL1Pf5nPStFo4afGIQH7fN5/NlOSVlU1O/mv0V00/wCr3UR5&#xA;QXsMyetGw/kYBfpFaZkZccckTGQsFhGRibDJdO/MC4FnCuo6ZObpUAneBoCrOBuVDSJsc4jP7KZe&#xA;I+HKPDe13+p28O0416gbSzzT5rGpW8Bg027Q2zNI3qehuOBAAEczsdz4Zs+xOxc2kyGUzEgitr/U&#xA;HH1mrjliALY75J8x3snmrQ4JH5fWNUsFV1AFAbuIkGnYrnTE7OvZ3rn1sRaubRoUuBqmqFHuFDRi&#xA;l7cH4qlQvT7R6Z53ruH87Piur6fB6XT34YruYJon5rywywx62H+rwwuCbSKLlPKz/CXUmNUVE2AT&#xA;vuc2WXsGOWJOGuIkfUT6R5c7s9T02cSWqMJVP7OrPrK7udY0d5lifTlukJs5llSWT02HwyEKCin/&#xA;ACeR+g5zmfFHDk4b4+HnsQL7t9z8g5kJGQuqUJ7e90jhe6VNOt7K0cV2I41liuCxCmS4gJRfcstC&#xA;Mtwam7jKuDfn08gVlAFkVlrVzKDDeaZxvKfBJazL6EhFKgeoA8bkV4hhxrsXHXI+DgmdiY/j8fqY&#xA;Ezj5hJb/APNTypZalbWMdteXk1WW6SOJkmimVqei0MnHkeoPE7U75nYOw5TArn97XPOQCSQApDWv&#xA;MesWcJvIl0gug+srA3KaRu9GpSEEdQKt7rnRaX2awxnx5PV5dP2uvya+VcMeXf1a0W8fRZ44r+4S&#xA;LS7k8Xmmkb07aXohLv0SToa9H/1jlPb3YgyR8TEAJDmO8frDLR6wxPDLcMl/Tnlf/qYNL/6TIf65&#xA;yP8AJmbu+/8AU7Txx3F36c8r/wDUwaX/ANJkP9cf5Mzd33/qXxx3F5nqmsx6lqc2r3TLc2ltM0Wm&#xA;wD44wiP6auq9C8rb18CBnoPY/Z0dNhG3rluT+O50eqznJLyWatrIvLYwXNla26kVR55qyIezKqKK&#xA;MOxD5tpAEUXGGymnn/VLWxjtn1j1DCvD14oFMrAdC7y+orH3p880J9nNIZmRB36Xt9jmDX5apJtQ&#xA;86SX6+jLNd3odlAjM7ICwIK/u4OK7EVHvmdp+z9NhkDCERLp3/NqnmyTG5NIBPMd8ttOs5LRSRSJ&#xA;xNCyhlIFTQctuteuZ9tD7Xytk5lDAqwqDsQehGKvnuazaDSYbdqmTTmazlJ68rdjA1f9lHnm+eHh&#xA;6icT3l6nTzsA94a0i59K49Nj8Eu3+y7ZTnhYvubcgsJ5mC0NE0BNK+2FXmlo95awgX1ndQSuzyTM&#xA;YJWT1JHLtR1QrsSd+X9vqGm1unEBGM47CuY+553JhyWSQVzazpatxe6jjbwkIQ7ePMpT/PbM6OSM&#xA;hYLQYkc1db+xcVS4ifv8Lqf44eId60Ub5dj+v6vdok7rHDaoBLExBHqyk7VG3IQ1zl/afLwxh13P&#xA;4+12fZo3JZhcW/rKi+o8fBg9UNK07H2zioyro7ZS1HTkvovSeWREKujqhoGEilTyHeldsnhzHGbA&#xA;F2PsRIWCHj199btDJpGpq6S2zHhIhowB7iuzxuOmep6XUwzYxOBsF5rJjMJUUueFndY7Z3kdyFVe&#xA;HxFj0AVS1SctnMRFk0AxAJ2DPLH8rednC95evHdMgaaNEUhWO5Wtd6dM47N7TyEyIRBj0drDs4Vu&#xA;d0p84+TbfQ7O3uLe8md5ZPTYHgAPhJqKLXt45sOx+2cmqyGMgAALaNVpY442Cl/kkAedfLQHQatY&#xA;Af8ASTHnRFwXsnmCzWHWNctJY+SQ30lwUoDzS4pdGg6GvrMvzzz7tqBhqyf5z0OjneMPNdE8i2UW&#xA;qQXWrGK5iCNJNaqKRpMSOK7GkiAHttUd1y/L2nMQMcdxJ69a/QfxzbJaUSoyFs81LU7PRLO2kaBV&#xA;sPWjt5WjoiW8UhKiSgFOKuV2980unwS1E5C/Xwk/1iOnytE5iAHcmAeJpJokkDSW7iOdBWqOUWQA&#xA;18UcHMYwIAJG0tx86+8M7CQ+Ydbv7Sc21rE20SS+pGhmmcNJ6bCGL4VJSoLMzbVHwnOh7D7IxakG&#xA;U5fSfpDg6zVSx7Ac+q2bS9MSO7muwZ5rxCl7dykmaVWXgQXFCKjstB4Z3mLDDHHhiKDppTMjZS5r&#xA;+RYkt7asNvEojjUEluKigqx36ZNil2o+nLaSrct+6ZSHdmpTbryPTfvgIsbqGUeW5rnUfLVsbl5F&#xA;mZTG0+6s4jYqJBXekgWv055f2jijh1MhCjEH8D4PSaeZlAE80zntDLAkXrSJwKnmrUZuPiffMKM6&#xA;N0G55Tr1vd6Lqd3YXCubSeQz2siniacuSsjUPxJsGH9c9J7J1sc+CJH1AUR5/tee1WIwmUimEBBb&#xA;1ZXc7lm4r/wR+Ov4Zs3HeieRvJdjFpYu9Vskmu539SJbheZjjoAtVeoBO7dK75wfbXa85ZTHFIiE&#xA;dtjzPX9TutJpQI3IblNPPfG38o3fpKEVGt+KqKAf6RH0AzE7CkTrIE/0v9yW3WD90fh97yC4/uJP&#xA;9Vv1Z6O6B915Wydiryfzvo40/wAyXHIUsdaBuID2W4RQs8fsWAWUeJL+Gcb7RaQxmM0eR5u50Ga4&#xA;11DB54ZLeYxtsynY+PgRmojISFu3BsJ3p9+txGFY0mUfEPH3GYWXFwnyaZxpGZSwdirTIrqVYBlP&#xA;UEVGEEjkqFl0nSpf72ygkqa/FEh38dxl0dTljylIfEsDjiegVLWwsbQMLS3itw5BcRIqciNgTxAr&#xA;kcmac/qJlXebTGAHIUr5UydiqD1HR9L1JAt9bJPx+wzD4lr/ACsKMPoOZGn1eXCbxyMWE8UZ/ULU&#xA;dO8uaHp0nq2dnHHL0Epq7gHsGcswyzUdoZ8wqciQxhghDkEfLPFEvKRwo98xYxJ5NwFvPfzU1aI6&#xA;ZaempZEuKsx224EbDOp9msRjlkT/ADf0uB2lGoD3sZ/L+b65598tx2yl+Op2UjmlKBLhGP4AnO0L&#xA;pX0f+ZWlm11S11tR/o12q2N6eyyBi1s57UYu0ZPiUGcv7R6MzxjJHnHn7nZ9n5aJiXnN/aG3nK0/&#xA;dtuh9vD6M5nFPiDvYysJN+YOtvB5dfSby1CtqKJ9UljahVYnRz6qEsewoe/0b5nZWKs4yxP0c/jY&#xA;2cTUwEgY97EfInm678vXM9qLJtSi1BowkMbFZRKtQvDZ68uVCKeGb3tLR49ZES4vDlC+fKnX4+LA&#xA;ariEnqeow3l5pcN59V+rapbfv47X1BIQwqGiLgAH1E+E7UBPsM5zs3WDS6mxLix8ieVjvrycrUYv&#xA;Ex7jdjD+YIdTaMI4HKMTrBvUI21T712z0u7eepDxSXV/P6OlQm7kQ0kkBKwJsR8cv2foALZg6ztH&#xA;Dpxczv3dW7Fp55DsGRaZ5Ot43S51WQX90p5JGRS3jP8AkRmvIj+Z6/RnFdodv5c/ph6Ifafj+r7X&#xA;b4NFGG53LI80DmuxVD3un2V9AYLyBLiI78JFDAHxFehy3DnnjlxQJifJjKAkKItA2flPy7ZzieCx&#xA;jEqmqO/KQqfFeZah+WZWbtTUZI8Mpmvl9zXDT44mwE0eREXk7BV8SaZggE8m+mIfmLqsLeVL6OEF&#xA;2rCeXQfDOh/hm87CwkaqBPn/ALkuPrYHwSfd97yQ30c8fpwqWkcEFaHbxz0J55965BLsVSzzHoFp&#xA;rulSWFwxjYkSW9wlOcMyfYkWvcdx3FQdjlOowRywMJci2YshhKw8e1PTLuK6fS9WiFvqkIJR1r6U&#xA;yCn72En7SGoqOqnY+/n+t0WTSTo7wPI/jq9Bp9QJiwks0FxaygMCrA1Vh0+g5CMhIOYCCjrbWmAC&#xA;3C8v8tev0jKJ6fuYHH3JhFfWkv2ZVr4HY/jmPLFIdGsxIVwQemQYuwK7FWiyqKkgDxOGlUJL+zT7&#xA;Uq/IfF+quTGKR6MhEoWXW4BtGjOfE7D+OWx0x6shjKDl1W8l+FTwB7IN/vy6OCIZiACEu2jtYvrO&#xA;o3CWkR/3ZO1CaeC/aY/LLYXI8MBxHyWWSMQlem2Wj+ftZtPLdjcNbGUvLHqUycgTHGzMqQVUsGQH&#xA;7TDOn7I7Pz4p8c6iCOTptdqoZBwjd65+XX5H6N5Q1IarPdnU9RiDLav6Qt4ouYKsyxhpCXKkipbp&#xA;2zoiXVPQtR0+z1KwnsL2MTWtyhjmjPdWHYjcHwI6ZCURIUeSYyINh47ruhXej3Q0vVCZYZSf0bqR&#xA;FFmA6KxGyzqPtL+19pdqheD7T7MnpZ8cN8Z+x32l1QmPNgWq+R7aTWrm/vAz28vAQxKSASI1V2dh&#xA;vu4JAyOHXnwxGPP9rlCAkbQ9t5M0FLeOORZhcIS312GQpKG5lkKg8kHEUHT3y38/lErFV3EbefzR&#xA;PTCUaZtpt8PqcMV1die6jXjJcMvpmSh+FmFSOXGlaHc75p8+O5kxjwxPTnSiEgN90oTyJpb3k088&#xA;0k9pJI8kdkCEiX1G5srFfideR2WtPbNrLt/OMQxx9NCr6uF+RhxGRZHBBBbwpDBGsUMYokaAKqjw&#xA;AG2aSczI3I2S5YAAoKmQS4kAVOwwqoyXtpH9qVfkDU/cMmMcj0ZCJQsutWy/YVpD9w/HLI6eXVkM&#xA;ZQc2sXT7JSMe25+85dHTxHNmMYQswlEZubuUQwj7U9wwRRX3bLIkXURZ7gkyASKXVNA166t/L1pM&#xA;ZW1K4htPr5BWGJ5JFVXC/afixGxoD45vuzOzdQMgyGoAd/N1ms1mMxMOdvT/ACd/zjro2h6xDqep&#xA;aidUNs4lgtltxbReopqrSD1Ji/E7gVG/WvTOtt0b13ArsVdiqX63oGla3afVdRgEqKecTglZI36B&#xA;45FoyN7g+3TK8uGOSPDIWGcMhibDzzWfIPmKwDfVlGuWA3A+CK8Uf5SnhFJ81KnwU5yus9nCDxYT&#xA;8C7TD2gP4tiw+5s7Bbj6u8j2N2a0tLpGhkNP5UlCOR7iozSZcWfFtkgXZQ1AlyNqcmj3i/ZCuP8A&#xA;JP8AWmVjURbRkCl9Tv0O0bj/AFf7Ml4kD1TxBcF1SuwnH/BjBcPJfS36GqN1Ep+ZP8TjxQHctxcd&#xA;NvKF5AEXuzsAP14+NHojjCy3t7edzHBcC6lGxhs0e7kB8OEIZvwy/Hiyz+mEiwlqIx5p/p/kXzFe&#xA;H9zpMyqaUmvpFtYvpUepOP8AkXmwxdi6mfOoD5uJk7RgOTHvzf0jzd5K0Kyv7a7t0ju5Wt7j6tC1&#xA;Y2K8kX1ZCxbkFffivTNrp/Z7EN8hMz9jg5e0pHkHhb3N9ql4DdXEk8sh+OSRixoNz9o+Gb3Dp8eM&#xA;VAAOBkyynzLPPy61MaV540K8HwpHdxRs3QJHK3oyH5CN2y4tb7GyCXYqh9R02w1Kzlsr+BLm1mFJ&#xA;IZBVT3B9iDuCNxkZREhR5JjIg2Hnusflzq9kWbRpRqVl/wAsN0wW4UeCTN8EvsJOJ8XOc1rfZ2Mj&#xA;xYTwnu6Ozw9odJfNhWoWNrbS+nfRy6TcE0Ed2hiVieyM3wP/ALBiM0GbS6nD9cSQ7PHqYy5G1B9H&#xA;ugKxlZFPQg0r9+Y41EeuzeMgUvqN8h2iYHxXf9WT8WJ6p4g2E1MdBMKeHPG4eS+lv0dUbqJT8yf4&#xA;4OLH5LcXfo2/bd1oPFmH9cfGgEcYUkitWl9H65E84/3RCTNL/wAi0q34ZbCOSf0wkfgxlmiE7sPJ&#xA;uu3hH1fSbtwR/e3KiyjH+ss5Wb/gUOZ+LsjVT5gQHm4s+0IDqpef/KPm3yz5MutdtprSKe1MfqW9&#xA;vE9w6o7BCwmk4VozD/dXTNpg9nYf5SRl7tg4OXtMn6Q+d7/V9X1WcPe3MtzKxoodiep6Ads3un0e&#xA;LCKhEBwMmec+ZTrT5JrB4JLUgTWxV4WPTmpqDv8A5W+ZTQ+37G8hvbG3vITWG5iSaM+KyKGH4HIM&#xA;lfFXYq7FXYq7FVK7s7S8haC7gjuIG+1FKquh+asCMBAPNIJHJIJ/y58ly1C6YlqD2s3ltB91u8WY&#xA;2TQ4Z/VCJ+DdHU5ByKGP5YeWQHET3sfLofrcz8d+g9VpMxZdjaU/wBmNbk72h+WHlwpwklvZN6hv&#xA;rUiH5fuymI7F0o/gCTrcneqxfln5PQ1NvcSnavqXt44NP8kzcfwy2PZemHKEWJ1eQ9UbbeRvJts4&#xA;ki0Wy9UdJngSST/g3DN28cyYafHHlED4NRzTPMlOo4440CRqERfsqoAA+QGXNa7FWKfml5Uk80+R&#xA;9S0mCMSXjIJrNahSZoiGChjQDmKpv44hXgeif846efpT6klvbaby2YXVwGPGtTQQCf8AHJWimb6P&#xA;/wA40pHKkuq64WAIJhtIeBFPCV2P/EMeJae4ZFLsVdirsVWyxRSxtHKiyRsKMjAMpHuDiqQ3H5f+&#xA;TJ2LfomCB2+09qDasT7mAxk5jZNJin9UQfg3R1ExyJQf/KsPKysTF9cj2oB9cuZAPf8AevJ+OYsu&#xA;x9Kf4A2DW5O9av5YeXuLK897IG8bl1I+Rj4HIjsXSj+BJ1uTvXx/lh5QWheK6lYd3vryn0qJQv4Z&#xA;bHsrTD+CLE6zL3oyHyB5KiIb9C2kzjo9xEs7D5NLzOZMNLijyiB8Gs55nqU7t7a3toxFbxJDGOiR&#xA;qFX7hTLgKaybVMKEBr2kQazol/pNx/c31vJbufD1FK8h7itRir5g0r/nHb8wZbgl7GCxKEqslzco&#xA;UPYsBF6z08KrkrQzXTP+cZrtiG1TXI4wPtQ20LSV+UjtHT/gMeJae2aJpUGkaPY6Vbu8kFhbxW0T&#xA;yEFykSBFLEACtB4ZFKNxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpV5s1aXR/K+r6rDxM9jZzzwht1MkcZZAadi1MVe&#xA;K+XPza8xWOpiJ779MRzxuXh1Blg/eRunxxSRRt6fMSH4eJG21MsMWNvXNO886Zc+V31+4jktI7dv&#xA;RurU0kkSbkqCMcCQ3MuvE+BBNO0KZLNL/MHRNRv4bGOK4iluCViaVFClgC1KqzUrTExKLZNgS7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUp82aJJrvlvU&#xA;dIin+rS3sDRRz05BWO6kjutRuPDFXzp5w/LHX/KOmWmsareW7zzXsdlDb2ZeRODQzSu7vJHG3LlC&#xA;tAB45MFFM20mwv738t/NcNpE080k9rcJGn2mEUdu7kDueMR9zTGXNQxH8ojfah560p4EnlhiLzyu&#xA;yuEWNUKlyWoKcnA+nGXJQ+mcgl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KpT5j8zad5fs47m9EkhmkEVvBCoaSR+JYhQSqiiqSSxA+mmEC1eS/m15qj82&#xA;aDY2OmadeLPa36XT+t9XVSiwzRkAiZt6yjJCJRa/yR5xGi6ZqNpe6deH6zHGIBH9WYBliKNUmYe2&#xA;GQJQCkX5T6pceVtRFxqWm3LILJ7akBt3PNpImHWVdqRnEglQXsvl/wA/6NrV99QjiuLO7ZWeGK6R&#xA;F9QJ9rg0byJUdeJINNwKA0gYkJtkuBLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdiry/8AOfT9W1K60Wy06aG3aOK8uria4do4xGj20AHJEkNS1wNqZZigZGhz&#xA;as2WMI8UjQDzq88g+bLNFefUtMVXbiD60/U7/wDLNmTHS5DyDiz7Qwx5yQWs+VfNWk29xcSzW13F&#xA;aAPdCzlaSSKM/wC7WSSOJigr8TLWnfbfITwziLI2bcWqx5JcMTukH1+7/wB+H7h/TKnIZd5X1ya3&#xA;it9SSrXGkzLchVFWZFqJkX3kiLp/ssJ3CH0jDNFNCk0TiSKRQ8bqahlYVBB8CMpZrsVdiqQw+fvJ&#xA;cpAGtWkfI0QzSrCH/wBQycQ4PYrWuGlTq3ube5jEtvKk0Z6PGwZfHqK4FVMVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdiry/8yZT+nNQFaelpVnGp6b3N7K5/6gx/nXNj2XG8&#xA;w8rdR25OtOR3kfegde/0ry6JxuaRzD6aA/g2bjD6clPO6j1Yr9xQwMcuvaRLLvBqMS21wPFJwYpA&#xA;f9jJvgywvFOPcywZOHUY599fbt+l43HHLEgim/vov3co/wAtPhb8RnOPap75Wu/Rv/TY/DJt9+39&#xA;MIQXv/5Xan9Z8sjT3NZtIkNn/wA8QA9vSvYQuqV8VOVyFFkGX5FLH/zA1htJ8napeRv6c5h9C2fw&#xA;muCIY2p/kvIDhCvA4dQu4Y1iRh6aAKqECgAFAOmWsEmk80TW+oSSvo8LujFVuYCqy0Gw+KqtgS+h&#xA;/wAqLq9u/Iun3d40pkna4dEndpHSP6w6xqXclm+ADr+rKyyZdgV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxVjvmTVrv6yuk2EpgmaL17y7QBniiYlUWMMGX1JCrUJBoFO1aZq+09f4Eaj9Rcj&#xA;Bi4tyxaW20xXLT289zKesl3PNK5/5GM9PkM43L2xlvcy+52cNNY5j4IHV7nSbDSr2+GmxubWCWcJ&#xA;UmvpoWp28MdP2nlyZIws+qQHPvKZ6fhiTfIPHdPjsJbVZbwRTXUlXmllClmZjWtTnpUAAKdDIklE&#xA;fV9E/wB82/8AwCf0ySGxa6KekNt/wMf9MVXjTtMIqLWEjxEaf0xVv9Gab/yyQ/8AItf6Yq79Gab/&#xA;AMskP/Itf6Yq79Gab/yyQ/8AItf6Yqmei+Ydf8rs1x5elWL9qXTpAWtZv9aMFeLf5SEHx2yMo2Nk&#xA;gss80ec9Z85+VLCa00uT6pHcGW9ktG9ejxoyCKSGizKQX5EBWGwIYjfNaO0YQnwZPTL7HIOHiFxL&#xA;BVnhZWZXBVK8zX7NOtfCmbKExIWDbRKJGxSBpFYmQsApJYt2A61wofV/kuwbT/KGi2TikkFjbpL1&#xA;3kES8zv4tU5UyTnFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXhPnxGvPMmq6gt1cwv8A&#xA;WhbRCC4kiCpbxiMikbAf3iMfpzjO1NXL81KIqgB0d9ocIOMWoW0vmeNgLLVLgQ+mrj66VvYZCQPh&#xA;Ik/fD5h81J1UaqYEt/d+xtlhje2yJsvOMDSvaa9bx2LBvSa/gLSWLMduMnIc4anb4qr75GWjhPfE&#xA;aPOjz/H4pblHnuEQ3kXyqh4/o2IDqoUtxoenGhpT5ZCXamriaM5Wxjp8RFgIabyx5GgmWCa3topn&#xA;FUieQqxFaVClqnfJR7R1shYlIj3fsU4MQNEBUfyL5RmUH6gvEioKSSLUH3VhkR2xq4n6z9n6l/K4&#xA;j0Yr5i8o3OhTreaNDNdaW4pcWgLTSQsOjpXk7Ie/Uj5dOn7G9oPE9GcgS6Hlf6L/AB79fq9Dw7wG&#xA;yTjUZ++n3v8A0jT/APNGdH+ewfz4f6YOB4M+4/Jv9Izf9W+9/wCkWf8A5ox/PYP58P8ATBfBn3H5&#xA;O/SM3/Vvvf8ApFn/AOaMfz2D+fD/AEwXwZ9x+Ta3l7Kwjt9MvZJm2RDbyqCfdmUAfScjPtHTxFmc&#xA;fmEjBMnkXpP5dadd+XdJljvVVrm9mNzPGhqIyUVAlehoE3Pj7ZwfanbAz5riPQNh+t22HRcMdzun&#xA;2qaH5T19SNQtY2mYcfW3imp4eqhVqe1aZHTdomJuEuEsZ4JDmLDzXzf+TVppNlLqGmXkjWgZFeyc&#xA;8Hb1XEYVXQcNy4G6D3bvnTaDtbJkmMZFkuFkxQq+T2PQPzL0zUr2Gwu7WTT55yEt3ZkkgeQ9IxIu&#xA;6se3JQCdgSc6AxIcS2Y5FLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirwPXZGlm1BmAqNV&#xA;1FdvBLyZR+Azz/tA/wCGZPx3PS6P6B7lbSZvUtAv7UZ4n5dRmqzxqTbMbq9xEfq8whjRpJASUYfC&#xA;xIp8XjtlcTuLLBA2t1qnl+GMRmK60w8Q2mSuUMLH7QtJj0Xvwf4fdczxlhm9Mxv/ADv1tZgbuKDv&#xA;ntdY127njikhRIbWGSK6jAcFGmdkIqVP96DyUkZ2Xs5gjDTmjYMifsH6nTa+RM9+5ZLpOhwq5S2t&#xA;reVgaMqrGa+/HiTm8nihL6gC4YkRyas7S24Iv1649UVJEV7cqCT/AJIkUH/gfoHTMWXZumlzxw/0&#xA;obBqMg/iPzRukfpSHX7O3WeWS2upHi4SzPMWpBJLt6jNT+7HSnfNF272VhjpzLHACQI5e9zNHqpG&#xA;dSOzNvqF5/vps4b8vPudv40O931C8/302P5efcvjQ73mWv8AmG41HUrmJriS00OykeF1hcxPM0R4&#xA;yu8ikEIGBUAHfqc7rsTsPHDGMmUcU5b79P2uo1eslKXDE7Jc97oNtGZ9Jmv7K8G8ckMV4yk/5asr&#xA;RyL865vM+gwZY8Moghw4Z5xNgso0X8xNNm06NtVWe2vlqsyJaXTIxU0DpxjagYb0O4zhtX7N6iOQ&#xA;jFHih0Nj9JDucWvxmPqNFS80+dtIvdAmsrSa5kkeS3YRfVLtRSO4jkb7UQGyqTmZ2N2Vq8OpjKca&#xA;gLvePcfPvadXqMU4EA+pgY83cDdLHWEKr+hMDQiSMEo1CPhYOKg9jncW6h9g5UydirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVeAeZjdNr2raNp0AkuIr+4nnnkqsEQuJWnHIipZiJfsr9NM4Tt&#xA;TGMepnOR2PTqdnodJP8Adj3NWcNxp88azsHWYBXkUFV5/Ilqb++anJIZBt0csniHmm+YjUteONwA&#xA;6hgCGAYV3BqDv4YQSFefT6pHLruquJlUtcmEx8wCFgRYunuyk/TnpfYmPw9LAdSL+e7z+slxZCrF&#xA;xx5VqPGopv3qc2ziuBqAfHffbFV0Us97qdhZcuYVppUDMRxdIHVasp5U/eZpu3cxhpj7x94czQxv&#xA;IGTSaIhsuKCl5wHxepLw5d6bn9X0ZwY1k+LmeF3nAO50+iIYYxDRZgV9Ri8vEj9qg5H/AD7jrgjr&#xA;J3uTS8A7nml3PJYTX+jXX7oxSsYJSCwFG5oWHUq4ofpz0nQZxlwxkOo/tedzwMZkFLZdY1hTUzli&#xA;f5GWn6hmXbUm2l6Z511OzW8tkcwOSEYyRry4mhIDEGlc1Wp7Z0+GZhKXqHv/AFOTj0k5iwNnappn&#xA;nTTLGS9ulZIIioZvUiO7sEGwJPVhjpu2sGbIIQPqPkff3Lk0k4CyNmNXUs0yTzTEGWQMz0FBWlM2&#xA;rjPurK2TsVdirsVdirsVdirsVdirsVdirsVdirsVdirzkfnp5UeL1YLHUZ4mXnE6RQgOvVSvOZD8&#xA;XblTJcJRbGtZ/PrVJJ75tEsYbWzsoFkI1JS07uQ5PD6vK0YA403brkZ+mJPcGUBxSA70DoMfDTIm&#xA;dzLcy1lvJm3eS4kPKV2PiXJzy3WZZTyylLvemEOHZGTwpNE0b9G/D3zHjIg2Eg0p2s5blDIf38Wz&#xA;jxHZh88lONbjkUyHVEZWxQ1zpmm3VfrVpDPXr6saP/xIHLseoyQ+mUo+4kMZQieYS9/J3lhiSNOi&#xA;jr19IGL/AJNlcy49q6kfxy+O/wB7UdNjPQKTeSNA/wB1rcRdzwurgA/QZDmRHt/Vj+P7B+prOixd&#xA;yvpvlfTdPvPrkTTSThGRDNIzhVcgtQHx4jKdX2tn1EOCZ25s8WmhA2E3zWOQ7FUn1/yrpOtqpulZ&#xA;J0FEuYiFcDwNQQw+YzY6HtPNpj6Dseh5NGbTxyc0ns/yx0SKYSXE01yi/wC6WKqh/wBbiAx+gjNj&#xA;m9pdRONREY+bRDs+ANmyy6KKOKNYolCRoAqIooABsAAM5+UjI2dyXOApi/5kXlvH5SvkLguDAeI3&#xA;Pwzxk/qzcdgQP5uB6b/7kuNrQfCPw+95FPcwmAhXDGRSFA3O4z0Z5994ZWydirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVfOkH/ON3nBFAa+05mRkKt6lzv6O0bU9LY07ZLiRSW335MfmFo9xNY2enLq&#xA;VteQKvrWckYjRi0gZT9YeFgfiBrSmCfqiR3soGpA9yN0y9vbVOEyGO4iYw3ls/VJ4vhkQ+6t943z&#xA;znVaapmMuYergROIKaDXIabxsD4AgjMH8se9fDKAutRZ51nFIStFU18TsCffMiGKhXNmIgCkwtdZ&#xA;jYBZxwb+YdD/AEzHnpyOTXLH3JgkiOvJGDDxBrmOQRzYUuwIdirsVdirsKqEt9aR/alWvgNz+GTj&#xA;ikejIRJQU2uINoYyx8W2H3DLo6Y9SzGNBveX903BSxr+wgp+rLhjhFnwgJJr9pBqFu2hRTJLq968&#xA;cVtYxkOzSmRSqSGoSMMaCrNm27JjkOaM4xJiOvLpTh67JE4zEmrTTyR/zjdra61b3PmJYbXTYWWS&#xA;eBJfWllANfSHEcVVujGtadPEdxbzdPpDIpdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYZ&#xA;5x/LWy1y6fU7Cf8AR2sOoWaUp6kFwEFEE8VVJKjYOrBgPEbZr9b2dj1HPaXe5en1csfuYYfys87B&#xA;+Ho6Y1f93i7uAn0x/Vy1f9l9OaX/AEP5L+sV7vx9zsP5UjXIpdqX5fa3pNz9b1y3N/ax729xYB3t&#xA;4KihLwgesG6/GwZad16Zj63snPij+69Q69/9nuZYtbGZ3NFA/o2OeP1rGdLiE9CGB/4YVGaPxjE1&#xA;MUXYDKEO1tewGvB0P8y1/WMsE4yZ2CuXUb5NhKf9lQ/rwHFE9EcAVBq97/MD9AyP5eKPDDjq97/M&#xA;B9Ax/LxXwwt+u6lJ0dj/AKq/0GHw4BPDEO+qalN9pXPu5p/xI4+JALxRCmkEDTGAXCy3ApW1tla5&#xA;n3/4qiDP+GXY8eTJ9EJFrlnjHm35ottW8t+X5Ncn0O4a0jdY/UunSDd68W9IFpaV2+JVzaYOw9RP&#xA;6iID5lwsnaMBy3eS6x+YvmXUlMSTCytm/wB0Wo9MH5t9o/Sc3em7CwY9z65ebr8vaE5ctlTQrl9J&#xA;vbG93aaymjuhTcmSJxIP+GUZuREAUHBMiTZfcMciSRrIhDI4DKw6EHcHIq3irsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVSTVvJXlfVZWnu9PjF0+zXcBa3nPfeaExyH6TlGbS48gq&#xA;cQW2GaceRSK4/Ku05crPWL2AdoZfRnjH0tGJfvkzV5PZ/TS5Aj4uTHXzHOkFL+V2tsfg1y1406Sa&#xA;e7n71ukH4Zin2ZxdJS+xtHaR7vtU/wDlVeu/9Xuy/wC4bJ/2WY/6Gcf8+X2L/KR7vtVovys1EAer&#xA;rcVe5hsvT39uc0uSj7NYespFB7Sl3IyH8q7AGtzrGoT16oDbxL9Hpwq//DZkw7A0sel/FqOvyHuT&#xA;C3/LXyXEP3mnfXO5F9LNdqT/AKk7yJ+GZ+LQYMf0wiGmWqyHqyG0srOzhENpBHbQjpFEioo/2KgD&#xA;MoADk0kk80q87+X08w+UtV0ZgGa8t3WGtKCZfjiJr4SKpwofG2j+QvMl3dJ9T0y9unRjySO1lPFh&#xA;t8ZAPHi3jk0M80r8i/zIvqM9hHYKfsyXcyKPmViMsg+lcbWn0z5fsLrT9B02wu5RPdWdrDBPMtaO&#xA;8UaozCu+5FcglH4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:DC054DCAAEF0E4119CFCC5E12360082C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:DC054DCAAEF0E4119CFCC5E12360082C</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:398a239f-c4e7-455c-807c-7da255fa4933</stRef:instanceID>
            <stRef:documentID>xmp.did:6E2B05E40DEEE41188DF9E2A5E2E0EFA</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B40050004D8DE311B51EE7A961CC5C4D</stEvt:instanceID>
                  <stEvt:when>2014-02-04T04:38:34+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B50050004D8DE311B51EE7A961CC5C4D</stEvt:instanceID>
                  <stEvt:when>2014-02-04T04:38:45+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B70050004D8DE311B51EE7A961CC5C4D</stEvt:instanceID>
                  <stEvt:when>2014-02-04T04:39:35+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D2B05E40DEEE41188DF9E2A5E2E0EFA</stEvt:instanceID>
                  <stEvt:when>2015-04-29T03:20:15+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6E2B05E40DEEE41188DF9E2A5E2E0EFA</stEvt:instanceID>
                  <stEvt:when>2015-04-29T04:20:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DC054DCAAEF0E4119CFCC5E12360082C</stEvt:instanceID>
                  <stEvt:when>2015-05-02T11:37:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>256.000000</stDim:w>
            <stDim:h>112.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Standard-Farbfeldgruppe</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Weiß</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Schwarz</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Rot</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Gelb</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Grün</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blau</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -227.72 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 227.72 li
270.273 227.72 li
270.273 0 li
cp
clp
[1 0 0 1 0 0 ]ct
130.028 82.5547 mo
129.846 82.5547 129.666 82.6064 129.509 82.707 cv
113.561 93.0107 li
113.199 93.2441 113.039 93.6914 113.17 94.1025 cv
117.324 107.097 li
117.452 107.498 117.824 107.76 118.232 107.76 cv
118.293 107.76 118.355 107.754 118.417 107.741 cv
134.198 104.624 li
134.714 104.522 135.051 104.02 134.95 103.504 cv
130.963 83.3232 li
130.902 83.0137 130.691 82.7539 130.4 82.6299 cv
130.28 82.5801 130.154 82.5547 130.028 82.5547 cv
130.028 82.5547 li
cp
130.028 83.5088 mo
134.013 103.688 li
118.232 106.806 li
114.079 93.8125 li
130.028 83.5088 li
130.028 83.5088 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.227451 .231373 .25098 rgb
f
130.028 83.5088 mo
114.079 93.8125 li
118.232 106.806 li
122.312 106 li
130.763 87.2393 li
130.028 83.5088 li
cp
.2 .203922 .219608 rgb
f
122.312 106 mo
134.013 103.688 li
130.763 87.2393 li
122.312 106 li
cp
.309804 .317647 .341176 rgb
f
133.396 100.567 mo
131.252 102.334 128.765 103.476 125.824 103.872 cv
124.394 104.064 121.016 104.155 117.293 103.87 cv
118.232 106.806 li
122.312 106 li
134.013 103.688 li
133.396 100.567 li
cp
f
118.308 30.4702 mo
117.889 30.4702 117.51 30.7471 117.392 31.1616 cv
113.01 46.4492 li
112.892 46.8623 113.065 47.3047 113.433 47.5273 cv
131.097 58.2441 li
131.249 58.335 131.42 58.3828 131.592 58.3828 cv
131.728 58.3828 131.866 58.3525 131.994 58.2939 cv
132.282 58.1602 132.484 57.8916 132.535 57.5791 cv
136.256 34.2935 li
136.338 33.7725 135.985 33.2837 135.465 33.2007 cv
118.46 30.4819 li
118.409 30.4741 118.359 30.4702 118.308 30.4702 cv
118.308 30.4702 li
cp
118.309 31.4243 mo
135.314 34.1431 li
131.592 57.4277 li
113.927 46.7109 li
118.309 31.4243 li
118.309 31.4243 li
cp
.227451 .231373 .25098 rgb
f
118.309 31.4243 mo
113.927 46.7109 li
131.592 57.4277 li
135.314 34.1431 li
118.309 31.4243 li
cp
.4 .407843 .439216 rgb
f
124.23 52.9629 mo
127.44 32.8828 li
118.309 31.4243 li
113.927 46.7109 li
124.23 52.9629 li
cp
.498039 .513726 .54902 rgb
f
134.984 36.2139 mo
135.314 34.1431 li
118.309 31.4243 li
117.726 33.4531 li
134.984 36.2139 li
cp
.627451 .643137 .690196 rgb
f
134.555 38.873 mo
134.526 38.873 134.496 38.8706 134.466 38.8652 cv
126.8 37.4902 li
126.528 37.4414 126.347 37.1816 126.396 36.9097 cv
126.444 36.6377 126.71 36.4575 126.976 36.5059 cv
134.642 37.8809 li
134.915 37.9297 135.095 38.1895 135.046 38.4614 cv
135.003 38.7031 134.792 38.873 134.555 38.873 cv
cp
.227451 .231373 .25098 rgb
f
132.607 51.9043 mo
132.556 51.9043 132.505 51.8965 132.455 51.8804 cv
124.82 49.4321 li
124.556 49.3477 124.412 49.0664 124.496 48.8032 cv
124.581 48.5405 124.862 48.396 125.125 48.48 cv
132.759 50.9282 li
133.023 51.0127 133.167 51.2939 133.083 51.5571 cv
133.015 51.769 132.819 51.9043 132.607 51.9043 cv
cp
f
67.8101 102.756 mo
36.9321 102.756 17.7495 88.1289 17.7495 64.585 cv
17.7495 43.5132 23.189 41.9922 32.147 41.9922 cv
34.8071 42.002 li
99.5239 42.002 li
100.396 42.002 128.14 52.8418 136.625 56.1641 cv
136.668 56.1816 136.708 56.2051 136.746 56.2344 cv
138.915 57.9443 140.689 62.082 140.699 65.459 cv
140.794 79.4023 li
140.794 84.2529 136.865 86.0664 130.915 88.8125 cv
129.501 89.4648 li
111.101 98.0361 89.1919 102.756 67.8101 102.756 cv
cp
.878431 .701961 .133333 rgb
f
67.8101 102.756 mo
89.1919 102.756 111.101 98.0361 129.501 89.4648 cv
130.915 88.8125 li
136.865 86.0664 140.794 84.2529 140.794 79.4023 cv
140.763 74.8057 li
140.414 75.0645 140.063 75.3223 139.708 75.5771 cv
133.347 80.1475 126.013 83.0527 118.66 85.6016 cv
103.273 90.9355 86.7261 94.6719 70.3022 93.8916 cv
55.6035 93.1934 39.3428 89.2676 32.2852 75.0908 cv
28.7764 68.043 24.5967 59.8076 24.5752 51.7993 cv
24.5713 50.3911 24.2925 46.8823 24.2695 43.2476 cv
20.106 45.3193 17.7495 50.7183 17.7495 64.585 cv
17.7495 88.1289 36.9321 102.756 67.8101 102.756 cv
cp
.8 .52549 .133333 rgb
f
32.1509 40.9922 mo
32.1494 40.9922 32.1479 40.9922 32.147 40.9922 cv
22.8462 40.9922 16.7495 42.6343 16.7495 64.585 cv
16.7495 88.7461 36.3149 103.756 67.8101 103.756 cv
89.3354 103.756 111.395 99.0029 129.923 90.3711 cv
131.333 89.7207 li
137.407 86.918 141.794 84.8926 141.794 79.4023 cv
141.699 65.4521 li
141.688 61.752 139.785 57.3564 137.365 55.4492 cv
137.252 55.3604 137.128 55.2886 136.996 55.2358 cv
100.646 41.002 99.8599 41.002 99.5239 41.002 cv
34.8071 41.002 li
32.1509 40.9922 li
32.1509 40.9922 li
cp
32.147 41.9922 mo
34.8071 42.002 li
99.5239 42.002 li
100.396 42.002 128.14 52.8418 136.625 56.1641 cv
136.668 56.1816 136.708 56.2051 136.746 56.2344 cv
138.915 57.9443 140.689 62.082 140.699 65.459 cv
140.794 79.4023 li
140.794 84.2529 136.865 86.0664 130.915 88.8125 cv
129.501 89.4648 li
111.101 98.0361 89.1919 102.756 67.8101 102.756 cv
36.9321 102.756 17.7495 88.1289 17.7495 64.585 cv
17.7495 43.5132 23.189 41.9922 32.147 41.9922 cv
32.147 41.9922 li
cp
.439216 .235294 .0745098 rgb
f
139.288 83.1436 mo
137.461 84.2988 135.064 85.375 132.19 86.7441 cv
115.427 94.7227 93.8696 100.357 70.3643 100.357 cv
40.1421 100.357 20.5073 85.7568 20.5073 61.6133 cv
20.5073 52.6597 21.437 47.2324 23.124 43.938 cv
19.6763 46.4302 17.7495 52.0454 17.7495 64.585 cv
17.7495 88.1289 36.9321 102.756 67.8101 102.756 cv
83.5591 102.756 99.5903 100.188 114.298 95.4131 cv
119.602 93.6357 124.611 91.6191 129.242 89.4141 cv
134.127 87.0898 137.65 85.6045 139.288 83.1436 cv
cp
.878431 .701961 .133333 rgb
f
140.699 65.459 mo
140.689 62.082 138.915 57.9443 136.746 56.2344 cv
136.708 56.2051 136.668 56.1816 136.625 56.1641 cv
128.14 52.8418 100.396 42.002 99.5239 42.002 cv
34.8071 42.002 li
32.147 41.9922 li
25.6763 41.9922 21.043 42.79 18.9678 51.1729 cv
18.9678 51.1729 18.9678 51.1733 18.9678 51.1738 cv
19.7588 51.1611 22.1157 51.1338 24.9014 51.2104 cv
28.333 51.3037 38.9746 55.8677 42.376 59.3447 cv
46.5601 63.624 58.9404 67.3115 65.4858 67.3115 cv
140.711 67.3115 li
140.699 65.459 li
cp
.439216 .235294 .0745098 rgb
f
140.699 65.459 mo
140.689 62.082 138.915 57.9443 136.746 56.2344 cv
136.708 56.2051 136.668 56.1816 136.625 56.1641 cv
128.14 52.8418 100.396 42.002 99.5239 42.002 cv
34.8071 42.002 li
32.147 41.9922 li
26.1514 41.9922 21.7358 42.6831 19.4683 49.4512 cv
19.4683 49.4512 li
27.7461 49.7319 35.5967 51.8301 42.104 57.3779 cv
48.4233 62.7656 57.5381 66.2832 65.9346 66.2832 cv
140.705 66.2832 li
140.699 65.459 li
cp
.960784 .913725 .470588 rgb
f
137.033 64.2275 mo
136.338 62.0195 135.27 61.4463 134.06 60.4697 cv
125.568 57.2598 117.07 54.063 108.557 50.9087 cv
101.977 48.4702 97.2847 46.7769 90.3989 46.6289 cv
69.1729 46.1729 41.9346 42.7959 26.1089 45.6147 cv
25.1851 45.7793 23.8413 46.4824 22.9614 47.6592 cv
29.7158 47.9912 40.3354 53.248 42.8418 56.02 cv
46.8599 60.4639 59.396 64.2275 65.9346 64.2275 cv
137.033 64.2275 li
cp
.960784 .772549 .164706 rgb
f
78.812 10.3701 mo
75.5806 10.3701 li
75.0542 10.3701 74.6265 10.7969 74.6265 11.3242 cv
74.6265 24.5874 li
74.6265 25.1143 75.0542 25.541 75.5806 25.541 cv
78.812 25.541 li
79.3384 25.541 79.7661 25.1143 79.7661 24.5874 cv
79.7661 11.3242 li
79.7661 10.7969 79.3384 10.3701 78.812 10.3701 cv
78.812 10.3701 li
cp
78.812 11.3242 mo
78.812 24.5874 li
75.5806 24.5874 li
75.5806 11.3242 li
78.812 11.3242 li
78.812 11.3242 li
cp
.227451 .231373 .25098 rgb
f
78.812 11.3242 mo
75.5806 11.3242 li
75.5806 24.5874 li
78.812 24.5874 li
78.812 11.3242 li
cp
.4 .407843 .439216 rgb
f
78.812 11.3242 mo
77.2886 11.3242 li
77.2886 24.5874 li
78.812 24.5874 li
78.812 11.3242 li
cp
.498039 .513726 .54902 rgb
f
80.3188 4.17676 mo
74.0757 4.17676 li
73.5483 4.17676 73.1216 4.60352 73.1216 5.13037 cv
73.1216 12.6733 li
73.1216 13.2007 73.5483 13.6274 74.0757 13.6274 cv
80.3188 13.6274 li
80.8472 13.6274 81.2729 13.2007 81.2729 12.6733 cv
81.2729 5.13037 li
81.2729 4.60352 80.8472 4.17676 80.3188 4.17676 cv
80.3188 4.17676 li
cp
80.3188 5.13037 mo
80.3188 12.6733 li
74.0757 12.6733 li
74.0757 5.13037 li
80.3188 5.13037 li
80.3188 5.13037 li
cp
.227451 .231373 .25098 rgb
f
80.3188 5.13037 mo
74.0757 5.13037 li
74.0757 12.6733 li
80.3188 12.6733 li
80.3188 5.13037 li
cp
.4 .407843 .439216 rgb
f
74.0757 5.13037 mo
74.0757 7.65332 li
80.3188 7.65332 li
80.3188 5.13037 li
74.0757 5.13037 li
cp
.498039 .513726 .54902 rgb
f
74.0757 5.13037 mo
74.0757 6.65332 li
80.3188 6.65332 li
80.3188 5.13037 li
74.0757 5.13037 li
cp
.627451 .643137 .690196 rgb
f
68.6226 8.21582 mo
68.6074 12.3848 68.9619 25.7183 69.293 25.7407 cv
67.9204 25.9604 66.5479 26.1802 65.1753 26.3999 cv
64.2544 20.6465 63.9897 14.8145 64.3809 9.01611 cv
62.8774 8.87109 61.374 8.72363 59.8711 8.57373 cv
60.105 6.73926 60.4004 4.91504 60.7578 3.10449 cv
61.853 3.14014 62.9561 3.19434 64.0356 3.34619 cv
64.1646 3.36426 64.2813 3.3916 64.3711 3.4043 cv
65.293 3.60156 66.9229 4.20801 67.5605 4.90625 cv
68.3413 5.69189 68.5366 7.47119 68.6226 8.21582 cv
cp
.4 .407843 .439216 rgb
f
69.5859 7.98096 mo
69.6001 12.1597 69.8286 24.8125 70.1963 25.3706 cv
70.2451 25.8838 69.9536 26.6641 69.4624 26.752 cv
68.1289 26.9849 66.7959 27.2178 65.4624 27.4502 cv
64.9492 27.5439 64.1714 26.4863 64.0884 25.9185 cv
63.2876 20.6343 63.0317 15.2881 63.3213 9.96484 cv
62.1313 9.86719 60.9419 9.76807 59.7524 9.66748 cv
59.4937 9.6416 59.3306 9.50586 59.1738 9.27686 cv
59.0083 9.03613 58.9468 8.74219 58.9775 8.44238 cv
59.2075 6.59082 59.5 4.74951 59.8545 2.92139 cv
59.9551 2.41064 60.3442 2.04785 60.7827 2.02246 cv
60.8027 2.02588 60.8228 2.02881 60.8442 2.02002 cv
60.8535 2.02148 60.8735 2.02441 60.8735 2.02441 cv
63.1714 2.10254 66.6475 2.32031 68.292 4.17432 cv
69.2988 5.09033 69.4775 7.05029 69.5859 7.98096 cv
cp
69.293 25.7407 mo
68.9624 25.7183 68.6074 12.3848 68.6226 8.21582 cv
68.5366 7.47119 68.3413 5.69189 67.5605 4.90625 cv
66.9229 4.20801 65.2925 3.60156 64.3711 3.4043 cv
64.2817 3.3916 64.1646 3.36426 64.0356 3.34619 cv
62.9561 3.19434 61.853 3.14014 60.7578 3.10449 cv
60.4004 4.91504 60.1045 6.73926 59.8711 8.57373 cv
61.374 8.72363 62.8774 8.87109 64.3809 9.01611 cv
63.9897 14.8145 64.2544 20.6465 65.1753 26.3999 cv
66.5479 26.1802 67.9204 25.9604 69.293 25.7407 cv
cp
.227451 .231373 .25098 rgb
f
69.293 25.7407 mo
68.9624 25.7183 68.6074 12.3848 68.6226 8.21582 cv
68.5366 7.47119 68.3413 5.69189 67.5605 4.90625 cv
66.9229 4.20801 65.2925 3.60156 64.3711 3.4043 cv
64.2817 3.3916 64.1646 3.36426 64.0356 3.34619 cv
62.9561 3.19434 61.853 3.14014 60.7578 3.10449 cv
60.6821 3.48779 60.6089 3.87207 60.5391 4.25684 cv
61.1006 4.30664 61.6992 4.3667 61.8662 4.39844 cv
62.7817 4.57764 64.2466 5.19189 64.8945 5.90039 cv
65.4053 6.46973 66.1299 7.97266 66.2163 8.74121 cv
66.6709 13.6729 66.7163 20.7275 67.2417 26.0693 cv
67.9258 25.9595 68.6094 25.8501 69.293 25.7407 cv
cp
.498039 .513726 .54902 rgb
f
69.293 25.7407 mo
68.9624 25.7183 68.6074 12.3848 68.6226 8.21582 cv
68.5366 7.47119 68.3413 5.69189 67.5605 4.90625 cv
66.9229 4.20801 65.2925 3.60156 64.3711 3.4043 cv
64.2817 3.3916 64.1646 3.36426 64.0356 3.34619 cv
62.9561 3.19434 61.853 3.14014 60.7578 3.10449 cv
60.7046 3.37402 60.6528 3.64355 60.6025 3.91309 cv
61.522 3.98682 62.6064 4.09668 62.9248 4.15967 cv
63.8408 4.34424 65.3091 4.90479 65.9556 5.61035 cv
66.4639 6.17432 67.1733 7.75977 67.2583 8.51758 cv
67.3896 11.3945 67.2817 20.7769 68.1265 25.9277 cv
68.5156 25.8652 68.9043 25.8032 69.293 25.7407 cv
cp
.627451 .643137 .690196 rgb
f
60.9937 .189453 mo
60.6992 .137695 60.4048 .0864258 60.1104 .0351563 cv
58.7046 -.220215 57.3115 .949219 57.0786 2.65039 cv
56.8008 4.6748 56.5967 6.70654 56.4653 8.7417 cv
56.3545 10.4521 57.4863 11.8706 58.915 11.9009 cv
59.2139 11.9092 59.5127 11.918 59.811 11.9263 cv
61.2417 11.9565 62.4336 10.7021 62.5356 9.13281 cv
62.6577 7.24316 62.8472 5.35693 63.1055 3.47754 cv
63.3184 1.9165 62.4009 .444824 60.9937 .189453 cv
60.9937 .189453 li
cp
60.8042 1.31982 mo
61.6733 1.4624 62.248 2.36572 62.1147 3.34131 cv
61.8535 5.24463 61.6611 7.15527 61.5381 9.06885 cv
61.4746 10.0493 60.7314 10.8179 59.8511 10.7842 cv
59.5527 10.772 59.2539 10.7593 58.9556 10.7466 cv
58.0762 10.7134 57.396 9.84473 57.4634 8.80615 cv
57.5928 6.79492 57.7949 4.78711 58.0693 2.78662 cv
58.2109 1.75342 59.0508 1.03516 59.9189 1.17822 cv
60.2144 1.2251 60.5093 1.27246 60.8042 1.31982 cv
60.8042 1.31982 li
cp
.227451 .231373 .25098 rgb
f
60.8042 1.31982 mo
60.5093 1.27246 60.2144 1.2251 59.9189 1.17822 cv
59.0508 1.03516 58.2109 1.75342 58.0693 2.78662 cv
57.7949 4.78711 57.5928 6.79492 57.4634 8.80615 cv
57.396 9.84473 58.0762 10.7134 58.9556 10.7466 cv
59.2539 10.7593 59.5527 10.772 59.8511 10.7842 cv
60.7314 10.8179 61.4741 10.0493 61.5381 9.06885 cv
61.6611 7.15527 61.8535 5.24463 62.1147 3.34131 cv
62.248 2.36572 61.6733 1.4624 60.8042 1.31982 cv
cp
.4 .407843 .439216 rgb
f
60.8042 1.31982 mo
60.5093 1.27246 60.2144 1.2251 59.9189 1.17822 cv
59.0508 1.03516 58.2109 1.75342 58.0693 2.78662 cv
57.9624 3.56592 57.8667 4.34619 57.7817 5.12744 cv
57.894 4.09229 58.7134 3.35107 59.5854 3.46973 cv
59.8813 3.50879 60.1777 3.54736 60.4741 3.58643 cv
61.3467 3.70459 61.9468 4.59082 61.8408 5.56885 cv
61.9214 4.82568 62.0127 4.08301 62.1147 3.34131 cv
62.248 2.36572 61.6733 1.4624 60.8042 1.31982 cv
cp
.498039 .513726 .54902 rgb
f
60.8042 1.31982 mo
60.5093 1.27246 60.2144 1.2251 59.9189 1.17822 cv
59.0508 1.03516 58.2109 1.75342 58.0693 2.78662 cv
58.0161 3.17627 57.9653 3.56592 57.9175 3.95605 cv
58.0439 2.92188 58.874 2.19238 59.7441 2.32275 cv
60.0396 2.36621 60.3354 2.40918 60.6313 2.45215 cv
61.502 2.58301 62.0894 3.47754 61.9697 4.45459 cv
62.0156 4.08301 62.0635 3.7124 62.1147 3.34131 cv
62.248 2.36572 61.6733 1.4624 60.8042 1.31982 cv
cp
.627451 .643137 .690196 rgb
f
88.1528 23.8091 mo
95.8833 45.2192 li
53.3564 45.1543 li
55.3931 24.2192 li
55.5229 22.7593 56.353 21.8691 57.1528 21.8691 cv
85.8931 21.9092 li
86.7026 21.9092 87.7134 22.5693 88.1528 23.8091 cv
cp
.4 .407843 .439216 rgb
f
57.1543 20.8691 mo
57.1528 20.8691 li
55.7241 20.8691 54.5649 22.2407 54.397 24.1309 cv
52.3613 45.0576 li
52.334 45.3379 52.4263 45.6167 52.6152 45.8257 cv
52.8047 46.0347 53.0732 46.1538 53.355 46.1543 cv
95.8813 46.2192 li
95.8823 46.2192 95.8823 46.2192 95.8833 46.2192 cv
96.2085 46.2192 96.5142 46.061 96.7017 45.7944 cv
96.8892 45.5278 96.9351 45.1865 96.8237 44.8794 cv
89.0933 23.4692 li
88.5601 21.9644 87.2427 20.9092 85.8931 20.9092 cv
57.1543 20.8691 li
57.1543 20.8691 li
cp
57.1528 21.8691 mo
85.8931 21.9092 li
86.7026 21.9092 87.7134 22.5693 88.1528 23.8091 cv
95.8833 45.2192 li
53.3564 45.1543 li
55.3931 24.2192 li
55.5229 22.7593 56.353 21.8691 57.1528 21.8691 cv
57.1528 21.8691 li
cp
.227451 .231373 .25098 rgb
f
55.3882 24.314 mo
55.2915 25.4043 li
83.1821 25.4043 li
84.0132 25.4043 85.0552 27.6377 85.5142 28.9111 cv
90.936 45.2119 li
95.8833 45.2192 li
88.1528 23.8091 li
87.7134 22.5693 86.7026 21.9092 85.8931 21.9092 cv
57.1528 21.8691 li
56.353 21.8691 55.5229 22.7593 55.3931 24.2192 cv
55.3867 24.2861 li
55.3867 24.2949 55.3887 24.3062 55.3882 24.314 cv
cp
.498039 .513726 .54902 rgb
f
58.1689 23.3418 mo
65.1064 23.1753 84.0054 23.3877 84.0054 23.3877 cv
84.8091 23.3877 85.8218 24.6597 86.2651 25.897 cv
92.9106 45.2148 li
95.8833 45.2192 li
88.1528 23.8091 li
87.7134 22.5693 86.7026 21.9092 85.8931 21.9092 cv
57.1528 21.8691 li
56.353 21.8691 55.5229 22.7593 55.3931 24.2192 cv
55.354 24.6348 li
56.2954 23.7295 57.2271 23.3643 58.1689 23.3418 cv
cp
.627451 .643137 .690196 rgb
f
74.1982 34.0776 mo
73.7466 31.3813 71.6807 29.1958 69.5854 29.1958 cv
54.9233 29.1958 li
53.583 43.3892 li
53.5601 43.6235 53.5156 43.8457 53.4629 44.0615 cv
53.3564 45.1543 li
76.063 45.189 li
74.1982 34.0776 li
cp
.192157 .694118 .909804 rgb
f
69.5854 28.1958 mo
54.9233 28.1958 li
54.4077 28.1958 53.9761 28.5884 53.9277 29.1016 cv
52.5874 43.2949 li
52.5723 43.4492 52.5415 43.6187 52.4917 43.8242 cv
52.48 43.8701 52.4722 43.9175 52.4678 43.9644 cv
52.3613 45.0571 li
52.334 45.3379 52.4263 45.6167 52.6152 45.8257 cv
52.8047 46.0347 53.0732 46.1538 53.355 46.1543 cv
76.061 46.189 li
76.062 46.189 76.062 46.189 76.063 46.189 cv
76.3569 46.189 76.6362 46.0596 76.8257 45.8354 cv
77.0161 45.6108 77.0981 45.314 77.0493 45.0234 cv
75.1846 33.9121 li
74.6475 30.707 72.188 28.1958 69.5854 28.1958 cv
69.5854 28.1958 li
cp
69.5854 29.1958 mo
71.6807 29.1958 73.7466 31.3813 74.1982 34.0776 cv
76.063 45.189 li
53.3564 45.1543 li
53.4629 44.0615 li
53.5156 43.8457 53.5601 43.6235 53.583 43.3892 cv
54.9233 29.1958 li
69.5854 29.1958 li
69.5854 29.1958 li
cp
.227451 .231373 .25098 rgb
f
60.1084 45.1646 mo
65.3589 45.1729 li
62.4966 29.1958 li
57.248 29.1958 li
60.1084 45.1646 li
cp
.580392 .87451 1 rgb
f
65.917 29.1958 mo
68.7798 45.1777 li
71.0845 45.1812 li
68.2212 29.1958 li
65.917 29.1958 li
cp
f
69.5854 29.1958 mo
54.9233 29.1958 li
53.583 43.3892 li
53.5601 43.6235 53.5156 43.8457 53.4629 44.0615 cv
53.3564 45.1543 li
76.063 45.189 li
74.1982 34.0776 li
73.7466 31.3813 71.6807 29.1958 69.5854 29.1958 cv
69.5854 29.1958 li
cp
69.5854 30.1958 mo
71.1836 30.1958 72.8447 32.0493 73.2119 34.2432 cv
74.8809 44.187 li
54.4678 44.1558 li
54.522 43.915 54.5576 43.6987 54.5786 43.4834 cv
55.8335 30.1958 li
69.5854 30.1958 li
69.5854 30.1958 li
cp
1 1 1 rgb
f
75.2729 55.5293 mo
72.6147 55.5293 71.2729 52.9878 70.2266 51.5293 cv
68.8491 49.6099 63.9155 49.5293 60.9907 49.5293 cv
42.6606 49.5293 li
42.0356 49.5293 41.2446 48.7998 41.0259 47.4946 cv
40.9478 47.0381 41.8257 43.4316 42.9517 42.0957 cv
43.2925 41.6904 43.6587 41.5293 44.0396 41.5293 cv
100.815 41.5293 li
102.673 41.5293 105.148 43.5918 107.29 45.5527 cv
108.593 46.7275 112.679 50.123 110.154 52.5479 cv
108.884 53.7666 106.787 55.5293 105.031 55.5293 cv
75.2729 55.5293 li
cp
.4 .407843 .439216 rgb
f
100.815 40.5293 mo
44.0396 40.5293 li
43.5483 40.5293 42.8276 40.6895 42.1865 41.4521 cv
40.9429 42.9272 39.8892 46.7793 40.04 47.6631 cv
40.3555 49.5435 41.5972 50.5293 42.6606 50.5293 cv
60.9907 50.5293 li
62.793 50.5293 68.2783 50.5293 69.4141 52.1123 cv
69.5415 52.29 69.6738 52.4849 69.8125 52.689 cv
70.8511 54.2183 72.4209 56.5293 75.2729 56.5293 cv
105.031 56.5293 li
106.636 56.5293 108.593 55.4326 110.846 53.269 cv
111.593 52.5522 111.979 51.668 111.96 50.7124 cv
111.917 48.3379 109.479 46.1655 108.17 44.9985 cv
107.958 44.8101 li
105.534 42.5894 102.985 40.5293 100.815 40.5293 cv
100.815 40.5293 li
cp
100.815 41.5293 mo
102.673 41.5293 105.148 43.5918 107.29 45.5527 cv
108.593 46.7275 112.679 50.123 110.154 52.5479 cv
108.884 53.7666 106.787 55.5293 105.031 55.5293 cv
75.2729 55.5293 li
72.6147 55.5293 71.2729 52.9878 70.2266 51.5293 cv
68.8491 49.6099 63.9155 49.5293 60.9907 49.5293 cv
42.6606 49.5293 li
42.0356 49.5293 41.2446 48.7998 41.0259 47.4946 cv
40.9478 47.0381 41.8257 43.4316 42.9517 42.0957 cv
43.2925 41.6904 43.6587 41.5293 44.0396 41.5293 cv
100.815 41.5293 li
100.815 41.5293 li
cp
.227451 .231373 .25098 rgb
f
100.815 41.5293 mo
44.0396 41.5293 li
43.8882 41.5293 43.7397 41.5635 43.5933 41.6201 cv
42.9629 43.3286 42.9155 45.7129 43.6816 47.1958 cv
46.4585 48.4199 49.7319 47.5708 52.7896 47.5708 cv
55.5117 47.5708 66.8682 47.6636 69.4253 48.7876 cv
72.0791 49.9546 71.96 53.5708 75.5962 53.5708 cv
83.5659 53.8296 91.5522 54.0371 99.5269 53.9038 cv
102.406 53.856 108.832 54.9136 108.647 50.1333 cv
108.594 48.7456 107.115 46.1738 105.376 43.8887 cv
103.772 42.5796 102.137 41.5293 100.815 41.5293 cv
cp
.498039 .513726 .54902 rgb
f
79.0601 75.8291 mo
69.8228 75.5039 60.644 74.6846 51.5747 73.3828 cv
52.9761 68.4561 53.686 62.873 53.6792 57.7295 cv
62.1948 58.9561 70.8159 59.7305 79.4985 60.0391 cv
80.0591 65.1553 79.9438 70.7852 79.0601 75.8291 cv
cp
f
53.6792 56.7295 mo
53.4399 56.7295 53.207 56.8154 53.0239 56.9736 cv
52.8047 57.1641 52.6787 57.4404 52.6792 57.7305 cv
52.686 62.9385 51.9521 68.4004 50.6128 73.1094 cv
50.5337 73.3867 50.5786 73.6846 50.7358 73.9268 cv
50.8931 74.1689 51.147 74.332 51.4326 74.373 cv
60.5254 75.6777 69.8086 76.5039 79.0249 76.8281 cv
79.0366 76.8291 79.0483 76.8291 79.0601 76.8291 cv
79.5444 76.8291 79.9614 76.4814 80.0454 76.002 cv
80.9214 71.001 81.0806 65.293 80.4927 59.9297 cv
80.439 59.4365 80.0308 59.0576 79.5337 59.04 cv
70.9502 58.7344 62.2993 57.9609 53.8218 56.7393 cv
53.7744 56.7324 53.7266 56.7295 53.6792 56.7295 cv
53.6792 56.7295 li
cp
53.6792 57.7295 mo
62.1948 58.9561 70.8159 59.7305 79.4985 60.0391 cv
80.0591 65.1553 79.9438 70.7852 79.0601 75.8291 cv
69.8228 75.5039 60.644 74.6846 51.5747 73.3828 cv
52.9761 68.4561 53.686 62.873 53.6792 57.7295 cv
53.6792 57.7295 li
cp
.227451 .231373 .25098 rgb
f
79.8032 68.3652 mo
79.895 65.5537 79.7925 62.7256 79.4985 60.0391 cv
70.8159 59.7305 62.1948 58.9561 53.6792 57.7295 cv
53.6826 60.4336 53.4829 63.2568 53.0942 66.0439 cv
61.9209 67.2285 65.4604 60.0918 79.8032 68.3652 cv
cp
.627451 .643137 .690196 rgb
f
57.1113 60.1543 mo
57.1113 60.8213 56.5708 61.3623 55.9033 61.3623 cv
55.2358 61.3623 54.6953 60.8213 54.6953 60.1543 cv
54.6953 59.4873 55.2358 58.9463 55.9033 58.9463 cv
56.5708 58.9463 57.1113 59.4873 57.1113 60.1543 cv
cp
.227451 .231373 .25098 rgb
f
56.7104 60.0918 mo
56.7104 60.5752 56.3188 60.9668 55.8354 60.9668 cv
55.3521 60.9668 54.9604 60.5752 54.9604 60.0918 cv
54.9604 59.6084 55.3521 59.2168 55.8354 59.2168 cv
56.3188 59.2168 56.7104 59.6084 56.7104 60.0918 cv
cp
.627451 .643137 .690196 rgb
f
55.8872 71.248 mo
55.8872 71.915 55.3467 72.4561 54.6792 72.4561 cv
54.0117 72.4561 53.4712 71.915 53.4712 71.248 cv
53.4712 70.5811 54.0117 70.04 54.6792 70.04 cv
55.3467 70.04 55.8872 70.5811 55.8872 71.248 cv
cp
.227451 .231373 .25098 rgb
f
55.4863 71.1855 mo
55.4863 71.6689 55.0947 72.0605 54.6113 72.0605 cv
54.1279 72.0605 53.7363 71.6689 53.7363 71.1855 cv
53.7363 70.7021 54.1279 70.3105 54.6113 70.3105 cv
55.0947 70.3105 55.4863 70.7021 55.4863 71.1855 cv
cp
.627451 .643137 .690196 rgb
f
79.0122 61.9043 mo
79.0122 62.5713 78.4717 63.1123 77.8042 63.1123 cv
77.1367 63.1123 76.5962 62.5713 76.5962 61.9043 cv
76.5962 61.2373 77.1367 60.6963 77.8042 60.6963 cv
78.4717 60.6963 79.0122 61.2373 79.0122 61.9043 cv
cp
.227451 .231373 .25098 rgb
f
78.6113 61.8418 mo
78.6113 62.3252 78.2197 62.7168 77.7363 62.7168 cv
77.2529 62.7168 76.8613 62.3252 76.8613 61.8418 cv
76.8613 61.3584 77.2529 60.9668 77.7363 60.9668 cv
78.2197 60.9668 78.6113 61.3584 78.6113 61.8418 cv
cp
.627451 .643137 .690196 rgb
f
78.0747 73.2168 mo
78.0747 73.8838 77.5342 74.4248 76.8667 74.4248 cv
76.1992 74.4248 75.6587 73.8838 75.6587 73.2168 cv
75.6587 72.5498 76.1992 72.0088 76.8667 72.0088 cv
77.5342 72.0088 78.0747 72.5498 78.0747 73.2168 cv
cp
.227451 .231373 .25098 rgb
f
77.6738 73.1543 mo
77.6738 73.6377 77.2822 74.0293 76.7988 74.0293 cv
76.3154 74.0293 75.9238 73.6377 75.9238 73.1543 cv
75.9238 72.6709 76.3154 72.2793 76.7988 72.2793 cv
77.2822 72.2793 77.6738 72.6709 77.6738 73.1543 cv
cp
.627451 .643137 .690196 rgb
f
66.6997 72.3418 mo
66.6997 73.0088 66.1592 73.5498 65.4917 73.5498 cv
64.8242 73.5498 64.2837 73.0088 64.2837 72.3418 cv
64.2837 71.6748 64.8242 71.1338 65.4917 71.1338 cv
66.1592 71.1338 66.6997 71.6748 66.6997 72.3418 cv
cp
.227451 .231373 .25098 rgb
f
66.2988 72.2793 mo
66.2988 72.7627 65.9072 73.1543 65.4238 73.1543 cv
64.9404 73.1543 64.5488 72.7627 64.5488 72.2793 cv
64.5488 71.7959 64.9404 71.4043 65.4238 71.4043 cv
65.9072 71.4043 66.2988 71.7959 66.2988 72.2793 cv
cp
.627451 .643137 .690196 rgb
f
67.981 61.1855 mo
67.981 61.8525 67.4404 62.3936 66.7729 62.3936 cv
66.1055 62.3936 65.5649 61.8525 65.5649 61.1855 cv
65.5649 60.5186 66.1055 59.9775 66.7729 59.9775 cv
67.4404 59.9775 67.981 60.5186 67.981 61.1855 cv
cp
.227451 .231373 .25098 rgb
f
67.5801 61.123 mo
67.5801 61.6064 67.1885 61.998 66.7051 61.998 cv
66.2217 61.998 65.8301 61.6064 65.8301 61.123 cv
65.8301 60.6396 66.2217 60.248 66.7051 60.248 cv
67.1885 60.248 67.5801 60.6396 67.5801 61.123 cv
cp
.627451 .643137 .690196 rgb
f
141.323 61.2695 mo
141.323 61.2695 141.323 78.6992 141.323 81.5195 cv
141.323 84.3291 139.393 86.999 137.023 87.4697 cv
136.653 87.5391 136.292 87.5791 135.953 87.5791 cv
134.093 87.5791 132.723 86.5391 132.723 84.999 cv
132.723 80.4492 li
132.723 61.9395 li
132.723 61.9395 132.723 59.0889 132.723 57.0693 cv
132.723 55.6094 133.733 54.7593 135.203 54.7593 cv
135.753 54.7593 136.373 54.8794 137.023 55.1392 cv
139.393 56.0693 141.323 58.8193 141.323 61.2695 cv
cp
.309804 .317647 .341176 rgb
f
142.273 61.2695 mo
142.273 81.5195 li
142.273 84.8096 140.053 87.8389 137.203 88.3994 cv
136.783 88.4893 136.363 88.5293 135.953 88.5293 cv
133.523 88.5293 131.773 87.0391 131.773 84.999 cv
131.773 80.4492 li
131.773 61.9395 li
131.773 57.0693 li
131.773 55.1191 133.153 53.8091 135.203 53.8091 cv
135.893 53.8091 136.623 53.9492 137.373 54.2495 cv
140.123 55.3394 142.273 58.4189 142.273 61.2695 cv
cp
141.323 81.5195 mo
141.323 78.6992 141.323 61.2695 141.323 61.2695 cv
141.323 58.8193 139.393 56.0693 137.023 55.1392 cv
136.373 54.8794 135.753 54.7593 135.203 54.7593 cv
133.733 54.7593 132.723 55.6094 132.723 57.0693 cv
132.723 59.0889 132.723 61.9395 132.723 61.9395 cv
132.723 80.4492 li
132.723 84.999 li
132.723 86.5391 134.093 87.5791 135.953 87.5791 cv
136.292 87.5791 136.653 87.5391 137.023 87.4697 cv
139.393 86.999 141.323 84.3291 141.323 81.5195 cv
cp
.227451 .231373 .25098 rgb
f
137.023 55.1392 mo
136.373 54.8794 135.753 54.7593 135.203 54.7593 cv
133.733 54.7593 132.723 55.6094 132.723 57.0693 cv
132.723 59.0889 132.723 61.9395 132.723 61.9395 cv
132.723 71.0684 li
133.478 66.1318 134.622 60.5596 136.835 60.9482 cv
139.176 61.3594 140.456 63.0547 141.323 64.5781 cv
141.323 62.5986 141.323 61.2695 141.323 61.2695 cv
141.323 58.8193 139.393 56.0693 137.023 55.1392 cv
cp
.498039 .513726 .54902 rgb
f
137.154 57.168 mo
138.932 57.8105 140.467 59.2949 141.292 60.9531 cv
141.138 58.5869 139.292 56.0293 137.023 55.1392 cv
136.373 54.8794 135.753 54.7593 135.203 54.7593 cv
133.733 54.7593 132.723 55.6094 132.723 57.0693 cv
132.723 57.3232 132.723 57.5898 132.723 57.8633 cv
133.44 56.7744 135.15 56.4434 137.154 57.168 cv
cp
.627451 .643137 .690196 rgb
f
141.323 81.5195 mo
141.323 81.0615 141.323 80.2148 141.323 79.124 cv
136.646 85.7451 133.64 80.7793 132.723 78.8115 cv
132.723 80.4492 li
132.723 84.999 li
132.723 86.5391 134.093 87.5791 135.953 87.5791 cv
136.292 87.5791 136.653 87.5391 137.023 87.4697 cv
139.393 86.999 141.323 84.3291 141.323 81.5195 cv
cp
.2 .203922 .219608 rgb
f
137.023 85.4697 mo
136.653 85.5391 136.292 85.5791 135.953 85.5791 cv
134.093 85.5791 132.723 84.5391 132.723 82.999 cv
132.723 84.999 li
132.723 86.5391 134.093 87.5791 135.953 87.5791 cv
136.292 87.5791 136.653 87.5391 137.023 87.4697 cv
139.393 86.999 141.323 84.3291 141.323 81.5195 cv
141.323 81.1191 141.323 80.417 141.323 79.5195 cv
141.323 82.3291 139.393 84.999 137.023 85.4697 cv
cp
.309804 .317647 .341176 rgb
f
119.523 67.8008 mo
119.523 72.7373 115.522 76.7383 110.585 76.7383 cv
105.649 76.7383 101.648 72.7373 101.648 67.8008 cv
101.648 62.8643 105.649 58.8633 110.585 58.8633 cv
115.522 58.8633 119.523 62.8643 119.523 67.8008 cv
cp
.498039 .513726 .54902 rgb
f
110.585 57.8633 mo
105.106 57.8633 100.648 62.3213 100.648 67.8008 cv
100.648 73.2803 105.106 77.7383 110.585 77.7383 cv
116.065 77.7383 120.523 73.2803 120.523 67.8008 cv
120.523 62.3213 116.065 57.8633 110.585 57.8633 cv
110.585 57.8633 li
cp
110.585 58.8633 mo
115.522 58.8633 119.523 62.8643 119.523 67.8008 cv
119.523 72.7373 115.522 76.7383 110.585 76.7383 cv
105.649 76.7383 101.648 72.7373 101.648 67.8008 cv
101.648 62.8643 105.649 58.8633 110.585 58.8633 cv
110.585 58.8633 li
cp
.227451 .231373 .25098 rgb
f
110.585 72.7383 mo
106.337 72.7383 102.79 69.7725 101.88 65.8008 cv
101.733 66.4443 101.648 67.1123 101.648 67.8008 cv
101.648 72.7373 105.649 76.7383 110.585 76.7383 cv
115.522 76.7383 119.523 72.7373 119.523 67.8008 cv
119.523 67.1123 119.438 66.4443 119.291 65.8008 cv
118.381 69.7725 114.833 72.7383 110.585 72.7383 cv
cp
.309804 .317647 .341176 rgb
f
115.663 62.0586 mo
115.542 63.1328 113.514 63.7861 111.137 63.5166 cv
108.759 63.248 106.93 62.1582 107.051 61.084 cv
107.172 60.0098 109.2 59.3564 111.577 59.626 cv
113.955 59.8945 115.784 60.9844 115.663 62.0586 cv
cp
.627451 .643137 .690196 rgb
f
111.483 70.5205 mo
109.212 70.5947 107.273 69.3574 107.273 67.7568 cv
107.273 66.1582 109.212 64.9209 111.483 64.9951 cv
132.735 65.6904 li
133.95 65.7295 134.905 66.6563 134.905 67.7568 cv
134.905 68.8594 133.95 69.7861 132.735 69.8252 cv
111.483 70.5205 li
cp
.309804 .317647 .341176 rgb
f
111.29 63.9922 mo
111.29 63.9922 li
108.477 63.9922 106.273 65.6455 106.273 67.7568 cv
106.273 69.8691 108.477 71.5234 111.29 71.5234 cv
111.365 71.5234 111.44 71.5225 111.516 71.5195 cv
132.768 70.8242 li
134.527 70.7686 135.905 69.4209 135.905 67.7568 cv
135.905 66.0938 134.527 64.7471 132.768 64.6914 cv
111.516 63.9961 li
111.44 63.9932 111.365 63.9922 111.29 63.9922 cv
111.29 63.9922 li
cp
111.29 64.9922 mo
111.354 64.9922 111.418 64.9932 111.483 64.9951 cv
132.735 65.6904 li
133.95 65.7295 134.905 66.6563 134.905 67.7568 cv
134.905 68.8594 133.95 69.7861 132.735 69.8252 cv
111.483 70.5205 li
111.418 70.5225 111.354 70.5234 111.29 70.5234 cv
109.103 70.5234 107.273 69.3115 107.273 67.7568 cv
107.273 66.2041 109.103 64.9922 111.29 64.9922 cv
111.29 64.9922 li
cp
.227451 .231373 .25098 rgb
f
132.735 65.6904 mo
111.483 64.9951 li
109.212 64.9209 107.273 66.1582 107.273 67.7568 cv
107.273 67.9727 107.315 68.1816 107.383 68.3828 cv
108.107 67.7002 109.081 67.2842 110.139 67.29 cv
133.468 67.417 li
134.018 67.4199 134.504 67.7168 134.853 68.1885 cv
134.886 68.0488 134.905 67.9053 134.905 67.7568 cv
134.905 66.6563 133.95 65.7295 132.735 65.6904 cv
cp
.498039 .513726 .54902 rgb
f
28.9863 54.1543 mo
28.9863 54.8213 28.4458 55.3623 27.7783 55.3623 cv
27.1108 55.3623 26.5703 54.8213 26.5703 54.1543 cv
26.5703 53.4873 27.1108 52.9463 27.7783 52.9463 cv
28.4458 52.9463 28.9863 53.4873 28.9863 54.1543 cv
cp
.439216 .235294 .0745098 rgb
f
28.5854 54.0918 mo
28.5854 54.5752 28.1938 54.9668 27.7104 54.9668 cv
27.2271 54.9668 26.8354 54.5752 26.8354 54.0918 cv
26.8354 53.6084 27.2271 53.2168 27.7104 53.2168 cv
28.1938 53.2168 28.5854 53.6084 28.5854 54.0918 cv
cp
.8 .52549 .133333 rgb
f
36.0693 56.9258 mo
36.0693 57.5928 35.5288 58.1338 34.8613 58.1338 cv
34.1938 58.1338 33.6533 57.5928 33.6533 56.9258 cv
33.6533 56.2588 34.1938 55.7178 34.8613 55.7178 cv
35.5288 55.7178 36.0693 56.2588 36.0693 56.9258 cv
cp
.439216 .235294 .0745098 rgb
f
35.6685 56.8633 mo
35.6685 57.3467 35.2769 57.7383 34.7935 57.7383 cv
34.3101 57.7383 33.9185 57.3467 33.9185 56.8633 cv
33.9185 56.3799 34.3101 55.9883 34.7935 55.9883 cv
35.2769 55.9883 35.6685 56.3799 35.6685 56.8633 cv
cp
.8 .52549 .133333 rgb
f
41.9448 61.8213 mo
41.9448 62.4883 41.4043 63.0293 40.7368 63.0293 cv
40.0693 63.0293 39.5288 62.4883 39.5288 61.8213 cv
39.5288 61.1543 40.0693 60.6133 40.7368 60.6133 cv
41.4043 60.6133 41.9448 61.1543 41.9448 61.8213 cv
cp
.439216 .235294 .0745098 rgb
f
41.5439 61.7588 mo
41.5439 62.2422 41.1523 62.6338 40.6689 62.6338 cv
40.1855 62.6338 39.7939 62.2422 39.7939 61.7588 cv
39.7939 61.2754 40.1855 60.8838 40.6689 60.8838 cv
41.1523 60.8838 41.5439 61.2754 41.5439 61.7588 cv
cp
.8 .52549 .133333 rgb
f
48.9033 65.3623 mo
48.9033 66.0293 48.3628 66.5703 47.6953 66.5703 cv
47.0278 66.5703 46.4873 66.0293 46.4873 65.3623 cv
46.4873 64.6953 47.0278 64.1543 47.6953 64.1543 cv
48.3628 64.1543 48.9033 64.6953 48.9033 65.3623 cv
cp
.439216 .235294 .0745098 rgb
f
48.5024 65.2998 mo
48.5024 65.7832 48.1108 66.1748 47.6274 66.1748 cv
47.144 66.1748 46.7524 65.7832 46.7524 65.2998 cv
46.7524 64.8164 47.144 64.4248 47.6274 64.4248 cv
48.1108 64.4248 48.5024 64.8164 48.5024 65.2998 cv
cp
.8 .52549 .133333 rgb
f
92.3198 69.6953 mo
92.3198 70.3623 91.7798 70.9033 91.1128 70.9033 cv
90.4448 70.9033 89.9038 70.3623 89.9038 69.6953 cv
89.9038 69.0283 90.4448 68.4873 91.1128 68.4873 cv
91.7798 68.4873 92.3198 69.0283 92.3198 69.6953 cv
cp
.439216 .235294 .0745098 rgb
f
91.9194 69.6328 mo
91.9194 70.1162 91.5278 70.5078 91.0444 70.5078 cv
90.561 70.5078 90.1694 70.1162 90.1694 69.6328 cv
90.1694 69.1494 90.561 68.7578 91.0444 68.7578 cv
91.5278 68.7578 91.9194 69.1494 91.9194 69.6328 cv
cp
.8 .52549 .133333 rgb
f
84.4858 69.7793 mo
84.4858 70.4463 83.9458 70.9873 83.2788 70.9873 cv
82.6108 70.9873 82.0698 70.4463 82.0698 69.7793 cv
82.0698 69.1123 82.6108 68.5713 83.2788 68.5713 cv
83.9458 68.5713 84.4858 69.1123 84.4858 69.7793 cv
cp
.439216 .235294 .0745098 rgb
f
84.0854 69.7168 mo
84.0854 70.2002 83.6938 70.5918 83.2104 70.5918 cv
82.7271 70.5918 82.3354 70.2002 82.3354 69.7168 cv
82.3354 69.2334 82.7271 68.8418 83.2104 68.8418 cv
83.6938 68.8418 84.0854 69.2334 84.0854 69.7168 cv
cp
.8 .52549 .133333 rgb
f
99.5698 69.6953 mo
99.5698 70.3623 99.0298 70.9033 98.3628 70.9033 cv
97.6948 70.9033 97.1538 70.3623 97.1538 69.6953 cv
97.1538 69.0283 97.6948 68.4873 98.3628 68.4873 cv
99.0298 68.4873 99.5698 69.0283 99.5698 69.6953 cv
cp
.439216 .235294 .0745098 rgb
f
99.1694 69.6328 mo
99.1694 70.1162 98.7778 70.5078 98.2944 70.5078 cv
97.811 70.5078 97.4194 70.1162 97.4194 69.6328 cv
97.4194 69.1494 97.811 68.7578 98.2944 68.7578 cv
98.7778 68.7578 99.1694 69.1494 99.1694 69.6328 cv
cp
.8 .52549 .133333 rgb
f
258.028 82.5547 mo
257.846 82.5547 257.666 82.6064 257.509 82.707 cv
241.561 93.0107 li
241.199 93.2441 241.039 93.6914 241.17 94.1025 cv
245.324 107.097 li
245.452 107.498 245.824 107.76 246.232 107.76 cv
246.293 107.76 246.355 107.754 246.417 107.741 cv
262.198 104.624 li
262.714 104.522 263.051 104.02 262.95 103.504 cv
258.963 83.3232 li
258.902 83.0137 258.691 82.7539 258.4 82.6299 cv
258.28 82.5801 258.154 82.5547 258.028 82.5547 cv
258.028 82.5547 li
cp
258.028 83.5088 mo
262.013 103.688 li
246.232 106.806 li
242.079 93.8125 li
258.028 83.5088 li
258.028 83.5088 li
cp
.227451 .231373 .25098 rgb
f
258.028 83.5088 mo
242.079 93.8125 li
246.232 106.806 li
250.312 106 li
258.763 87.2393 li
258.028 83.5088 li
cp
.2 .203922 .219608 rgb
f
250.312 106 mo
262.013 103.688 li
258.763 87.2393 li
250.312 106 li
cp
.309804 .317647 .341176 rgb
f
261.396 100.567 mo
259.252 102.334 256.765 103.476 253.824 103.872 cv
252.394 104.064 249.016 104.155 245.293 103.87 cv
246.232 106.806 li
250.312 106 li
262.013 103.688 li
261.396 100.567 li
cp
f
246.308 30.4702 mo
245.889 30.4702 245.51 30.7471 245.392 31.1616 cv
241.01 46.4492 li
240.892 46.8623 241.065 47.3047 241.433 47.5273 cv
259.097 58.2441 li
259.249 58.335 259.42 58.3828 259.592 58.3828 cv
259.728 58.3828 259.866 58.3525 259.994 58.2939 cv
260.282 58.1602 260.484 57.8916 260.535 57.5791 cv
264.256 34.2935 li
264.338 33.7725 263.985 33.2837 263.465 33.2007 cv
246.46 30.4819 li
246.409 30.4741 246.359 30.4702 246.308 30.4702 cv
246.308 30.4702 li
cp
246.309 31.4243 mo
263.314 34.1431 li
259.592 57.4277 li
241.927 46.7109 li
246.309 31.4243 li
246.309 31.4243 li
cp
.227451 .231373 .25098 rgb
f
246.309 31.4243 mo
241.927 46.7109 li
259.592 57.4277 li
263.314 34.1431 li
246.309 31.4243 li
cp
.4 .407843 .439216 rgb
f
252.23 52.9629 mo
255.44 32.8828 li
246.309 31.4243 li
241.927 46.7109 li
252.23 52.9629 li
cp
.498039 .513726 .54902 rgb
f
262.984 36.2139 mo
263.314 34.1431 li
246.309 31.4243 li
245.726 33.4531 li
262.984 36.2139 li
cp
.627451 .643137 .690196 rgb
f
262.555 38.873 mo
262.526 38.873 262.496 38.8706 262.466 38.8652 cv
254.8 37.4902 li
254.528 37.4414 254.347 37.1816 254.396 36.9097 cv
254.444 36.6377 254.71 36.4575 254.976 36.5059 cv
262.642 37.8809 li
262.915 37.9297 263.095 38.1895 263.046 38.4614 cv
263.003 38.7031 262.792 38.873 262.555 38.873 cv
cp
.227451 .231373 .25098 rgb
f
260.607 51.9043 mo
260.556 51.9043 260.505 51.8965 260.455 51.8804 cv
252.82 49.4321 li
252.556 49.3477 252.412 49.0664 252.496 48.8032 cv
252.581 48.5405 252.862 48.396 253.125 48.48 cv
260.759 50.9282 li
261.023 51.0127 261.167 51.2939 261.083 51.5571 cv
261.015 51.769 260.819 51.9043 260.607 51.9043 cv
cp
f
195.81 102.756 mo
164.932 102.756 145.75 88.1289 145.75 64.585 cv
145.75 43.5132 151.189 41.9922 160.147 41.9922 cv
162.807 42.002 li
227.524 42.002 li
228.396 42.002 256.14 52.8418 264.625 56.1641 cv
264.668 56.1816 264.708 56.2051 264.746 56.2344 cv
266.915 57.9443 268.689 62.082 268.699 65.459 cv
268.794 79.4023 li
268.794 84.2529 264.865 86.0664 258.915 88.8125 cv
257.501 89.4648 li
239.101 98.0361 217.192 102.756 195.81 102.756 cv
cp
.878431 .701961 .133333 rgb
f
195.81 102.756 mo
217.192 102.756 239.101 98.0361 257.501 89.4648 cv
258.915 88.8125 li
264.865 86.0664 268.794 84.2529 268.794 79.4023 cv
268.763 74.8057 li
268.414 75.0645 268.063 75.3223 267.708 75.5771 cv
261.347 80.1475 254.013 83.0527 246.66 85.6016 cv
231.273 90.9355 214.726 94.6719 198.302 93.8916 cv
183.604 93.1934 167.343 89.2676 160.286 75.0908 cv
156.777 68.043 152.597 59.8076 152.576 51.7993 cv
152.572 50.3911 152.292 46.8823 152.27 43.2476 cv
148.106 45.3193 145.75 50.7183 145.75 64.585 cv
145.75 88.1289 164.932 102.756 195.81 102.756 cv
cp
.8 .52549 .133333 rgb
f
160.151 40.9922 mo
160.15 40.9922 160.148 40.9922 160.147 40.9922 cv
150.846 40.9922 144.75 42.6343 144.75 64.585 cv
144.75 88.7461 164.315 103.756 195.81 103.756 cv
217.335 103.756 239.395 99.0029 257.923 90.3711 cv
259.333 89.7207 li
265.407 86.918 269.794 84.8926 269.794 79.4023 cv
269.699 65.4521 li
269.688 61.752 267.785 57.3564 265.365 55.4492 cv
265.252 55.3604 265.128 55.2886 264.996 55.2358 cv
228.646 41.002 227.86 41.002 227.524 41.002 cv
162.807 41.002 li
160.151 40.9922 li
160.151 40.9922 li
cp
160.147 41.9922 mo
162.807 42.002 li
227.524 42.002 li
228.396 42.002 256.14 52.8418 264.625 56.1641 cv
264.668 56.1816 264.708 56.2051 264.746 56.2344 cv
266.915 57.9443 268.689 62.082 268.699 65.459 cv
268.794 79.4023 li
268.794 84.2529 264.865 86.0664 258.915 88.8125 cv
257.501 89.4648 li
239.101 98.0361 217.192 102.756 195.81 102.756 cv
164.932 102.756 145.75 88.1289 145.75 64.585 cv
145.75 43.5132 151.189 41.9922 160.147 41.9922 cv
160.147 41.9922 li
cp
.439216 .235294 .0745098 rgb
f
267.288 83.1436 mo
265.461 84.2988 263.064 85.375 260.19 86.7441 cv
243.427 94.7227 221.87 100.357 198.365 100.357 cv
168.142 100.357 148.507 85.7568 148.507 61.6133 cv
148.507 52.6597 149.437 47.2324 151.125 43.938 cv
147.676 46.4302 145.75 52.0454 145.75 64.585 cv
145.75 88.1289 164.932 102.756 195.81 102.756 cv
211.559 102.756 227.59 100.188 242.298 95.4131 cv
247.602 93.6357 252.611 91.6191 257.242 89.4141 cv
262.127 87.0898 265.65 85.6045 267.288 83.1436 cv
cp
.878431 .701961 .133333 rgb
f
268.699 65.459 mo
268.689 62.082 266.915 57.9443 264.746 56.2344 cv
264.708 56.2051 264.668 56.1816 264.625 56.1641 cv
256.14 52.8418 228.396 42.002 227.524 42.002 cv
162.807 42.002 li
160.147 41.9922 li
153.676 41.9922 149.043 42.79 146.968 51.1729 cv
146.968 51.1729 146.968 51.1733 146.968 51.1738 cv
147.759 51.1611 150.116 51.1338 152.902 51.2104 cv
156.333 51.3037 166.975 55.8677 170.376 59.3447 cv
174.56 63.624 186.941 67.3115 193.486 67.3115 cv
268.711 67.3115 li
268.699 65.459 li
cp
.439216 .235294 .0745098 rgb
f
268.699 65.459 mo
268.689 62.082 266.915 57.9443 264.746 56.2344 cv
264.708 56.2051 264.668 56.1816 264.625 56.1641 cv
256.14 52.8418 228.396 42.002 227.524 42.002 cv
162.807 42.002 li
160.147 41.9922 li
154.152 41.9922 149.736 42.6831 147.468 49.4512 cv
147.468 49.4512 li
155.747 49.7319 163.597 51.8301 170.104 57.3779 cv
176.423 62.7656 185.539 66.2832 193.935 66.2832 cv
268.705 66.2832 li
268.699 65.459 li
cp
.960784 .913725 .470588 rgb
f
265.033 64.2275 mo
264.338 62.0195 263.27 61.4463 262.06 60.4697 cv
253.568 57.2598 245.07 54.063 236.557 50.9087 cv
229.977 48.4702 225.285 46.7769 218.399 46.6289 cv
197.173 46.1729 169.935 42.7959 154.109 45.6147 cv
153.185 45.7793 151.841 46.4824 150.961 47.6592 cv
157.716 47.9912 168.335 53.248 170.842 56.02 cv
174.86 60.4639 187.396 64.2275 193.935 64.2275 cv
265.033 64.2275 li
cp
.960784 .772549 .164706 rgb
f
206.88 10.3174 mo
205.812 10.1807 204.743 10.0449 203.675 9.9082 cv
203.154 9.83984 202.668 10.252 202.604 10.8301 cv
202.053 15.6675 201.976 20.5513 202.376 25.4141 cv
202.423 25.9946 202.896 26.4229 203.419 26.3711 cv
204.491 26.2681 205.564 26.165 206.636 26.061 cv
207.159 26.0098 207.542 25.5317 207.499 24.9932 cv
207.126 20.4644 207.198 15.915 207.709 11.4102 cv
207.771 10.8745 207.402 10.3857 206.88 10.3174 cv
206.88 10.3174 li
cp
206.761 11.3018 mo
206.243 15.8691 206.17 20.4805 206.548 25.0718 cv
205.473 25.1592 204.4 25.2476 203.327 25.3359 cv
202.933 20.5352 203.009 15.7134 203.55 10.938 cv
204.622 11.0591 205.692 11.1812 206.761 11.3018 cv
206.761 11.3018 li
cp
.227451 .231373 .25098 rgb
f
206.761 11.3018 mo
205.692 11.1812 204.622 11.0591 203.55 10.938 cv
203.009 15.7134 202.933 20.5352 203.327 25.3359 cv
204.4 25.2476 205.473 25.1592 206.548 25.0718 cv
206.171 20.481 206.244 15.8691 206.761 11.3018 cv
cp
.4 .407843 .439216 rgb
f
206.761 11.3018 mo
206.256 11.2446 205.752 11.1875 205.248 11.1304 cv
204.718 15.7959 204.644 20.5063 205.029 25.1968 cv
205.534 25.1548 206.042 25.1133 206.548 25.0718 cv
206.171 20.481 206.244 15.8691 206.761 11.3018 cv
cp
.498039 .513726 .54902 rgb
f
209.458 4.29443 mo
207.426 3.84424 205.394 3.39355 203.364 2.94287 cv
202.849 2.82764 202.328 3.20459 202.208 3.78711 cv
201.633 6.55811 201.213 9.35596 200.952 12.168 cv
200.896 12.7583 201.285 13.27 201.811 13.3105 cv
203.884 13.4751 205.959 13.6396 208.034 13.8042 cv
208.561 13.8452 209.019 13.4517 209.068 12.9263 cv
209.302 10.4146 209.676 7.91504 210.189 5.43896 cv
210.295 4.92188 209.974 4.41064 209.458 4.29443 cv
209.458 4.29443 li
cp
209.254 5.24561 mo
208.735 7.75635 208.356 10.2915 208.118 12.8374 cv
206.045 12.6436 203.973 12.4497 201.902 12.2563 cv
202.162 9.47998 202.574 6.71729 203.141 3.97998 cv
205.179 4.40186 207.216 4.82373 209.254 5.24561 cv
209.254 5.24561 li
cp
.227451 .231373 .25098 rgb
f
209.254 5.24561 mo
207.216 4.82373 205.179 4.40186 203.141 3.97998 cv
202.574 6.71729 202.162 9.47998 201.902 12.2563 cv
203.973 12.4497 206.045 12.6436 208.118 12.8374 cv
208.356 10.2915 208.735 7.75635 209.254 5.24561 cv
cp
.4 .407843 .439216 rgb
f
203.141 3.97998 mo
202.952 4.89551 202.779 5.81396 202.624 6.73486 cv
204.676 7.08057 206.728 7.42676 208.78 7.77246 cv
208.922 6.92822 209.081 6.08545 209.254 5.24561 cv
207.216 4.82373 205.179 4.40186 203.141 3.97998 cv
cp
.498039 .513726 .54902 rgb
f
203.141 3.97998 mo
203.027 4.53223 202.918 5.08643 202.817 5.64111 cv
204.864 6.01709 206.911 6.39307 208.957 6.77002 cv
209.05 6.26074 209.15 5.75244 209.254 5.24561 cv
207.216 4.82373 205.179 4.40186 203.141 3.97998 cv
cp
.627451 .643137 .690196 rgb
f
196.405 5.41211 mo
199.5 10.3403 198.275 27.7954 197.541 27.6724 cv
196.167 27.4551 194.794 27.2378 193.421 27.0205 cv
194.441 20.5757 194.181 14.0186 192.685 7.71826 cv
191.206 8.02051 189.726 8.32666 188.248 8.63721 cv
187.938 6.89502 187.524 5.16211 187.004 3.44775 cv
187.99 2.96631 188.983 2.48291 190.003 2.1001 cv
190.125 2.05518 190.242 2.02393 190.327 1.99268 cv
191.23 1.72803 192.977 1.53711 193.907 2.01758 cv
195.023 2.50342 196.043 4.53271 196.405 5.41211 cv
cp
.4 .407843 .439216 rgb
f
197.208 4.77344 mo
200.338 9.84326 199.382 26.9487 198.524 27.5298 cv
198.393 28.2036 197.811 29.064 197.319 28.9697 cv
195.988 28.7256 194.657 28.4814 193.326 28.2373 cv
192.819 28.1372 192.458 26.7769 192.538 26.1709 cv
193.361 20.4434 193.156 14.6362 191.954 9.01953 cv
190.779 9.23438 189.606 9.45215 188.432 9.67285 cv
188.176 9.71729 187.985 9.63525 187.775 9.47266 cv
187.552 9.30176 187.415 9.05908 187.357 8.78516 cv
187.048 7.08252 186.636 5.38916 186.123 3.71484 cv
185.982 3.24756 186.145 2.76221 186.512 2.52148 cv
186.531 2.51367 186.55 2.50635 186.565 2.48877 cv
186.574 2.48486 186.592 2.47754 186.592 2.47754 cv
188.625 1.43994 191.679 -.359863 194.159 .849609 cv
195.565 1.34619 196.734 3.64697 197.208 4.77344 cv
cp
197.541 27.6724 mo
198.275 27.7954 199.501 10.3403 196.405 5.41211 cv
196.043 4.53271 195.022 2.50391 193.907 2.01758 cv
192.977 1.53711 191.23 1.72803 190.327 1.99268 cv
190.243 2.02344 190.125 2.05518 190.003 2.1001 cv
188.984 2.48291 187.99 2.96631 187.004 3.44775 cv
187.524 5.16211 187.938 6.89502 188.248 8.63721 cv
189.726 8.32666 191.206 8.02051 192.685 7.71826 cv
194.181 14.0186 194.441 20.5757 193.421 27.0205 cv
194.794 27.2378 196.167 27.4551 197.541 27.6724 cv
cp
.227451 .231373 .25098 rgb
f
197.541 27.6724 mo
198.275 27.7954 199.501 10.3403 196.405 5.41211 cv
196.043 4.53271 195.022 2.50391 193.907 2.01758 cv
192.977 1.53711 191.23 1.72803 190.327 1.99268 cv
190.243 2.02344 190.125 2.05518 190.003 2.1001 cv
188.984 2.48291 187.99 2.96631 187.004 3.44775 cv
187.116 3.81006 187.22 4.1748 187.321 4.53857 cv
187.848 4.34033 188.413 4.13232 188.577 4.08838 cv
189.476 3.8457 191.075 3.78516 191.979 4.25732 cv
192.701 4.61621 193.992 5.98584 194.336 6.84229 cv
196.737 12.2417 197.039 21.1138 195.489 27.3477 cv
196.172 27.4556 196.856 27.564 197.541 27.6724 cv
cp
.498039 .513726 .54902 rgb
f
197.541 27.6724 mo
198.275 27.7954 199.501 10.3403 196.405 5.41211 cv
196.043 4.53271 195.022 2.50391 193.907 2.01758 cv
192.977 1.53711 191.23 1.72803 190.327 1.99268 cv
190.243 2.02344 190.125 2.05518 190.003 2.1001 cv
188.984 2.48291 187.99 2.96631 187.004 3.44775 cv
187.083 3.70264 187.158 3.95801 187.231 4.21338 cv
188.086 3.87012 189.104 3.47998 189.417 3.39502 cv
190.317 3.14941 191.897 3.02539 192.813 3.50488 cv
193.542 3.86523 194.887 5.37109 195.241 6.24316 cv
196.964 9.43408 197.978 21.1914 196.375 27.4873 cv
196.763 27.5493 197.152 27.6108 197.541 27.6724 cv
cp
.627451 .643137 .690196 rgb
f
185.745 .911133 mo
185.472 1.03174 185.198 1.15234 184.925 1.27295 cv
183.623 1.86572 183.049 3.4209 183.543 4.77246 cv
184.144 6.40771 184.642 8.07471 185.034 9.7627 cv
185.36 11.1567 186.69 12.1289 188.104 11.9097 cv
188.399 11.8604 188.694 11.8115 188.989 11.7622 cv
190.4 11.5439 191.339 10.02 190.959 8.38818 cv
190.511 6.45459 189.941 4.5459 189.253 2.67285 cv
188.672 1.0918 187.043 .318848 185.745 .911133 cv
185.745 .911133 li
cp
186.179 1.92871 mo
186.991 1.58691 187.965 2.06836 188.314 3.01807 cv
188.988 4.85156 189.546 6.72119 189.985 8.61377 cv
190.212 9.59424 189.661 10.5239 188.795 10.6836 cv
188.501 10.7397 188.208 10.7959 187.915 10.8525 cv
187.048 11.0122 186.213 10.4199 186.008 9.53711 cv
185.607 7.80811 185.098 6.10156 184.482 4.42725 cv
184.167 3.57129 184.539 2.61182 185.35 2.27051 cv
185.626 2.15625 185.903 2.04297 186.179 1.92871 cv
186.179 1.92871 li
cp
.227451 .231373 .25098 rgb
f
186.179 1.92871 mo
185.903 2.04297 185.626 2.15625 185.35 2.27051 cv
184.539 2.61182 184.167 3.57129 184.482 4.42725 cv
185.098 6.10156 185.607 7.80811 186.008 9.53711 cv
186.213 10.4199 187.048 11.0122 187.915 10.8525 cv
188.208 10.7959 188.501 10.7397 188.795 10.6836 cv
189.661 10.5239 190.212 9.59424 189.985 8.61377 cv
189.546 6.72119 188.988 4.85156 188.314 3.01807 cv
187.965 2.06836 186.991 1.58691 186.179 1.92871 cv
cp
.4 .407843 .439216 rgb
f
186.179 1.92871 mo
185.903 2.04297 185.626 2.15625 185.35 2.27051 cv
184.539 2.61182 184.167 3.57129 184.482 4.42725 cv
184.722 5.07959 184.946 5.73682 185.153 6.39795 cv
184.882 5.53027 185.299 4.59229 186.126 4.29102 cv
186.408 4.19043 186.69 4.08984 186.971 3.98975 cv
187.798 3.68799 188.748 4.21387 189.049 5.17676 cv
188.822 4.45215 188.578 3.73242 188.314 3.01807 cv
187.965 2.06836 186.991 1.58691 186.179 1.92871 cv
cp
.498039 .513726 .54902 rgb
f
186.179 1.92871 mo
185.903 2.04297 185.626 2.15625 185.35 2.27051 cv
184.539 2.61182 184.167 3.57129 184.482 4.42725 cv
184.602 4.75342 184.718 5.08057 184.83 5.40918 cv
184.538 4.54736 184.932 3.59863 185.75 3.27637 cv
186.03 3.16943 186.31 3.0625 186.588 2.95557 cv
187.408 2.6333 188.37 3.13721 188.696 4.09326 cv
188.573 3.73389 188.446 3.375 188.314 3.01807 cv
187.965 2.06836 186.991 1.58691 186.179 1.92871 cv
cp
.627451 .643137 .690196 rgb
f
216.153 23.8091 mo
223.883 45.2192 li
181.357 45.1543 li
183.393 24.2192 li
183.523 22.7593 184.353 21.8691 185.153 21.8691 cv
213.893 21.9092 li
214.703 21.9092 215.713 22.5693 216.153 23.8091 cv
cp
.4 .407843 .439216 rgb
f
185.155 20.8691 mo
185.153 20.8691 li
183.724 20.8691 182.565 22.2407 182.397 24.1309 cv
180.362 45.0576 li
180.334 45.3379 180.426 45.6167 180.616 45.8257 cv
180.805 46.0347 181.074 46.1538 181.355 46.1543 cv
223.881 46.2192 li
223.882 46.2192 223.882 46.2192 223.883 46.2192 cv
224.208 46.2192 224.514 46.061 224.702 45.7944 cv
224.889 45.5278 224.935 45.1865 224.824 44.8794 cv
217.093 23.4692 li
216.56 21.9644 215.243 20.9092 213.893 20.9092 cv
185.155 20.8691 li
185.155 20.8691 li
cp
185.153 21.8691 mo
213.893 21.9092 li
214.703 21.9092 215.713 22.5693 216.153 23.8091 cv
223.883 45.2192 li
181.357 45.1543 li
183.393 24.2192 li
183.523 22.7593 184.353 21.8691 185.153 21.8691 cv
185.153 21.8691 li
cp
.227451 .231373 .25098 rgb
f
183.388 24.314 mo
183.292 25.4043 li
211.182 25.4043 li
212.013 25.4043 213.055 27.6377 213.514 28.9111 cv
218.936 45.2119 li
223.883 45.2192 li
216.153 23.8091 li
215.713 22.5693 214.703 21.9092 213.893 21.9092 cv
185.153 21.8691 li
184.353 21.8691 183.523 22.7593 183.393 24.2192 cv
183.387 24.2861 li
183.387 24.2949 183.389 24.3062 183.388 24.314 cv
cp
.498039 .513726 .54902 rgb
f
186.169 23.3418 mo
193.107 23.1753 212.005 23.3877 212.005 23.3877 cv
212.809 23.3877 213.822 24.6597 214.265 25.897 cv
220.911 45.2148 li
223.883 45.2192 li
216.153 23.8091 li
215.713 22.5693 214.703 21.9092 213.893 21.9092 cv
185.153 21.8691 li
184.353 21.8691 183.523 22.7593 183.393 24.2192 cv
183.354 24.6348 li
184.295 23.7295 185.227 23.3643 186.169 23.3418 cv
cp
.627451 .643137 .690196 rgb
f
202.199 34.0776 mo
201.747 31.3813 199.681 29.1958 197.585 29.1958 cv
182.923 29.1958 li
181.583 43.3892 li
181.56 43.6235 181.516 43.8457 181.463 44.0615 cv
181.357 45.1543 li
204.063 45.189 li
202.199 34.0776 li
cp
.309804 .317647 .341176 rgb
f
197.585 28.1958 mo
182.923 28.1958 li
182.408 28.1958 181.976 28.5884 181.928 29.1016 cv
180.587 43.2949 li
180.573 43.4492 180.542 43.6187 180.492 43.8242 cv
180.48 43.8701 180.472 43.9175 180.468 43.9644 cv
180.362 45.0571 li
180.334 45.3379 180.426 45.6167 180.616 45.8257 cv
180.805 46.0347 181.074 46.1538 181.355 46.1543 cv
204.061 46.189 li
204.062 46.189 204.062 46.189 204.063 46.189 cv
204.357 46.189 204.636 46.0596 204.826 45.8354 cv
205.016 45.6108 205.098 45.314 205.049 45.0234 cv
203.185 33.9121 li
202.648 30.707 200.188 28.1958 197.585 28.1958 cv
197.585 28.1958 li
cp
197.585 29.1958 mo
199.681 29.1958 201.747 31.3813 202.199 34.0776 cv
204.063 45.189 li
181.357 45.1543 li
181.463 44.0615 li
181.516 43.8457 181.56 43.6235 181.583 43.3892 cv
182.923 29.1958 li
197.585 29.1958 li
197.585 29.1958 li
cp
.227451 .231373 .25098 rgb
f
199.44 41.4883 mo
199.44 42.7666 199.2 43.9995 198.79 45.1807 cv
204.063 45.189 li
202.199 34.0776 li
201.747 31.3813 199.681 29.1958 197.585 29.1958 cv
190.5 29.1958 li
195.874 31.7988 199.44 36.3262 199.44 41.4883 cv
cp
.2 .203922 .219608 rgb
f
188.71 32.6543 mo
192.035 29.1958 li
185.083 29.1958 li
185.398 32.0918 li
187.273 30.4043 li
188.71 32.6543 li
cp
203.379 41.1172 mo
202.199 34.0776 li
201.999 32.8848 201.472 31.8066 200.778 30.959 cv
197.398 33.6543 li
200.21 34.9668 li
195.96 38.7168 li
203.379 41.1172 li
cp
197.559 45.1792 mo
181.357 45.1543 li
181.463 44.0615 li
181.516 43.8457 181.56 43.6235 181.583 43.3892 cv
182.091 38.0137 li
184.398 37.5918 li
184.085 42.4043 li
188.148 39.0918 li
190.71 42.2168 li
193.335 41.0918 li
197.559 45.1792 li
cp
.192157 .694118 .909804 rgb
f
188.71 32.6543 mo
192.035 29.1958 li
185.083 29.1958 li
185.398 32.0918 li
187.273 30.4043 li
188.71 32.6543 li
cp
203.379 41.1172 mo
202.199 34.0776 li
201.999 32.8848 201.472 31.8066 200.778 30.959 cv
197.398 33.6543 li
200.21 34.9668 li
195.96 38.7168 li
203.379 41.1172 li
cp
197.559 45.1792 mo
181.357 45.1543 li
181.463 44.0615 li
181.516 43.8457 181.56 43.6235 181.583 43.3892 cv
182.091 38.0137 li
184.398 37.5918 li
184.085 42.4043 li
188.148 39.0918 li
190.71 42.2168 li
193.335 41.0918 li
197.559 45.1792 li
cp
f
196.524 44.1772 mo
182.468 44.1558 li
182.522 43.918 182.557 43.7021 182.579 43.4829 cv
183.113 37.8267 li
182.091 38.0137 li
181.583 43.3892 li
181.56 43.6235 181.516 43.8457 181.463 44.0615 cv
181.357 45.1543 li
197.559 45.1792 li
196.524 44.1772 li
cp
191.074 30.1958 mo
192.035 29.1958 li
185.083 29.1958 li
185.192 30.1958 li
191.074 30.1958 li
cp
201.974 33.167 mo
202.068 33.4624 202.146 33.7656 202.199 34.0776 cv
203.379 41.1172 li
202.308 40.7705 li
201.212 34.2432 li
201.042 33.229 200.589 32.2979 200 31.5786 cv
200.778 30.959 li
200.948 31.1665 201.107 31.3882 201.254 31.6216 cv
201.265 31.6396 201.276 31.6587 201.287 31.6768 cv
201.419 31.8916 201.542 32.1162 201.653 32.3496 cv
201.694 32.4395 201.728 32.5342 201.765 32.6265 cv
201.84 32.8037 201.916 32.981 201.974 33.167 cv
cp
1 1 1 rgb
f
203.273 55.5293 mo
200.615 55.5293 199.273 52.9878 198.227 51.5293 cv
196.849 49.6099 191.916 49.5293 188.991 49.5293 cv
170.661 49.5293 li
170.036 49.5293 169.245 48.7998 169.026 47.4946 cv
168.948 47.0381 169.826 43.4316 170.952 42.0957 cv
171.292 41.6904 171.659 41.5293 172.04 41.5293 cv
228.815 41.5293 li
230.673 41.5293 233.148 43.5918 235.29 45.5527 cv
236.593 46.7275 240.679 50.123 238.154 52.5479 cv
236.884 53.7666 234.787 55.5293 233.031 55.5293 cv
203.273 55.5293 li
cp
.4 .407843 .439216 rgb
f
228.815 40.5293 mo
172.04 40.5293 li
171.548 40.5293 170.828 40.6895 170.187 41.4521 cv
168.943 42.9272 167.889 46.7793 168.041 47.6631 cv
168.356 49.5435 169.597 50.5293 170.661 50.5293 cv
188.991 50.5293 li
190.793 50.5293 196.279 50.5293 197.415 52.1123 cv
197.542 52.29 197.674 52.4849 197.813 52.689 cv
198.851 54.2183 200.421 56.5293 203.273 56.5293 cv
233.031 56.5293 li
234.636 56.5293 236.593 55.4326 238.846 53.269 cv
239.593 52.5522 239.979 51.668 239.96 50.7124 cv
239.917 48.3379 237.479 46.1655 236.17 44.9985 cv
235.958 44.8101 li
233.534 42.5894 230.985 40.5293 228.815 40.5293 cv
228.815 40.5293 li
cp
228.815 41.5293 mo
230.673 41.5293 233.148 43.5918 235.29 45.5527 cv
236.593 46.7275 240.679 50.123 238.154 52.5479 cv
236.884 53.7666 234.787 55.5293 233.031 55.5293 cv
203.273 55.5293 li
200.615 55.5293 199.273 52.9878 198.227 51.5293 cv
196.849 49.6099 191.916 49.5293 188.991 49.5293 cv
170.661 49.5293 li
170.036 49.5293 169.245 48.7998 169.026 47.4946 cv
168.948 47.0381 169.826 43.4316 170.952 42.0957 cv
171.292 41.6904 171.659 41.5293 172.04 41.5293 cv
228.815 41.5293 li
228.815 41.5293 li
cp
.227451 .231373 .25098 rgb
f
228.815 41.5293 mo
172.04 41.5293 li
171.888 41.5293 171.74 41.5635 171.593 41.6201 cv
170.963 43.3286 170.916 45.7129 171.682 47.1958 cv
174.458 48.4199 177.732 47.5708 180.79 47.5708 cv
183.512 47.5708 194.869 47.6636 197.425 48.7876 cv
200.08 49.9546 199.96 53.5708 203.596 53.5708 cv
211.566 53.8296 219.552 54.0371 227.527 53.9038 cv
230.406 53.856 236.832 54.9136 236.647 50.1333 cv
236.594 48.7456 235.115 46.1738 233.376 43.8887 cv
231.772 42.5796 230.137 41.5293 228.815 41.5293 cv
cp
.498039 .513726 .54902 rgb
f
269.323 61.2695 mo
269.323 61.2695 269.323 78.6992 269.323 81.5195 cv
269.323 84.3291 267.393 86.999 265.023 87.4697 cv
264.653 87.5391 264.292 87.5791 263.953 87.5791 cv
262.093 87.5791 260.723 86.5391 260.723 84.999 cv
260.723 80.4492 li
260.723 61.9395 li
260.723 61.9395 260.723 59.0889 260.723 57.0693 cv
260.723 55.6094 261.733 54.7593 263.203 54.7593 cv
263.753 54.7593 264.373 54.8794 265.023 55.1392 cv
267.393 56.0693 269.323 58.8193 269.323 61.2695 cv
cp
.309804 .317647 .341176 rgb
f
270.273 61.2695 mo
270.273 81.5195 li
270.273 84.8096 268.053 87.8389 265.203 88.3994 cv
264.783 88.4893 264.363 88.5293 263.953 88.5293 cv
261.523 88.5293 259.773 87.0391 259.773 84.999 cv
259.773 80.4492 li
259.773 61.9395 li
259.773 57.0693 li
259.773 55.1191 261.153 53.8091 263.203 53.8091 cv
263.893 53.8091 264.623 53.9492 265.373 54.2495 cv
268.123 55.3394 270.273 58.4189 270.273 61.2695 cv
cp
269.323 81.5195 mo
269.323 78.6992 269.323 61.2695 269.323 61.2695 cv
269.323 58.8193 267.393 56.0693 265.023 55.1392 cv
264.373 54.8794 263.753 54.7593 263.203 54.7593 cv
261.733 54.7593 260.723 55.6094 260.723 57.0693 cv
260.723 59.0889 260.723 61.9395 260.723 61.9395 cv
260.723 80.4492 li
260.723 84.999 li
260.723 86.5391 262.093 87.5791 263.953 87.5791 cv
264.292 87.5791 264.653 87.5391 265.023 87.4697 cv
267.393 86.999 269.323 84.3291 269.323 81.5195 cv
cp
.227451 .231373 .25098 rgb
f
265.023 55.1392 mo
264.373 54.8794 263.753 54.7593 263.203 54.7593 cv
261.733 54.7593 260.723 55.6094 260.723 57.0693 cv
260.723 59.0889 260.723 61.9395 260.723 61.9395 cv
260.723 71.0684 li
261.478 66.1318 262.622 60.5596 264.835 60.9482 cv
267.176 61.3594 268.456 63.0547 269.323 64.5781 cv
269.323 62.5986 269.323 61.2695 269.323 61.2695 cv
269.323 58.8193 267.393 56.0693 265.023 55.1392 cv
cp
.498039 .513726 .54902 rgb
f
265.154 57.168 mo
266.932 57.8105 268.467 59.2949 269.292 60.9531 cv
269.138 58.5869 267.292 56.0293 265.023 55.1392 cv
264.373 54.8794 263.753 54.7593 263.203 54.7593 cv
261.733 54.7593 260.723 55.6094 260.723 57.0693 cv
260.723 57.3232 260.723 57.5898 260.723 57.8633 cv
261.44 56.7744 263.15 56.4434 265.154 57.168 cv
cp
.627451 .643137 .690196 rgb
f
269.323 81.5195 mo
269.323 81.0615 269.323 80.2148 269.323 79.124 cv
264.646 85.7451 261.64 80.7793 260.723 78.8115 cv
260.723 80.4492 li
260.723 84.999 li
260.723 86.5391 262.093 87.5791 263.953 87.5791 cv
264.292 87.5791 264.653 87.5391 265.023 87.4697 cv
267.393 86.999 269.323 84.3291 269.323 81.5195 cv
cp
.2 .203922 .219608 rgb
f
265.023 85.4697 mo
264.653 85.5391 264.292 85.5791 263.953 85.5791 cv
262.093 85.5791 260.723 84.5391 260.723 82.999 cv
260.723 84.999 li
260.723 86.5391 262.093 87.5791 263.953 87.5791 cv
264.292 87.5791 264.653 87.5391 265.023 87.4697 cv
267.393 86.999 269.323 84.3291 269.323 81.5195 cv
269.323 81.1191 269.323 80.417 269.323 79.5195 cv
269.323 82.3291 267.393 84.999 265.023 85.4697 cv
cp
.309804 .317647 .341176 rgb
f
247.523 67.8008 mo
247.523 72.7373 243.522 76.7383 238.585 76.7383 cv
233.649 76.7383 229.648 72.7373 229.648 67.8008 cv
229.648 62.8643 233.649 58.8633 238.585 58.8633 cv
243.522 58.8633 247.523 62.8643 247.523 67.8008 cv
cp
.498039 .513726 .54902 rgb
f
238.585 57.8633 mo
233.106 57.8633 228.648 62.3213 228.648 67.8008 cv
228.648 73.2803 233.106 77.7383 238.585 77.7383 cv
244.065 77.7383 248.523 73.2803 248.523 67.8008 cv
248.523 62.3213 244.065 57.8633 238.585 57.8633 cv
238.585 57.8633 li
cp
238.585 58.8633 mo
243.522 58.8633 247.523 62.8643 247.523 67.8008 cv
247.523 72.7373 243.522 76.7383 238.585 76.7383 cv
233.649 76.7383 229.648 72.7373 229.648 67.8008 cv
229.648 62.8643 233.649 58.8633 238.585 58.8633 cv
238.585 58.8633 li
cp
.227451 .231373 .25098 rgb
f
238.585 72.7383 mo
234.337 72.7383 230.79 69.7725 229.88 65.8008 cv
229.733 66.4443 229.648 67.1123 229.648 67.8008 cv
229.648 72.7373 233.649 76.7383 238.585 76.7383 cv
243.522 76.7383 247.523 72.7373 247.523 67.8008 cv
247.523 67.1123 247.438 66.4443 247.291 65.8008 cv
246.381 69.7725 242.833 72.7383 238.585 72.7383 cv
cp
.309804 .317647 .341176 rgb
f
243.663 62.0586 mo
243.542 63.1328 241.514 63.7861 239.137 63.5166 cv
236.759 63.248 234.93 62.1582 235.051 61.084 cv
235.172 60.0098 237.2 59.3564 239.577 59.626 cv
241.955 59.8945 243.784 60.9844 243.663 62.0586 cv
cp
.627451 .643137 .690196 rgb
f
240.067 70.2383 mo
237.857 70.7715 235.708 69.9531 235.384 68.3857 cv
235.06 66.8203 236.708 65.2158 238.947 64.8281 cv
259.899 61.2021 li
261.096 60.9941 262.219 61.708 262.442 62.7852 cv
262.666 63.8652 261.918 64.9658 260.737 65.251 cv
240.067 70.2383 li
cp
.309804 .317647 .341176 rgb
f
238.554 63.8848 mo
238.554 63.8848 li
235.799 64.4551 233.977 66.5205 234.405 68.5879 cv
234.833 70.6563 237.326 71.8301 240.081 71.2598 cv
240.154 71.2451 240.227 71.2285 240.301 71.21 cv
260.971 66.2227 li
262.682 65.8115 263.758 64.2119 263.421 62.583 cv
263.084 60.9541 261.462 59.915 259.728 60.2168 cv
238.777 63.8428 li
238.702 63.8555 238.627 63.8701 238.554 63.8848 cv
238.554 63.8848 li
cp
238.756 64.8643 mo
238.82 64.8516 238.883 64.8389 238.947 64.8281 cv
259.899 61.2021 li
261.096 60.9941 262.219 61.708 262.442 62.7852 cv
262.666 63.8652 261.918 64.9658 260.737 65.251 cv
240.067 70.2383 li
240.003 70.2539 239.94 70.2676 239.877 70.2803 cv
237.736 70.7236 235.699 69.9082 235.384 68.3857 cv
235.069 66.8652 236.615 65.3076 238.756 64.8643 cv
238.756 64.8643 li
cp
.227451 .231373 .25098 rgb
f
259.899 61.2021 mo
238.947 64.8281 li
236.708 65.2158 235.06 66.8203 235.384 68.3857 cv
235.427 68.5967 235.511 68.793 235.618 68.9766 cv
236.189 68.1611 237.058 67.5566 238.095 67.3477 cv
260.966 62.7441 li
261.504 62.6357 262.042 62.8271 262.479 63.2188 cv
262.482 63.0752 262.472 62.9307 262.442 62.7852 cv
262.219 61.708 261.096 60.9941 259.899 61.2021 cv
cp
.498039 .513726 .54902 rgb
f
156.987 54.1543 mo
156.987 54.8213 156.446 55.3623 155.779 55.3623 cv
155.111 55.3623 154.571 54.8213 154.571 54.1543 cv
154.571 53.4873 155.111 52.9463 155.779 52.9463 cv
156.446 52.9463 156.987 53.4873 156.987 54.1543 cv
cp
.439216 .235294 .0745098 rgb
f
156.585 54.0918 mo
156.585 54.5752 156.194 54.9668 155.71 54.9668 cv
155.227 54.9668 154.835 54.5752 154.835 54.0918 cv
154.835 53.6084 155.227 53.2168 155.71 53.2168 cv
156.194 53.2168 156.585 53.6084 156.585 54.0918 cv
cp
.8 .52549 .133333 rgb
f
164.07 56.9258 mo
164.07 57.5928 163.529 58.1338 162.862 58.1338 cv
162.194 58.1338 161.654 57.5928 161.654 56.9258 cv
161.654 56.2588 162.194 55.7178 162.862 55.7178 cv
163.529 55.7178 164.07 56.2588 164.07 56.9258 cv
cp
.439216 .235294 .0745098 rgb
f
163.668 56.8633 mo
163.668 57.3467 163.277 57.7383 162.793 57.7383 cv
162.31 57.7383 161.918 57.3467 161.918 56.8633 cv
161.918 56.3799 162.31 55.9883 162.793 55.9883 cv
163.277 55.9883 163.668 56.3799 163.668 56.8633 cv
cp
.8 .52549 .133333 rgb
f
169.945 61.8213 mo
169.945 62.4883 169.405 63.0293 168.737 63.0293 cv
168.07 63.0293 167.529 62.4883 167.529 61.8213 cv
167.529 61.1543 168.07 60.6133 168.737 60.6133 cv
169.405 60.6133 169.945 61.1543 169.945 61.8213 cv
cp
.439216 .235294 .0745098 rgb
f
176.904 65.3623 mo
176.904 66.0293 176.363 66.5703 175.696 66.5703 cv
175.028 66.5703 174.488 66.0293 174.488 65.3623 cv
174.488 64.6953 175.028 64.1543 175.696 64.1543 cv
176.363 64.1543 176.904 64.6953 176.904 65.3623 cv
cp
f
220.32 69.6953 mo
220.32 70.3623 219.78 70.9033 219.113 70.9033 cv
218.445 70.9033 217.904 70.3623 217.904 69.6953 cv
217.904 69.0283 218.445 68.4873 219.113 68.4873 cv
219.78 68.4873 220.32 69.0283 220.32 69.6953 cv
cp
f
219.919 69.6328 mo
219.919 70.1162 219.528 70.5078 219.044 70.5078 cv
218.561 70.5078 218.169 70.1162 218.169 69.6328 cv
218.169 69.1494 218.561 68.7578 219.044 68.7578 cv
219.528 68.7578 219.919 69.1494 219.919 69.6328 cv
cp
.8 .52549 .133333 rgb
f
212.486 69.7793 mo
212.486 70.4463 211.946 70.9873 211.279 70.9873 cv
210.611 70.9873 210.07 70.4463 210.07 69.7793 cv
210.07 69.1123 210.611 68.5713 211.279 68.5713 cv
211.946 68.5713 212.486 69.1123 212.486 69.7793 cv
cp
.439216 .235294 .0745098 rgb
f
212.085 69.7168 mo
212.085 70.2002 211.694 70.5918 211.21 70.5918 cv
210.727 70.5918 210.335 70.2002 210.335 69.7168 cv
210.335 69.2334 210.727 68.8418 211.21 68.8418 cv
211.694 68.8418 212.085 69.2334 212.085 69.7168 cv
cp
.8 .52549 .133333 rgb
f
198.208 68.2881 mo
197.56 67.6641 198.285 66.4619 198.85 65.3037 cv
199.767 64.7061 li
199.185 64.5391 li
199.383 64.0107 199.471 63.5234 199.273 63.1465 cv
198.817 63.4844 198.392 63.8457 197.967 64.1895 cv
196.352 63.7256 li
194.763 60.7217 li
193.889 64.541 li
190.754 63.3809 li
190.087 62.7695 189.454 62.3018 188.916 62.4209 cv
189.478 63.1973 190.228 64.7197 188.771 65.1533 cv
186.8 65.7373 184.685 62.8984 182.865 63.0605 cv
183.625 64.501 185.196 65.3047 186.239 66.5225 cv
187.131 67.5645 187.817 68.7813 188.564 69.9316 cv
187.685 71.2461 li
186.369 72.0508 184.254 71.1299 183.27 71.9004 cv
184.516 72.1777 187.107 72.1738 187.863 73.2188 cv
188.81 74.5322 198.663 68.7285 198.208 68.2881 cv
cp
.439216 .235294 .0745098 rgb
f
194.763 59.7217 mo
194.72 59.7217 194.676 59.7246 194.632 59.7305 cv
194.218 59.7852 193.881 60.0908 193.789 60.499 cv
193.168 63.208 li
191.282 62.5098 li
190.619 61.9189 189.896 61.4023 189.089 61.4023 cv
188.958 61.4023 188.827 61.416 188.7 61.4443 cv
188.371 61.5176 188.1 61.751 187.981 62.0654 cv
187.861 62.3809 187.908 62.7344 188.106 63.0078 cv
188.504 63.5576 188.631 64.0049 188.618 64.1504 cv
188.604 64.1504 188.562 64.1719 188.486 64.1953 cv
188.401 64.2197 188.311 64.2324 188.214 64.2324 cv
187.606 64.2324 186.808 63.7383 186.037 63.2598 cv
185.081 62.667 184.092 62.0537 183.018 62.0537 cv
183.017 62.0537 183.017 62.0537 183.017 62.0537 cv
182.936 62.0537 182.856 62.0576 182.776 62.0645 cv
182.443 62.0938 182.146 62.2891 181.987 62.583 cv
181.827 62.877 181.824 63.2314 181.98 63.5273 cv
182.532 64.5723 183.378 65.2861 184.197 65.9756 cv
184.672 66.376 185.121 66.7549 185.479 67.1729 cv
186.104 67.9023 186.624 68.7305 187.173 69.6064 cv
187.239 69.7109 187.304 69.8145 187.37 69.9189 cv
186.999 70.4736 li
186.769 70.5625 186.456 70.6035 186.017 70.6035 cv
185.798 70.6035 185.577 70.5947 185.359 70.5859 cv
185.121 70.5762 184.886 70.5664 184.661 70.5664 cv
184.051 70.5664 183.273 70.6289 182.654 71.1133 cv
182.349 71.3516 182.209 71.7441 182.294 72.1211 cv
182.38 72.498 182.675 72.793 183.053 72.877 cv
183.422 72.959 183.867 73.0156 184.336 73.0752 cv
185.179 73.1836 186.748 73.3838 187.052 73.8047 cv
187.251 74.0811 187.649 74.4121 188.405 74.4121 cv
190.755 74.4121 198.625 70.0166 199.14 68.7422 cv
199.298 68.3525 199.223 67.9199 198.951 67.6191 cv
198.955 67.3281 199.324 66.5928 199.549 66.1436 cv
199.625 65.9932 li
200.313 65.5439 li
200.641 65.3301 200.814 64.9443 200.756 64.5576 cv
200.716 64.2949 200.576 64.0645 200.372 63.9092 cv
200.413 63.5146 200.373 63.0898 200.158 62.6807 cv
200.022 62.4229 199.78 62.2363 199.496 62.1719 cv
199.421 62.1543 199.347 62.1465 199.273 62.1465 cv
199.06 62.1465 198.851 62.2139 198.677 62.3428 cv
198.353 62.583 198.044 62.835 197.74 63.084 cv
197.037 62.8818 li
195.647 60.2539 li
195.472 59.9238 195.13 59.7217 194.763 59.7217 cv
194.763 59.7217 li
cp
194.763 60.7217 mo
196.352 63.7256 li
197.967 64.1895 li
198.392 63.8457 198.817 63.4844 199.273 63.1465 cv
199.471 63.5234 199.383 64.0107 199.185 64.5391 cv
199.767 64.7061 li
198.85 65.3037 li
198.285 66.4619 197.56 67.6641 198.208 68.2881 cv
198.617 68.6836 190.7 73.4121 188.405 73.4121 cv
188.146 73.4121 187.958 73.3516 187.863 73.2188 cv
187.107 72.1738 184.516 72.1777 183.27 71.9004 cv
183.62 71.627 184.112 71.5664 184.661 71.5664 cv
185.092 71.5664 185.558 71.6035 186.017 71.6035 cv
186.617 71.6035 187.205 71.54 187.685 71.2461 cv
188.564 69.9316 li
187.817 68.7813 187.131 67.5645 186.239 66.5225 cv
185.196 65.3047 183.625 64.501 182.865 63.0605 cv
182.916 63.0557 182.966 63.0537 183.017 63.0537 cv
184.631 63.0537 186.462 65.2324 188.214 65.2324 cv
188.401 65.2324 188.586 65.208 188.771 65.1533 cv
190.228 64.7197 189.478 63.1973 188.916 62.4209 cv
188.972 62.4082 189.031 62.4023 189.089 62.4023 cv
189.588 62.4023 190.158 62.834 190.754 63.3809 cv
193.889 64.541 li
194.763 60.7217 li
194.763 60.7217 li
cp
.960784 .913725 .470588 rgb
f
227.57 69.6953 mo
227.57 70.3623 227.03 70.9033 226.363 70.9033 cv
225.695 70.9033 225.154 70.3623 225.154 69.6953 cv
225.154 69.0283 225.695 68.4873 226.363 68.4873 cv
227.03 68.4873 227.57 69.0283 227.57 69.6953 cv
cp
.439216 .235294 .0745098 rgb
f
227.169 69.6328 mo
227.169 70.1162 226.778 70.5078 226.294 70.5078 cv
225.811 70.5078 225.419 70.1162 225.419 69.6328 cv
225.419 69.1494 225.811 68.7578 226.294 68.7578 cv
226.778 68.7578 227.169 69.1494 227.169 69.6328 cv
cp
.8 .52549 .133333 rgb
f
212.604 73.8906 mo
204.783 78.8174 196.733 83.3018 188.502 87.3271 cv
186.89 82.4658 184.337 77.4502 181.438 73.2012 cv
189.169 69.4258 196.733 65.2168 204.085 60.5879 cv
207.426 64.5029 210.498 69.2236 212.604 73.8906 cv
cp
.498039 .513726 .54902 rgb
f
180.875 72.374 mo
180.678 72.5088 180.535 72.71 180.471 72.9443 cv
180.397 73.2246 180.449 73.5244 180.612 73.7637 cv
183.547 78.0664 186.012 82.9951 187.554 87.6426 cv
187.644 87.916 187.848 88.1367 188.115 88.248 cv
188.381 88.3604 188.683 88.3525 188.942 88.2256 cv
197.194 84.1895 205.334 79.6514 213.137 74.7363 cv
213.147 74.7314 213.158 74.7246 213.167 74.7178 cv
213.567 74.4453 213.716 73.9229 213.515 73.4795 cv
211.427 68.8516 208.348 64.043 204.846 59.9395 cv
204.524 59.5605 203.973 59.4775 203.552 59.7432 cv
196.284 64.3174 188.696 68.5439 181 72.3027 cv
180.957 72.3223 180.916 72.3467 180.875 72.374 cv
180.875 72.374 li
cp
181.438 73.2012 mo
189.169 69.4258 196.733 65.2168 204.085 60.5879 cv
207.426 64.5029 210.498 69.2236 212.604 73.8906 cv
204.783 78.8174 196.733 83.3018 188.502 87.3271 cv
186.89 82.4658 184.337 77.4502 181.438 73.2012 cv
181.438 73.2012 li
cp
.227451 .231373 .25098 rgb
f
209.02 67.3018 mo
207.514 64.9248 205.839 62.6445 204.085 60.5879 cv
196.733 65.2168 189.169 69.4258 181.438 73.2012 cv
182.962 75.4346 184.384 77.8809 185.631 80.4053 cv
193.596 76.4189 192.508 68.5283 209.02 67.3018 cv
cp
.627451 .643137 .690196 rgb
f
185.64 73.2744 mo
186.015 73.8271 185.873 74.5781 185.321 74.9531 cv
184.769 75.3291 184.018 75.1855 183.643 74.6338 cv
183.267 74.082 183.41 73.332 183.962 72.9551 cv
184.513 72.5811 185.265 72.7246 185.64 73.2744 cv
cp
.227451 .231373 .25098 rgb
f
190.868 83.1367 mo
191.243 83.6885 191.1 84.4395 190.548 84.8145 cv
189.997 85.1904 189.245 85.0469 188.87 84.4951 cv
188.495 83.9443 188.638 83.1924 189.189 82.8174 cv
189.741 82.4414 190.492 82.5859 190.868 83.1367 cv
cp
f
204.732 62.4043 mo
205.108 62.9561 204.965 63.707 204.413 64.082 cv
203.862 64.458 203.11 64.3145 202.735 63.7627 cv
202.36 63.2119 202.503 62.46 203.054 62.085 cv
203.606 61.709 204.357 61.8535 204.732 62.4043 cv
cp
f
204.366 62.5781 mo
204.638 62.9766 204.535 63.5205 204.134 63.7939 cv
203.735 64.0654 203.191 63.9609 202.919 63.5615 cv
202.648 63.1621 202.751 62.6191 203.151 62.3457 cv
203.55 62.0742 204.094 62.1787 204.366 62.5781 cv
cp
.627451 .643137 .690196 rgb
f
210.321 72.2852 mo
210.695 72.8359 210.553 73.5879 210.001 73.9639 cv
209.45 74.3389 208.698 74.1953 208.323 73.6445 cv
207.947 73.0928 208.09 72.3408 208.642 71.9658 cv
209.194 71.5898 209.945 71.7334 210.321 72.2852 cv
cp
.227451 .231373 .25098 rgb
f
209.954 72.458 mo
210.226 72.8584 210.123 73.4023 209.723 73.6738 cv
209.323 73.9453 208.779 73.8428 208.507 73.4424 cv
208.235 73.043 208.338 72.499 208.739 72.2275 cv
209.138 71.9561 209.682 72.0586 209.954 72.458 cv
cp
.627451 .643137 .690196 rgb
f
200.423 77.96 mo
200.797 78.5107 200.656 79.2617 200.104 79.6377 cv
199.552 80.0127 198.8 79.8691 198.425 79.3184 cv
198.049 78.7666 198.193 78.0156 198.745 77.6406 cv
199.296 77.2646 200.047 77.4082 200.423 77.96 cv
cp
.227451 .231373 .25098 rgb
f
200.056 78.1328 mo
200.329 78.5322 200.225 79.0771 199.826 79.3486 cv
199.425 79.6201 198.881 79.5176 198.609 79.1172 cv
198.337 78.7178 198.441 78.1738 198.841 77.9014 cv
199.241 77.6289 199.785 77.7334 200.056 78.1328 cv
cp
.627451 .643137 .690196 rgb
f
195.208 68.0146 mo
195.583 68.5664 195.44 69.3164 194.888 69.6924 cv
194.336 70.0674 193.584 69.9248 193.21 69.373 cv
192.834 68.8213 192.977 68.0703 193.53 67.6953 cv
194.081 67.3193 194.832 67.4629 195.208 68.0146 cv
cp
.227451 .231373 .25098 rgb
f
166.354 69.8496 mo
166.193 69.8496 166.032 69.8887 165.885 69.9658 cv
165.585 70.125 165.386 70.4258 165.358 70.7646 cv
165.258 71.9316 165.56 72.9854 165.853 74.0049 cv
166.024 74.6016 166.186 75.166 166.255 75.7168 cv
166.375 76.6729 166.361 77.6514 166.345 78.6865 cv
166.343 78.8145 166.342 78.9434 166.34 79.0703 cv
165.804 79.3145 li
165.417 79.2158 164.958 78.8711 164.512 78.5371 cv
163.82 78.0176 163.105 77.4805 162.222 77.4805 cv
162.159 77.4805 162.094 77.4834 162.031 77.4893 cv
161.651 77.5254 161.325 77.7734 161.189 78.1289 cv
161.053 78.4854 161.132 78.8877 161.391 79.166 cv
161.642 79.4365 161.963 79.7236 162.303 80.0283 cv
162.917 80.5791 164.061 81.6025 164.086 82.1396 cv
164.1 82.4199 164.11 82.6426 162.438 82.7236 cv
162.173 82.7373 li
161.636 82.7676 161.22 83.2168 161.23 83.7539 cv
161.242 84.3828 161.417 84.9297 161.57 85.4121 cv
161.726 85.9014 161.861 86.3242 161.836 86.7988 cv
161.824 87.0576 161.805 87.3125 161.788 87.5664 cv
161.74 88.2275 161.691 88.9102 161.734 89.6406 cv
161.756 90.0254 161.998 90.3633 162.355 90.5078 cv
162.477 90.5576 162.605 90.582 162.732 90.582 cv
162.977 90.582 163.218 90.4922 163.406 90.3213 cv
163.897 89.8691 li
165.04 88.8145 166.334 87.6182 167.658 86.9971 cv
167.898 86.8838 168.036 86.8672 168.096 86.8672 cv
168.261 86.8672 168.455 87.1553 168.709 87.5615 cv
169.067 88.1318 169.607 88.9932 170.661 88.9932 cv
170.847 88.9932 171.04 88.9639 171.232 88.9053 cv
171.633 88.7842 171.917 88.4248 171.94 88.0049 cv
172.001 86.9355 172.165 86.7021 172.194 86.6689 cv
172.195 86.6689 172.195 86.6689 172.196 86.6689 cv
172.206 86.6689 172.25 86.6582 172.341 86.6582 cv
172.7 86.6582 173.277 86.8154 173.679 86.9336 cv
174.191 87.083 174.679 87.1572 175.152 87.2295 cv
175.841 87.335 176.436 87.4248 177 87.7246 cv
177.169 87.8145 177.356 87.9502 177.553 88.0938 cv
178.08 88.4756 178.734 88.9502 179.619 88.9502 cv
179.664 88.9502 179.708 88.9492 179.753 88.9463 cv
180.052 88.9297 180.328 88.7803 180.504 88.5391 cv
180.681 88.2979 180.741 87.9893 180.667 87.7002 cv
180.449 86.8525 179.833 86.1729 179.338 85.627 cv
179.243 85.5225 179.15 85.4199 179.064 85.3203 cv
178.833 85.0518 178.453 84.7461 178.011 84.3906 cv
177.675 84.1201 177.088 83.6475 176.849 83.375 cv
177.042 83.1338 177.658 82.752 178.042 82.5137 cv
179.031 81.9014 180.147 81.21 180.305 80.0469 cv
180.316 79.9873 180.323 79.9248 180.323 79.8613 cv
180.323 79.3086 179.877 78.8613 179.325 78.8613 cv
179.32 78.8613 li
179.294 78.8613 179.269 78.8623 179.245 78.8643 cv
178.845 78.8906 178.453 78.9365 178.065 78.9824 cv
177.547 79.0439 177.058 79.1016 176.599 79.1016 cv
175.63 79.1016 174.969 78.832 174.316 78.1719 cv
174.013 77.8672 173.779 76.7939 173.608 76.0098 cv
173.285 74.5273 172.979 73.126 171.851 72.6787 cv
171.732 72.6318 171.607 72.6084 171.482 72.6084 cv
171.276 72.6084 171.073 72.6719 170.9 72.7949 cv
170.624 72.9932 170.466 73.3174 170.483 73.6572 cv
170.514 74.2891 170.404 74.7266 170.318 74.8848 cv
170.302 74.8809 170.282 74.876 170.258 74.8691 cv
169.68 74.6875 169.246 73.71 168.826 72.7646 cv
168.337 71.667 167.833 70.5313 166.842 69.9775 cv
166.691 69.8926 166.523 69.8496 166.354 69.8496 cv
166.354 69.8496 li
cp
179.32 79.8613 mo
179.325 79.8613 li
179.32 79.8613 li
cp
.960784 .772549 .164706 rgb
f
167.148 80.5293 mo
167.148 79.1582 167.231 77.7646 167.06 76.4043 cv
166.86 74.8135 166.028 73.2852 166.167 71.6621 cv
167.694 72.5176 167.909 76.0518 169.773 76.6357 cv
171.152 77.0664 171.341 75.3799 171.294 74.4209 cv
172.486 74.8936 172.334 78.5957 173.417 79.6885 cv
175.209 81.498 177.089 80.8066 179.132 80.6738 cv
179 82.1846 175.314 82.9141 175.64 84.4043 cv
175.775 85.0234 177.648 86.2383 178.12 86.7861 cv
178.61 87.3545 179.319 88.0146 179.51 88.7607 cv
178.64 88.8096 178.015 88.043 177.282 87.6543 cv
176.129 87.042 174.949 87.1299 173.773 86.7861 cv
171.579 86.1436 170.893 86.3369 170.754 88.7607 cv
169.196 89.2324 169.426 85.7852 167.044 86.9043 cv
165.378 87.6875 163.841 89.2119 162.544 90.3945 cv
162.49 89.459 162.602 88.582 162.648 87.6611 cv
162.708 86.4531 162.062 85.6035 162.042 84.5479 cv
163.19 84.4824 164.974 84.5215 164.898 82.9043 cv
164.836 81.6152 162.783 80.208 161.936 79.2979 cv
163.115 79.1875 164.315 81.1104 165.773 81.1543 cv
167.148 80.5293 li
cp
.439216 .235294 .0745098 rgb
f
178.12 86.7861 mo
177.648 86.2383 175.775 85.0234 175.64 84.4043 cv
175.314 82.9141 179 82.1846 179.132 80.6738 cv
177.089 80.8066 175.209 81.498 173.417 79.6885 cv
172.334 78.5957 172.486 74.8936 171.294 74.4209 cv
171.341 75.3799 171.152 77.0664 169.773 76.6357 cv
167.909 76.0518 167.694 72.5176 166.167 71.6621 cv
166.028 73.2852 166.86 74.8135 167.06 76.4043 cv
167.179 77.3486 167.173 78.3086 167.161 79.2666 cv
171.917 80.2354 175.538 83.374 176.166 87.248 cv
176.54 87.3379 176.913 87.458 177.282 87.6543 cv
178.015 88.043 178.64 88.8096 179.51 88.7607 cv
179.319 88.0146 178.61 87.3545 178.12 86.7861 cv
cp
.227451 .231373 .25098 rgb
f
158.011 59.6084 mo
157.75 59.6084 157.496 59.71 157.305 59.8994 cv
157.097 60.1074 156.881 60.3652 156.653 60.6377 cv
156.261 61.1045 155.534 61.9746 155.157 62.0215 cv
155.126 62.0254 155.097 62.0273 155.07 62.0273 cv
155.029 62.0273 155.011 62.0225 155.011 62.0225 cv
154.915 61.915 154.839 61.3535 154.802 61.083 cv
154.775 60.8877 li
154.704 60.3916 154.278 60.0313 153.787 60.0313 cv
153.753 60.0313 153.72 60.0332 153.687 60.0361 cv
153.167 60.0879 152.728 60.2539 152.341 60.4014 cv
151.966 60.5439 151.643 60.667 151.278 60.6797 cv
151.068 60.6875 150.862 60.6904 150.657 60.6943 cv
150.119 60.7031 149.561 60.7119 148.967 60.793 cv
148.577 60.8467 148.253 61.126 148.143 61.5049 cv
148.033 61.8838 148.156 62.293 148.458 62.5479 cv
148.855 62.8809 li
149.758 63.6348 150.782 64.4893 151.337 65.3779 cv
151.367 65.4258 151.386 65.4629 151.399 65.4912 cv
151.307 65.5781 151.123 65.7041 151.003 65.7861 cv
150.542 66.1006 149.461 66.8379 149.991 68.0781 cv
150.149 68.4473 150.511 68.6855 150.911 68.6855 cv
150.92 68.6855 150.93 68.6855 150.94 68.6855 cv
151.029 68.6826 151.114 68.6816 151.195 68.6816 cv
151.542 68.6816 151.739 68.707 151.845 68.7295 cv
151.841 68.8535 151.813 69.0928 151.708 69.5381 cv
151.614 69.9443 151.581 70.335 151.551 70.6787 cv
151.51 71.1602 151.475 71.5752 151.291 71.958 cv
151.237 72.0703 151.144 72.208 151.046 72.3545 cv
150.743 72.8057 150.327 73.4229 150.443 74.2373 cv
150.485 74.5293 150.653 74.7871 150.903 74.9434 cv
151.063 75.0439 151.248 75.0957 151.433 75.0957 cv
151.536 75.0957 151.638 75.0801 151.738 75.0479 cv
152.442 74.8232 152.97 74.3105 153.395 73.8984 cv
153.472 73.8232 153.547 73.75 153.621 73.6826 cv
153.837 73.4824 154.067 73.1768 154.333 72.8223 cv
154.5 72.5996 154.779 72.2285 154.973 72.0186 cv
155.155 72.1758 155.419 72.502 155.591 72.7148 cv
156.158 73.416 156.864 74.2881 157.927 74.2881 cv
158.219 74.2881 158.498 74.1602 158.687 73.9395 cv
158.877 73.7178 158.962 73.4238 158.917 73.1357 cv
158.872 72.8359 158.809 72.543 158.747 72.2539 cv
158.494 71.0732 158.404 70.4717 159.109 69.7256 cv
159.302 69.5205 160.199 69.2656 160.735 69.1133 cv
161.916 68.7783 163.033 68.4609 163.409 67.5615 cv
163.469 67.4336 163.503 67.29 163.503 67.1387 cv
163.503 66.5869 163.058 66.1396 162.506 66.1387 cv
162.504 66.1387 162.502 66.1387 162.5 66.1387 cv
162.489 66.1387 162.476 66.1387 162.464 66.1396 cv
162.429 66.1406 162.395 66.1436 162.361 66.1484 cv
162.257 66.1611 162.102 66.1758 161.931 66.1758 cv
161.875 66.1758 161.824 66.1738 161.778 66.1709 cv
162.078 65.8975 162.665 65.6025 163.088 65.3896 cv
163.948 64.959 164.835 64.5137 165.273 63.7266 cv
165.367 63.5742 165.421 63.3945 165.421 63.2031 cv
165.421 62.6504 164.976 62.2031 164.423 62.2031 cv
164.418 62.2031 li
164.417 62.2031 164.417 62.2031 164.417 62.2031 cv
164.417 62.2031 li
164.416 62.2031 164.415 62.2031 164.414 62.2031 cv
164.414 62.2031 li
164.414 62.2031 164.414 62.2031 164.413 62.2031 cv
163.449 62.208 162.608 62.501 161.795 62.7852 cv
161.329 62.9482 160.887 63.1025 160.456 63.1875 cv
159.702 63.3369 158.917 63.3896 158.086 63.4473 cv
158.013 63.4521 157.94 63.457 157.867 63.4619 cv
157.781 63.3203 li
157.87 63.0938 158.092 62.7744 158.252 62.5459 cv
158.672 61.9424 159.15 61.2588 158.995 60.4258 cv
158.926 60.0605 158.663 59.7637 158.308 59.6533 cv
158.21 59.623 158.111 59.6084 158.011 59.6084 cv
158.011 59.6084 li
cp
161.5 68.1387 mo
161.505 68.1387 li
161.5 68.1387 li
cp
163.418 64.2031 mo
163.423 64.2031 li
163.418 64.2031 li
cp
.960784 .772549 .164706 rgb
f
157.079 64.9209 mo
158.184 64.8301 159.312 64.7988 160.399 64.585 cv
161.668 64.334 162.851 63.625 164.167 63.6191 cv
163.57 64.7939 160.734 65.1826 160.374 66.5859 cv
160.11 67.624 161.48 67.6523 162.25 67.5547 cv
161.94 68.458 158.947 68.5908 158.131 69.4551 cv
156.779 70.8857 157.449 72.2168 157.678 73.7041 cv
156.453 73.707 155.644 71.0557 154.463 71.3926 cv
153.971 71.5322 153.104 72.9824 152.691 73.3643 cv
152.262 73.7607 151.772 74.3232 151.182 74.5117 cv
151.091 73.8789 151.671 73.3701 151.941 72.8076 cv
152.366 71.9238 152.225 71.0654 152.431 70.1826 cv
152.818 68.5332 152.621 68.0449 150.66 68.1016 cv
150.186 66.9922 152.978 66.9346 151.934 65.2637 cv
151.204 64.0957 149.882 63.0713 148.852 62.2002 cv
149.603 62.0977 150.316 62.1221 151.062 62.0947 cv
152.039 62.0605 152.685 61.5313 153.535 61.4473 cv
153.656 62.2832 153.731 63.5918 155.03 63.4297 cv
156.065 63.2998 157.078 61.7041 157.76 61.0244 cv
157.919 61.8799 156.442 62.8848 156.493 63.9551 cv
157.079 64.9209 li
cp
.439216 .235294 .0745098 rgb
f
164.167 63.6191 mo
162.851 63.625 161.668 64.334 160.399 64.585 cv
159.312 64.7988 158.184 64.8301 157.079 64.9209 cv
156.493 63.9551 li
156.442 62.8848 157.919 61.8799 157.76 61.0244 cv
157.078 61.7041 156.065 63.2998 155.03 63.4297 cv
153.731 63.5918 153.656 62.2832 153.535 61.4473 cv
152.77 61.5225 152.159 61.9414 151.334 62.0527 cv
154.389 63.8955 156.642 67.0254 157.404 70.7402 cv
157.51 70.3164 157.719 69.8906 158.131 69.4551 cv
158.947 68.5908 161.94 68.458 162.25 67.5547 cv
161.48 67.6523 160.11 67.624 160.374 66.5859 cv
160.734 65.1826 163.57 64.7939 164.167 63.6191 cv
cp
.227451 .231373 .25098 rgb
f
209.636 46.521 mo
208.661 48.8589 li
210.841 51.2393 li
206.385 50.5933 li
205.395 53.2964 li
204.736 50.1484 li
200.977 48.8784 li
203.779 47.3525 li
203.693 44.0908 li
206.49 48.4961 li
209.636 46.521 li
cp
.309804 .317647 .341176 rgb
f
211.066 35.7549 mo
208.115 34.0073 li
204.856 35.0532 li
206.351 31.1655 li
203.633 28.9023 li
207.083 29.9023 li
208.847 27.3188 li
210.076 30.3618 li
213.428 31.6367 li
208.681 32.2051 li
211.066 35.7549 li
cp
.227451 .231373 .25098 rgb
f
131.287 202.515 mo
131.105 202.515 130.925 202.565 130.769 202.667 cv
114.821 212.97 li
114.458 213.204 114.298 213.651 114.43 214.062 cv
118.583 227.056 li
118.71 227.458 119.083 227.72 119.492 227.72 cv
119.552 227.72 119.615 227.714 119.675 227.7 cv
135.457 224.583 li
135.974 224.481 136.31 223.979 136.208 223.464 cv
132.222 203.282 li
132.162 202.974 131.951 202.714 131.66 202.589 cv
131.539 202.54 131.414 202.515 131.287 202.515 cv
131.287 202.515 li
cp
131.287 203.468 mo
135.273 223.647 li
119.492 226.765 li
115.338 213.772 li
131.287 203.468 li
131.287 203.468 li
cp
f
131.287 203.468 mo
115.338 213.772 li
119.492 226.765 li
123.572 225.96 li
132.023 207.198 li
131.287 203.468 li
cp
.2 .203922 .219608 rgb
f
123.572 225.96 mo
135.273 223.647 li
132.023 207.198 li
123.572 225.96 li
cp
.309804 .317647 .341176 rgb
f
134.656 220.526 mo
132.511 222.294 130.025 223.435 127.083 223.831 cv
125.654 224.024 122.275 224.114 118.552 223.829 cv
119.492 226.765 li
123.572 225.96 li
135.273 223.647 li
134.656 220.526 li
cp
f
119.568 150.43 mo
119.148 150.43 118.769 150.706 118.652 151.121 cv
114.27 166.409 li
114.152 166.821 114.325 167.265 114.693 167.487 cv
132.357 178.204 li
132.507 178.294 132.679 178.343 132.851 178.343 cv
132.988 178.343 133.125 178.312 133.253 178.253 cv
133.541 178.12 133.744 177.851 133.794 177.538 cv
137.515 154.253 li
137.597 153.731 137.244 153.243 136.724 153.16 cv
119.72 150.441 li
119.667 150.434 119.619 150.43 119.568 150.43 cv
119.568 150.43 li
cp
119.568 151.384 mo
136.574 154.103 li
132.851 177.388 li
115.187 166.671 li
119.568 151.384 li
119.568 151.384 li
cp
.227451 .231373 .25098 rgb
f
119.568 151.384 mo
115.187 166.671 li
132.851 177.388 li
136.574 154.103 li
119.568 151.384 li
cp
.4 .407843 .439216 rgb
f
125.49 172.923 mo
128.699 152.843 li
119.568 151.384 li
115.187 166.671 li
125.49 172.923 li
cp
.498039 .513726 .54902 rgb
f
136.244 156.173 mo
136.574 154.103 li
119.568 151.384 li
118.986 153.413 li
136.244 156.173 li
cp
.627451 .643137 .690196 rgb
f
135.814 158.833 mo
135.785 158.833 135.755 158.83 135.726 158.825 cv
128.06 157.45 li
127.787 157.401 127.607 157.142 127.656 156.869 cv
127.703 156.597 127.97 156.417 128.236 156.466 cv
135.902 157.841 li
136.173 157.89 136.355 158.149 136.306 158.421 cv
136.263 158.663 136.052 158.833 135.814 158.833 cv
cp
.227451 .231373 .25098 rgb
f
133.867 171.864 mo
133.816 171.864 133.765 171.856 133.714 171.84 cv
126.08 169.392 li
125.816 169.308 125.671 169.026 125.755 168.763 cv
125.839 168.5 126.121 168.355 126.384 168.439 cv
134.019 170.888 li
134.283 170.972 134.427 171.253 134.343 171.517 cv
134.275 171.729 134.078 171.864 133.867 171.864 cv
cp
f
69.0698 222.716 mo
38.1919 222.716 19.0093 208.089 19.0093 184.544 cv
19.0093 163.473 24.4487 161.952 33.4067 161.952 cv
36.0669 161.962 li
100.784 161.962 li
101.656 161.962 129.4 172.802 137.884 176.124 cv
137.927 176.142 137.968 176.165 138.005 176.194 cv
140.173 177.903 141.949 182.042 141.958 185.419 cv
142.054 199.362 li
142.054 204.212 138.125 206.026 132.173 208.772 cv
130.761 209.425 li
112.361 217.995 90.4517 222.716 69.0698 222.716 cv
cp
.878431 .701961 .133333 rgb
f
69.0698 222.716 mo
90.4517 222.716 112.361 217.995 130.761 209.425 cv
132.173 208.772 li
138.125 206.026 142.054 204.212 142.054 199.362 cv
142.023 194.765 li
141.673 195.024 141.322 195.282 140.966 195.536 cv
134.607 200.106 127.273 203.013 119.919 205.562 cv
104.533 210.896 87.9858 214.632 71.562 213.851 cv
56.8633 213.153 40.6025 209.228 33.5449 195.05 cv
30.0361 188.003 25.8564 179.767 25.835 171.759 cv
25.8311 170.351 25.5522 166.842 25.5293 163.207 cv
21.3657 165.278 19.0093 170.678 19.0093 184.544 cv
19.0093 208.089 38.1919 222.716 69.0698 222.716 cv
cp
.8 .52549 .133333 rgb
f
33.5356 161.035 mo
33.5342 161.035 33.5327 161.035 33.5317 161.035 cv
24.231 161.035 18.1343 162.677 18.1343 184.627 cv
18.1343 208.789 37.6997 223.799 69.1948 223.799 cv
90.7202 223.799 112.78 219.045 131.308 210.414 cv
132.718 209.764 li
138.791 206.961 143.179 204.936 143.179 199.445 cv
143.083 185.494 li
143.072 181.795 141.169 177.398 138.75 175.492 cv
138.636 175.402 138.513 175.331 138.38 175.278 cv
102.031 161.045 101.245 161.045 100.909 161.045 cv
36.1919 161.045 li
33.5356 161.035 li
33.5356 161.035 li
cp
33.5317 162.035 mo
36.1919 162.045 li
100.909 162.045 li
101.781 162.045 129.525 172.885 138.009 176.207 cv
138.052 176.225 138.093 176.248 138.13 176.277 cv
140.298 177.986 142.074 182.125 142.083 185.502 cv
142.179 199.445 li
142.179 204.295 138.25 206.109 132.298 208.855 cv
130.886 209.508 li
112.486 218.078 90.5767 222.799 69.1948 222.799 cv
38.3169 222.799 19.1343 208.172 19.1343 184.627 cv
19.1343 163.556 24.5737 162.035 33.5317 162.035 cv
33.5317 162.035 li
cp
.439216 .235294 .0745098 rgb
f
140.546 203.103 mo
138.72 204.259 136.324 205.335 133.449 206.704 cv
116.687 214.683 95.1294 220.317 71.6245 220.317 cv
41.4019 220.317 21.7671 205.716 21.7671 181.573 cv
21.7671 172.619 22.6968 167.192 24.3838 163.897 cv
20.936 166.39 19.0093 172.005 19.0093 184.544 cv
19.0093 208.089 38.1919 222.716 69.0698 222.716 cv
84.8188 222.716 100.85 220.147 115.558 215.372 cv
120.861 213.595 125.871 211.579 130.501 209.374 cv
135.386 207.05 138.91 205.563 140.546 203.103 cv
cp
.878431 .701961 .133333 rgb
f
141.958 185.419 mo
141.949 182.042 140.173 177.903 138.005 176.194 cv
137.968 176.165 137.927 176.142 137.884 176.124 cv
129.4 172.802 101.656 161.962 100.784 161.962 cv
36.0669 161.962 li
33.4067 161.952 li
26.936 161.952 22.3027 162.749 20.2275 171.132 cv
20.2275 171.134 li
21.0186 171.12 23.3755 171.093 26.1611 171.17 cv
29.5928 171.263 40.2344 175.827 43.6357 179.304 cv
47.8198 183.583 60.2002 187.271 66.7456 187.271 cv
141.97 187.271 li
141.958 185.419 li
cp
.439216 .235294 .0745098 rgb
f
141.958 185.419 mo
141.949 182.042 140.173 177.903 138.005 176.194 cv
137.968 176.165 137.927 176.142 137.884 176.124 cv
129.4 172.802 101.656 161.962 100.784 161.962 cv
36.0669 161.962 li
33.4067 161.952 li
27.4111 161.952 22.9956 162.643 20.728 169.411 cv
20.728 169.411 li
29.0059 169.691 36.8564 171.79 43.3638 177.337 cv
49.6831 182.726 58.7979 186.243 67.1943 186.243 cv
141.964 186.243 li
141.958 185.419 li
cp
.960784 .913725 .470588 rgb
f
138.292 184.187 mo
137.597 181.979 136.529 181.405 135.32 180.429 cv
126.828 177.22 118.33 174.022 109.817 170.868 cv
103.237 168.43 98.5444 166.736 91.6587 166.589 cv
70.4331 166.132 43.1943 162.755 27.3687 165.574 cv
26.4448 165.739 25.1011 166.442 24.2212 167.618 cv
30.9756 167.95 41.5952 173.208 44.1016 175.979 cv
48.1196 180.423 60.6558 184.187 67.1943 184.187 cv
138.292 184.187 li
cp
.960784 .772549 .164706 rgb
f
80.0718 130.329 mo
76.8403 130.329 li
76.314 130.329 75.8862 130.757 75.8862 131.284 cv
75.8862 144.547 li
75.8862 145.073 76.314 145.501 76.8403 145.501 cv
80.0718 145.501 li
80.5981 145.501 81.0259 145.073 81.0259 144.547 cv
81.0259 131.284 li
81.0259 130.757 80.5981 130.329 80.0718 130.329 cv
80.0718 130.329 li
cp
80.0718 131.284 mo
80.0718 144.547 li
76.8403 144.547 li
76.8403 131.284 li
80.0718 131.284 li
80.0718 131.284 li
cp
.227451 .231373 .25098 rgb
f
80.0718 131.284 mo
76.8403 131.284 li
76.8403 144.547 li
80.0718 144.547 li
80.0718 131.284 li
cp
.4 .407843 .439216 rgb
f
80.0718 131.284 mo
78.5483 131.284 li
78.5483 144.547 li
80.0718 144.547 li
80.0718 131.284 li
cp
.498039 .513726 .54902 rgb
f
81.5786 124.136 mo
75.3354 124.136 li
74.8081 124.136 74.3813 124.563 74.3813 125.09 cv
74.3813 132.633 li
74.3813 133.16 74.8081 133.587 75.3354 133.587 cv
81.5786 133.587 li
82.1069 133.587 82.5327 133.16 82.5327 132.633 cv
82.5327 125.09 li
82.5327 124.563 82.1069 124.136 81.5786 124.136 cv
81.5786 124.136 li
cp
81.5786 125.09 mo
81.5786 132.633 li
75.3354 132.633 li
75.3354 125.09 li
81.5786 125.09 li
81.5786 125.09 li
cp
.227451 .231373 .25098 rgb
f
81.5786 125.09 mo
75.3354 125.09 li
75.3354 132.633 li
81.5786 132.633 li
81.5786 125.09 li
cp
.4 .407843 .439216 rgb
f
75.3354 125.09 mo
75.3354 127.612 li
81.5786 127.612 li
81.5786 125.09 li
75.3354 125.09 li
cp
.498039 .513726 .54902 rgb
f
75.3354 125.09 mo
75.3354 126.612 li
81.5786 126.612 li
81.5786 125.09 li
75.3354 125.09 li
cp
.627451 .643137 .690196 rgb
f
69.8823 128.175 mo
69.8667 132.345 70.2222 145.678 70.5522 145.7 cv
69.1802 145.92 67.8081 146.14 66.4351 146.359 cv
65.5142 140.606 65.2495 134.774 65.6406 128.976 cv
64.1372 128.831 62.6338 128.683 61.1309 128.533 cv
61.3647 126.698 61.6602 124.874 62.0176 123.063 cv
63.1128 123.1 64.2158 123.153 65.2954 123.306 cv
65.4243 123.323 65.541 123.351 65.6309 123.364 cv
66.5527 123.562 68.1831 124.167 68.8198 124.866 cv
69.6011 125.651 69.7964 127.431 69.8823 128.175 cv
cp
.4 .407843 .439216 rgb
f
70.8452 127.94 mo
70.8599 132.119 71.0884 144.772 71.4565 145.33 cv
71.5054 145.843 71.2134 146.624 70.7222 146.712 cv
69.3882 146.944 68.0562 147.177 66.7222 147.409 cv
66.209 147.503 65.4312 146.446 65.3481 145.878 cv
64.5474 140.594 64.2915 135.247 64.5811 129.925 cv
63.3911 129.827 62.2017 129.728 61.0122 129.627 cv
60.7534 129.601 60.5903 129.466 60.4336 129.236 cv
60.2681 128.995 60.2065 128.702 60.2373 128.401 cv
60.4673 126.55 60.7598 124.709 61.1143 122.881 cv
61.2148 122.37 61.604 122.007 62.0425 121.981 cv
62.0625 121.985 62.0825 121.988 62.104 121.979 cv
62.1133 121.981 62.1333 121.983 62.1333 121.983 cv
64.4312 122.062 67.9077 122.28 69.5522 124.134 cv
70.5581 125.05 70.7378 127.01 70.8452 127.94 cv
cp
70.5522 145.7 mo
70.2222 145.678 69.8667 132.345 69.8823 128.175 cv
69.7964 127.431 69.6011 125.651 68.8198 124.866 cv
68.1831 124.167 66.5522 123.562 65.6309 123.364 cv
65.5415 123.351 65.4243 123.323 65.2954 123.306 cv
64.2158 123.153 63.1128 123.1 62.0176 123.063 cv
61.6602 124.874 61.3643 126.698 61.1309 128.533 cv
62.6338 128.683 64.1372 128.831 65.6406 128.976 cv
65.2495 134.774 65.5142 140.606 66.4351 146.359 cv
67.8081 146.14 69.1802 145.92 70.5522 145.7 cv
cp
.227451 .231373 .25098 rgb
f
70.5522 145.7 mo
70.2222 145.678 69.8667 132.345 69.8823 128.175 cv
69.7964 127.431 69.6011 125.651 68.8198 124.866 cv
68.1831 124.167 66.5522 123.562 65.6309 123.364 cv
65.5415 123.351 65.4243 123.323 65.2954 123.306 cv
64.2158 123.153 63.1128 123.1 62.0176 123.063 cv
61.9419 123.447 61.8687 123.831 61.7988 124.216 cv
62.3604 124.267 62.959 124.326 63.126 124.358 cv
64.0415 124.537 65.5063 125.151 66.1543 125.86 cv
66.665 126.429 67.3896 127.933 67.4761 128.7 cv
67.9312 133.632 67.9761 140.687 68.5015 146.028 cv
69.1851 145.919 69.8687 145.81 70.5522 145.7 cv
cp
.498039 .513726 .54902 rgb
f
70.5522 145.7 mo
70.2222 145.678 69.8667 132.345 69.8823 128.175 cv
69.7964 127.431 69.6011 125.651 68.8198 124.866 cv
68.1831 124.167 66.5522 123.562 65.6309 123.364 cv
65.5415 123.351 65.4243 123.323 65.2954 123.306 cv
64.2158 123.153 63.1128 123.1 62.0176 123.063 cv
61.9644 123.333 61.9126 123.603 61.8623 123.872 cv
62.7817 123.946 63.8662 124.056 64.1846 124.119 cv
65.1006 124.304 66.5688 124.864 67.2153 125.569 cv
67.7241 126.134 68.4331 127.72 68.5181 128.478 cv
68.6499 131.354 68.5415 140.736 69.3862 145.888 cv
69.7749 145.825 70.1636 145.763 70.5522 145.7 cv
cp
.627451 .643137 .690196 rgb
f
62.2534 120.149 mo
61.959 120.097 61.6646 120.046 61.3701 119.995 cv
59.9644 119.739 58.5713 120.909 58.3384 122.61 cv
58.0605 124.634 57.8564 126.666 57.7251 128.701 cv
57.6143 130.411 58.7461 131.83 60.1748 131.86 cv
60.4736 131.868 60.7725 131.878 61.0708 131.886 cv
62.5015 131.916 63.6934 130.661 63.7954 129.093 cv
63.9175 127.202 64.1069 125.316 64.3652 123.437 cv
64.5781 121.876 63.6606 120.404 62.2534 120.149 cv
62.2534 120.149 li
cp
62.064 121.279 mo
62.9331 121.422 63.5078 122.325 63.3745 123.301 cv
63.1133 125.204 62.9209 127.114 62.7979 129.028 cv
62.7344 130.009 61.9912 130.777 61.1108 130.743 cv
60.8125 130.731 60.5137 130.719 60.2153 130.706 cv
59.3359 130.673 58.6558 129.804 58.7231 128.766 cv
58.8525 126.755 59.0547 124.747 59.3291 122.746 cv
59.4707 121.713 60.3105 120.995 61.1787 121.138 cv
61.4741 121.185 61.769 121.231 62.064 121.279 cv
62.064 121.279 li
cp
.227451 .231373 .25098 rgb
f
62.064 121.279 mo
61.769 121.231 61.4741 121.185 61.1787 121.138 cv
60.3105 120.995 59.4707 121.713 59.3291 122.746 cv
59.0547 124.747 58.8525 126.755 58.7231 128.766 cv
58.6558 129.804 59.3359 130.673 60.2153 130.706 cv
60.5137 130.719 60.8125 130.731 61.1108 130.743 cv
61.9912 130.777 62.7339 130.009 62.7979 129.028 cv
62.9209 127.114 63.1133 125.204 63.3745 123.301 cv
63.5078 122.325 62.9331 121.422 62.064 121.279 cv
cp
.4 .407843 .439216 rgb
f
62.064 121.279 mo
61.769 121.231 61.4741 121.185 61.1787 121.138 cv
60.3105 120.995 59.4707 121.713 59.3291 122.746 cv
59.2222 123.525 59.1265 124.306 59.0415 125.087 cv
59.1538 124.052 59.9731 123.311 60.8452 123.429 cv
61.1411 123.468 61.4375 123.507 61.7339 123.546 cv
62.6064 123.664 63.2065 124.55 63.1006 125.528 cv
63.1812 124.785 63.2725 124.042 63.3745 123.301 cv
63.5078 122.325 62.9331 121.422 62.064 121.279 cv
cp
.498039 .513726 .54902 rgb
f
62.064 121.279 mo
61.769 121.231 61.4741 121.185 61.1787 121.138 cv
60.3105 120.995 59.4707 121.713 59.3291 122.746 cv
59.2759 123.136 59.2251 123.525 59.1772 123.915 cv
59.3037 122.882 60.1338 122.151 61.0039 122.282 cv
61.2993 122.325 61.5952 122.368 61.8911 122.411 cv
62.7617 122.542 63.3491 123.437 63.2295 124.414 cv
63.2754 124.042 63.3232 123.672 63.3745 123.301 cv
63.5078 122.325 62.9331 121.422 62.064 121.279 cv
cp
.627451 .643137 .690196 rgb
f
89.4126 143.769 mo
97.1431 165.179 li
54.6162 165.114 li
56.6528 144.179 li
56.7827 142.719 57.6128 141.829 58.4126 141.829 cv
87.1528 141.868 li
87.9624 141.868 88.9731 142.528 89.4126 143.769 cv
cp
.4 .407843 .439216 rgb
f
58.4141 140.829 mo
58.4126 140.829 li
56.9839 140.829 55.8247 142.2 55.6567 144.091 cv
53.6211 165.017 li
53.5938 165.298 53.686 165.576 53.875 165.785 cv
54.0645 165.994 54.333 166.113 54.6147 166.114 cv
97.1411 166.179 li
97.1421 166.179 97.1421 166.179 97.1431 166.179 cv
97.4683 166.179 97.7739 166.021 97.9614 165.754 cv
98.1489 165.487 98.1948 165.146 98.0835 164.839 cv
90.353 143.429 li
89.8198 141.924 88.5024 140.868 87.1528 140.868 cv
58.4141 140.829 li
58.4141 140.829 li
cp
58.4126 141.829 mo
87.1528 141.868 li
87.9624 141.868 88.9731 142.528 89.4126 143.769 cv
97.1431 165.179 li
54.6162 165.114 li
56.6528 144.179 li
56.7827 142.719 57.6128 141.829 58.4126 141.829 cv
58.4126 141.829 li
cp
.227451 .231373 .25098 rgb
f
56.6479 144.273 mo
56.5513 145.364 li
84.4419 145.364 li
85.2729 145.364 86.3149 147.597 86.7739 148.87 cv
92.1958 165.171 li
97.1431 165.179 li
89.4126 143.769 li
88.9731 142.528 87.9624 141.868 87.1528 141.868 cv
58.4126 141.829 li
57.6128 141.829 56.7827 142.719 56.6528 144.179 cv
56.6465 144.245 li
56.6465 144.255 56.6484 144.266 56.6479 144.273 cv
cp
.498039 .513726 .54902 rgb
f
59.4287 143.302 mo
66.3662 143.135 85.2651 143.347 85.2651 143.347 cv
86.0688 143.347 87.0815 144.619 87.5249 145.856 cv
94.1704 165.175 li
97.1431 165.179 li
89.4126 143.769 li
88.9731 142.528 87.9624 141.868 87.1528 141.868 cv
58.4126 141.829 li
57.6128 141.829 56.7827 142.719 56.6528 144.179 cv
56.6138 144.595 li
57.5552 143.688 58.4868 143.323 59.4287 143.302 cv
cp
.627451 .643137 .690196 rgb
f
75.4585 154.037 mo
75.0063 151.341 72.9409 149.155 70.8452 149.155 cv
56.1831 149.155 li
54.8428 163.349 li
54.8198 163.583 54.7754 163.806 54.7227 164.021 cv
54.6162 165.114 li
77.3228 165.148 li
75.4585 154.037 li
cp
.192157 .694118 .909804 rgb
f
70.8452 148.155 mo
56.1831 148.155 li
55.6675 148.155 55.2358 148.548 55.1875 149.062 cv
53.8472 163.255 li
53.832 163.409 53.8013 163.578 53.7515 163.784 cv
53.7397 163.829 53.7319 163.877 53.7275 163.924 cv
53.6211 165.017 li
53.5938 165.298 53.686 165.576 53.875 165.785 cv
54.0645 165.994 54.333 166.113 54.6147 166.114 cv
77.3208 166.148 li
77.3218 166.148 77.3218 166.148 77.3228 166.148 cv
77.6167 166.148 77.896 166.019 78.0854 165.795 cv
78.2759 165.57 78.3579 165.273 78.3091 164.983 cv
76.4448 153.872 li
75.9077 150.667 73.4478 148.155 70.8452 148.155 cv
70.8452 148.155 li
cp
70.8452 149.155 mo
72.9409 149.155 75.0063 151.341 75.4585 154.037 cv
77.3228 165.148 li
54.6162 165.114 li
54.7227 164.021 li
54.7754 163.806 54.8198 163.583 54.8428 163.349 cv
56.1831 149.155 li
70.8452 149.155 li
70.8452 149.155 li
cp
.227451 .231373 .25098 rgb
f
61.3682 165.124 mo
66.6187 165.132 li
63.7563 149.155 li
58.5078 149.155 li
61.3682 165.124 li
cp
.580392 .87451 1 rgb
f
67.1768 149.155 mo
70.0396 165.138 li
72.3442 165.141 li
69.481 149.155 li
67.1768 149.155 li
cp
f
70.8452 149.155 mo
56.1831 149.155 li
54.8428 163.349 li
54.8198 163.583 54.7754 163.806 54.7227 164.021 cv
54.6162 165.114 li
77.3228 165.148 li
75.4585 154.037 li
75.0063 151.341 72.9409 149.155 70.8452 149.155 cv
70.8452 149.155 li
cp
70.8452 150.155 mo
72.4429 150.155 74.105 152.009 74.4722 154.202 cv
76.1401 164.146 li
55.7275 164.115 li
55.7817 163.874 55.8174 163.658 55.8384 163.442 cv
57.0933 150.155 li
70.8452 150.155 li
70.8452 150.155 li
cp
1 1 1 rgb
f
76.5327 175.489 mo
73.8745 175.489 72.5327 172.947 71.4858 171.489 cv
70.1089 169.569 65.1753 169.489 62.2505 169.489 cv
43.9204 169.489 li
43.2954 169.489 42.5044 168.759 42.2856 167.454 cv
42.2075 166.997 43.0854 163.392 44.2114 162.056 cv
44.5522 161.649 44.9185 161.489 45.2993 161.489 cv
102.075 161.489 li
103.933 161.489 106.408 163.552 108.549 165.513 cv
109.853 166.687 113.939 170.083 111.414 172.507 cv
110.144 173.726 108.046 175.489 106.291 175.489 cv
76.5327 175.489 li
cp
.4 .407843 .439216 rgb
f
102.075 160.489 mo
45.2993 160.489 li
44.8081 160.489 44.0874 160.649 43.4463 161.411 cv
42.2026 162.887 41.1489 166.739 41.2998 167.622 cv
41.6152 169.503 42.8569 170.489 43.9204 170.489 cv
62.2505 170.489 li
64.0527 170.489 69.5386 170.489 70.6733 172.071 cv
70.8013 172.249 70.9331 172.444 71.0718 172.648 cv
72.1108 174.178 73.6812 176.489 76.5327 176.489 cv
106.291 176.489 li
107.896 176.489 109.853 175.392 112.106 173.229 cv
112.853 172.512 113.239 171.628 113.22 170.672 cv
113.176 168.298 110.739 166.125 109.43 164.958 cv
109.218 164.77 li
106.793 162.549 104.245 160.489 102.075 160.489 cv
102.075 160.489 li
cp
102.075 161.489 mo
103.933 161.489 106.408 163.552 108.549 165.513 cv
109.853 166.687 113.939 170.083 111.414 172.507 cv
110.144 173.726 108.046 175.489 106.291 175.489 cv
76.5327 175.489 li
73.8745 175.489 72.5327 172.947 71.4858 171.489 cv
70.1089 169.569 65.1753 169.489 62.2505 169.489 cv
43.9204 169.489 li
43.2954 169.489 42.5044 168.759 42.2856 167.454 cv
42.2075 166.997 43.0854 163.392 44.2114 162.056 cv
44.5522 161.649 44.9185 161.489 45.2993 161.489 cv
102.075 161.489 li
102.075 161.489 li
cp
.227451 .231373 .25098 rgb
f
102.075 161.489 mo
45.2993 161.489 li
45.1479 161.489 44.9995 161.522 44.853 161.579 cv
44.2227 163.288 44.1753 165.673 44.9414 167.155 cv
47.7183 168.38 50.9917 167.53 54.0493 167.53 cv
56.7715 167.53 68.1284 167.623 70.6851 168.747 cv
73.3394 169.914 73.2202 173.53 76.856 173.53 cv
84.8257 173.789 92.812 173.997 100.787 173.863 cv
103.666 173.815 110.091 174.873 109.907 170.093 cv
109.854 168.705 108.375 166.134 106.636 163.849 cv
105.032 162.539 103.397 161.489 102.075 161.489 cv
cp
.498039 .513726 .54902 rgb
f
80.3198 195.788 mo
71.0825 195.464 61.9038 194.644 52.8345 193.343 cv
54.2358 188.415 54.9458 182.833 54.939 177.688 cv
63.4546 178.915 72.0757 179.69 80.7583 179.999 cv
81.3188 185.114 81.2036 190.745 80.3198 195.788 cv
cp
f
54.939 176.688 mo
54.6997 176.688 54.4668 176.774 54.2837 176.933 cv
54.0645 177.124 53.9385 177.399 53.939 177.69 cv
53.9458 182.897 53.2119 188.36 51.8726 193.069 cv
51.7935 193.347 51.8384 193.644 51.9956 193.886 cv
52.1528 194.128 52.4067 194.292 52.6924 194.333 cv
61.7852 195.638 71.0679 196.464 80.2847 196.788 cv
80.2964 196.788 80.3081 196.788 80.3198 196.788 cv
80.8042 196.788 81.2212 196.44 81.3052 195.962 cv
82.1812 190.96 82.3403 185.253 81.7524 179.89 cv
81.6987 179.396 81.2905 179.017 80.7935 178.999 cv
72.2104 178.694 63.5591 177.921 55.0815 176.698 cv
55.0342 176.692 54.9863 176.688 54.939 176.688 cv
54.939 176.688 li
cp
54.939 177.688 mo
63.4546 178.915 72.0757 179.69 80.7583 179.999 cv
81.3188 185.114 81.2036 190.745 80.3198 195.788 cv
71.0825 195.464 61.9038 194.644 52.8345 193.343 cv
54.2358 188.415 54.9458 182.833 54.939 177.688 cv
54.939 177.688 li
cp
.227451 .231373 .25098 rgb
f
81.063 188.325 mo
81.1548 185.513 81.0522 182.685 80.7583 179.999 cv
72.0757 179.69 63.4546 178.915 54.939 177.688 cv
54.9424 180.394 54.7427 183.216 54.354 186.003 cv
63.1807 187.188 66.7202 180.052 81.063 188.325 cv
cp
.627451 .643137 .690196 rgb
f
58.3711 180.114 mo
58.3711 180.78 57.8306 181.321 57.1631 181.321 cv
56.4956 181.321 55.9551 180.78 55.9551 180.114 cv
55.9551 179.446 56.4956 178.905 57.1631 178.905 cv
57.8306 178.905 58.3711 179.446 58.3711 180.114 cv
cp
.227451 .231373 .25098 rgb
f
57.9702 180.052 mo
57.9702 180.534 57.5786 180.927 57.0952 180.927 cv
56.6118 180.927 56.2202 180.534 56.2202 180.052 cv
56.2202 179.567 56.6118 179.177 57.0952 179.177 cv
57.5786 179.177 57.9702 179.567 57.9702 180.052 cv
cp
.627451 .643137 .690196 rgb
f
57.147 191.208 mo
57.147 191.874 56.6064 192.415 55.939 192.415 cv
55.2715 192.415 54.731 191.874 54.731 191.208 cv
54.731 190.54 55.2715 189.999 55.939 189.999 cv
56.6064 189.999 57.147 190.54 57.147 191.208 cv
cp
.227451 .231373 .25098 rgb
f
56.7461 191.146 mo
56.7461 191.628 56.3545 192.021 55.8711 192.021 cv
55.3877 192.021 54.9961 191.628 54.9961 191.146 cv
54.9961 190.661 55.3877 190.271 55.8711 190.271 cv
56.3545 190.271 56.7461 190.661 56.7461 191.146 cv
cp
.627451 .643137 .690196 rgb
f
80.272 181.864 mo
80.272 182.53 79.7319 183.071 79.064 183.071 cv
78.396 183.071 77.856 182.53 77.856 181.864 cv
77.856 181.196 78.396 180.655 79.064 180.655 cv
79.7319 180.655 80.272 181.196 80.272 181.864 cv
cp
.227451 .231373 .25098 rgb
f
79.8706 181.802 mo
79.8706 182.284 79.48 182.677 78.9956 182.677 cv
78.5132 182.677 78.1206 182.284 78.1206 181.802 cv
78.1206 181.317 78.5132 180.927 78.9956 180.927 cv
79.48 180.927 79.8706 181.317 79.8706 181.802 cv
cp
.627451 .643137 .690196 rgb
f
79.3345 193.177 mo
79.3345 193.843 78.7944 194.384 78.1265 194.384 cv
77.4585 194.384 76.9185 193.843 76.9185 193.177 cv
76.9185 192.509 77.4585 191.968 78.1265 191.968 cv
78.7944 191.968 79.3345 192.509 79.3345 193.177 cv
cp
.227451 .231373 .25098 rgb
f
78.9331 193.114 mo
78.9331 193.597 78.5425 193.989 78.0581 193.989 cv
77.5757 193.989 77.1831 193.597 77.1831 193.114 cv
77.1831 192.63 77.5757 192.239 78.0581 192.239 cv
78.5425 192.239 78.9331 192.63 78.9331 193.114 cv
cp
.627451 .643137 .690196 rgb
f
67.9595 192.302 mo
67.9595 192.968 67.4189 193.509 66.7515 193.509 cv
66.084 193.509 65.5435 192.968 65.5435 192.302 cv
65.5435 191.634 66.084 191.093 66.7515 191.093 cv
67.4189 191.093 67.9595 191.634 67.9595 192.302 cv
cp
.227451 .231373 .25098 rgb
f
67.5581 192.239 mo
67.5581 192.722 67.167 193.114 66.6836 193.114 cv
66.2002 193.114 65.8086 192.722 65.8086 192.239 cv
65.8086 191.755 66.2002 191.364 66.6836 191.364 cv
67.167 191.364 67.5581 191.755 67.5581 192.239 cv
cp
.627451 .643137 .690196 rgb
f
69.2407 181.146 mo
69.2407 181.812 68.7007 182.353 68.0327 182.353 cv
67.3652 182.353 66.8247 181.812 66.8247 181.146 cv
66.8247 180.478 67.3652 179.937 68.0327 179.937 cv
68.7007 179.937 69.2407 180.478 69.2407 181.146 cv
cp
.227451 .231373 .25098 rgb
f
68.8394 181.083 mo
68.8394 181.565 68.4487 181.958 67.9644 181.958 cv
67.4814 181.958 67.0898 181.565 67.0898 181.083 cv
67.0898 180.599 67.4814 180.208 67.9644 180.208 cv
68.4487 180.208 68.8394 180.599 68.8394 181.083 cv
cp
.627451 .643137 .690196 rgb
f
142.582 181.229 mo
142.582 181.229 142.582 198.659 142.582 201.479 cv
142.582 204.288 140.652 206.958 138.283 207.429 cv
137.912 207.499 137.552 207.538 137.212 207.538 cv
135.353 207.538 133.982 206.499 133.982 204.958 cv
133.982 200.409 li
133.982 181.899 li
133.982 181.899 133.982 179.048 133.982 177.028 cv
133.982 175.569 134.992 174.719 136.462 174.719 cv
137.013 174.719 137.632 174.839 138.283 175.099 cv
140.652 176.028 142.582 178.778 142.582 181.229 cv
cp
.309804 .317647 .341176 rgb
f
143.533 181.229 mo
143.533 201.479 li
143.533 204.769 141.312 207.798 138.462 208.358 cv
138.042 208.448 137.623 208.489 137.212 208.489 cv
134.783 208.489 133.033 206.999 133.033 204.958 cv
133.033 200.409 li
133.033 181.899 li
133.033 177.028 li
133.033 175.079 134.412 173.769 136.462 173.769 cv
137.152 173.769 137.882 173.909 138.632 174.209 cv
141.382 175.299 143.533 178.378 143.533 181.229 cv
cp
142.582 201.479 mo
142.582 198.659 142.582 181.229 142.582 181.229 cv
142.582 178.778 140.652 176.028 138.283 175.099 cv
137.632 174.839 137.013 174.719 136.462 174.719 cv
134.992 174.719 133.982 175.569 133.982 177.028 cv
133.982 179.048 133.982 181.899 133.982 181.899 cv
133.982 200.409 li
133.982 204.958 li
133.982 206.499 135.353 207.538 137.212 207.538 cv
137.552 207.538 137.912 207.499 138.283 207.429 cv
140.652 206.958 142.582 204.288 142.582 201.479 cv
cp
.227451 .231373 .25098 rgb
f
138.283 175.099 mo
137.632 174.839 137.013 174.719 136.462 174.719 cv
134.992 174.719 133.982 175.569 133.982 177.028 cv
133.982 179.048 133.982 181.899 133.982 181.899 cv
133.982 191.028 li
134.738 186.091 135.88 180.519 138.095 180.907 cv
140.435 181.319 141.714 183.015 142.582 184.538 cv
142.582 182.558 142.582 181.229 142.582 181.229 cv
142.582 178.778 140.652 176.028 138.283 175.099 cv
cp
.498039 .513726 .54902 rgb
f
138.414 177.128 mo
140.191 177.771 141.726 179.255 142.552 180.913 cv
142.398 178.546 140.552 175.989 138.283 175.099 cv
137.632 174.839 137.013 174.719 136.462 174.719 cv
134.992 174.719 133.982 175.569 133.982 177.028 cv
133.982 177.282 133.982 177.55 133.982 177.823 cv
134.699 176.733 136.41 176.403 138.414 177.128 cv
cp
.627451 .643137 .690196 rgb
f
142.582 201.479 mo
142.582 201.021 142.582 200.175 142.582 199.083 cv
137.906 205.704 134.9 200.739 133.982 198.771 cv
133.982 200.409 li
133.982 204.958 li
133.982 206.499 135.353 207.538 137.212 207.538 cv
137.552 207.538 137.912 207.499 138.283 207.429 cv
140.652 206.958 142.582 204.288 142.582 201.479 cv
cp
.2 .203922 .219608 rgb
f
138.283 205.429 mo
137.912 205.499 137.552 205.538 137.212 205.538 cv
135.353 205.538 133.982 204.499 133.982 202.958 cv
133.982 204.958 li
133.982 206.499 135.353 207.538 137.212 207.538 cv
137.552 207.538 137.912 207.499 138.283 207.429 cv
140.652 206.958 142.582 204.288 142.582 201.479 cv
142.582 201.079 142.582 200.376 142.582 199.479 cv
142.582 202.288 140.652 204.958 138.283 205.429 cv
cp
.309804 .317647 .341176 rgb
f
120.783 187.761 mo
120.783 192.696 116.782 196.698 111.845 196.698 cv
106.909 196.698 102.908 192.696 102.908 187.761 cv
102.908 182.823 106.909 178.823 111.845 178.823 cv
116.782 178.823 120.783 182.823 120.783 187.761 cv
cp
.498039 .513726 .54902 rgb
f
111.845 177.823 mo
106.366 177.823 101.908 182.28 101.908 187.761 cv
101.908 193.239 106.366 197.698 111.845 197.698 cv
117.325 197.698 121.783 193.239 121.783 187.761 cv
121.783 182.28 117.325 177.823 111.845 177.823 cv
111.845 177.823 li
cp
111.845 178.823 mo
116.782 178.823 120.783 182.823 120.783 187.761 cv
120.783 192.696 116.782 196.698 111.845 196.698 cv
106.909 196.698 102.908 192.696 102.908 187.761 cv
102.908 182.823 106.909 178.823 111.845 178.823 cv
111.845 178.823 li
cp
.227451 .231373 .25098 rgb
f
111.845 192.698 mo
107.597 192.698 104.049 189.731 103.14 185.761 cv
102.993 186.403 102.908 187.071 102.908 187.761 cv
102.908 192.696 106.909 196.698 111.845 196.698 cv
116.782 196.698 120.783 192.696 120.783 187.761 cv
120.783 187.071 120.697 186.403 120.55 185.761 cv
119.64 189.731 116.093 192.698 111.845 192.698 cv
cp
.309804 .317647 .341176 rgb
f
112.124 190.665 mo
110.436 190.665 109.064 189.343 109.064 187.716 cv
109.064 186.091 110.436 184.769 112.124 184.769 cv
133.783 184.769 li
135.468 184.769 136.841 186.091 136.841 187.716 cv
136.841 189.343 135.468 190.665 133.783 190.665 cv
112.124 190.665 li
cp
f
133.783 183.769 mo
112.124 183.769 li
109.885 183.769 108.064 185.54 108.064 187.716 cv
108.064 189.894 109.885 191.665 112.124 191.665 cv
133.783 191.665 li
136.021 191.665 137.841 189.894 137.841 187.716 cv
137.841 185.54 136.021 183.769 133.783 183.769 cv
133.783 183.769 li
cp
133.783 184.769 mo
135.468 184.769 136.841 186.091 136.841 187.716 cv
136.841 189.343 135.468 190.665 133.783 190.665 cv
112.124 190.665 li
110.436 190.665 109.064 189.343 109.064 187.716 cv
109.064 186.091 110.436 184.769 112.124 184.769 cv
133.783 184.769 li
133.783 184.769 li
cp
.227451 .231373 .25098 rgb
f
133.783 184.769 mo
112.124 184.769 li
110.436 184.769 109.064 186.091 109.064 187.716 cv
109.064 187.937 109.093 188.147 109.14 188.353 cv
109.647 187.657 110.341 187.226 111.114 187.226 cv
134.792 187.226 li
135.564 187.226 136.259 187.657 136.765 188.353 cv
136.814 188.147 136.841 187.935 136.841 187.716 cv
136.841 186.091 135.468 184.769 133.783 184.769 cv
cp
.498039 .513726 .54902 rgb
f
116.922 182.019 mo
116.801 183.093 114.774 183.745 112.397 183.476 cv
110.019 183.208 108.19 182.118 108.311 181.044 cv
108.432 179.97 110.459 179.315 112.836 179.585 cv
115.214 179.854 117.043 180.944 116.922 182.019 cv
cp
.627451 .643137 .690196 rgb
f
30.2461 174.114 mo
30.2461 174.78 29.7056 175.321 29.0381 175.321 cv
28.3706 175.321 27.8301 174.78 27.8301 174.114 cv
27.8301 173.446 28.3706 172.905 29.0381 172.905 cv
29.7056 172.905 30.2461 173.446 30.2461 174.114 cv
cp
.439216 .235294 .0745098 rgb
f
29.8452 174.052 mo
29.8452 174.534 29.4536 174.927 28.9702 174.927 cv
28.4868 174.927 28.0952 174.534 28.0952 174.052 cv
28.0952 173.567 28.4868 173.177 28.9702 173.177 cv
29.4536 173.177 29.8452 173.567 29.8452 174.052 cv
cp
.8 .52549 .133333 rgb
f
37.3291 176.886 mo
37.3291 177.552 36.7886 178.093 36.1211 178.093 cv
35.4536 178.093 34.9131 177.552 34.9131 176.886 cv
34.9131 176.218 35.4536 175.677 36.1211 175.677 cv
36.7886 175.677 37.3291 176.218 37.3291 176.886 cv
cp
.439216 .235294 .0745098 rgb
f
36.9282 176.823 mo
36.9282 177.306 36.5366 177.698 36.0532 177.698 cv
35.5698 177.698 35.1782 177.306 35.1782 176.823 cv
35.1782 176.339 35.5698 175.948 36.0532 175.948 cv
36.5366 175.948 36.9282 176.339 36.9282 176.823 cv
cp
.8 .52549 .133333 rgb
f
43.2046 181.78 mo
43.2046 182.448 42.6641 182.989 41.9966 182.989 cv
41.3291 182.989 40.7886 182.448 40.7886 181.78 cv
40.7886 181.114 41.3291 180.573 41.9966 180.573 cv
42.6641 180.573 43.2046 181.114 43.2046 181.78 cv
cp
.439216 .235294 .0745098 rgb
f
42.8037 181.718 mo
42.8037 182.202 42.4121 182.593 41.9287 182.593 cv
41.4453 182.593 41.0537 182.202 41.0537 181.718 cv
41.0537 181.235 41.4453 180.843 41.9287 180.843 cv
42.4121 180.843 42.8037 181.235 42.8037 181.718 cv
cp
.8 .52549 .133333 rgb
f
50.1631 185.321 mo
50.1631 185.989 49.6226 186.53 48.9551 186.53 cv
48.2876 186.53 47.7471 185.989 47.7471 185.321 cv
47.7471 184.655 48.2876 184.114 48.9551 184.114 cv
49.6226 184.114 50.1631 184.655 50.1631 185.321 cv
cp
.439216 .235294 .0745098 rgb
f
49.7622 185.259 mo
49.7622 185.743 49.3706 186.134 48.8872 186.134 cv
48.4038 186.134 48.0122 185.743 48.0122 185.259 cv
48.0122 184.776 48.4038 184.384 48.8872 184.384 cv
49.3706 184.384 49.7622 184.776 49.7622 185.259 cv
cp
.8 .52549 .133333 rgb
f
93.5796 189.655 mo
93.5796 190.321 93.0396 190.862 92.3726 190.862 cv
91.7046 190.862 91.1636 190.321 91.1636 189.655 cv
91.1636 188.987 91.7046 188.446 92.3726 188.446 cv
93.0396 188.446 93.5796 188.987 93.5796 189.655 cv
cp
.439216 .235294 .0745098 rgb
f
93.1792 189.593 mo
93.1792 190.075 92.7876 190.468 92.3042 190.468 cv
91.8208 190.468 91.4292 190.075 91.4292 189.593 cv
91.4292 189.108 91.8208 188.718 92.3042 188.718 cv
92.7876 188.718 93.1792 189.108 93.1792 189.593 cv
cp
.8 .52549 .133333 rgb
f
85.7456 189.739 mo
85.7456 190.405 85.2056 190.946 84.5386 190.946 cv
83.8706 190.946 83.3296 190.405 83.3296 189.739 cv
83.3296 189.071 83.8706 188.53 84.5386 188.53 cv
85.2056 188.53 85.7456 189.071 85.7456 189.739 cv
cp
.439216 .235294 .0745098 rgb
f
85.3452 189.677 mo
85.3452 190.159 84.9536 190.552 84.4702 190.552 cv
83.9868 190.552 83.5952 190.159 83.5952 189.677 cv
83.5952 189.192 83.9868 188.802 84.4702 188.802 cv
84.9536 188.802 85.3452 189.192 85.3452 189.677 cv
cp
.8 .52549 .133333 rgb
f
100.83 189.655 mo
100.83 190.321 100.29 190.862 99.6226 190.862 cv
98.9546 190.862 98.4136 190.321 98.4136 189.655 cv
98.4136 188.987 98.9546 188.446 99.6226 188.446 cv
100.29 188.446 100.83 188.987 100.83 189.655 cv
cp
.439216 .235294 .0745098 rgb
f
100.429 189.593 mo
100.429 190.075 100.038 190.468 99.5542 190.468 cv
99.0708 190.468 98.6792 190.075 98.6792 189.593 cv
98.6792 189.108 99.0708 188.718 99.5542 188.718 cv
100.038 188.718 100.429 189.108 100.429 189.593 cv
cp
.8 .52549 .133333 rgb
f
12.48 206.393 mo
1.18945 206.759 li
.999512 201.013 li
12.2891 200.646 li
12.48 206.393 li
cp
.498039 .513726 .54902 rgb
f
12.48 206.393 mo
1.18994 206.769 li
1.0957 203.823 li
12.3848 203.447 li
12.48 206.393 li
cp
.4 .407843 .439216 rgb
f
.847656 200.024 mo
.354004 200.101 -.0166016 200.534 .000488281 201.046 cv
.189941 206.792 li
.19873 207.058 .312988 207.308 .505859 207.489 cv
.699707 207.671 .95752 207.767 1.22217 207.759 cv
12.5132 207.393 li
12.5527 207.393 12.5923 207.387 12.6309 207.381 cv
12.8516 207.348 13.0557 207.24 13.2104 207.078 cv
13.3911 206.883 13.4888 206.625 13.48 206.359 cv
13.2891 200.613 li
13.2705 200.061 12.8081 199.629 12.2563 199.646 cv
.966797 200.013 li
.92627 200.015 .886719 200.019 .847656 200.024 cv
.847656 200.024 li
cp
.999512 201.013 mo
12.2891 200.646 li
12.48 206.393 li
1.18945 206.759 li
.999512 201.013 li
.999512 201.013 li
cp
.227451 .231373 .25098 rgb
f
12.5376 208.143 mo
17.2852 207.984 li
16.979 198.74 li
12.231 198.896 li
12.5376 208.143 li
cp
.498039 .513726 .54902 rgb
f
12.2935 200.771 mo
17.041 200.615 li
16.979 198.74 li
12.231 198.896 li
12.2935 200.771 li
cp
.627451 .643137 .690196 rgb
f
12.5376 208.143 mo
17.2852 207.984 li
17.2002 205.404 li
12.4526 205.561 li
12.5376 208.143 li
cp
.4 .407843 .439216 rgb
f
12.0791 197.91 mo
11.585 197.984 11.2148 198.42 11.2319 198.932 cv
11.5381 208.176 li
11.5469 208.441 11.6606 208.691 11.8545 208.873 cv
12.0479 209.055 12.3057 209.15 12.5708 209.143 cv
17.3184 208.984 li
17.3584 208.982 17.3979 208.98 17.4375 208.975 cv
17.9316 208.898 18.3018 208.463 18.2847 207.951 cv
17.978 198.707 li
17.9692 198.441 17.856 198.191 17.6621 198.01 cv
17.4683 197.828 17.2109 197.73 16.9458 197.74 cv
12.1982 197.898 li
12.1577 197.898 12.1182 197.902 12.0791 197.91 cv
12.0791 197.91 li
cp
12.231 198.896 mo
16.979 198.74 li
17.2852 207.984 li
12.5376 208.143 li
12.231 198.896 li
12.231 198.896 li
cp
.227451 .231373 .25098 rgb
f
26.1006 189.51 mo
20.9712 190.992 16.9946 195.449 16.4116 201.088 cv
15.6445 208.504 21.0352 215.139 28.4497 215.904 cv
33.1724 216.395 37.5693 214.381 40.3447 210.945 cv
36.2729 202.863 32.8564 195.446 26.1006 189.51 cv
cp
.878431 .701961 .133333 rgb
f
29.0698 207.922 mo
23.1592 207.311 18.5518 202.969 17.3062 197.479 cv
17.1333 197.912 16.9795 198.357 16.8511 198.814 cv
16.8384 198.91 16.8179 199.002 16.8076 199.1 cv
16.041 206.518 21.4316 213.152 28.8462 213.918 cv
32.9014 214.338 37.3501 211.991 40.106 209.405 cv
39.731 207.697 39.2021 206.303 37.981 205.113 cv
35.106 207.863 31.3398 208.158 29.0698 207.922 cv
cp
.8 .52549 .133333 rgb
f
29.8516 216.477 mo
29.3691 216.477 28.8848 216.453 28.3979 216.402 cv
24.6792 216.018 21.3325 214.209 18.9746 211.305 cv
16.6162 208.402 15.5293 204.756 15.9141 201.035 cv
16.5039 195.336 20.4478 190.623 25.9619 189.029 cv
26.2285 188.953 26.5044 189.105 26.5811 189.371 cv
26.6577 189.635 26.5049 189.912 26.2393 189.99 cv
21.1187 191.469 17.4565 195.846 16.9092 201.139 cv
16.5518 204.594 17.561 207.98 19.7505 210.676 cv
21.9404 213.371 25.0479 215.051 28.501 215.408 cv
32.895 215.863 37.1724 214.076 39.9556 210.631 cv
40.1294 210.416 40.4448 210.383 40.6587 210.557 cv
40.8735 210.729 40.9072 211.045 40.7339 211.26 cv
38.0449 214.588 34.0566 216.477 29.8516 216.477 cv
cp
.439216 .235294 .0745098 rgb
f
9.60693 200.831 mo
8.95215 200.859 8.45166 201.608 8.48975 202.505 cv
8.52783 203.402 9.09033 204.106 9.74561 204.078 cv
10.4004 204.051 10.9009 203.301 10.8628 202.404 cv
10.8247 201.508 10.2622 200.804 9.60693 200.831 cv
cp
6.39111 200.969 mo
5.73633 200.996 5.23584 201.746 5.27393 202.643 cv
5.31201 203.539 5.87451 204.243 6.52979 204.215 cv
7.18457 204.188 7.68506 203.438 7.64697 202.541 cv
7.60889 201.645 7.04639 200.94 6.39111 200.969 cv
cp
4.43115 202.679 mo
4.46924 203.575 3.96875 204.324 3.31396 204.353 cv
2.65869 204.38 2.09619 203.676 2.05811 202.779 cv
2.02002 201.883 2.52051 201.133 3.17529 201.105 cv
3.83057 201.077 4.39307 201.781 4.43115 202.679 cv
cp
.627451 .643137 .690196 rgb
f
9.60693 201.831 mo
8.95215 201.859 8.45166 202.608 8.48975 203.505 cv
8.52783 204.402 9.09033 205.106 9.74561 205.078 cv
10.4004 205.051 10.9009 204.301 10.8628 203.404 cv
10.8247 202.508 10.2622 201.804 9.60693 201.831 cv
cp
6.39111 201.969 mo
5.73633 201.996 5.23584 202.746 5.27393 203.643 cv
5.31201 204.539 5.87451 205.243 6.52979 205.215 cv
7.18457 205.188 7.68506 204.438 7.64697 203.541 cv
7.60889 202.645 7.04639 201.94 6.39111 201.969 cv
cp
4.43115 203.679 mo
4.46924 204.575 3.96875 205.324 3.31396 205.353 cv
2.65869 205.38 2.09619 204.676 2.05811 203.779 cv
2.02002 202.883 2.52051 202.133 3.17529 202.105 cv
3.83057 202.077 4.39307 202.781 4.43115 203.679 cv
cp
.227451 .231373 .25098 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.2
%%For: (Daniel) ()
%%Title: (SubmarineYellow.eps)
%%CreationDate: 5/2/2015 11:37 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Blb4`Q7i)@&c*%5iWsnf+hD]nbc:BTNPOiQD0ZH2h;`j[-PR*u8JkC!/sgb9^]$CZjN4O(5Sc9lTSk+R5ba@*bK7(SH1J;f
%VIrubPKih"o^#q7*f34ENhe-ob*JeInaaY3TD`?m_tp*Qe(@8Ci(dF971J-o[u[pK/:M5\G'rt&]tO@Cr9SZVEA9O:4ZgFRo4[j`
%C-29(oc?;"NW.9#o^qL:dI_O'r%i_5noab?\N*qKcd"bX/k9MY:n`2&?iJd`Hj_F>f2QYFI/OY7?EZ"8Tik2NhYu1=?VT!>67H34
%s4@"GMi0GlI/`_`qqkc=XcorJX8;Mce*;='\N/D2A^EHI5)0Y=oC]`Ge`ioWjs]'i0/('W@28h"kdsVmE^AS<n/t"u_3]KrW_hWW
%,D#mSD=(F">)q*']B=SAr>_FQh$p4ukn61GqutJo!1&"-NPlG,EW,FVl0<:`P:(K1L:JdNI-#:!dAL3/1c/&K2&<J/UJdMB.LUR?
%GK/lQs)YOGjj0^:XB-e8F.U@mq;pqeD_PD$1a=.h(]SGs\j$/KG&mu-AZ2\R'Ca9"anc^_(Vd[H?."l`]qbW'NZV?cn(3mkQ"R!r
%3<"CK<JCJ>gT-C=<kkf"g&sY$]2.b[O(Ws?L*#Tb)Teure+eb4L/=>]c]Nt8&p5sR^/h<:/+?OPOado6pYGZ-rFYri,?_mJWmWS<
%IW`@bM54kIW,ho80?.#_>PhcF/9Lj]EkV.J(\5i;RtSk@nMf@cZPVA[g"AlcK+!&g>sg,mnk[Tgo;D*fI0N\VIH&OK_4,Ahi!Z#+
%<rDO-\*gTfc1e,;nDRI3B31_>hS)'uq;V"fak>GAkf<;F1#+ecmd:%UO+I3ns)rP_iOALBpqq9gKt%!Ul`8:lHG%sZqVm8+TUY-1
%Oo#j,:2f+[48djrqli&2:W*TFl!OF`X?JdQDiande]$hE[uY/L=/YQP@f+LEl.N!-BXKu@rTEJD;kHR-J%F@:c:@MXImR?-kj.Wt
%qL%u-jlW21O/l1tL0'jo_A?9-XM(2*[.FZZPJ0HZjA3DUL?,+9O'5h<!*6_gSm6s&-enBn3.k;epT5%&Nk"u`<<)gHO)N?>2]!Q'
%j_7;2h6Wq3XP<3PY0#j.(EZ+2St2F,R_QDEJ/^[h[MS8Y7]V)_\F8h8K>Pl=&".<1:Cc@rZdn=)k5G,@dtc1ff2M[kT>0-^4!1ok
%qn8roR&6nLWNSOgJ(q&"4.k1)g)`BcL]-%@$W;%69J\d6X$t&-IXSK8r9Y,!,qqAbnF2-CnqC1oq$-VBb0Q-/Y35F"ihkK&QESS8
%-QA-nIg3X$522Z=*IltZhh'Wd__X=\;**FYo]5+ls*FL8(gC4u9%0iH-r?Z=$!XH6d]9qjQ2@qm\eOc<1rZbt=/E&-ck5p6ZStfZ
%+o^N`Mj^!d=Zr7uVR-)'c-*Yc:Zh.e^0&I1>%kG4U4R0lR*[]pbi)_X$b57q_c8;u?1dmQ$i!pY/R4&1O.V_[RH4C25BH9N^!]PB
%od]fljt6g"8\jre\%lW0Q>eG>G>>noBGXuRqK4Blq5U@u(+o\j\L:h!JH)leMCo4%J?)cdo-I[EU&18&Vt<'EX/;qlbJHg/<T<]B
%`E^<Wk`U#o\r(bf>LMUO31maR.:!T(H+YVo"2#%Jj\4!.#2t%8Q\8#I<D8`u/Z*U`e`h0:TrWpKRTd5F'Lr+PdB)>upauIQhkcbE
%s"0mC_Imq;"a*P4eg^P^UDg&hrsEMCVa+D6EiS&!:F5q=WL,6q<A@Y7mplV3_;>Rs5FL#bMZ1)KP(*)B^os14qCV3G?G(Xd6b.a)
%.K.h?7DG]PkuZ99X:+s.QLMM:6(cSD9u"+ln68r)P*LW++EdIo!0Whh<6nu<Ap.X!CMa6i`o=;O?qDdtCdB>WJAIhpn&3!d9kB9g
%n>hO*$@W?b2$,cjar*nBXIPMT=dQQRn6;3iPbfiu=d0($dTfRVasO^J[C4e&r)$Y]65Mmp8/*j;;3c`%W2tU9Pu^K`-0,\q&'/<3
%-ZHm?QLJQj8e%,M;AKm=!C*WmV%GKPf@"#)CVFbh,`S.h7CD4"Om817$&i%n<A80R7LlA_`_X/8WsTb.*'5.R.?#=.+5Ui/K$M4-
%i<["L`!&"W89bdd_<U+i)FG>elm-bn#T-.C8mHU#N^,udQ?A#n^sOtqRYjS`O!fr9Np0M=J6CDVY*R'BDM3"03&ib'b:pM+(uL1M
%Z#T9k&oVe8X9oeS2p/Xp@%:T<J:W:^LQTRu1q8(L!#qTM->47T1>""F.(DZ2lj&jK'Wt"n!sTR#@tDmU.cBUjj(FX%&oo/V5',^@
%(%;t!-HJ:2Yh3aL%4/)\>gKoX@7AUjU_O/oC!*IcelTP\Pr7UP6u*(Zc4"="JdKl47M`3dVS"NRoIeKq:2(22=oj4f$g.i+$I"V6
%MYFJATc$-WQUp3p$TJAKOHQHf=%`&)ceYP;G[$n[Uh^-Ti("d?j@fPPTFlsVd$R2.2!Xj7d't`e3F+GNh"UsjJZEh_!-;Q4,%<np
%U.`l[kn9!A`qej`QgIoj._4W#CY)@_W<2@]-80RJM]LE^o>35P62tQ!CV&Ppm'u?QJf<[]C<'n0>c-h=)Ts.fhJoM8Q_OT.-N'o`
%FU`PI55_M!#iYP15S_+>"O3YB>"(&PJ9m>je3qP[TPC:i"]@ANEVr\Pfh5EP\/HjV7EG;&`1?&+V-qP5F-18aX<Q_8,tSN'ncQ$$
%X><fak+oX@U!'rJ,k4=*JJZ/61pB"kP"$,EU,,oZaAnQ`FFn%i!bR<S.*jB+D88De2pY$g=b&hn'-I^B(eI+i>htJaW.7fs:^<"8
%,8n'XGm]``YZ&>hO^4;!F&De.\=/LASrmgnfl*3B$92-9]<S>HAOrCo,bl\3Y@\oh;"\'+5mcI[2uoC("@KI+FbU2P5euu'Ums%%
%,n[#i5m;_9YuB"K$T^i_>S;N_=$^tH&SBS<V[.A.B!MoQ\-Omh_X(8ZF&P;=1hU^G?k1&$\_3F,R?DHRG_Y#O\Ck#>RF,GDC-NrY
%J_c9@0Gc([_pm!5c[Z@t?\OW_EHbp\7N?!S+7Dc<lX^oG2p+%;n19O##ik2>[ItjAncd+/,qo]-E_-;bQ(SsrR)g3<a=1egF3le2
%^gmS0\cV9-,ho)'lXL-^DD>A4ne.TY/!,7Z<?"b(.[\ipl/?$8ba6,r"PY7LaA17PCXDdQA=7sB5dQn]32iEBbN.+1;TU6&-0U5f
%Don>%/$PXekjOHehC30P'@M)?dX8)%.8CO[+@LXV!MfXP(K.(P%<r2G1Jm3bZ"Gc9=@l5mgTm,Hd\Vfo;47l%Y,L/.8@t@RAiCmX
%Xs1"#d-PMqlt!!HTl)f!h6&*\cE[r<oK&E)FgIamJPHGT!&Xl?2*00EF+)=\\su/o%ZEBs(M8,e&[Pd425?Gu#.s#U'MIG^--8kd
%MiqC,Z++1UkI<3ZE\KX4OuBi6/]j?BAI$?Z__T'uGm00)#.]4BR=@1R#*/Gn5EB-GBY;7W??W)[p[;(KCW6<(U&]c7PjC30.l[kb
%_s=\2%"J4g3r,gYn(2Yg>-k7SDZdGt\!Ze!R#/[UL7fJC&MK;%'(hF0r!oG-(>:X_kq8\:`6U<Xkq8\:<.Jb;dp5?TYiTYRe+KHW
%0+27YbjLnt3tC@@K+etpG^+3pp+JF6XLGRY.0F^Fn<qW:glHO3bkYGhKhe1Md(c.E8\-$)IhW2]9u7Mr6Ol1FK%#nPX@RlQb=O"/
%$p0p?FKp&6\Y@^`E"4@"(@88Gc7@-UBn>X1Z@"Z^6Htj<M7Lq$A":jRC*\i[44BL3M`AF(q/WVsdRk<%?U-$U-sl&f0"WK9iqi!&
%Ml")[;E%jlGsRF88U9]7DR_qq6]Lf.X1J#)].U$:^73ns:%PEb7^^aq2D7V3_=d^+3!+%!cP'9U\_oK#ish#1[*8cp-&>?IdPH*[
%U1#f:Sl%9#Yfo1D;RWI0FI_TGf92D(1*D)l342Je+]5OKk>XQV;UfM`9NW<WbE*-k2Eq5&d,lf5;adC,ROYFrF8(ecm=*[N7)'Q0
%3`5M$ccAicn!oc-o>3LNfN$pq8TrKPE]2l,Vfk*9e17>4U?9C[4Td4/6T,\CoJ\h$U'dQG@N\fR85tD26BN`<d@oP!2ToRSrqUgI
%]XpON)[h,^h_isC*q%5MU6\3,ig>O[L)@5f'NoJ\fktkk:t0$L)7%C!=^qV<@WSumSF$K'(Kb8&>?ku]c.IsBm&Z@%/.qgB1UaBb
%`2\\Q'aVh7VFiG?`1C^I;jf4+hUe4pYNYB$j:<'C)t&+4c4auF0@os8(Vq%pP<[Xo^K'cQ0*JWo_a]JA[LAb[K"^&Z8_(2l%$@>0
%nk2."-4"bMLpZtkRpZK_15WQ\W11DhEWKoS&q,].2g6QF\=gLAj)BSjT,`ak29Nu"k)Gb`Pgu]n`9+'hI*SrOjqKUPe"B/J@W`m)
%;jSK3>>XD+>s<`#IUX"p%dG915PA?LL>O3L<[>D:e5,%9U++T1<!#,2LeOMP?4FG?JOuWQiIW!>P3^YsQ5\>a?kGY`f-talX+@mI
%a8#',7C9&(G']o7)]pr`IP_KLC^t\G+>j.>`Lg.ZTY"IbD^tUDqO8s`Y26(6]jGVTNd\O3T[!dB5$-`r!`*h0MS4&uJf72oRW<e)
%`Y\an]6A8mV2OY\N8MVO,pNCP(8,2k!72"F$mN)9&HuaG<qH>'CZ+Fcl]jSF_"S+%0]A<ue-F%),k7]KN!]%m71m':`T0_Pf`DYP
%q=i9,m!\bP@XCc=lD"sZr;"F/-Y.g]&Pd@PO9r'Ie-l0p\bq+?4t,:S\OU@aC:B*gUR[]jHlCOQoZXl0[H;.G7:G24!Tf\2HI5ZP
%OpTZVbFW09C,\a=(I(Ed>I$gQ8`b+-pR3>r0Ob`W?b#kna6FD[mTggIijeuPj8:<:(CgJ]BE6$8!(%$C\nt$,G)#mQNHb;+333.:
%XsNR!`Ae!U8[,FZ%'6?577R7U\=1bETAj4&[fC;.LUAGu's9*4/bh!#2tBZNp\,/T[Ss/qib$jW3?bgnG@!p.i*:<_\6+lO'\+1A
%cD*e!JuZbO1NPAeU-fV6HMN.53gLaHhPK8'3X%spn]$_44#Vp&c!=;).8)XaNaf[KM[DnjDS]aA6'6R@j"d!GhS>V,"-9AhkR7k_
%(D63dJr3hucH)I[pQ'Lu3>YL`'PA@>Td`n]1+[A>$M'$8r.>?4#a6DX5c8s>o;NTjN5!<]T4l<^B*4,m_0\<kLECfMTuK*>2%$Wh
%SFb(;s.TU7_@]753Jt<W7i$aSO!k4r`4Q&>o8d1,m.f&roU>tiK*FNf!E&pB4j>u*o/P&p!u_Bf0UhGodY-cZJp<"S@]3\KB#kp)
%:)kWH1OD]/^8,m872$QjZs1MR<bkm@\.07p42dsiJ_Qn=6`FX)dSVXA8ID0`.2Uf0nZI[c1\*'&=ir@q1!X&$g(fn@N+0Ep%L@d\
%g(bp;G?e;C*GUQ%G"(iR1&dT=Zh?hmd-b\9hegtQMdU-UIs.M/'#[2tOIZX"D%biDL8/KISlPt5c<5/DNiREtqtM%Ji"/+W"H+m$
%7N&Z#]O`IraP!X83<S]Hg!5cfZ><:Yg6B6=cJ%m".%T@lf]r'O+'F'.J\C`C7FTlnoN%Wo".^`ofI5"s-kWOHB+KU\B:I7PKb5IS
%1Q9i=A#+^1BJVJK^e)AD/f;,T%G2\>07&OR3[>);NUpVF3-Q17D+t>5=V3EqFLi7AKk(Y<)0]4>f!6R5%dgfYd$/UWfME*2&L6&3
%,\p(/<mi-;n)t>`3pH8Cgta1TFOKCe\@Y62FMpqH^th-TTZ;6P"KqJ)A/<H8^loL!<G+.JW/G&!;+jF&$%\u;LIF'5>DW:5),(mM
%;,dV$c+)+TMM*G^F:kAW<=;b^YWk*AW.re1F4:=*Po7Nf/`eG!6kLi95TC(O,JnJ-1=.a]dM$Xb42@VH4Q8d*`@V2a&T&-t:^00G
%bKhhaG?"YPl/7Xa=nXj$E^lW%Jjf_CW3W7l0)S/Hn96mI*!nS+d)_l2!"&eh3@L\77o7B](a7!DFaQRb%9PGiQh7ncAZZ5e0$-4M
%bu-Ab&b[C;(G8..^Ebb%:/&q_!(!?!\HoGb&^3naL;&`FBFd4$>S282`[8^$h=7ZHhDmN`G@0eMal>f1cArNZC-+ecGAq*<MqgTa
%j"q:5#L^47!pQ`gL2;\]qA$FaJE_YRBeDs"!%rFGEQR.u)2!i=O902S`#L#;(o'D$_,=\F_E+49.U8'TiI5EMCj6d8r^FfU\mL%4
%=2>$Z^El1X9/;G`X^+Z`Mu0R.SFPNU8a<Ht0Q;t`+VYpJ2Z]>5A.6`#3hMUe1_!i[.BiP=ZK<a<e!eiNXaR-F"W4d<'+AAd/Dq<Y
%D0)B@.1J*DNIsH21?h&D7jF)G3\'_YK?GcKj/D5V]Gss3Y&?-#-3V2f*C?FXW5UWJSDH>:BB8KJd/#O$7b6Wc67IrU0dBM89s1FX
%TZIPC=PA#(,UXu=<4%(H,_r4(W:Gn_b#K"^Zl+DL"-Xj<]nh@G%K(NA<)jMnW;uI\Z(p,/XC!ZSJ'(UedXh1-XrJgl*,m">?/eu8
%(f-!`)B)Zpi;*r+>R,95Kk1U&p)K7Rq*@^BG+3j!\Ha`glosk@.gN#qNI^*nDYsLM`J=sHQ14m*M\-m0C[scAM\-mp%]BU4/k0X_
%d-lSe(F*bdjbpjg`<9Z*AY<=ENcggtM#k'6csk$^HBm/pZA[3VW6t0926K!P-J:7n>dJZPctT(WMoM$-j;[f>hEC]9<AsiTm*aQe
%2D12!2I<1!=,j9+Y)0b'=RdTZN]2>cE93<m7/b4&;47[Pp`f>G^<1k%_9#r:2YsjAGI%O<cP)Y=LQpgkpTSZC<-I]I._s4TUc6SN
%,B6"A;A"HA*bqk2WT`/qa;$rE+]O%Zk;2R9,_a4L).c'oGQ>;u)<oq9*elkT(u(RScO3X-SEhmj+*@R[HW[k'G<8<j"/iIeP.1q2
%,XL=L!I',8V^1*9ThdfMKUe7Ni6<LW%_^>kaP9`E_$B=I2EAFCM%1caK&I_:PJdba%=Fr8apFp#m[7lA98bS/9qhu!/H+-l([1N8
%hF6'l3=/0g2s\.cmnJ-_m_SI`Kaj1[S+fVZhja@7"$`7K1BqHDJcG9EDaWjuq0*_N?LP,*D9A@@M,@%c7W6_%CXJRA@*FDQOJS5B
%Lblk.VCbROdM89@<Kk.)Bgagu#>)6uJ@I"@DWW2RgjJ)i=/8(12"R$[08=/:A;X5(P4uao&ZG#-._O)gnGb;A[4"/S,[t:Ho_"9*
%A(pH%YGV$>r.]!1h$#[52Vme:El7!+\j1u>FlTK>]PQ1'29'j;H%jf@J>d(E7q<&k(oeIM#B5A%6oCar$CpE#c..kK]"s9^U2bgN
%&#^?UV^7_P\B0W_'"1qoSR8h6>"-)7'.^&FbuX6!<eQ6M)h_>F(6!Rh!CL]A3?8,4o+iIc_]^!:!bd>YcP+mJB8h!\n3^-#ZOWJI
%Yh`M?h1h+>bJq!7,f_9\1/52O:;U&RF<dSiTTm!1.jK"M$9G#L?S=h(rV6n"[\N.WJ-S'&c7H5RRQW5uan*uSA+C6!ZG/L2]+BJ!
%^RE5kDgdc8"Z%1$Y@rE^(7;SI]G9Sr0Y`0T'&Y;DAH@6YYXKl@LaDg/)[K5(,7uZ`rr3#]A&hB0h]BTO[6qD0`GJFkRXiiolC]F_
%WcU;?dchIm$)_8mIDZWaeI_/V&n&J9AhkU'`fbm)(g]Zpk-;hf#@(d$<QhR@M3hK!b"L<gGKJTah'B[dS;/#,B`QcM&HTJn\d1L]
%YLZJTkM?N$]0#6Mo#9F8\@[B2SFY^k5ht0]2bs1R,OFP_L7tT)!(WS8#dn.-LXX+Z8sh^abWJH&j$9Cug%ME`0If'O\I:dsG$$m3
%el?ddC29#J)I<pTFpH%GmAY!+RN#3X7g;64[A!apT`%@7>O[Y5b>>6"H!2J72"[e-0B`lfB[A&<!M5Wq]8rHLX%ojSpP:*O&85t)
%+$s'$LYU<&6;W1n6ke#9q;!)(mg\fY&FTc/J1T%\h'RO\a?o]_nP@Y7E?;@%3'.j@G\W[1A3MuVfGSdl9RmJ#-AXiBm?'^"6.d6A
%+>OjW66Y`i*1nD<%L+QY'h!M9o:;D,FRB)@+bCN5A8bQDDQQ$%f!R<7Ytlm,"C<1ZbN!fu6j0L/mdE&XLj>Ag%adBN,'Ya=(&d5W
%Ef21HQA8C,?]9o)Ae?)AngqiqP:!R:ZD=%A-,j:YLE_3.,.(;.5p#;t7"?Q%6#$Ij9o,F8.TJ1L(&8j_AOYOqRQ)Kl%fDGueV\li
%%[q&;mY]l=Bn3kA3"iYbSkJTn)$$miXgh^O!3sh-k[X%r_-mLAPN^daX<72K6qCgDm!/T5O8X>PXU9R:QSu_Xkb1bGMIdE;1aH3j
%4Hd);3l$=9mjuI6TgfjSS:c30Sk>)D*!M>K8K/iuc9F=!n7:#!.lk.-9W'VA2=0sW^Q)/e[l8g]GCeqg6&cWJ>:-NuVb1)sZ[Xup
%:SjRA!#O>&BBpW"BUo/?$f\k@EKS^FM-cLd9cZL1$N+qdYiq5Nd;7u"021c'=TCW9ZBq>?ZNq>,\'l]7d`bO"ZHe";<Wm6/0sjf>
%ln&O8>Z"0/V=i8&NG188"E_"]bFg/69Fq:idNKb^"br^n3haK>1CqH#Yn5U6fa!43OcB=4cmhXaoq9Y]7M%[)ZjM#i5:j1!i^Z/*
%<Jdnp_GIo;C;uo_G3/7p/@G^>QAt*0*Z8bmj=ZQWB@;rOJ3G=3N7[1=]NKD8,CrFN&8I^lU57&2UWor(5+0GD.:<<:`n4lEq7Jm/
%<uuZ`]Ka3dg'P5L&o:"PA!0U5-.K8[G:AA`4m%GqB)tE3T]hY2T1qYH6C2<1"rs'A127U<bp-/1,1-[UdXah[OD#,Z2RrjB`pcod
%ORm#`Tf2CRZskL[eq`S2_bh-\+sGEu`-l]^:BUHa#&n;tB]%:LVe8f977c[P#W+LME)iV_Nb!LZnJ'u^_9`#<nNi2\To%fGf\COc
%c'k"SmPnAqko?S::ulRua=nNV2_HP'TJn<Jk0Z3XF.Dbqa!nVqS[%GZ1@++OO3Z-f\WnJOi1)c_`i'/I%%YkumrFp$UXTnn.%$f<
%TSa;\F#aZ,_%\aMB9G2?);C^4$'?EnZI-P-hEXjC6mtWsThr)flZN`e,k0qA53FI\(&alu&#P0?TfZ*B07V!<nQ#Ke,ZlpRl:MEk
%H=Dm+(L\C*!*unrE?9_*F)jj`,T8PVX_MlXRVZ=]mqCfN*AOb!hnPWK=foQB)4*iOJG*6^:do,X8&3H&C!J_))&V[nXCkcQLH8)#
%s-(kijFT9[\iZ5=g!LuU\/lD%&am/X*M.PulmAI]A(FF\S]_"Yo@Z;J5YEF(XdVLm-"WL/$sp%rQ`&$dl%5n#1B[#fj8$?X$_"&`
%AjqoPK^1&2auSKe\XIS[c8Yp/"q!ibS^o[C5tPQNk7"e1aMq@]ITf;I^l43V1bp%u%EHX'<3W%#W<in;j$>5>c6H1q^/Gr&.5==[
%R8$*Mn(&Pkb@BH2BlP5=8HFWQ3AZ"A5*K8E2VFpkA3sfTM[[lJYOm0<g,*rm5l\Ja-?mQgo,oZl4GZ$$r-ZT3#Q<e\f#91r54hqE
%g@(?(1@\d<*seZ=+RSF>F!1=@@%PkY'#H&<RtJC:]IS[CFb>CZiBdiYM"YCJJ<U=LXV.j:(MIJ0C^B0r'06h>,DQbOJqnCA&Bo]L
%R<:iP_Mi%;U*3Uum1Wsj%TG?rg*#-q(Xsc#rs$]53#"D+5ZJ=k>91p;a5^HsCs=tmQ`[@*"L_kT.N2,C(RdA[+u,X9Q=abdV']+p
%H99@"e3HaQdm[b2=Yrp<+9Xd<VjWCQb=G@Pe8@VgI`VkOA(`\>A&cJqZ5u9(9f-T!NF*J_'s74Ep:H)H8U-0siOlbl]m%Eg!dX/u
%p[5olqPidg'fVm]Y$i*Qg!HK/Do,'&4GkhQ5j6h[Uj(fm)#Y%eAS$.m9_`Lo+_r"$+?hS^aG,E$lSQ@_7"okjLe!2qH1VjQ+4<oP
%!L/Zlc):\Q?kO)aptU+a/>E;%P):#.=I`KM6H+cqR;B'uOK[CF&gp.>L_)Uj)FTCV$CAgWH7Jk_CD3XSNdG/;^<3ER,UdQZ`am;;
%GV!JFk+`DWff:j^>VJ#I+PjCocNPJW-Z3hM>In_,o[^r>!O]^8Ndarg%S>8iC\9$Q%;%Fc`7=#=]+C)dQ/$dq_?nDuY=l@hd"S=*
%bGBR+lraH4]9PbX)Ml2Rcb%2J9Oo$YcIW.%DK[4V[KB1cH:Mu`/eE[5+j?P_qPTmm]*UKpZ;Y-tfH4]6jt4h)'i0GgkJ;ha;))i#
%kDKZbXWnM[7NBF_RE7LA!kaQ34rFS7kg2*J+Y;VAM-J\6&1(7.!!r9E1)OC6Q8i2,b3LrqT@2MAR6mWI`I95[IOW/9g]jWoK."nu
%I^$^'T@Yn*K.2_*T1-j(#ogUdi)t-)8;*)>D49MuF78TSmn5J'f5husj&3Dlh,SY+.G$<j;2ngUBc\Xo`Q?K\L].I<f9ATk;t`)n
%g%XV.?TR)/o2G2Z7H3'bm+kS#bKBciK"4\LTgc_a#emU_K18&/3<c#;]Ig/GP>3\+l4!=jq^,umEB\>(E#kT3YWFM!971CT$q*oq
%7jkqi!(7HIc&fUX_i)qLD1_!(+L^HDYmSXnj>5suR0>Q_pdUSTJRBC("/ZrWcu`?G/XW0'i)MnbQNNQj]N*1=P:4QpU(LD<M$m1$
%*[X/sQNV1Z)e+$:RPIH**Rdjnh@u\%1?_"^:,R'Ld?I*;ZP8ZeZ?$p_7D\sA8!1ee;i[7P=j<oC-jla$(ncTQOHcB;%[gm#c9F1a
%I[1*lSJ&,g^geo_8mP109b=7\E^-B<ARJNd9%$+Q26Dm-4.cqRK/?6H6&N5D]o;0tpJIio+p;K\8.D3[U\c%,e/'%0I7/"P%n$1Y
%UaA;ubkButP!1-o2`CSXD>Be.)k4:C;Lm,L-tN[XZnm-_&?JRBPrjUeh;P)/^kf6W+^bGR15:b!K1;D?UNYS:LQ*^Xg(c[6$m+dA
%+70CXFbc'a+Hd6E-776(A)rJfN$LnCNdPso?e`Y'2WD;;^8d=!Bd?3W*1K9Z,HJgl.nQi;oue/D]m8gfV\f)GCKZTG3sJib*itc$
%Q/"\,dlYE6X@lRFrg`>[W?`#Zed98tQMf!B/4uImfc@foSh"4Y)+f#g"a!;_9C)#DY1*Zf:r>diLDjRJg#Vu'WT=WgYK,',qQBe[
%Da+qIe757boq7Pc<Ba4elXF,Lg,rmRI?i;Kr0@nk_Rkp8d7g<m,UEm_rnp9NC,59F]30+gM6X-]16iAIR2`W0ZBBM6r3iJLMo%a*
%M)#-$!dg892Qd1[l/RZ^=:1OXfE5)rs07_s$UWd&`el9n-lQ#o!K-2qdMQ']:bC1,"fh'E[ZIP3/MtgVK3u'+X"'M@JbU%UJetF8
%Ws\%/^a-u^e,\c*8ndsujo0?4_@on*#GQRJllMp3`i-9#GBC?\LS,juFb)0#F]P5]30r:"pRu97*eRAgTHru@`:flTbocB@cfa/)
%B(lgK(TS.^?(Kthh<E[VJ;X:[h9kSTaY&i]E)10$F'#XB*2<lkM(MQ6RWE[Lg1\e$jFcf5HpNs)m?,aO:?1V)%R*F#6elD<j%a!J
%`d!-pIA#FK0lI(2RW&Hf4rV%mBie*Eh`*dIZ+8K=VsGuq@C/7e,rq5:`0reZZl*^q7\%&!9j+i[^h<WLQ9=:DUJCeFV`K`!q<69Y
%M*fIb$Z_poJpT9![46d?1-aI6Vfn-a47OaqGVr6BnlPF2H4Ep;Q+;F8P=K2eSIDt<c1RJ&,"Y!=_%m(*6V-#^mhCcWC?Fr;PU%3/
%1Tc)LbVJBm)B^C8L7Bg22"^%74[;@igdJKjD^`3Z&f<]Ch9>=:+nq/S'd.a6M5J0e*P`r;J`;-[C"S?Oi13tiQ\hRBaDPpQ+iB\1
%XhT6LZ+?$fk17(Wr;)lQ=V;+rrSdA'/K"R?fb#XSP]q(t11[C>m#7st79K.&0"3>6Ta!;r?h'^KhHdT!+DR=WEgJilgq+@#A_b9%
%8c6upri/&`amR?mY_5*.@_#_pkK=_`92X0s&Vg$CiGPP;Ukud62a[k"]mLF/?d/RQ*Weue?m,s0"W`.o*J7c]gI8XY@B+$W#A)Nd
%8PVtg]PO#Wn_(0o1.b7]!@Aia-f(<?Z1mdM:VV\5V^q1j43s#OR+aVhT1Ag)5bKp[e%%I`$Ji6S<S2i[4C^g!IP(^Th'(613o)%1
%4\C,8Yj-?rXS[no&*qRH%"!;CrTN'=3%/>S/[hW5m]pV,@gL'%+W>LU?g"CC%EN_?@gpOM-kchtkq'Y3K_F+6)06kd8s\;+8HLpF
%g!cE43ZE;9[cinL6pdA:RJghUVbYKl#@nO;m#GaWBM,%*<(_8T#MDRMD,REjH.s8PRo4)i\J4Ceo\68'8LI6AY0>#`?Y!To-0UL:
%-,uqhUK?&W(^?0Bce%%:X`[I,AO22/8BBN52o*e%?uhp6TqZ91Z9L.iDthL\C=KGJ5Q%fJs6UoZlF6*NpT*]Yd;N*]^TP#3CXfSl
%q\U6GK#Ts^ZDa;*f3"k(S,j)%5]*I`di-5X?4$1qd45Mm?L;'a[/DhmQliK:Ui@Vdh8n2+ns,2^>pE_,Lhl:CPD?,t9sa^t<Bb*6
%ap2_6K/W&HAGs")G4fj'14%88,D"A";$q(f&Fk6l*n8R;,R9;mKiG'kb+AsMha2":o_b'iAjZ?C*HKP&Mb/LQlG*leO@*H3KMO)[
%;hLnccfsf*+C=Z!n]fOqkgZcTEMM.GY#FESoa/71"K.k]g7-`1^\tY-//j_kg)8fQ_QJ12W&J4'#LmV<Pq4FZO@g/[Q$c899^u5>
%<.@*fUYfs[:T.(dkY=U>K[c'#Q\"%.0TSdIaiG,=*KZq]RgP"'FP))9#n4@+Aa+m-G9'7JH2do5JYBQUPqa;"9V40Ml*Pi-B,id'
%?cVfKphE+XjlE%0)rHKDFPRrFHKRf:V,p>S9kp2Q^Jk-dISM[")#YdSl61@IUFd(nr7;+3Dfnl&lWNrh)$dV.%t+">4iSJ7IcFWl
%g6%G=X?o+tCs/;0[LQE&ht"2`4P,>6Fb/]WI#blt0lp)"T'M-W28F9a[5G;YG8q?bA2<Dpknp`WV7E!Tnh,)t;2fdtU8"[*V.aqF
%^LXk6B'm*bH.b0;1E=NidS7cL7\V(S\uGm*blS/E<TM-%ct/1HfU;pkr$Agu>:e[,&ruck@5PN>Kdph/^>?^dT>#IB;gcnOeSD6`
%\/J1:(0M41rcN4.!(;RkUenj$e3.36<`;GE3tpW_j<<g:na9K)^"&AgqMNA%D?nm<T%AemT<s!MD8^qr^?T\&FZAVHn\E.S1/n+c
%8,k6J4TKpI5hHAS6r)"@c.)XYZ]H^e_]=%OIJsiAGF&G>1Jn\C,8q$S\aIU"&lJQjhaiX_<rl/_Fe81sj?Bht<cO]_THdf/nCZ)7
%/T2)r3<Ru<"7j)*XipeHT`&9OgLp\jb6%B&\_C#D&2c@*2rg/a2cF@$r5i63W@rZ@NgSu`7Wo!0^Jo7<`4l!/&R+mmdLV0)8TN(=
%CS"e$DDc7AnQ2/@K/[gK\ld&Zf>lq;rKV[RLsgn-(7>gdh,2OC:I1l=n;5pX*s.V+31bpW&WdEJr+@/n[j)h;RQ1sR7IDHBp*S'u
%=1Y4Kl$3!DS;r7g0'EfE=O=<(2')OeGjk8]m%).K5%\o\"X;OQY/:D`P%%_&DVAeaV-W,MP&\fRo'LP(nf4R\=].:OF24Z.,cA0n
%kK,TV_bU+e9s0^%;ce>B'.MVQ$Yi@`Vs-6=ad)"P8TV!Z#86mgA[p]T*I7XQ-W_4ORYDOQs5EYthsDhTmTm@;g:?6@,i-(Q>p/9I
%8!.n3H3+GaePRS4%R<iQ1f,=k.uMc:Ajid\VgQ8fptU`I?G"s?e[l,^$0-uE:8'pX.K5e0pbP8lFo%C9@n^-h4nSI*p<P<Z!E>#H
%%#llhZZN;P,tQspQ3qol0A]nb;K]HT"Q^'m5kl`)^MB@OciI^tUr)NilR'+1Qt7AK.A6"eHhUmJmf#S!gA`"0G0socCa-qZn>G%8
%rAF]l['>9M@!jr[$$V/Aq\b$Z-rS23jrp2Z,Ip!qRr?tn\rf=Z#<EMB:%kds9V\#6h1T&"l+Y8b^dg@R,"^#BQ>7p1Q^ZU[ARI-^
%]i<\a>Kk"QpI*%qm$dZ<2m[FHj^:l.8`NjJ)/aua*R^B7o2N*e#e*glV@'r6)^kh,W59nFK3?i9Oreri;`rRgI%69l"DD828D0Qc
%eTN8O@JYOT.Phu8O3DM(DbZFOq#$=uP!gRe@,n49:F5#0!_(9&4)pSnKr$Uq+pk3L%Ut7u;rY6M)$4G@^AfJ5^ZKA4-7Gdkld?0C
%k"aaXh;OKjJBam:m:cqMd?*?5=1`._;oJ;4C7#.bPZKFV-",H!/d5aV*1niFW557/Re_A_(4[`Z;OPU+-9447fmI9^hu5GEWF@el
%bcdcLgAGA^#P?LX'$b#%ib@J.F!8WW8PC/e8^Z4n'=0#&1jhp61iTA2R,NjBe$)EH7nS(N-sEqB..FBeVP\?$HTY;bq%UAqIF=^!
%\fS21B3hP@"5TgoX"EG-N/QK5bI<j9^`V;pV9&:\ZJ%?mT+0Y5-"2`HD6KuWagXqRDl6<QACe>oKGBoPPZ3AJE&WdDG'&Ca`rYTA
%g;<-NK-JuF44uk<:F1aO84'hVd!QTMja"iscBoog^(I-F$__Q-maILUDSK3NHLLfoiI4l%e(\a8iXD;/6.mMT;<H03&i&M#5SF5o
%$oB]c`3hFANS.$,nJK:?HFoU5E7(4[8;b6B0p@sBaGUXQV.e`e%"RHCqgB^!iuj3Cgu[;b2VH7o-9IHiZ(/X@+&)CEA04M=_.4W]
%p;(8]9_Q;5+&qdH4<%sCTS\4HT#tUD%m"CZdRaiNAIk:B)@:'-bq#BDdbN@*I70s%ffEs7Ci,mSnE[ThZYLMN%.d0u@ko#cAd`Np
%mF3/GkgHT(*m*I6LNabu\O\,Y=#N*h*_1Yt#B.n8q'&*&4NMGi*MqOb.s1VUGODY?PS31*S4_aSKFbd()8G1a'V7323H*!,=`ZJq
%7C2>]DRs`WXh*nIZAkCCYe#a7Rr2?GBm*XoP!uZB[sbo'3eP\:\UNS6LNgb.ZT:?4F#`>6c6h`/cd,\O".uk:NO]5YE6qOL>L4JZ
%"O#$P(S%r)$i8Y+7EEU&bUo3'#+BPYLOF'VSK&j6&^uh70BX"=pPj:g)=r_\D@pTWFWPSPDOH:IY-Y?=Vd\n,h;%u:2<p3]fb)%Z
%^]&K4p'+X9cG_B>dtAA)c.UqF0[JtaW?E5a<[JN#)k,-$lrQ1=/'Ht?k++=mmpr5Q+>;k#;e):P,b<rSF#)$ba:@>'/dC%^,sc^r
%OA;5E(6+acl4Ks`GTEMj*MRZOCAC-E$(^Qadda5(ZL9B:nq3<17'p.[0^2.naAEX.(qI_HcIq.)Q5IGqoO/$?MVQ"<XPo0l/8;6p
%_QZcA_eT.<)Dm*77#d(9/=rg!q/T`D]N/IRkLX\6S#(=ED,QZm'/P)lr0BOQjZM3"2;sfmbJcb;H06*<0n^A3GZ1#)0,iHEIW"jD
%,^tV'DeAFL]#Enh_"6uFA*ri4K-#4I*,?@J2>F]MKOaC5?"Q$U2=W3n[/E,th#OFG*P6=G6T<XB1%?<A"gjE)&sE/*-$^geFLe/^
%*0X__QNKqj1bm@q5SLhE,2<*AX$CPW(.EZ70JJ!'#NjbTA$,%Pfg(^)DBHYHmb$Y,^mU[l4(o)b%@h]G3cX-6I!FC'bD&sC[hhe\
%kqol,`6BM%ne&5@XXh1':WpkdicQO\a9$a"m_fZDHH\henms!*XtuEmlus0AgNDeEhfh)Qc6"1ads:3g1YdQs_3i9[B=%*l&Tm`H
%b[*:5',=5<4)*<E:Ql@]?,SQ%0gWTk7p:Qi8W'1^6/dl7oLTTFR4*>!KGhTM3#McIeXTNDdOnJ;$0P1YY#m+%S>(JPq=$pP-Oj3V
%m`2hu<G*a)@Zh#Kmke='#s&"_4%nuURtSp8k6@nQctj=/p\:a``j'E0?>&/bd&>Q)be4UM^WJc:CU!H2$Md<PU,L"lg/(iZpVjn]
%b`YP2W5g4k&^pG?NGeA6e!4[8+\[T(<g3jY+fE%&OGaXUKf41;J]U$)%ls;*;mO;fqiF`p5k"s4@"j=uWUl2OE13RhM!5F:VAW,h
%OX6Q3Un*n!B/#CQOE_sF4jd"gTu))u74\1%83aqg$0;IAg*nGU':dK,S6AK40[X+r'W5`lEGD$)PapjRhJ8c>TXF"XbYN<&c>s>!
%':6[[P$E.>i^Qt<>c*e@-ctfZ2/5mMOf-@c9U;q.?,f!$Qbg4f4D".XQuQuc%#Sb3Bf#T4c.J.:"4W-Pr0`7SRTq[XD;>h9:?D%A
%'LDn_GPNp\%IB&E@;t)2oE^%J;nLfY3U;tH$M-m2U&]=j;KGB3d5_=a0,@YG0!TFsmRS7?c[,#[4j%Z\UEmWbW]TX!=VVsfM*(C7
%"N3f"%P5"%Cur&YQNq$?g6W(j06.'M,W0rDO>C:4nO1P#iH'd>q/\&T@er(%B0HhW[,X\l_k<dEU!u$<dA@5gB\@p2\M;OsfqOJ2
%C8ScRUI=Ij"!62dTc9aHi(1)ZE0=eVW&s`M]PsC,K3ZCE/>JdXHf"g.5nAk`^m3lK[pEkEd*G,orn3$0dF%D_")uco\S@pg#Y-DU
%,KT02oMD0&,QNUC^kNU*2In"JLjI\X%`ni51l&US4A1u\C0q2b1;PB2FT@3Z*]TCOhp2!lW:[eo($00:N7i?28WSL]RS!nMr]L`@
%C'V0LPs/m]kUbECrTe_G;r1$K7=#uoeEg\4_Zr/?.d\PSn,X#h9)D0+j#cn</YXa'O$d8FBde0N<)=@uGTJ(eaZD.n$[7+'^50lA
%EaebT[5mb_.U;EeEqkl^;D/;]<qoBcs-5>,,:VCUcEIJ).o]#bY(rtC^7r8EP.(QS]+Tjh$cC8D@HYM3F(*_30^N$]FtO1b(P\Ig
%"!W"UW=Lg?d)80_^ONP?>@Ak!Qb[IQ\H<jmD*G`?0[=lEkH/!>]s[t&5+!:t!;$;SLC*8M+R]J"(-B0:SM`U$:?cQ\"`#;Y;dYpH
%hUe--SHhTMdYkt)Bhj\kph\7XV`b6Jg+OG9$;YiIb;9P(K@Td>BfU>!3n2c-ah7"6Q7po+d7;d-0m;^G,qk\\G-k[[2g`W74q6H)
%fAIH>4O;!aYW=T6Af+"mFj]YGQRqou6EhZ:OcYQ==ge?5AJ4crTtg4BdU`[bAjJ]U?^PUHLF?'aP^=dp!C/DfmXLEuZ:OS^Jg<-'
%&$fr&Wcjq#;`^h+k=IKB,a=ii'2D!dkI^N<BEI\Gak,l1)SrViXW,Q[iVsA7WZh(@&^@1#dJsBIXOD67)GS8?1l@>@/W$dhiM8=O
%!&."&=O*8>5lEtT_QV=XQ>E.59Abf9Am7J)CR'b,mk'"oa`;@%'\3t,<g2GV8GrX5!4@)jJU?M)UR<D)V]so5R[g;ipMS35r!].o
%dfl?`1oI["nl'WSFKTo/:3p8RG?3EWD5[9dSb*%+7nF@l&)o<EEI7i[0*-#$MY_cPlA7g7,j`jIAnr0T8.g=3!Cn2?'OaE=,YF^s
%ErqJH*E6'^!m"mZ+D[NO7.;5FE8'Ij[8/Cff:H2'NNb-pSu8ftp=VkU1_sM0c'+&@a;C[t4!A)70XbWq`bOAuS8OO%YS\Nfk]hqp
%SsBtf'erNACU5^=9eb61-s>kt\5"I*%Nnp;R7f7*f>5O?*>#Lq:0`AhH_.ci/T`NENr^j"4EG3aE,6/ikh?TF8.]-[X0"Hf:pt,e
%F))=K'MMPl@'1WBQE;uTkkAN@.LG,nY[."(k\3`@Z;X+CRi:j:mbi'Pi,J,BE:2Y'mbj\.41IMQleUaB^^RAoO':s%'htT*1em`3
%+;G-\3(V"S.Lo?r:Sm'"8>:NqcM*HY[Sn[0!HUA2NX*euJ2nZ)`rkIK^`3lPirO6!`sPZRpsO^?#+?BB@de!i%u!%3c3m]:)Usn5
%2)=gic9TEVcoqupCI@tup>0G]U)[/B?sa9&lN6dVNbhWN+c"lM2P5]*%;""&>mt9h`KIQNR0:ZuB)ZNIfd>Z843\ig\jbBaTb7%Z
%G.jP@0gehPWmh/$/\V%DZPk]P9$sWj"=c:a\PE:OklK"Bo-boDf&U2&dLqcI#RRk_k@sSQJLXm6A-94lMn81_=nf#]BfK5Nahd7(
%F0O0)(lb_:Y]`>."MNcZ],%U/?qIRUadK[AXKA3iE@9@RkC=6u^=UUG$RbY2]2HAAZ<*XtV&:OA#Kq0XQBYUYD"FnKh")NMGJfX$
%1YEm!@5k,mf.sY$=BUQM7GMI;\??G2ZGk1.8DI9j7B%3L05#f@XK]q^]9qWc1EBek@C@%dGG74G://bDQti+!C*5da#ZE-SQaPjG
%A)ich<$#gFJ3;Z,.IUHXn%p:KF*2K-5"E'&YFpb.@>.*@0%jCDYZaU9T+qMW91jYF30.Q<q4Cq:ZtW#;XVpBq0o]4EC!MJo#n2gG
%RBM2?V@+d2]]YM]-N6D/HHi&Ri&_BA0RD3\\(CM(D+Gj4j1'O&n^WIOe;,AWB+?d-,2\=ubctrBZ0'G-+YU&1UF\_[,mI:QmQ+&s
%@.No0MG3TWEe%^fDDY%a3Mf9PK=o3T>I"@Z8N[6"^k#ZEUd<K'%C^1a`X^!:l-Li"/k1#5j3^;sZ'3*6HO;,07qRm"'u=j[j_VVZ
%CWM[J5G;A55:BO&_qh$l)4oloCpMg/L\&"B^l>MO>WsHo>6:21nBrL((BuUiJfpW`PQ2m6Uc*Kj#XA`MZUmnU$Ch$pg\DCulTo3I
%?Cuo)fD>)KP``WSI"p68M`!PKOH0bE'\bh>R-sO&qn-M\.9_i.:"*tVPhSdXD2q6bbCn(0<Uj)\a^mXV2eS"rPZU85ZW-?mUF1#Q
%G$0Trf(n1$VV)e`8T)jNggL=j2(W1ZB@TuB:T6<F[o8H*^:_V4di2a5rc7@Z[MD5iY%6fjP.u'e2rboko?MQ>pJBn/j*L=B^Un7M
%IiC!#2Fd%7C-"Ri3bWVt&YS'*:9khEp!Jn1pMc7;AaAZ*Rg.*"a">8@c47T'GNO,idj2m+._]^mn-m_pmaimjb5$/*%d+P2:2/^#
%^PaHdJ9K!]+:Z=TKk/P=DbhBUJS,F`<I!Zbfni=Er(*b`#.cFa@4XHY925%V'>r<f11`OQ&lb'2>bZ3Ql.&\Pe+Cc,]eI\O1$sY:
%q<jWi*Z:n2gFL_e.En=Yf\9\e]^2r5dm/9`o5sj<I>6>n?CPhmY"8Qa3T-`Z`(PH0oY^gsBYeLr_EJkXgN2blYLT,h&IiMB!rg9O
%K6r[+V@dU4,>4FK(_,e+(3B=miW$L]$iGnU#h,3(P&[c;1[?]bi+>X=2lugTaZG:f^%+7Al$\X:?B2h5@3926psS^R/.u_ZpE.nQ
%*?6Y:h6D<*cs]%r4e*PLKLpp6b[%$(irFTgaiJfa5*PC"C`NnF*XiUBYV8j,B<==g4.WS2mao\'Yf!5$UBWU4.bXer=)>[h6B*q%
%g[E/"mRXf_L\*K$YoPiGbM&\G<n2ns*J+Wc7?+9V5u#.3KP<?t1qQ47Y,p#b^>+(djKPXL`M,1AQYhHPo#FYYV'.4,=TZpDH:fcB
%`OcOiX*5:]4"aq^UeSFMAXn9X'pTpNDHR?A&D.%P5ij"E25UGP?'Q1HPY_gc*(t-[\jc33[;[I$i2*jQUBC7Vg:c!Y<D[$%$@5ob
%%FDM_@"2$&`kWnKRCZ0GO5bG:OuM9iD8/<mCbIa%pI@`Q7k4Jujbn%Ad:^UMpAO:IEdb\#oB>cf<`bXRm4\LD<hI-2T;'r;=Yqno
%&p2K_&7]9D3N>[o;,N<h4U,@Lf_?uK"2TE\ku[WYJ&CUPJ^RmpHM#JG^](h^S\2o3T74T%)qBC2b.-`a.kGHu0/)tTIaq:?Q#4.5
%pirhhH8fU)])<YIii,5^+CPO:[g,tH8gFc5JD+#MG%,r7KS9S9iW92_%1:VKV\N7,bAjXliKn/8U<9lJe^1a.N8R&4SAIEm)Pm*s
%TouXE:&OjgXu`QO?2BE+5i9qUltKAW3\9m#AVL+trp-c!lASLpjVZO]:^9.cXC75ARub=f,:eEN%O,6A9k`,2I[V@NltOs/gXTb?
%kb".MDmRaa[-%/1dmOYH5b"8-9rP=YWlKq1l^IY9=]m-I=]lV,lXj>C."nP51-(&U$:nLg]T0)?;i(JMX0+M<F%1:#S^6!62!sHW
%CI5AQpb]a[ZaFDGZ.2:8H+.fF^`:Icd&aSPZtul?Vqk%qrb:&kC=_'e=uL<uBtMF+(](%@;q.nT9p*/MN$>U%@#E1NQm-IGVKXSV
%_5<El2]5VXNZnX?8T(#W"Y2($:%6aT&d15tZ!GC\q_tuKPMP'QS!U1J\c,9GpO_eYM#<f4rg_8\g.\H[kig@:GDhL\@^/-Rh^oUB
%[ctD)1tH>90&EP,oo,t>7>'pujPF0X.\h\9:X)d;:(,`)ma&P8Fl#PdoOm#D7>8BL<:jh[SZK&n1>sUi5P*a69_;DNr1-:USBcK8
%CUh,MlI;>>0s6I9h089&8N2R^X:A&%rb7pIG-#-?F[l7W$o;qh0*%JahF64C[b1>Vo?Ij":WsJf4R^@fH;?QUW%(!kD_GHK?9/0$
%N(u8Q?f'<?Xk[R<o;dc[TrnA>UZ)lMJ+9f]TpKoodk<@]>iCUj_!Es4ST/oXp,<hg6IBO.ZB^P^"2j8Y?KFUE?,Nl`+tW_&7hL5j
%9.cjWHq+r8OC)9lhC()Bb0p(gC?p*:(93[`4;Quk5`MNUrBS(/=]Ar.)6:+ik>#Sf=ckF@=?8N8.&[FM0B&-]5o'DV+g8oLQ^?']
%$I),7Le8ASnlWAeT[cr6H'su5C6laKB^5mKWFo:XXQOGq.LGFFOu3bor/*.G<eXdF\94:mZ`?4>o=!mT_*RJT=*#A0b',^Tf/W+6
%2eWW$NI(6m(SdW%o8Wrn"S3'2#/::OVLbdIf$g`>_\[GncGU+.+_r8p3EC:!\\'h1GdqIRGLXr[Qp*hZ$'r.[LVCD]49C6<EN5^(
%8cgqgQ+-&93JUn*Zl5-.^5L?]N5Nq\ZbXbl.Bsq)Mmg@&;fD+ccgX8[FWp%i4BGq,N&;qfcK?(f/MO0H2VO'!a0Ck/fd^plJ('"k
%#5+ap>U`r:"rlt8GmQp!6/(.^?&aok9dd'D4nfo^UqVMfdm6STqjMtX[B$Y5^_khtq/LW1?RGp:IU]"m9JWc@1')W".H;3VLja"&
%js')hk<ALbp&%k&1+'J/MVQk@Ujm<,N;F(M/s[kP<Ik2U6XB"n8@L<QpRfd7LUJ+n2):K\NU1J/6\%%#PHkB"?EU=$=5cVP2mkV"
%RXFCub6bAq.:=EU\?k`m4]0><4+U'P0W"Q8?0-o0=)aqInqb4h84OFfQ%$YO2)_j>8boE!\JuEqh<\.JSmCH_So#I:#N5f*pgWQ>
%DqDC5pBJ_U9GqI)7;7p^\\\\[-\]UT+5.!khjed@<gsh%)iiYt<*CtpnnNI&nhtIGEKEB>i8j$B6@?3.EI\ta4T`m_[cMOVRKnhJ
%0`#rL+2>._4JR3%W-V_76FWpW/sVs\@sLPo8Nj].Ih-:TXim\,/J$>@/CBc`61*2>rf\pKLONn_A8>oSc=Mn^(+.P&NDLb@=D^OC
%^(!*1`s*nMV\9]CD2lFX;1!G0C@AO\U$6kSFMafZ+pl\i>tP$R*CVu^56utZoGV;[kaRo6LD4<b55_2=B;Q<U][A+t1KjO>,&H!M
%_S`V)!Wgq/E^X']b*CRF$bdLIMQ4%b`_$rJ&DA7+`J&!&*..XmX:*#/Sh#_=>rcI+W\qMhY'g[-WVuRBZG7f1j[B2rXh38q^`YT+
%Pr;+JdF`)Mr\QXMS8XE@2eUmqq6-PXA(g$8cnJ\Vg3bXOe*G3Kc1_,"oBC@;I!kVWLU5/=hYb@Vhso8NnNYnK_9[g)P01:^\-Jgf
%i@6t9H&?#!.T,G@@]erG0$VOlM%qkq2/$AY'H3kWeqf:tl,5XQK7m:I0X6KC&V_8Pf!,O?>ual[Z'G"D7[.=jFj8J52W3'dX\p*G
%7*9%TMjbS9<L?nQ403Nal5YMuR97F&Tbt`:1::"?nQ:;FP>5uZbCMU*j]QSs(.BW.7_$=8Z8S7W<O8N;<#):]1OEn*R+fFR6E>5i
%[@17.XfMe,lh-pt#+Sk;8O+50"cP"#>#TEnbL4jjO`eoS/$$HEno8o=aUQRuZ/ra@jD+EWjVVbg\WTCd`1>A+E_A#Q%"FXLBq9JR
%`i@J/FerYLCHo5TZ:7cF=9qj+=_]7h.U3SV<9kpY<o3!2&'%iG\cqWRA6("#M^44Q<U9N]WBaV^!'JQ.qJH[Wq.%`#kXM:G/@A$>
%M5H1g/0mrh'^JH@eh$Q'cpAn'd1qtW5_:3!9,>Zc1krPE<Rd$V.<Jj7)i@7/@BC3\K:G,)Xp[`&W8Ua>$UYl+Yh$MtV+fMG03N+q
%/\USnC]h;(C.[SJ4S\!s,P\gr88S+j0tE<R@B?K?&F&7J?Z)o*9WhgW7lm'1>c/km9JgE:1qA3tIjt<F1@9sl^X1JrHlonKP,X_\
%>Qm:([^E<g[fE=,=Di[IFZQpfV6VQX?N[b<3ejT`;<K>ib1'%e2csnlmkV<%];@tmO)Yq/c%;+gV4Ur5Kt8a#TdeW>9KI6b>$\C9
%UQpk'>C,%!"c!*a*abjg3k;[7>[CSS-C<?f<f9;r0BT9TKuA_0aVE[hP"(5Kob*e-j.56"30W[#>?;:Wn@4Yi<e6O[B<;`]?U-LL
%X2sKH*k=U7;\/pHU3.@[(08_L_bdZHp+_e9@WRFPiDFuD=Vb8@AS'Q+/Ylsk=_eUM^',ij19'T&aht^?k,PhcYCWc*f7pjpZ%a1<
%O`buL]S-g<L,lZ,``Ln3LPML,GXP]=P$E$DpX(A?e3)HmWloL)V(\13$Bsd5B2saa==I:6XUWhh9s3*'ASK'CC9J/;;QDL^RMg]3
%<LHUboJbOYcXTu,>Su1FP:I%llEZZ=j=9%pmAr:9>f5W"QVPS9O2I_dY4a'=_NmF_jFS/I'[nsBZSFRHb-L(s$:;ta4=['_$Wl=s
%8"".iE'3kSph,g5=A]@A2j^9.2H3uX)M"f-@4=TPbD>6LZrBZ[iT7QN\]iV#2F*td^'tBo5^?pgK5mB</#5!nY%tH=KoL(sprPsY
%^L.9-d0Pdi\_"C^mXiasL&:B4hnN?4:8+\S0E)Yl@tXgRdl4JE4Zcfqlb"n&I.ZOao7)0Nh84q;d(o7tgT/Nj"n`4WjF#LjkP2sW
%o]1DeqCP3eqKdK+5K*RSJ,QaO%mLlApad;moVR,@:9XGq?T'9u+*QFo?;8!=)Sl+Gqd+L/_g:qR_e"ncp`#j*4%HSPGCJr,P@+'t
%'E@@FM17Zo-RN38RCms_IWr@arc#FIlY:dWrap6IqY1/uMsVI'EsFWO4aMoCrHl;.ll.$lI<Ka^]UkXBqQT6>(u%6,Z$j4ZIX?B`
%IWIHnf,%MdI2IgUnYs*pDskffjiMoKcOGfU)gdh,hNMPq2-sP>p`!H:DZ/,NlJc9Zg.lk<>13-1-XgBFkG/WD4F'7/fr#@/7+KBm
%b,Tp6Idai!ft2GElcX'E_``:t;m,f^W,DpOb"km(6o3itm.BZBcbFk[>d!rXk$Lo.h3N+m\o1\3pZfc;VtKS(=1d\^&7p@EK>aq<
%hlVpjYE)c`-nW(0a_\X3rIW/(3aJ<&cF+OUTX4CW>O*e8f"[r/#8dF:FLGK4We9gl#AS2t;<mA_2il-g^"@E'(l\B!h>"*B2h$*o
%*TR%'c1^^.5:=jn5@--Po2:"UHG`#u4h(%kaBn^o49,On:j%6]*pjs<UbcYUf&s*WZQ=RIjOP^@8$fO_T?]'4>7:>Q!IBQUT6E:+
%dcnQ:p/p#G=nV$3HFc<4R>5)Hbk`IUHQN$>OIm%NK'^0-FOL,go@9`LS)\-('2LQRhleq"%B2]/MQ??njbJo_b<GOhLDGo*BE[54
%dsIS'pQQ?fc2.A:)Fs?@[@R::jE]%kUUK/2><iIcRiCjpq>/q2bEr*dqC/!LlDI]r%L2Ut$nsol"S%+>X,"^g4H5g!p4(Z6Qd`:A
%m0U.>HF@VU>Q!o-gWehKO3V<\pQSbV`Y1#/cJMs!Y.)G7K!OfK2\&KZr5h"lN!u-Ag$?i+jmasSP_I?O^)o;3lTV\Fh>Lk(F'S>C
%e@o3oXI&,9s*"WGg.)9&mXM7^m;c\^4kj:kr9j?#p!6r#QJVPXb41NO0oc.?<r0(W_%H@PpLabC%&Vffapk6'@*1X*.G"Zr4IC08
%_3B:j^&n9&o\6^s`F-o4G%NGj*n?YDiA<Sl>HS2A*Gi8Ljq*.spUg04YiQ'nY.(8h?[p_2[r6G@ao4OeML,a4T':ON8':TG#F>';
%rAiQ$Y52s@4%-ONc.Voj%qheQmsA_Z"(/Yd?S_dklS/ME?Q8do^t0'JY:\&G:,_G06"M!7[f'fTCEV,XZONGl%\.B4g'4Bji+rL.
%HS1iUX4>`bPd2+G+4fWT\_\<Up^R8XY0S1N6@=TZDTEPOXJlG1;g)8A4bd?H;o>'HBL\64$.me01C&Qu3tfj>g"3D@qiC.AbLu,u
%+'09Eo;eE2Op6Ho1B[D82\WW4p<7r_h'$Y/ZW>iSN=-//Z\Pp@&"ZJV)6i(e($9mldPLRUO9b^XgRW;0G':_o^u(`dNdq%KjGM5H
%Xc>?,^](b\pQ@WDOVaP!q$bhRc[Hkf10Pm\*TS]]$^3XPn9a'cZL>[&ikt'Bm$HB]=oH+%6lktKlsjYC6)hSF2bl:"hHfg-Kt6q?
%TQa0AB&WJHJL3UjVFSCi?[/UMp"4u?PBr-#6<`:!j5)ctl[,d-G5"r.l?>4jjq&Qi6M21_eSgq<=1uJ%iQe?iAmu?8nj;`W<%pJ`
%Wio4W>u(uNEpj[B:\,#M\>MOrAaVPG5p(aM9XHg0HIVOI2rqO86,O:R_\$i.*Ba*Ai1?cC2!@>[:3:PEL9oi^.7[0]Z;5E+B[HDV
%BD:?Nk4V#p1ZJ9'@Fk_JX:K'L2<qk>,Hf?Tm/%Z?rM(_:0,:)u<d-MJD@hhTa3aNc3"?1lmY>b//dJ?3_T^_\!Vn]F#4?b<#2/e,
%AE+hZOREAtmCrq!EajfF<"F7<*jl^f8J0;<:kr79_"V+/hj?Y.&B4[U5,dI$+$/%%GWqWsnK_')E<XncaD5`+4C!gP^:IX)P+-ek
%0Dc<T^[Vm1r8%g`YMe.Of:\]FG]+[@^A@!'[C4t/id#6.cZJd2O<\8M(X^WO8<RuB6VZD6//aN3AU9O-HoE==f]RC,Qg$M\=NN/E
%[Cop5k]t2TqXJhOm5Z<Up5pHPNn=hVmI]%#GVG%GN;IGB)&2A6>=d(7!r_b/ID4L,5GA*ehe)Y(osW35*e\`8NdA4OWPa5Sl[I(G
%IU[3#]\4G,E0+ns3>'rsNf)5*-aTu\14*ak'@3;=9qN+>67*1[$3'IB[Cph:k:hTQV"n5537rS]a6iN+K2=Yc,X%aY3Oh6Wf*AdW
%+E*Ime%ro3lN/%KQB)-QI&%N?YB,eO*E.#-k90$PFUh<Qmd0g287diGm/Je2J,P/.qSVQDHJT#O^%Y*/L3&IQn<7jai5]7H9`/,q
%&q0V\mu-Zq+k9=GVlN!qrXR=@]B)'#!ulUPKtm*#Wt.[-hjN);!n@_'CN#VB08/`,K2\BE-Ko<-9fDmp[!JYC+(2InVW10N-@<MY
%T>T=_cO.5XX>``fI12>Bh'h(]E'!?LIZg,PPn5NQ977KI5Ad:s?L3"<E>["hFS6iXr>2"f3cQjJEu0EcNBbZOXL?mVl0J$,qRE/G
%hu:bsol&8'7X4h0[D2:NdUp5(piO).?@Q3u0>CY<3_5D)XAX,XoGaRV99Hp#\\eZ9SYI!Jhg66k_l'sC19*hl%aC8[kW)(X&_>gB
%NZKP%ri_>'SN%GqY0T[M^VcqnI9URWcI_C>HMC4lD0DXp)i1'6-hNVhP5]0cVpD5@GLmn"lFZYoO+!mXDL4/#Y/bXs?,,jIbk\t#
%UT>O5p/rJSqs<SDYWD_ookTU;!D\'R3q(2>h47?lV&gU<ku`3*\($0P]@XRmWB,==-C_D5s%Z<IQ^`Kul<:^jWHts8g\0m[naY/M
%X)!5#=f7FPT;l+nS*bOPiuI%<e`lT_B773S,e#t:A[0s,55(G#It+O84G2,t8(E,Xfa@oLpc0HoqK1`Dg_U&*AY8n,]p?dsYP%(/
%7-W0WK5nmnF!SniZ[]cbr;KXD6a]#f/4qRM^&M3!k92s[!u@_/-OrUj%TnqrMm=]SkBUQ7`#eu;dYkg-]o77I=Hl"?3&G9nTjprG
%&_>gBNotp]l-kKAdGX^$MfK)#RR>$CoNH4Ci#5BOQ\TuWEA&0c0GB5.ET;!bi_`qMPV%,\.1@S2^\N?MYP%/!Vp5)1c#\[MQc5oi
%@ApbOr1TIZRb[d>]c'eoobaLrouFD0.'Q(VoSPg\dK9LB4sMcJ1B`kuOn_fi,>l>X`<^q-K\,_f9DG1#\JYY4mb;PRf'bNOh0HlD
%l2.ho?-[dKXlS?:lInsqC]FN\G&73\5>J[?4s:X8Nt)<L2q@,;jfa*EgVJ&(VFnU@*/o*n%c6"DhuV0gn=cG$@,KYjYs6.g];o6'
%r"/\?E9,A0Ee,:GZ(H5/J(*YtS"@i=mEp\ppl;Edl3[D54o2C`T338SIa:A'+nG4<b)fhB`d9?PD^S3g8iAl]Y-4bn-(]$-5C?^C
%p<ghXcpI:7!ti!fg*$GY"G$4k!;mfp$k<<rXG9.C\8u28!:UO"^:htgquX[P/MRAZM_BEtc6;C5"FZ&umh#+3Z9R`eX*4jGm\+n]
%"FZ&un(s2]hCnklc+A1$cf4H`hE<k9(@^Ydo^qL:Rlb`'H2lh9DE'\sh6B+(f)3CK=lMU2E&Xi(ZRsgNgHMspqSjTNc;E6[Sk4%0
%]:[<Mm3.h!cJO2,dC3?Um60RZ^57L*jWSstH-Z^+ffjc(S9Xr%rV:cQr=[VZop;08al`QTQiGj2SZXW\4C=_.H$6pUmL2\sY-Yf^
%Sb5lJ#6.h=f*;9.i'5CgriH'2U?W="=oGf)G]gPIUME>4rm%F91=N![lVi&[do2Icqo!B@q1aj,=30*f'V$q&<o#9l0aC;DcbsC:
%nS*C[D#O9WJa,PUI*S=Lhna-dg[rmb?uP!lC4BfuB9$3.pt$lij)3D`pm&\c1,rSEa3,R@n\T/ZkBLDg%/F67a33Cc)&t;^j(32B
%%$$[,E4h]Ij-M_Nm)%[G$;9Nd)Y0=+SqH_Z4h!S^[rNc(Nj0b^`'/(7h:jIcqjqZ!:ET9ngI.Z-%Ju`6U<bsgHa\e137e%pMRUkY
%[HDT#FE@9VC9uA@I>C40a>,IUa/9_)q^rkD<)!04*,fP'mCe&:02N-J2@_1'rd_lU&EE/e+P7k9dZAqBWQ92PopaRR+/%'Tp0!p"
%1ScJbD)hR#p>mBT<mW&pg9@:L#o?BuPA*g=*4ed%4V`tLl,0]QqXEgb0DiHG?>&``?*#]!24UjGHEuU!4,s(ulJiu6$Fn:G5#66-
%he)!_K*R/f.>*V'#WA-u`Fh,.kV&Eh?=5V(n#>B=:jkCr@GMG"'lJE!mMq(h7sFgn;GX5`p$5!fV=k4<g=2>V*7@@gSrCLLES-ik
%1O(\K=p;(#JL@3g*sPN\hV,Pn-f\#KmGQ+==#N6e1'UOoJTrrs7_8fjmG`AWVdcmWSsb<+mX0/)\N9]_CsrW3m_3o*^kD!FUeA`=
%N9PVV:-8b'8Y8`tN4HSaH[WH8m)'\oke8,tVnFiXA9U7<kDF8?r&en!([L2YqYsj'\&WoU[`88Ae[I`QQ*sa9^B6[pcX&DnhL(u4
%s&l0;H7mm*qQ.MWk@Yn69F0JJF?Sl.m)S3j+&1b]l$Dk^;^OZZlp6&QduZ\jZYMr!TZ?<JO?D_=*A?_#YKl$3S\f,+A@LLgaaqm`
%@,6%-HUne?Lb&1%\Oo<\S3UGp3cd!JY<JN1F3%FT0'kg\lgO02?T.(cf;D^)pMY6BninCTjq(GS0h@Wi.;">N:r!PMNpK,QA/ESD
%PMH=8p"5;k_4(6g=EFFChI+Y=p=s'%%JJQu(dip=pNtY94k-RLSpLt@gbXV>%2RbC=`cgT@2u43f:uu25rTX&K0_F5FSf^tI5^n)
%'Q4cAP@3$?=c#Rc^-15"&%0c0?:S6a`?Xm#:L:d1p62\85(*=pa1#]ZW,,eRqs>J+lOTq/?Mq7g*.M(/8#)j,hp9St_%4gWTmBk#
%-8/^?US!!\q;R;2'r16e5;=YOqWV(/pV5\;s$56j,>jE6)?&0:(S_Z=l;'XWHuW]_dZ,e#`4-e8V"[?;CEp5?`"I]@b&OD^$1DF+
%+3rY#n@c!_rN#_-<+Cp<A2T\(eO\#^2m*?fqtI5tWQ,0+/:Kr%H(FT!T#ii(^.kfjqkVKA7c,_B-G>g)`W9hA^;YYEfCT.Xf&qP;
%+pjcuhOguH2J\s@o*'S*f")EHL6l@cUbn5>hu,cn.@+RNg<.)nno*H;>2]SV=I,d)9k!PKiA7C\QS8=IB6%g(;&';,TL<W)lWOD(
%-tNjK)jg=9C)pB0Xe;hh<ln1,0V-S\ZDp57Q3_j_a#3KI]MF;\1klY#$SsE>R]Jt%e"N"cTp1Z^`)u';i\sQ!f1GF0Ot%Cr<T\.Y
%2>UW>OtmK019Q?XcJUf6YJU(Emj1cH(30_qV2obDR>_fm:WA7J$hl5SM("OqM'?l-84H]m[u3:H6naaDU%c[=d!OA,Y/E7]p2egK
%pFDuFJ,A!D(OpKormT!4(M<=8(SdW%'+<sH7V'M.o]Vd2SnOB/.ok/L":KUTPB,sZ=Oe]U8?&jJg<CPlUk,ggm0?KI-<e$<L2%]:
%!.Em#-nNi(/fPf]j'\0_!D>3DL6QtSoKFRGR5BgPWQ(fSc&KtLjk(EE`2'0]JBT"rki*BO$XC?QJ;4.EW/4e.UYG.p#]@O%3BC&]
%>SdU9XcX(fd`;hIX3/gc+6.S'<a;3<QJLH'Q!6/qj4ce2HAgqdj+ZTfkW+3pj^JNb&JA&7g]qF`#g3@I5[Hush5'g[V>Ge_F_+NU
%jM1P+pWuQ%@rHlp$6K*HScF^Rd`<M=W@2Oa*Ps3EL.[CT-/EYK$PS4&hKM,q!+&u&\+kJGUb#(i$J.\7(3h\P$6MXmOe#k1g5_*&
%Pf]8+Id[!hC$u;eb,t7'VXsK6)c6DaF2djZ2kM1CL]h]sVqEl'dg<lcIlP'!WA!2ql$#XIqY':HL\:2jq$G7SI=CS9s65=3lL^P\
%4Q'Rkn*'ArjQj!o7Xof0G5fm;`fC1TE,p!mG5Z%DFo;MJrVH*:e+K4*I"*+7k9pq1*YOFE-,DF)WuJ+T4p<BF6#]4P,?"L[R!_hY
%1uA-,\%?5S']/*-fdZRmCJfPqq:GK8qt9csp$nkW,lb1(T(&`IU%<cG@pP#[lL!j4kHuDTP'(WO>CDQHNR#!tJ-pXCGtp3cUK>($
%@Q@<jrs;97esb<gMYd#1`Z7MZK_<mkk2``)J[55>4SAXM14<-MLN!nar2ZmC$!T2o-u(t^;3PYk]>$se2#;B<r*]`QrHV5\T2m*O
%?]768WCiMb_H4#o[&uqU(IFOi[<Aq\<[aJMIH99FV8Lf71_XDc76.=0K6hu[lFB[?F/+q>YFaL>l?QCcXIe`J:s\h-l8^[O;9t`_
%"f^ZrR<LJ,OR(G<<,Rs$>rO1qg'VD8.d6@uBN7o\@-^j`bugu<[1m]bau52NkBAE>Nc$9/I@ntfd'%eVP[gB0WfMb7ENW8GOXe"n
%(#R1q][r_Cj]GQkn;=h!K5TC>nEE-p[oO2c>3$cJK6D0qTV1OE=+cBgasi\0.q,7:AurBDD&>eG[Cd_u?(9gR1@5--"U8>]1t%-p
%g'8A0Z8]AC]=s,?J@qqW2Ig$Ek(?$LLW</.pK0A/+Sb5.b5?nVo%c[H#>0@[>mrdlSTK+7s+GX*3]rM\G#7-&'n0!<#8R6r<-Vsa
%d)00JRQmb?O/'QnD?ToqV"ZWb%omhd=35f"Q$JKmclS?7\ci!\X]Oo5YnXKhF-XDQK-"Bm-BB12`f=W(;9LNU&fJ'!o1Ae#2+kk@
%WnOO%@m;4EKfUn&RT3ca;4ql*r#K#*Nc.u#*j(.iS/[`?Rc-=kH$YAr]0V-H<VU_J`L_ksK]iLtl)u!%6,.n-qRq.QqYg6dpqu3d
%i"$1oT\p=frkU&YK9(IXn96AW1nr*L%.@QBpSgs&o6obr<s&.Il("`6^)XP.o]`.=T\Jq,3U\3]Ec_ruVk3_FCLE2?;=49b;-+7/
%Q-Wh+VbM+&[)_^VZYhTJZ@>P:p1eq7GcD!;G#2]S7<VL<#=\>(.C.7j>_Wtbmrb-sng$0OX8!alcUD.%KtqNj\mcCUTMc`bg6EEK
%c*7Froi4LY1XK-%BuH_'Z;jB(rBRGu[W1+nWR"Y*-+"T&CY;c@&A!iN."B'TI1mkkm?\c?'1`!rO.>ol,`Q>?PF"BonjXHV=&_:1
%N4_=5K8Y'&ljlFhs1_Xus0,NGs#__'_m[iVPoj!$@9_p!Xn,r0FXi-#,hkB=M1q3(O##OXDsPW]HF"6uF'C"-QAA9Z.!W>$ZaI+p
%n`M72,K8;=#E;=KFLn$.6H,L\*FB#jNFQ=qjNBMrGCAtfmt5WP@%F6oh:1+@np@$d%m)h-*M&$:^0LX.m!R7c$2M''FG"HT[DaG-
%.r-E_EFU6Y8n"Zr[b=j0r)VE`kdmmhK.Kon])k\D4g(jD6:8)jY'!X&Kk@D$a^$Gs`X0G$X<!@Q_MSL3&L&odP&$B35q>5)Xt$Ui
%kt5YB"ST[7!\37L@QB5NW5=`X<$ITLnl(/$FNP#r/'46O.\'sCpctjQ!#8di5kIOb=K8*8ZNZq3h1kr3X\Bo+^228a\ea7+Kp?qm
%i$"AZ_INX3jX=n[>GG3Lj3h&#%rI/\Jh$@`!9M8N[7gp??;o8u,pPruecs3J4Ahd$6<T_;$IhMc^DT,(J:Gb^c00i/<Ri4F(=gWL
%4ZIg!:IqDk<#KPq.OfSI65Ga7D<mE0PYdWfR["K-qdrDAJj.RqHJdIZ)5Y3P0eEL[/k)&V$DJWL$B[P9%]:u@iIlNXU2J`p1bC9u
%RkV@0$c/4iiN*GEHfgTAd^5R9=W,f^_;_2&FfAY;((8gM,q9`9r\>33=]IA!DNLh4CUp*>C*jOn>uh:q<Zl,J#mQU7^kd>Ce=o*.
%qjVB1,V,6tRWV\Kc%UW2E>s-o<ln5S:letH5cI`u]B,"ViF5F$!2,KOQ$$lLTH#pqR1Cl+(sLjVN4"LX[Y*eH2b%rtXBS4<:drc5
%$%i8.eHiMk/#s6r9.fO@$`2hpL!j<dVsi22OlYTNr:,IR0P0RJSJL!N:Er>l@;Ze7;3oEiJ@uWJ@V_OE"MHhhX?]a-H3Z!(A]`,W
%<+NcGPI=5XlFmaO%J5k9![u@$5[klh,p_NP"r'pJf,T/"cAsLF%emKcW^8'"VDlP3K(tr545p5c'ueSCT3>@3U66kC_PB!TnTN'd
%>JkS\8S<3\I)T$8>>&hpFA#V5IcH*`.VbPL]4Br$'Otg+S_O8$\TUG_;A$.Y!dI?.<1XG-nMP;J=F$nl[N5g=mhoDc)J%r'bS'7$
%#)($jE(02Z[E=;iKLD>fdKaJ[nF65S81KLlPs87s02.NU`knN-mI<@M9^IQJm9&Cn*3:ju;XgH"?YsNnQs'g%Q;rXY"cn5m->Mf,
%\M&&!7"3F%0]!3K0pOSu>#@!48n]D?>RckBQnYo/\Blj-AmHe>GUq^+cB]5He6HYjNL`P6XRJPP>=XiQ%QpSl+`moTdh:>DlZ$$t
%C/\j02H.\R";_ir4\h%i4PBH=*aY"m$EoD-CI.9*ZU+&:ipj9K)tAVeK0]0Mh7+?s?rS*T[)V?mTLMr:>'R'H!Y*[TDkXV)`hB_H
%N[f3C_UJo?I?R!jD%NVZL0+pb=;o;B1U?"+e!RD_[?d(rHto@.mfblX9.cU+NZ^qiL8aATj7Pl=#ih-NX)o1KK-"I]FC\5Hh+YWV
%B[)EU+mP3u/UD9TIoWF.ZiDq=da\?_IE;gh"Tjm*L1Or>7M2lYW5BnB5V56f+^td@Nr1s*E^@u/W2GerhGD\/MP!tTZOKA?Q54V<
%E-)pd*S,ma/M<mkS`0Wabr^lCQCe,u;QqW>bP^"n]p5DC>.@<Z7k4a:N0%p4a<im@&>nTc@lW)*+*VCq0f;b4Y\r6i:fc'R,R;\;
%)hme2.eFo6#Q<<]s#@&pG)$`FFn1nB%5b]<S4HN.HYJUIWZZ&\S2GAR5LO8K=WnVu0RtpAKeE\nTW<*t<@_IrPX2kA2Y]VA!S%`+
%ns^4(atAcXD,Qb/+dT#8%b7F^CQ3rcU5)Pobm7E0r.>djX?Z^Wm/1^eqC$dtp!LR<0*Gu1`d-9&qJn:<OVJQKA8?&8+HqQT;1X%H
%XB:T8S2K^BI3?lgLfb_B+01XO.fkO.Usk(Xj,aZi>P)cB_lE?L&eteM6M;tGTNJLeoC@&H?a5)<=Q%mo[#&`PlXR7@'Er7\Rou#_
%S>:0a4'f2T41Xk5/)e\^e!nO`C<L3.Aj2$fjTY9C=qcN=^)WNQ[([FU37&N,k,`F6nCS\igl_6kWiOjRfnS1?EI6f8*s`<Qf!70/
%8U9[769e;Go2.i`#2bgXWA5lTRQ$_=C/)#D1LC6Nk<k]&a1fU7-)21/Q4I]r8:#@5<GgQ._edB'KcpU'P.^D2+\g*hhk<lV#[&oT
%-o^qHCe,-=,[=BljCZk@X_G4P(/u;USe#O5*r@!#Q]+gY><\jf,O*Hq=1*1W%C7)8(5<MDN6[9H%r"o_qd*_p<p$/V"ufpRUmN.N
%q5)N/D-+-Rf`iP0pZ;44-KVN$nSuZ!`O=kq)EX,;*4q_?RhTI%g)d_)WSrQ.M/c+b`#)/gDg6gJ?Pb=gCJn+R3[5Zm6[=YP`Y$64
%'ru_)=c,ZlG#!=:/XD"r6CCu_C/Ml%*+"3M5cQK+;e9*$O)Qq76)!p#1$tlQ'PXMJ88gZ^Nc+*SQJoMrT-q?leG<$lI?bKQ#Bn=k
%7YRK->cX%^@D/XtI(m<WY.)ii4[ES\fffG9>t]WE=Xh)k)fmk-X$WUfB!u!(.oEd2!^Z@1e*O?*k\-8I(-4QUQ>A-RKe^;]5&*:d
%]$d]%$J"D]H>HiR,oI[Gne$!4<E>AUVW(TR'PApsSP3`U%W6B?<otf"f*)hd60(nimm0t6Age>U"sgWu4()BKb(5u.@pBu'-j5N4
%OHo*HL^rNEEBo<gG4(@_@u-6ZiQS`4BM`DbG#YOD>r*fe'6#1!:!P^s3isO_@1#ZI(jZ97L+/f\gkB=&687:CnS)@JX>*=\EN;,I
%LB^ba12\BW',IK!X;le8Nq4gNhI'S7)Vt%=WWMjKk<XIgkKD].(>:pY/rD\?6FV>J7cWBk>2[m_,SDU12Pk30OlFi<@5.\g2QCaQ
%<$pG,9ra2,Gme),db%B5g8WX/*2h*[#I:WdHCr8c?R&b5OR90NpZp;Ud:dj;\n]r)@Pmo!7[LWE*E?KT9<ktZ,$Xlq//M\n1GhU_
%/W*Zafbf+8mZ!]`=It["[,DK6@R3RS8Kg<`ID<&"L2n(Q$?]gRMbJ^IO+$*`C`)ruV=u;7Lc)V&IG>@<WRM`3LVV_I5j&QUPU3p;
%E'"iT^=B0h"r;oIef`6?q)Z)h$,C9&[oHOr/9U?s"5&W;jXAFB"`P,+VJ!Mi08rRcUg855Ce1bMa*<9CU\)jfa^dd(0m$>`1pV'c
%4C:k[Mt74;G=WIn6KE1NChBCMjbO.Pf4V29i[>%pFRK8s<],.8_EFW4alg"A@U]8o=IulT<grY.lh@LD[R*p'bs@'1)Efq@ITI#7
%$tA##G7GbR9/%XjaM2/O;j1QU.-Cf[aOg_4@2(R[6ZFcS_L7?@nk(>Or6H2]2PRMu1^es_>7&k]m:"+!]&(D'ihe'gMVM$BiQ%3g
%h-$Enf9m^^/goPL<hl`c(ro82j%Acm%8e(%CF&WTM3O:'-XU@7bT@qMPIAJG?&*fOF3K=cYlnepXk(3?j.K5ZWAo2>$6(Q'jTsqp
%Kc+HE63gM#+B0<d@^k(PpI3Are//Sba2dbHXg)'eV:b$8@h<O:rO9q^R#DSfYb/Klb$[k7+""djfLN,NEB3I7<ub\L5XD7YS;7[K
%;L:'k0+7mp\A-=-#(;`Q$X'mBd'nRALufDZ>V/HK[:mD_B0aEopqksEk6<:m-XDb_[`>)>TEP.%2d6Nf`A/6L07@&7DbX_/"3si1
%b`ho.O:9)[E=7C/i87A6CZ)c4T`N&:3:kh7i:)k]"Z[Za0+<jF.;G@0$k&;jL.SeXd'qud1C7D02h8n__<gpdak-f)(h2.Qi:Q0a
%jeUV]3'>,!+g+D9P4tL9)rKN!iR6l;jI/Hc6SUWZ.Xl3"ZQ%]mZB04u1UAqBjJekP>)5/:(#kXeRh:0N&;hU02CZ"IA2BMROb)$R
%c6BD,K:'%K9Z8pb_D!Rsi:Q0Y[A;OM3'>-d+NOZZ-Fg2Vr$Jf&5HMC9k_K:h\g1:^7!1s'a*'##+kWjR('^uXLt5VnmC#^&>Sr(T
%L@K<SAdm9m6KclGL"qDjZhj5Bkif9TK3f3kj_aL@!P6)V:2c.uMq,8Vi?>(p`+Z2Y/cH3g<u*\VXi]'j*VP<%keL;VM^*1?-dd]O
%mX7<gZmOelC2?Od9-NnKb`<.L,`1Fm$oc'8>K>oiC=>La6_%a@0/Ek8<t"/uE5l23"tg>#>Mn@`F4.HuD0m6D7-q^@`6AcenF.CS
%?AAa$VlA8$!JXrp`K&BX0IfOGHoV__&\3<\"X^.%W>m+L*(1K%n:ep>K<4l.K&gMP4BJO[D(Oa+":qdk8(GFE-'N)k^#aFY-#MSW
%!8$cNN]/=kMq,8ViF*u@W#2B%P/b2WgWNC)8L"4H_DCQtVR6&k-Rhh2YVE)0^.e8p"K7Wd9F:lO;5P-)c00poY@"@h.HEB,Hd=I6
%CIAmeO1XOh&Q^7\!2&$($]ht;PoH7K*4qM9gE)+T=['&R"g^1;S[B6*KjN&@QCP5:`TV,,*EVU-$3#5o]GaH9*YI[E3[T`oU;AKc
%!W&P6Oc,,5NMmCu09fk)<%+YL$:KUd/ei,8+FppZSFqFi#9IN&SG%g]EAuLRZ6Ddp!Qs$s=u^mVq7A@d+'0.YZ[@Y'LN&s#cYuA\
%S`EV.n/-D/?KnD>_@5!ZS/j;/!XQS\i4H.fhn]K=+U?2(/&KN2>F_,_+'5\!*fO$%0F!'3?_)7X]R)"GBVVrJ$-8YM$lu%7_^uic
%AL+;cV\hluk5Ja3kbP%D//_+p$jS+%iG?YMCQRdO7L*gH7YGFY"+br;LVsc3%;$po:q>A4LEP)$YK;T,)2,qOHro@4QPa-5OYe[b
%X^Wnondo7uZbTk;4eCt[.2Re%YK1f7d%/SW9nI,k%>P+AeiB($^GaPq%deo8]'>^3%E@.+kc2As`k#C!j&9j(]9XFTn0Xk0d1*O;
%]6QMnO6ipOV55SSm?YUDN?`XjW3c"&](2rCDNGBhP'GI'U&hmBJPTdH0QVpVa#2G!\m6Jq.p\j)pqjo.6>9qn>Q'd=h8p!,M\]WG
%[giS?:f&P\oe5VN4!7-PqUh;kJB!U'7R2cp[p9uW6;E`;ImHf9%OY/bRU)W<Q1V^]Ga$4Ybu.Z"_4^jDcrMlUK"PKZC5Le'&YLk<
%\[X.o_W5F.-:4ji[DWXrHjB]UmOf';k/IKAMl<kSY/5ak[aOXS":cOU&3'_WFcRrHAj)rSPZa@j>i!O`ra[j?(=@e"P/*b!2j`n=
%@-3^.33GNT<=!TKHn$WJ2c1S_U;A_lrLQcSVSjT,MCsGn#ZKFL?'l%!qImO]S9!*5[%*[F,QJ"JTs?&@&d0D`o);-Fh.:1/R:"X;
%?YNbk/mH)4M!9sA`FE0^SWIt67]S8!@-+a1^X@[HGl%dOEH)SrQQ)KZJg8u\_;;=%e$.?):bg04W\&n`0Q:K%=EK*cL(.8ABj'#)
%q]:#ur([8\nahbub\/E;dZ(JJ<ae6R@-/dE1t1iA#(!IT:ktegE.:)u)ihTe.#_P&N;*u$3\3E.<kK:R$O[$/@%J1a0kVQ%TH*Y-
%rRjU=XJPprm(I+;)bJI1r-k7'lMi!q?pI\'<RtW`%2.S.)]S:\$6_Z(86?M\:X=gfgY]Lc12E"E!o!@,HY1QnB?#V1Ef#a6/L)I-
%\NqUP5,[qap^VaAXB_\A'k\(GX&p>H3q+Z>`43Q)aeL%HE7I<X/NY,s1^Tl1,0lFWc:?FJqBu\?*:Hp-%Jdq0(aMs$e\2[/og[XO
%2),,`raQe9UL3=X`UFkfi$KcX,[1I#*]r]j]C:d=[>'TubXK9+blYl>W\e[VP^S@H`?;Ejaop]k\_r\uo23rA&5NY(qI8Q+I1K>'
%IKYG;oNqNF)3c%L:[GaQKMatUJnYP)_K8Hs#n(3cq3haOA&K(ea"NU;[05$@rS4Xl?=pi,;+KScM+&S.]qQbU9#`^IET/h'!7BSb
%R=X]N-$]Kpj$e<IHENNkPjrQY"d;_"6(Y;KhB?:Q?.pRg/V/K<meA+ZCgnV.ja%3+)EBlB#fNbDT]?n5X!dB]$R?tD`mf6!Qt1$e
%)K_!r$MS1]8X)Q<>TVD9?Mnpr&%B#G5:R4VV#prKK'$SMq>j$_A::OP_0RtB$n\2u@cjTq)20&uA!B]S6XZh#RF3#,[]E-d(cR^J
%&LR46H)sY&-EscdkX<d_nLmq<Yc1l?-:FpP!\Z/_YS__C:kE/-)fAF+.f#C:e&?#%*!q8/d%"ePI@#tGBMm3o0<.=cLaN$#2,l3A
%R=A<+,]YuIIiO/6RP3W"NDkaEk8Y`L,nSTOnKXD#i$i5q]^[Gs0#AA#[0]S8[0tFh,VKfcRRXh+Eh)72:75AT(l:Q@=/+2HLCoJ%
%X)/#S"Xt^QaScd"@IQX\H&$M&mDT>m`^DsK!N2rO8=LD!$>-n-(prA`VKZOD9q]MNQAKG<`%[NG[>7Wn.&'l3Kf2_m)5;76)7f[.
%prY9bXbpUH--:lchW)7_,9-.n\l,3cJ1;6@K3(9&MNJ/(7I)WcK'rk0'R4g5Vd?8(l78r]ghUYH8"323+s[(U*P3c;#D5>OnqL5i
%r]alB3_5JP^11N*Ue)1BO;_k#cqb@SeE`>A5Scd^6hGA\EJ4uRA0!/&3e3%UOtYceoN_58M'HdB?>.?!2&\OGbLYg0(_JA=4Q<h7
%6;b>L7fJDC&@*?dQJ*<gRsMj&-Q'AsmjrT(2KB=C7!Vn=U%,i[C7N@JGHnWsGB(s5C2DoYp2%DF%M02Fj_5%-%L^!dd^DkR7j42Q
%AK9M[XnnE@:'+WpN]U9Mde%%PT+]nO,'V:e6jG1:Lf?:%gDYaj/Pj/An^?21j*VadMEQ;=KfKR\,p%qV9n5-e(-i0"]";$R/W&:W
%S5d*CTaS-o8rj1*RXnAlMso#N4JP<na&Ohl&!tt.&t#%PN%-mT:=aD5Fb&ON;Nh.BZ\p8gi+iDO=!EV%KVR0gIEQ*OFeZ"o(*XBF
%E1-L*aC2$5I4i!e.&j9lK.+RS\sR/O+]LsO0sR9iZ-h[4E'K5A(sbAm0_Y'U8]-B1C*T\j-Zo(:`MP728=m84<sb30X"q^Qca@D7
%KS"<f?2_AjV@rnABgf5m4+*9AG4BE"$a=h6an!YB"T38%&'p[bcmn+6N8s@OB>C4TWDmPa%.]Rgkc([C@`3P&obD<OR\kNKiCPrA
%`^<Qni)5;Gi;jHl#\b970*+6D;,_0OS\g'5a+^#sb:I(mLeAD8G&7EpI7NRo/OlVC93h^pRCJJ!?S:"CHle$ncXoN2l@=,A9<O,E
%la[uW3fPb2a1&]aHS4rE*VI9ea7nRTFJd!<q$h1*5[!#[J6IX4M,<[UlOYBeMQa!)L8od9%<aG!GRMY2_PSY\L$2AS#QsQ@iQ*/]
%3S$D2LS8t1<JV_fiulTuF)Oaoa/#?c2AlZ11lYhl5WQHC0LNf\A-S;-/iG>g)-"3l,(['TVLH_&K_$Z!/V=*fe1Ndj2B--\)c:8_
%$M_TQ9*sUh^]2:&^U02S=8nFWE[_Cpf=jm)JjUmn#L1(J>BU/$H*Lm^+m1H$MJ9];e(C*WKd5u@+%9TLk53>Qm*M_'A`6m0c\?54
%SWYPcWci9!pNJF,F-K8Yg1?2aof0\V.@_QE!"Z%Nm->KW?GkD2(IoKXg(tCG#V_'C+=Uuu8rj`'VLoe,Pn_0E`$;IJC#uW\h:/bD
%_hrBV21c<WI5pb<3m(tpL([QD;Jl2lK@__=GjKg#bRVo_dH<"l(I@T+o3dTB`Asjdjf#r'/Gq[l[g_/$b(JI*fbmM6o<S"tT3$)e
%/7T1g?kLU!N[H&jZIrMX:"4e'!c,^k:P()gVQ`2/J<j,%:?(FT7p\cr):6VO]l%n1^4p]_-uHF]f&Lgj^sm8.'@&J\/NN-?*"R'X
%-6/%):H)WE>,-^)dqncJ7&9\NCh8GZ,X"sVrE(=G\b*/3nnd]i$/P)^80!qJD`Tjt"?31(L(HjqPpZd.8OKYD0X_#B7V@Ho.#pJ$
%i\k-&E+S+tGpmp/gf-\3ULZNB!?Gg>9p<G&Z]JVW;MIJeJIC:-&m*I7Lul40CRjW]l)O%_Y`Y6'5eNTW`t="^0e&Af6ko&pI9&<N
%@'n0`1G4=_Gm/3KQ5RWpL2_4(5e9VsLMEEZ1f#)p5O2/Lf1P&bTX2[i9nML=K@2d3-`gnNLK.R\U&(#S0fu28j*qXua'^-#Ujpjh
%i19"-UGG$ri1ZM";/8LEn6^Ru-2-!D:t?De=T^D+%AN-^'FI[r)JU)0SHjb"`UM#;"'__=d&$8KQeC!m@O`PdUr/Ib'["oAK<*,e
%]D\6.[a6m*LWKY))<IRVjRZ[27HVW+:q[Q5;dL)uPY8:r%@@("ni$&09:YR3"):aRfS1lM;aeLHW@TbW.<(K&',Ta\nh3&^F,0j<
%hUe2(aH*9'QQ<X1=%7q>d*kEP9/8t.3C5tphsljUL4:$c=&^GB1l;$^"4RGad!$\5UQR?hbu29f,^'JIfMrm4RjSnO%aoR[I5rFM
%,<Fi-TZ":Lk+Zr88X:?*LIVXs.4(4sOY0SHN];^LIa0</gV`*,aTJjeje:r"o3Ir7R.BDgb;@J916nF->UQPUJ69+<"A0f"U"QO,
%0^t"9quSXP2YJ1Thdsr<7Sh\c2b;8dm"k<cVao>U\S91qP6Vj]3JF>ocZa(>3KBjhroA#T,tYLHD)iD[DojuRmNBfr3#a0bY8\c:
%]aTe;7.<m\3inc+ej.5[-<&\s-tes1G7n,0L*n9k(mlKrOLrIUOF'MYBne]R/15X,dPEi)`CCG0`nO.cH%bJY-'ZdZioT5q"qMDW
%RK](MD_DT*\*c-SGgV((A?jX1abnaQ84l;.AK+RR=*:FU9XTn$_ASa2-/tO!a[5'WfH!au7N%_H\/5V&$EB\6=9]J>QCZ-j#a@k(
%fnQl_+MA`:c+j@VLCj2BYphS#_O^5V@^d4/5D'B5Rr$YiDHZ!ZW*fHo27WXLR!nZ4C8j=\m)=f&(U>ah;,^/OO6drTT"]m$"IsKl
%P.C<-n#I2.RlRL!Lr`W7$(WR`-o3;qPscnZJ9e;_5uAmlMN^Z+;_HQaL0Y1g3st$5DM?*?b"aD0FdiF'1WZ6"a_%++Q8O\TH;XNL
%^INPh`EB?Il7N<MB>`FK\f@q._\@tXP*5X4l]`K./YTs"NX2=Ni_OWT6SClVenkUBm#m^i:cI(/e(h7KEDW9XRr]lL6-,],Ru+)'
%+(Wk;KQ/p)c)`'JA`2kK'u-<6l!Ecu,Xd?KaU%>r*q2_XT(7QmK62-j]KD>.E3TQd;0CaIRLRJC>^D_YZh@J?"SR4m1p5$Q6]".O
%XMM6(MHL.XW*,rC%`Uq?]N?D%"0jYJRh0j6e=YbJ2V!o.\_YDabjUBmM%(?Wb#.7Rbu>-NI3TF9^psGGfcW.d_Dpu<EmT(X^+SqF
%=R+bUkdqq'mlMs3g%&+/P]D[Fho;!P%U6rKJB\LQF:tM#8<&j25l/U+ph884k3:5Wgsm!-+H1_%1\5]Z=Wdp+/f<=mcHp].=9S2Q
%K2&7$=s0/J%"_*F6[h;+0Q-T[A/m%rSn;nFZ:@6="Ne-Sh('opSIUbeVN]+(dqRu,Ph"m99cjfb_orgtT1DO&6o/HS%1f.O;kBK1
%GS^a-+#LfK(rS_f9jlBqU:e1jUCUE%$?[Qc\Y$o7@P1.lTtfsX[D+U\hCaEk[mU]oUj`"D^X/d*-8m4`WH;#CMhD4Jd(m?2%M-VU
%M\M>#2kn*KMA0NXMo4dniXm;38DR.!.mo>P&&_5d3kQ_l=M)g)p1.gV<BtaqjFQQ+o"]A$q$t_241Sjb(Mao.P4X:fH:[T_\+VNY
%`A7)7ZcpB;$GcS`;]q[[_o$;E%TP8FF,#XFHBmPe]h6`uSOFTsB3Bu1"7pl.!n1lH3t.;"4UoO\j"N:&fG847NPT[f;JtdYnB(,!
%k*SZQrEEj&_<jbmG3scJ6&DUFTE+(E6(*T;IeG)*c[<HIB@uF/4^RrfHKr<k<oAaIoipN!,Y:Q@.fEr`697#0=110(<t7Qu7%C(I
%LVA*D!eue/?R:RR(W+!uqsH1p8@qLR*'TUQ#7g,?4'X9f#K#M-f`WSXH5sjF"t>Ap$6@/s@uTGXZhQ))/Wn>lgPi0U#MRBe*93?:
%N%P>M57GU0$>gemR#rga/"C>gK]rT-nk+)!Pof2H1)OF<0!^9*'=WV&3c.!fWDZ$sJCA05./2](a?D4rWu4q9cib):4%!(7Uc5#m
%&SnA_jDTIKM9[G`pm5%M/OaFLHD368,Jr2@/;(@c$<aA>>j;dJO>(c]Jd@-IR>F_T:XZ]]@&Fs5!>Yni/f]I>8u:9PLTN:CXJnt4
%=c6Q1k>g@p/PZJXL!Lh)im\@:gq7%J+841q$]60PAk#s\cSX!733KfeU^>$QT;hd!6&M3Z*<3h5(30,eI&7[AGd&Q;gu#T0O!)m3
%*^d24m,<soNbF=E8>gE1Caq1/$C"8o</DE%GRp"j\ig][XbMn8M22hI#]9^iAF1'-(/-9!'t4-1Wi0uH$HJ=^I=`=R=M<EIA,F:]
%a\pe+KZ5*LC-m2NG-l&&cQJ!Q;_e3=Rm/fR`/*,^M1qd\>Zam`Tn]mhjd!I[.KdCX8B+I:&ZraOSLX!jk'3:u>[6O#N&.b`<Vff$
%m\oItD,P0iVf1dVf/Ap"%QE30kO<mkd>Rq>!CbBJ"Il:o981c<;dYOWWfjWlI4JJjVcd,!3Ts?n>\(@_`cFm8jNa:*:%i[FT?-'*
%_fYJPM+ZC.mZj>3jDMF$WBLVR7t+\Wfuq(]`jP.)<D<HJU.p.0AYC[0q8It#'jT3Wo$NP-SXrY^obT836sbb^a??2RB,GX5R&O]k
%-#5*A:)4n_GCrE>-cCt]A?:9T+IcJ=S55M9#$IH\lE5I(=:AMCbc+"*R%N@KM'UqF-]rYi,<iG)F,Tf6bu*>T2^K['iPR5dj5(kZ
%.G,@t3,*1HISuO72M4@V?>3L"&KrXt,IhlDCNYki$KU73E\^+(l_u-anLoo+]BH1!PE/sk%Bf_0n:F>5S@hN%nLDf?a_C4F]3cEq
%2,7A@PMZ:prcNZPlAleDr0Z&b]BXLh4DK#^h4eOHh-,^f>qu@iQ/]`uA%=0f.a9,q/1%P,e"J$"Tu'pIGL?i+=OJ+b`%/C6Okcp$
%($[b=W)_j"ms8.(lbENaQgBJe8pQC42$MHq,>^HV^!nj:1"('c1%7Vp._HGR?:*b:6;lR_Kpp#aU]p[D3Xs7A9cCR!C;#:$krDGp
%Yk<C#d9ViXj1Q-DgSCcM*+`%*+7d-+!RI;E"WN^)IcL$&qHlo;>QaER"ENPoUlBT5I*^Ab+/PG[^O4r4F!%4]+MW:G$#gu_6m06l
%*uRbf487%jfIpf+A\2l.c>E>`he!!^C25Vfl4BiIbbZ(\Z1nT\hK29s-"r$qkXEWiIgNHZ1At0RSM8>L^Dr'/SZ\(Q#W&O;?FLP;
%?E-QPrqS)VH%/jm)CZSif"H&,&klJ&8tuq,X$]X`MQUO6:5)Nu6h`JfSAp:.g.bI>I$(R<S3@DlD,QB1:a>F4_=EFF=0)JfQAKPG
%+`UW\K"R$gATim$?'tq(Kl;"IH>:8#c:geKj5$c_-5G`@\O+ZO&>=i2_K/;0#Vq_O<HOVZn3R<M:q6h5P,u*b(ud51@+X'Q:kg^/
%GR-FRo>I]d_Ie>T5a&k%pS&45P5?8FlhJOJ)Pm(]K*r\=GnA]&qN^M)l"pl!`-`_@Z(@CUZE]piTNoT%Z>Zl6NXPDK&,\sVmhKiR
%h!:1S$='Z]/<=La/^hG7V95[DUMc_=:I>$S0Z>m5e@(BoNoZUKfg+HH2T<(7\&8,]la5MPXtf+c]BAdmD_(Cu'(<l7rXl-BNoKR#
%OM'PTjN.DL#l4"%%KKD8n28(5V04L3._/X;4I7f.'@p/nZ%\Ru_8;VFEgU[.AV9cio\;.UQ%IU7IDM%BQrT`=NI@s83Q[N?qJeQq
%:S=?)MZc!^%Et^jr:'dtQgc&J'uV"s6Q`;..(b#*H[_jEW5#\5E4<)2_0;7W[_7@g0UBpuP?qE][Ltd=e@CtL-1:;I`0J`2Z&l)m
%@<87DBEs[s6;P.tp^EBK0$bZ*2f/jlP4.6*D'r_<9&(CF8*2qQ68`SQ,%*1Ql&EAK6>nt02]p[Jo/!>AV>S\GG]Q8=j;qaVM*I;]
%&6IQ0=8J'Q''hAjre6J(o+%XW`$gK%&L6paF>M?HQ=SaWG!J?2XQ4dS$Uim\Hrp@QTDn4N9c&/Q)S8_%;Q@","bFudPPb$,C35JN
%[!%NcWmM^7+R(CM>67^dh>M1<@!g$lF#+&A/!59,.G!.0r"2'Ach2g]0X/YS?;-MUVD!D'%`K?kImJ)S(u\_bbo_oI+m"LdW;NEP
%Pk)bYd_>'5[EAu3J96:J9Zd+pZK7Dk]G^.>g6DP<@%;,3p!"91fQ7FBB<m=$A5T.oH:I&2cBFJ=7mBe0;<41B6PP&o5*k+-(\dY,
%^@\nmV.7+kKqS^68hH0$Cu%hJUF;Pr=,K[$p/HpQ+p/9RBi@q!`Y,c+laV,#NqqogSKq^@X@D('Ql,KN9$3"FKU`TJGA<?r8i@j7
%[JpuFDLK8dkgDcYVr,2eb\.O8SgFVBrX1S2J*aNIWoUOVUu\n<rkCpD6HXA$a4^7#_em238#I>OQsjUD_$mA`CQ+d/NsgV83;>0D
%j3aWOrXcIF%fms8rhiFiMFU*u7;HS?:ib8[+:3QLLnZUi,[35PL]UR#L^JH*<9QKC>[[[oIHq,/Spqh6k4/@6Tef^4fEXS2]Le^d
%P]U8s\8s2LFutMXIj1)>6O&UX9HrQ^)#)%i#Q^kZ!`4/rgp[gY.8'Z'CR,H-!+J-S9076<$.J\r\\G$mgaJta=FD-Ni@"[d7Gih=
%"&?]:Fu>t<>>_Ru(Q>*?nQ6&T;JNasp,S`Yjs%J94/.C8G4aKq)]])H:a<&,=iIK^1&:r/B(Xb#\Z*thrN<D_K'_q+WBhsHZ5]9e
%BNPh\]qBfYNTGM2IiGpVaAE^Ke&LB-OB[S/f?;`+L8T*P^.ZnI<-B!+..3`[^@#G$7ZBSW?blbGqGA*)L>SBCGG0RWNP;@oTn'`n
%^"4mcJmAr[J%R6>8Us-/iSR6D2Yd1@ZX3BO^YKpYC_dd;S5nYJ0>IJGfdZq:bAY]gBCt(cHX@(*UdT9DY"GgG2E7^!D0-_PXaXi^
%^Ye>&T(c_`I]YOiSMm%;e"_*82Vk30/loE0DfeN5f9PO:lJboU3dK4Fq'W';PEEj(*U0?H4M(#@gBa3LW;'M*l/V\;U+-%6+(LqA
%_OQE]\%8s47tof8NGc5UV`)s.\$Vr.de`c*X5,dQG6b6Fj[m5;*jc\q.oj3n6kRDOr<[R$!D=PjND=@9!)W;`j4(c\"a>:A-i=bc
%cdS>AXmr$f68AUF%E:-oT/lbhaq_++JSZ<5L0$TRp]A"Jpp+MnH1HG#"$[=rq/[i<nEE/Tr7ldNk3,Z#H:7eDo]SO9Y`t]'9M`sH
%9Q[Q!PS.[tbnhnu5:hjF9XlS&7fLAbR)Fq;rGd!;ED_uD\/83?i05nS;J<GY#\%WGdKee_pfTRLj>U/fEq%gJ(8#\qIrtK>BHk!K
%Nl>Wf>mU2D<ROlrDl%:dlSa]?UYR(Eo4R`k7_;le-3=sPH-s&d2mpYuh9:9l>ID]VJb<?AW/HlH<W$O-n8l"b5,F)B.]?4f9lXdY
%H/.[c)LHmIh<In-h=e&tZ_(Dbe.r7jbWr^&'4kdT_V\<`V4k.4r?6A`ZKRifUNq7/7ILZ^^#R]9O#6mag$7>3kH88k)VQ43>f)3Y
%m/4i1ej3lH67\YLoecmnU[+rS])-.-iM7bortqe"#EMg8TAFb+*44:HDfrP_pNc%_`ZKhu[&;#*RD-[EVaZ::*K+1`*ra#kEi[9m
%R(<_&B)Va5bqi$_IcN+R\4+0ipp5"jlaQoIlON/!I@,jnSbXu:',\gjNo9qti:e3W&NIE$7X'B?cf;khrMd(tB#/"lPI>89qNm=&
%.?]Fg"08AVi(8D>OKmZrCj3"(XdkJ^pqtDsNTRIsGFr"5Kug.BkI&lL^XX5:IllonhKnkjq66s0=8C^GGSZ'\hWd%(h')fe=DpM"
%m%iK"D3']dB<Y*^Zsaabl225:VGg#%g2A!R8=t03$@Th=^lD#*g[eb+:*j]0kjJ1?gAbuScMpmQrYIXbs,h\TMsti@3b\0[>29sn
%8b?p<^;F"58Y\@`rKepZk%?2k5871'#7#n4&;J'L32U^\:<(cSK>rB%G=#m4W861>UftutmV@#k.OWoCY'2Q:\oVSHG,Kb/M=^Bn
%&i<MUZYG^@F5h$VF4)<U8%^%,E+aW6R/V5'&:01L;L^tjrG54b)?TS!3R*e"r(im[E@:cnGrRENmZX6OOBR<@UF$_-loe>;_p`C5
%d^(aeH#SF$DOg[sT79n52?q4^m#cd%5JRHFAG5f0eOE8W-NPmA)HEeHCnDq@IL:f,:H&-.jA5eA/2`2hW#n@us6ZD3*BKX234cVk
%Bm71bn&\#7s1A]RZ5EN.odW)@m7?>)Vt\4k6XK*Q:+JCrNW%]UP8Wp._-`]WQ`@cc#J"%4hl#<P2EQ?M4CI<$3;c^B5M&kWr;X.O
%S1PR]H^utgc3]KD:3Z`Qh&,&6OVp?am.Cimh1H58)"pbZLR"W8s7]k"Y]W@`o]pP.Itpoar?c[RZqY3nq;a]D*uqXlE\3YCH'`-r
%8ZEl8Fq61H/3__?qmoMOE2PH(EDSZ6Fc6'B5<S;O5L,Q%#@VT%6q'^'YELXscK8-LO#RSQ"aJdunn*"W;rF+pF<j=NKK<J7Ue>'1
%'67eS?8_TH/E&A5S3[nGemL3*4#73;oig[G:>TBZphT_GnRjX=G&^(0N:Ps&VsRN_JV1Dc)ujbk*[@_Q'q:u.Z"`Lf>'k5BC&BE0
%r]>BI.\QeHHO)n8eM-Xc^bCnTp@5('0,Mat#d)%k)@n:E)$s.AmACqU$[WTf6d3:K1A--a"o(;gIjn]r=7Z@.pppAG5<m3EMrKiu
%&q9i;inSV\$DfjX+5$:N=](iVi[UG36&>ibhacCY`udSC+l:Kd9K1).:Cm6^$(uCheSL8lra<e'IttkPgMS%9MXcTC[Jt=(rB6SH
%O7dMkop_nMJ+'R&s#Q-,;T9:YF;\Z&8qP-a0;Qi'SW?NBGhQhhemqZ!B>;hY(9Kb"ku"YacUh6Ag?2gc*9*fr3:IZtS4.oJIkSqL
%UMe'5T\l:+<Xc#p4Q]dG(\0-V\$P#e`#$%mq>29*Cj;k+En\XfnAJhUVY*@cqG"=a9%U-a<BMX81G#VYj42bnqmgD5o>BFW2``NO
%6aDa8H^C,pbkpR__4]=CTd/"NI[jsh]_Nq:=8_$dIlqY8i<^=C+!Npi%5(Q\&KK_i#+`W<o4enk>c^(c>_(2[PZr&jW)^9Q_fR.W
%U&I&fTUH^_KPB^Hf).h7Z^8*2K*^#+]pqQU2=,gKU7e!a`Ii'B4:83LDsXj[7H9U.T8fq#iWieKM+<,RK<UL^.W$iX05UO$99L^^
%Q_qYK9]qUTrj6Z9RTLg5!m_3A0sB+P[KNad8j]46M25oE*Z(4PMbj4Ad#[gF=!`=W_-K:)eF!O<Lip@379phEZ,n,1T_Zt`q^/`Y
%&3/a^6;bf/GBHSbq-gEVe8%!*]9mB'9)%\"7B(PkX^YW?HZ1q67f+s4U,DKt<W%S*pI-U^d=cHcmL/VQ\S19PbB;s&-=eTbM&_M@
%cG8);[ZKDBY40'NIcRDt),(GpXkbj+7X1V`pb=Nn(_Ne8$kFlJ+$TZGAgTK244D!4cRAD6c=k-a?7i+qM=u@7q\>'`a>M/4OhMN>
%TD#A5QdL@G&TR02RQR@-99:s/$-'&Zck/_)@?ClY'kVk_KR8XK)"0*c=hqqRR;O$JBL/3VbV8bT,h26O6/#B[n:Sm9GFs.JU-f(+
%+G*'#Tmtcm-ZnH]G2"6;0#.sMfabq,^FFapkW4Rq,r9BNId[:JMcq)'o&9bf'FmU+7h;OS-<i*j[:1:[q4L:ib&(_$>^MMS4o%CT
%>,?7fKqVsDH\!pL3U4l.ng8>$*ug59/&^*dP[o1SUYo6<j_GUPPFu0WP,BZ;?0]NpAfp&T(tW=AjGWhJ*G3sAr*jiGkTi$Dl-B@Z
%O4E7@`"XPqHqZ)O1QE8k`A6e6Olq`:#nf$5;)',Z_`ne#Dmm2o?6OG/n59?I/`umQMR`2Zb-Q:q`K@f5MY1tT]K6\=FR9P@T*K<H
%j`qa7%.S=L+EYc5EKg%)K-4Zb1d>D!mRVR^Wd*0W-CF2$nIt?7pN5EO)9LNmj))e^g"knM*6Y2G9=scZ*5u0pJEt$sndK<pMms0Y
%TgV+lQk`oS<^!sN2(!cI#Y'Zp.e\j!6M6e$J>^(7i>O)\eFL\Eaemi]47"8=QC7Nf"*r7uePYOka9?"aGRu#PW[JX1h?^5=-E"Q0
%aP#-Q^nQ@H*V48(<%;L?ieSpTn1X\aP?S>,Em0:`LIDlp@DKR1+eO2rA01=EP%,*UdK>=Eb?4lX;78=ddL[/fE."u:(BgERbK<ZW
%%A/QK7C``Gp1c)'*6\'anr.eoj;IYRNcNWZI-/<nciKbLe@*r55d3Y<Kk#[WUU2^ngMr/Yo5P6rWmk@*1;*66W=h`C7WfkRqhDp"
%`(Z[MlOP^GZjCi'gVEao'dhuDPjqn9\+,haKN^0,BF'Z=TY3m1IVRLZ,7rFY78QLBGR8BB'oT(ok70b-pOn'_0]^QScjP(/I@Y&;
%0hu]`:/"mV;\31b[rMn@ppaq3L7V8Z'+L<jDk#bP0h2H[?C'*ja9I6R=mTc.$#pq"n5gbC'_AAUG*I2+ZHgis`7dS;VgU<W-U<A.
%3Q!SBT9'H)LiuI,SagtE,=9'i!]s]L%\G,=g31XVp6e4Y,A/$D<l'N.]@Z<i2S+[/J"F4/cfkqRWS_<?N4=q@[<c+`&M1S0+*M(V
%S3+si(PNU:Ah2rt?>Qs)o@iUA)ARKU)kD'Ib.!WGB=8al_cHLBi1b_JZ<aEYi5:'$kBd#-3A('jY?4=>IDJ[";N8t2_OlNZ+R6"_
%>"9^+3"l2I^%=A^&'(P50cG_4;[Z,&2QR[U-DWdgJ0p,?a+kr+R7;>qInnsTMIF;`9ZHKfmJ4"@?KT)D,MpIb2c7MKhKREerJ0bt
%iq!Bq50>TVP6B+\!lK_A^o:gRKOoh,keKMjri[Hen_`8@)?1l1a,a[[3`noDA'o,_67JrR`m&Am+0KD(9Ts<9qX:M$j]SRY'"mqV
%dQV8#8C9>?M3U\A6,\U61B+5.dtYCXM2[+A&Lh>+]]1(.+tOos^!V>>Xs9(#XFio$k"\U8D,:t`Pch7I-JC:*Eh\c9l2NcdnH.8V
%^s;2Z1\6k+]R='lZ[D75a1#euioW,pO&Ti_fJ3Mrlca#eeNf$m#'S%%+L-#/=dr<"6h,Y),ENY/!1Qa`S^HOF"!oLFoi'+?kI!V(
%%K^FJ&H[A8[K7he,GuJokqsb*dC!)47lb/Hi^l4J9:BlOpOZgMq-Hn2nZJLV$JA2r++(Y]_L'@M-.]s@C-ggBR:rJP-n!n8dWUum
%"eP(B$A-&+Q]<7%GV!qgKbZ.WW.ZUf.G*tY>368eI9r8@rik&s%#_:)m&oK[o5b,6"DRlo4Z!"F0p(E*5ah+K/:CAH`/:_s^YdJK
%GQ0DhYh_=t2*IY$nI4eP:]Hg8B[ER/ghM1KLDP/X5fu>'*-KQ<LP((s*XU]PHj3"2>D/en>FfnldehNpSTaaPE,M`5hXmu-SZthk
%Gs&VL[<gBhs+)9g6QYd>fjUqF(96K0DKLU<*Ag(9bf!k1m\ft]!@+FZ7pdD[XVbYoBZb3sEaJ&hcV@["iEBa4cfco@J5fQ"q!&ad
%k3;$7hL97WcV'Oks#]IeWPLo23:+-K898c>c5),6s+T;,TM]asRRcbj5%h"Dk=`V$TCH:+XSU\qc0jN]mu@<S.2N#KDu4mVF-\`(
%%tb/tENSYD`Dp0dq>V^>FaMrq7Bk;+231u=(IF=$3r_i(E3J*RV[9D^/<X[YV_rkAX1?#4o?Db1;1(T+e9%Kk$l*X/9>&Wn\B%GF
%gBlj09]=:c(M=+hqeHa*f%E/)%!sA:!;lYm,^O+M^f<(!.%S86;sM-WgsC_'[JB`5*Tb,R+27f(rs^s`!0q[+A+j5!n?2X@U1WDb
%s(LjGcenlZDHm)QbZj,4557gs>993:LIW0?0PT!C@Y"njgR$sH>N)1j>25abaL^jF.irXhDcQg]0i%AAXNC_.9jH"NDb,c*B'Wj7
%eSgXWH_KP\J+UqJ'[/+PH>!1gX+nF<?ULe8=nbS5j.nPKm$"mN""'4ZpLLGo>F3HcBJ.oJJ;i#K8YsfVme%LsrCXEJYsmcQ6&6oC
%>U/F'WAhE'2[2@HFrS2!.7_,'BsmY#e$!eUb\"<[8?#5Hj<8C,m'O(GiQ0\Q^[f%p6Map3PRNQAc,;VC<+R^%"^sdgjL.,,p=t,o
%WTg"(N`/ptr[ProZL<-Q_ocE&GBQ$)#5%_u2)qUP2[70#^\pr'FfK8e#//;bmM41WS[YS$A([Ln\(GLMl[J/9GY5lG1VgOlaVLmt
%c+(jRBnH]!q'W;K]jDXfRsf1HW+4Jn.&QTq<<4+6%fP9hQ/1$k%4gcAm9sM.h.[CjZjUnm+H01JAts]tei7JGT(c"Oqr@NK.]88)
%U:ESejK+Pp=E[BPpo,<Tg=RLBMA%UO<.k]UHc&]_UXOBk4EC&M5AaKX>$MbaYLCgXlft7flIiD.DK9O@*(L.L:93uj0dM]ST<8*f
%[/p;4/k"-rS%WF/K<nWmSStb@'+.*nT)'AKZi%?erk8gF/H9c0-2sRdgM:o>>Gl,)6/cY@^>A7JNc^giMH;f/=\,mJ4seX/62Z4#
%gP=;7TS0iGT:@qtli#]*T>FAe3+id`p76B9<>cET?Ei[EZTn^>]+$O&ljrIQ`E<<(?.j&mNn\j2Z(pi:^O;u8L#6)_!*UQ427h%3
%-7De=o,oClN`R<>S96m\LqIKqJS4i0m6mHgq`4Uug>X(o4?2o"GA[<YL7-8QdMRqXcuo^IZgdf'arLl)5Q>q_Nl=[N>5[+/X4"NZ
%`uG\,UTJcb)]a^g$peA4naZtRd*ClpE83Y5,MXBe:7kk-KnShoO.S2<fGkp,*1T)nf.oSLV3H`Z2#hQ6mnrhP=37#hRJ0K]qsC_R
%SB1Ib>7f;q6L8?RE6]ORDHt6@X4tP$4mDG^Q#86:CR'(0cYIIG::Dn!^"(@J$iaFY-.H6O:qJJCYpdj=\-0T:GMe;:;7Yn;@pbpC
%0:l"uY?9kEI8uM-ld'c-\7F?=b;+^@!])fc-fjT->EQsn[(\NBV#@-0-D+QDC$-N$Z@gNjmoKb=Ap5r!Ej3o(f^9IGUTm:dLF:-m
%6(3chV9p@&b^#2:rSHe'"+8H9<qe['Uj#W!#`T%$Hg08^ZG?aq:/2.\NC?S8g;*!\3=i.Gefe\T:N+eMFbb>L2Q]hHiM8Adj7G%R
%E,a;L7b>eRK[OHDB5,eCNem;OrpR3tP\t'2TLKLj;eAfWHDf$EGqB6L0Yf:6ca%'8*Y(9=9[_;u3Zn8R*1V-^o1+#cj.%Q!eiba,
%6HNB>3L/QEX%'RfC7%qgao06o]JWKb3EhuQpIKu*=#RK.Cp3\,jho<;SZRdt@1Y$S4509-IN"kq39o_7h`GMLVbEG<7L[&^mS5jn
%&86FXiCO,dfpK$$hIi_sg-l&h[-kaj9iJ;a6G#6PBS3edqI#,=o4C6>%uC#/6qgWt9:N2J.oC9+#,YOH)Q2,\M`1M34LWf"=5W_L
%P)Slh-CNXY:2*@*2+4UJ)]Z7XappJdm^EZKqXRtTM3EYaeL#G#]QR-?8Zt<rK4J8l2YS-g_).Bg@\@pa5lC@abg;d5HIs0X!_dLe
%chX:gcs/\ecCgc]*_DBEOdTRLFZ/h!1sXGF!mM*/0,7rMKq8`WA>?BB2shlKPWeCUoX[ss4Nk,G0Ts74,XN]U2&m2u/DeO&5_"_K
%YsMIAo^G1@%,sp)=O*Y2,j-_b@hnPsBi7(eV.*Q&N`@Y9;u%ec]U6jTiR(Ud-J,VMnu(NS=h*J.ldjqPX7h"C\+m>>fBu<FR]u'\
%X?79CNj/Ti_[]dBj/b%Ip7BR4]O*M)m;bO=9&%gCaN73Oij1V8c>:m-G\u"eWKs0Tdse]Q69HuPY#S<KnatDc\Mg]QYNu+sNce;Y
%H@#J*_(M'MB`(A]/"3$`mV&t5WEugd)RL$eH%'+tAu%ogT"V_&g*aARCG&O)2?onF9]IG+S9#Du1pWA*p*_ZGM)`h>brAPMM*#(S
%jd]I8lSjkS]DYcWO/tehYMF&:V295\:>Zjfe4H-5']P=bZrIf\j%KNVf[5)LLZ9B!)4FjYk*hqqoa`^K;c+d;:T8@B8$(0/Vj6t!
%DSp0,R^>-C1ikk4SF^@C[B('JYM#\gRI<6;r35cM?J8&D>mcEuA8@W@[-62q*LC,9S'c,nr(#lJ&T:RRiaC2He0DNQ9b6Q!XmLKI
%X#ouEO(,HHC>rD7^BXGADSD`IIXUtA;WH%"A,k]B6>`S!i8j+I@J@q)N@XTV\*E?MF`9Kkq/AL0G%]puK6pCHqfaq_gj6Q[5AN_-
%lhY=C6Nt:`cPrs6>s"SNY-0C)Wnq&bSj+6s%%cZO)J3Ppo1IoJH9A8L5('WGZ5g5plKu4XRVUI=Xi%EK2YZ+WJC3)jNB>P"#K*sQ
%+)A^)L&'8_hWA5=dE_5pmTt/*Ch#',rjqg2EsiL<Y8qkKpI]eE*[M'=Wu(4hXR=Z?Y9o=!Dg1C)b4>)Ba-A`=lH.i8r/J%BR0WTo
%1^rD[j3-VfZaGFHYG596V=Wip61&>f5Dn<s!_0oZ>\g@aD_'$*DnVHsB[VP0Vo):nqU`u1CQJ02?)]Eo?a$[$/6qM`,i1BOcY/^,
%lc`UT]kLfse;o4-9?X@pr0qc8BCfKm<pI/#DU_m'\*q"VI-kUHfk_Yg?gYDsK?YVY>'Z$cW8G>gj\G^%j8E0E`r0*LrOEGOX.)10
%^L7/L.nbqaHl=>:HM)8h[G/?:13`KWdUI=hiGL`7('b*DC;9R8boP\=Bp[)Pa+IHH\`d'EHL6(VGM;`/#&UYlH?Wt0^/aJecVJ'\
%D`;U9e/p8LHbDV8(mI<hHh9M7Ft]li50Y[og4+TBmp5h3rSHksTI&D%DdUDj]FSA)0=jF!^"W!m\6oX8ec)GD5$iTI[b+]r\T)3K
%>p$t;pu)n\_G+\\DsutdJH)"K\$9cL[JY@LM6sJ4YCD\koNV9M./8c\GOODb]O&4"Gh7-2qX3q&rmteTGW4(h;h&"/j+a7.[E%MG
%5%[_i1O$=UWYI53>cFiRAot5a#5<c>?21h<]"@ZYDXCj%ag^q4j4<m,\G,P_o)-LsQ`F?`g@M_)SbBOXD]eEfdP/)emI"UQkdtg6
%h>1bApSo"A=l%e6qtg/1^&9fn>WOjTEO\k1\?-$lpV'&Cp3nY60])VKnmllYoCeB-[FtL+JfTV^3<C=SiG%u(h#1<6DmH0c@GFsf
%g)XL*h0hCJ)dhA+Ec[UeS+3A*`HARU-YTQ@/=?*Sq_o#XQf\*[hSt<cTBTbZbOWXkdE(_N\QUZ^1qI$_jQ8DQD2+.urM.1HisDd.
%U[%C3K@S;/(":Fuh!*7RNL>DHeQ$O5pRRnhrb5MI;T)+N[[jc`Ao=3cerR]8j7Tt-l:+7HF:R1$R+^i-mt4G<k]EBNUr?W/XWJUd
%&#,o_bO*jDSUN`5&'l>@?55N9qI"_[IP3/)QK5RKUe\h/mQTI!,A)!M=fZDR4YE3W2pJaWn2<>#_m?L/r?->G:-QSY)mdjP9,h[/
%SY!Ifi!XR(ZDGs[RKjetCF6'8$X9g%pJf\\=7\Q>g>\IJgU46&rKCE_ql7-:Hh?G]p$q*dg;3%MI.*K[\@E0a?emn*\j`5S]=GN1
%Rq^p<80<h(o,G$R`Vje::;9!g\Ee(7*8Z*r?b`]0"\5at?f#H+k13nQH'l%P\[oKO^(Z"`/1`T$bBgG2fET%0hK&".k-Vh,r'8Nf
%=T,l!gPn=!BI5ajXh;?RopNGL?>#F6jAuobbV2)R$+>#s)T6"FQ6$JFLjq@eR@62&]O0Ljo!iRe9if$1/3g4;WQCK.`"+bEf$q=<
%c`9-?]0Z-@2[3&&aN7&hH0;&@=oP)>D_9l(Wct6%8`Q96q"Ws!n&`f<#6!/&c$Q2Y=1uXmmj@TYq-j!r2Z9]8I_`_f",>cq)#SXR
%L,r4feAoe&Hb#3u:XrQeIq"eH?QM[#_[j)qF8K>0CRps90ONF:"8^*aj8JpCDp'd@1O4I's6IlVN.8/$QAOke]%X@00\LJP/*ZVL
%Ir0">g!"#I]M/5`>MHF?^:XBo@G(RJ,)sXKUGKWo?\eU#_l[MGo'u8IeU0mBq/!S&&4ESE&B!NmIWt)qL9VaVCAB`fe+J+cCe%B6
%#l7GV..2A@8fZ81K&3S6C0/Hao\Gd,7sN!%=q\@/h!B.R3$1Mtb`2s>oDQMsX9n>i]'%a]^5E-(/,n#VHKm2Za$]?XP'1KsR2nb(
%H/OG9RIDKY]9>]KAEP;/)cKD`S&KI]Rl]53$?E3(\m+rnOatO\L>?TB?GQ`0T$`K)'[LWV9%)$>`QeA\:3LMdR'NT7e/%OW"re_5
%Rd=X%m>K`I_]0I`an*BiBS<`1-bs>s0s?<ADbAAfZTO:nZXHa"1-`k4Y%%XG@2RIR>%p>g'Qq[TX1PR,F>m6<[<B[+37)r]PcT%"
%.N`PGI!PS^cGl.(eK_9*G:.QK`PQa9L@h:Lj-A6J?67\PT0BH[2ik`0'UbB<?-Mg6A2>^=j353.@Rf0[4'\/d0=p<;8$a9m@9V"b
%]PB%$DTsI"UU0?3CJUOLX6#[IqqPB2m]LE/m!S*eOYM$R`eKmkPNC(GYOd$biQF\DCEUAE?CcL?#4S\Bp#c2?@P+,%$TXDNeb0L)
%>.<**k#AnIa(Itu(`LD/I37INgiE!)$e`KQXHUq!n"?`mlJPB%T.T[NT5K-\`P`P55VVX^M[1*7V2_4m>=>PX?.LF8Zpb,"'C-<a
%]jQ,83mK:O\5VcZ[/9@``j&OahE7sGk$1<>mAajELcY=k%@RlEL+2L;(c6'I4#?<`#8eLXC>g`_@<SjJ@cdRUg5?mlLJYhM]Z1O^
%<._-_$,k>C076Z'Hh911N*srjJ$o.b"T>@,\\#HGnd1FA*RiEX9X844V>%jrG'XW>e2lRIq[o;B;f6YTD/HC<353e7F7s&\DNuRI
%COZ':o]fbGbUj"EMZ%EfY`4renYiKMSWu53p@'"1URKs3\+Ihd.u?-IGAjqr?cTuC:'^acpfdX[_j*;?l-GtB$%/i&Ju_[^a%tm>
%qK[N$\CCSQG@6JZWZCE;=0g^]ZM3eRT6*23e`278*nE68f0<6`itcKZqKVnk`d7CGMnY=D`'R`#f,*>n0QGUtHsD$gI-%o1I=(P/
%:A*u@NR\ikG$`#7G<`b>l<B/0h=RH%Zb>PYk%V6p@'J2H:EQ$[.3&6_LN[4=Z-r(_]n@'icI:D>H%[L4rmDT"Q?DX=WB\OJ^3*V+
%=:<DhSsk-h\5Lt7pRbKMV'cZ8&%fZeC3u4p?(YKg?[_ikj7_he5f40!H;0.Er-k!Neb7#&kLh@U=K]EE]_AD;o(p>\br\F:4)GUd
%a]Bh`*3UE)TfcR^HecC7AV=_J(SF?,=hc=Ye!"&#mGWhY*+L"lhR"K3E/Ys9a%s"5q*23L>]u'I1Vkdm/$sLsD\(R\g;1XQd`'eP
%e[`GH9D&?mL0VJHY)k>]a4OH(l;'IrjGo,$4PQ6Oqg>pMjK7-33V;,Tch>ua:QfunKelf^%W:+sf'3dL#tc"[=70)-&Krpqoj)X:
%p#Tf/U?^_/`EK1NXf1-JDPi?IH1j#m\Gl<QNVDF+3P;ZgXnHHU'k'T]oaq]EYMUI5,`a(#%bLFjhmJB2%J0&_loM?pI.NGulKRP.
%-Hp1kXD,'.YIE(ID=)`uNF`F/k?rJH3Tkfm%;(b>`!p(oU*&%XrG*q,pKuc^HZ[\b?SenB<**G^IX\f<]fW^ni5UD1;=.KQpK;jZ
%nIu-r"O,]@[7B[EDaOW[k#TF$QZpTL+7J(!^9dA*g<I*B#DBBd-b_dZp3:1m-<#2kDK0p])!@bZ8?OQc>i.QaX%dceJAgaH@"%Hd
%G`\89fWWcM[8/<VXq-<Pd$qDeLKD@Ok/MShlrFq.++sc7?1AuLJ$<bd84>0.Mk>G]34RGOp#7FbHLn0VCMt<O/mDSSSXE^YfR*WA
%CZ:"hU"-3udBhu`ejr;(X\Z:Dm*E<8lu8r;52U^bLeSeq\mmW^4uaG:^4g`;L"R.H8Q:^c"-P63O$kA++23"sIo_&A5?7J0/]jPU
%s2o[dWP<<!:9T&gWK!2p]II@bodO7jN$u/Y+0'EZT7l1ZNGf>of/fBJ;ipBQI_']6m9o*MYMR!>h%4u>>H?S,O*W*V\gW6@eSCa'
%:Ce3UcHXq2od;7_[F;clDWeGjZdN2OcG6,T<hk`QcdiSh08o/b>/QgS-r%GLDs`]?nEK=TmqD%\#e`J>E,K*=I)r0\e%5Q-7n37@
%L41#*,fctO];nf7c2-Ma[=]9J-c.Y*A08*ZX06t7go.CrDEkd_=$9_](6;Ne>1k7'\%f)Yg3qK'=C)s/VF,b,g=;HMY?Qc4nS/#E
%c:(nRAmNa>jt.f]H@@]Vgkfe]r@aWHH<G^DH$V5i07*,,jkIDD\*6pJLYb6u+5lGB"jtECRk(ZPG0b3"h[:NuX];k)(KTrdqg+d]
%h!)Rs_lFa4]"J_KcgA2A]idE?@9C$AU#Bm3(6;Xk^,U4=L#-;"iRZ]9_bYp$gAKgIqXX"G)_[$lhgVVsCu$o-7.]Cf8[RN%[GrPj
%6Q@bh5mlE8,0QJ351tSF_+F&C4rShHo&.O-Pp\*\CS->s#JGSoKPhHdUPH1cFF(8j5Ig0C+/=l/I):q!$rjEilYjMG4`-4?efNVY
%d3?7K$,n.EI._B=p:I[do4\.]%+#OC(2qc-bF`05SB[$K9`Oh1Ci&r@Y=VZ=n<M=ZWqg1bh`kFM^3=lTIjgk27/ttJbk9p(k21me
%?3]_rB&Ui>YREBM$od-jIbN/\TX6HtF`h3#]A>AM)LA)<>Cs%_X3o5A%GHTHcW>Io#@m*B_[u+*`7tAa@(_O<;Q@CI4&>&;pT(p<
%2m6KMaA/LZ)Q%HRdea#_8B6"b]B\YX)_[#S^3Jtg[sbTko'l:@CHUL,XqqF24a=TeiG2.g3Tf`nI[=2[n+kCIF5pc4'<PMP9>b)C
%L:Hc0DP)K&Cu8AT=RN)&c2/u^5+M:\S^-Jd;*2N@a8+T`UqO7Ok:PT6/(qAS:juO61g7C>\V<a&Dfr\$3F&'2qR5i,W8k4+k*`m@
%@;`5,YD+,bBfhk9rJgJpqr*?]M7u..hIL\Rl/:Xb9eu4QL.)hk6n<LSr-Q+\7Pr]18JR5]fB[K^\)msOT,,T1Lhh5'.@nL,f4jH.
%lI;M7Y:OlUAqcmV"b!beSLFf*cLSI@Zh<C;#afskG=fe)GtE3m?Hg-;q#[br@f+lMAZP71<Z@YmM]jh!Yd4tU3F#pN*t3n6TO6?=
%H+`XHY$R\.Q<JKMT$XLHBCeLJqfZH!bPTQ8)!a:gNV?0YF$bK3n%0BqLSP(H]VU7e<e$>GpMR/dk.XAL2,$$h2jN`k-GHgkZ#[A&
%@1kQSh*7Nj6T0rB)6aaF&fJC6UnfP+?/:oUTtNJ!h&RZcp#arXc`?S&odU69<5ig0a@JL;>IEC6Im8>Ro&Hc1\mKqh5C1(o'iru;
%Q/rh]VmRmJQER1[fqY/kD)?.5Y:P*L8a:!]@Lfu"T)[@eVZ6(O`:1V-l?:4\0!OEVS!ChVS#^=#*r@$\GHTIkbIFS\/pR@JgAQEM
%V0;ODCPO7L\ibK9!>gpX]l1C3a\9;ED.@jdBo+V,<@ODX*6RiZJ[IM0hjh<j&m\f'+:"@Wa*P,!hckPKHMu;ZAqJA`GP:d#]6AAW
%p@DI#61$j\oBo>>p1@FMr.!/Ufr)NiN@uC"NY!(KMiFWgmegrV[ccMO_)jtEr5*7'qNiu\JaVCR+D#\L/jJS6QAW4tO@$^c8?_u6
%7Q>dBK36oeZf80l=*J"@]8Sq8!&0c[YC,0%`Ljdq\2f-)0<[rZSU,ogDu&(#cB69EWngk8?+\p!CbF&KI8X:/k9",&DRN&W_Rqoh
%Jpk*o<qTZE*NRarh0SW'pUQ&tJIGhOdu17P.pDD.)R"Kpf+uuQP%p<Tg?YBfYks"(cbeG"p0Y\'>OT=1B!]&<@:JC=ZbrWrH8D'K
%[AU@;mATpG`S?7[>:b@BU^K<@\4'AFrS@=eg\@ug]_3.^,gcNIJ%3)%2RjcVHd]ERQRq><ZG)W)EPSrJgNT"XmMt+iqq-@ENQKH!
%T"0m6r$NA(18tfa7K$n2Ipq_AVuD!1%Ij"J&(`^OT%)cMkO7P[g%n3\JNTE8_b;rRHb8SjA!;V?ha*lZ\Bgaak=g/fYks,aMDF&W
%r+YJV043mD]D&KkhtStu;<(K#=F5GW^roI!G5h<dd\Eq"gYn\^0DB-;XUV<m'#@_bn^opVni'2dHk7ZT)Z:6(\b>P[d821c4Lb<3
%/tiA,2c"(#GHfr:pQ0]JH1UZSnoF^-p#PUbT-j7C%fP[je_R"_&6&LVpTcbKNV(`Ceg\I^#F./!X>(Xg\'t,cp%5=ACnGlSX!<J+
%r&RG&@PQcpc@h_`$YC0`]>pJYYhJH7V)_1)*sgU7,%tib6*l'fs#(M5q5AXF6!_u,%^*H1pO$gfiDm(2f[ss_Vkth_+&0c"0.RhJ
%J)7JChEU:Ic8\Oqf3cT`-2(UFpK/*Rqm3?NO;e=V)Q;\Bj&F/YZs2!gYd9?L*<0`JJ%V6c5ah>"c%k-"Q)^38i;d5qr/uHcm_g8l
%cLqIEiC:"4gd]fh[*W7U8ZicE7985(Cd"5YlK"DbOhk!Y-\JBPMsYQeY[-;VefiChO^6].[nlR3ViaFems@fYfP'0G>N]Qf'iqk,
%2'ForT&]pSp8;KXk$-;h(TNIb5Ej>sHH)2p+!??N0l64uSXo+i)stp>O=::=V\U1A%n:%_I,3M'eSb?EdNhM2*bF`I409L3S;p6W
%^Xi:W.to@C[(H2O=a%RMBB_qJS-V6<cYI;]gnZ[AP,9f9"4a`bYOe[4j#G=D*P^D%je0TJC,_c35(+/DX9XftjqC"XD[Y,NZ7?T#
%F\Ze:C!4eqpN`sk:0Hf))R8\PJ8eTCD^-H5Yg[?2#K'RIouC:mb$M,s;V=(l3ok^R0rOIie:a]](HNhi>O>%X1LNe`eiW"&KPKUK
%X8b\J2M]&BmWN7d)Jmd#XQPA,Y>D:lf8B2Y3;qb?JUE?A4knfjOHn\:^bD1?b%B[06Ha)XGM$i(S5fK$gEA*IXB'(9'$Y3^=@DI@
%`V_V;Z>tPEDH+jK8mh?XRd8o;5I.&I132#fCZ'O*J$bZbgeakmf%k*^2nE8>WUL8nKRIP-gS['kR,39rEaSio2E`k92('PmHC>2S
%dTj#@D0%&T7_a.6]^h+is1!5ip?BLk\'N55SbV:MH)X_,<h''E?=QMFh<Ie^hfN3hm<*d#,9!eO0r;/''u>Sb-tbG(Bhi@@lYPKL
%aJiD"l_RT"-BqQ@GhoRoN78.RI-bXNb>Qt?Hp'C`>^;IZa^:hjg:<sC;TuiH1L"PW6F\MfX\5Cgq!g>@/hY/$;_BYeEJY<*'*^Y8
%En(=WS6ge_,)[)F7_uCun@@&3!-9Y]V2GW4YoYMO[\XLF<Y%YGiM?\SUO=&mIF+RS*UUSKF*uJSP2I6!FrG(ZnZLY=\7B06&UTCa
%Qhj$;FmB[Q44D9mpn\bS>s1%s`tAN=dBpj@7Q2oIZW(D`k$FDrGs^Qr*[*fk^Z?N%@BgsD<TfuIMinF=]u&Mg?GuoU\bFiCB%He*
%*&UsRm';1:X"#Y"r:85R);N[:1URuchtp*ll)33NU7^rq&\kFGk)\F!EQ8%Yp6g95],Gs7`6TK[?Bjs>X@=)FD^_#-#l'6"/^GE6
%&,X5.E\AP@ik]O"#Ls*`D(W[l22MrE3<:h:7Y.Hf$d(8*AJ/;%,cK;E`$>?&<?6bo"'&Tc4VLg2OK9H!dW2G<;IJ[sIiMi(ejb,\
%nC6o`!)5jeVEdEE7#(i#,/k,+1Wg8_f9bbX.36Hd-5BL4=P9*3GY9u-@&*kXAV*;n.GU<&$FO>6S.I%OKSQ_R\io)mZ>^IHJ]!5"
%BMTJ6KJE-i+Cc?;1b6mOE]CB:ma/ufVP__c`rffeJp537;1TfmOAZC78ir7#J;4E2?4oYXg8#YF_*$SX,b]Jc'Lf8[+FZWcTJ-`K
%gOLC,P9(1i`sW`8&K^i'Zp6`P%U]hQ^c_:a@KspO#_4;G)"4&_p>t7E;;N@%!o&>4Ru:KQh!'.<p2;^'gjTS#?/m_,e!INEM=O#Z
%?di\;QT!?bQTj;^VcIs6:1\SgZono\'OOJPV$*us.ZL,%NUW$Ej:K=%?ARk0W/6;f5b;ae!e-Wfpn<lF=QuLMo5T=ZR\,K1h6Y>>
%H]9rX&o7#bQcs.6)(q=il%0D@#<[K*E&mt_*N'S8J/:RLT28!Ue%Ul5#IUD/J.<gOFF"Q.c(%mN'-egQTi(s2p(<Q/R\aq8)=!;Z
%N&r$SPWGdNE\#9K5.VS6,S=-VR@11iH!T@Ghp$cK5h#F-(4;*sU`"@W*rH+rQE'jbjqZl57@KSe$;BHDWJ2`B?pM&Y<@Fmgl*1Y_
%B;teJiHW1?Zn$5&:BZ_%Z+:>LLrSf/KuQd(bh5r>SVB<OXY/Bbiar4r;7u./=_c#0BqBQES6HTBnTP]+[*qWHkQrM+@`Kd(4CPa-
%&n/_JNip0U$-4J+Qr*m/0d*D3SAUVGe-1C(hM3^?UKroaU6umR`'9&?Gf7r`^'Lo.9!ckL.L;d=MBsBoW-s6T%9l*1^s51&2lQo9
%`s==E@fCqYH?c#%5RiT?ZNtAo5o;o'&4PBD+X*uC#m7gD/j!Na]%>(045t+/XC;3]'9I(dkl0/V2EbQG0BMTR2uCAg,Ku:_n5iIL
%LqmMLG*MKfnB6rC&nuWqS.HO7&!=Htk6!hI*_rU-;F2u^q6I>(6Lb:Zefd[_EQeL"-Vbp?:FG_91S%ml9*sD.a9Jh<Z7&<%f[QAR
%'Sn[npj<^hbk!Z_0^!<E6",sPA,3AMkti-mY!gPd@%+G+-E!6_C9(',BX`>B\oUo3S;n$3-R8)eH7IkY.>\97bg&?1B9C86bJcen
%HC:DK`Ch//%]Bte,j6M,E=bn+A#7sPj$d1kLeG*bGb[G$I"_D?[2Muq+KgCuigA;<@Y&c22[(r>:V[?+q$\Eu%g7J3]:&\tWmT%8
%Tg*j(nP]9?\c<IE;M'-*\>9`$@]#qhPS(]dP0fH^nCT;p8O`p>.e&k05js[i6R%T#K-7rt?)I(Gbj=R9`gorcL]RGn^qfOC?3.1`
%B1Nkc:;LHnQrHZ;<&0F9O*_gPW/<,]N(V;"H4!cU>BM/7ge`L?Y@??9!b,`b_&2*GgF/";6hmT7`/o":(Ic7"oIh&oaK$nH-E]/.
%)M8^-52nq`2pfNO9k_"YL*+l9SD)tdI`=X6'Js]>@]7<JTd:u8!([Ob!Kn9QEY9^T@@J*.lmT;(9Hqn=."DlFhf087KOkfa'Td!9
%-Ua[jiNkcW.L:_?2ktGV'TeMK@(f7MiMY8gF_)RDB(<gU"*kRsEm*WIJ)+&<kp+qHrZ@a6'korLX*\$*bS(]4^C[tW#$!Y^+L?ch
%d$5l%84^aY+g+?dbCDkY\I&]a.L#mK=GCq)'M46C$8MT59nBNrS-o>e_@2NaZ(VO>?q-07K7TT6TH17I?YR@s9qH'K_%9E5"2QsI
%M(o(mK,<H:3ClQ8,XWcQ(YTp>WUca$:Cel`JO9+8SZlk$Zsq5Z!&d7P%uF&7=pSdu2.)0E"27=F'P:_RKfl)$fFWrlc%6=EpPC7#
%D@J(Y4GJCnk03B&MAMc$KKD_G@S2=<36CXCq"E:@h*MA#WW3?n`r%a&:BV(%n3TpB(?\cM[1M!d6o.%)p`.>@iiL_JU9+n`Jt!DN
%NF:FK?AtU,b_uo2WdsG>!6%tF?m,'uA1-u@JKLNc.?\po]I@HIE9in:K4;"L=`]8?5^kR3U=,*r:XCp]RMC;X@k"+8i"<^HQ.cSj
%"?Nd,Y)m4sTehgZb,Qmc:'bQc.41id&iqLaOD-5.R*cQ*R2,rX(Jf,D1.#/(4sZ'2G[M7p_Fb@[\HHi]e!r`;5k#^H`,c@-SlF^0
%$%*(Ld0V!b"6'W2O.dK.Gt)P_4j9%G)8AcKe_%nK"Qj`0J2eTnruAJ/EfUhK1JUtFd<D#/&[;K:U3oAO1nId(f^hLNNE&`'Kt&KJ
%c?`@a#5B%e3Vh?5VuBc.:AmD@lhj2F;Z@6#1'64SltQ8)$m<nWH2oWU),MGcJ04s`oHNVS9Nu4r9c1`3!u.'_JAA_t/n&r.f%Dd4
%8s>r(!GBb+#GpmG6o?oV`J8kr@;=^/,RtO+he+NWipVVQ`0r6(eDTdM4-KM$#'ko_C<4*si=3jN3F3ZeM,7$m5dVb6Ab?GDQ#sQ-
%9LR-q>ZX(c5SK%T_&aA37M.?JQ"!(>N=cHLY]>+8;<\?Q-9?V^f+L/$ZossJ?R?8H,")pK"Vc(hSY#In\sNUO3]+TQ%g.hS'o4M*
%<5d<^m'aj;4h>'26r/Se:V.5Eeut5:[BspW=^=P8b_"p`JHJP6,r$FDOPSY`c7dA67/8hSpbY\i%`Jb;)JZ!#57!W\&F)t"'#KV?
%#_R=T@Yi/SU/RKbLDXOq&M+ZeP8Hpj!dGNLDbcf*So7n3Sl_"%`9UC$I^hpG5ZSleTcanR7=d!P1m%A[&aqU((rsA0D#bZ2P$8,D
%'YD9W5o^38Oi6TQjXUJ(lSu>B6Fm:N?f!5a",Pe+,H!M'Q)$qQ:07<Vd5N[-:+WUt:rYmuWB+92^W'j?\,niH0unt4W8sL[(mHau
%U,b_6:*dUo*AIrQTa.]U(7=$gKf#&+QSD0_"^j%<MDjgd-.:FJT[11^%\U6A0/0IjL%)6",UUFWl=SD?`?'ub5>@1UJ7+XE/g+]s
%H8P.'QE65/6op`r6+<PMM]kOd7(+Ps.NKm=g^6iq.ekJ5`+cu8S85Q97KC<?XFFI]$hGQO7YWph;@9FR8E:Z[jTJg,&\Hd1GhEKe
%'g8jks18OF/3H^9U&9P>4Bus#'2kKOEE-\;3"B!mEc9lB0FG&5*fL.[:fqFe`UA*!#-8eT\J`?&]BE>869V]"V(0t_i)j"cB*>Rd
%U5Ud:gfm<A)0t-Sb.++"f`M=gW<[SROVYuDP^j9iSd0lk7laH-/BNuea*K!ScOER<&/U\OF\hSbpX%5=4-P>YK4],Df0XLAfJ@F6
%*GH](ghh_J81nANqh/6F\=t2.C.1`dbh!Tf^5;X>4=CjoWY4WXa1W+d/0qkbXcc(#Lackb#AJh(M#;"X,RMXHjs\k;_)ucZ80F!'
%S:kS9`V+NiY@)i&JD.6$AO<7G&q\-Gb)f&AJ8;U3.^[-K!\Kun1=^*:C&^R51i/l)bY8KR+$(?o]Z@>k;2B`TR(9R/E]+ooF#7AM
%os3tQm'NC(p\&*e[7!WoJ#ntJ+2o:njFJ4aJ_U=,fX(Rj;P<o7Z`MJN@."X[pELAe0:#b:I9Ri*M+CF#=hCt)5kqnk*U=7NQ&"j*
%Fnnjaq<@'nL57&>*g`ase(h5\Ug?<J"nE!&Hb-M$M6%8#OER6$n0I;iSH'&]aoQ'RC%pl7a08St6fj\-rB8b6'Bl9W$;0QZPd3pF
%jkpC!;GEN0305#KX98IPac;n>+*0TJa?9"FGtm)?;\HBt!>Vl.+:pk/?j7m*)9dNA=k7(3Y])MVO)SYuEjq>,m=9@FNU,pFW1liD
%.s:3`?To!_U%iFb@".f0(uGC-h;adGKMARjeJ;%9TZ7-$$4T':dr,V"kJlX:_@c_,=-.TjY&Xq<oeNoQi,`!i)5TE$7N,h`<(7`i
%j:mX!W\@FD@5r]D;^_g8/o#L6hgLi<c?/*PR?[h,0\nk?(`2f$8Kjlsq*>'0(b%SChTIs->^esqqVhMW,_V@Y8)e*?&6d)'P-lLS
%+bIN7$]0Ce0q;^_^B=9]2"3)M$*Fh.E5n"C\g]D"'#YM;E3'J9&:d0+KBkj%(QIPf#pJZs`&41n1")lNp&iZsK2%IHXZQoI,,INn
%=j\uaaaeVe4h2_`kdX&(h4Ish+iiJ+jfO^=7fNH6LbX+,9c>UU5sE2TKRWun(S3qZ$\WqV4S=g)X3$e5b3TIFnX%\6!=tP??H-U`
%DBKe3o*j:3aU%PV`s28Ve0E<X#)VgVf"Q]U1/jV.q!=ZRbN=)ObXRE+%!h;`kVH3cJaD7WVUna:^U6PG>:,=@Lo%*_d0pm)Q''bP
%`6.7-ZG]X/N8r*f2_6CQ9@,:q'Bcf9I.p5lH(5Yil(s?=`b>qcZ)]g[cVc56-hd'4;0m-"O4X.=/3Bik#J0!CO)]mV/'IFG&$;8$
%-_p%1-"*0)KK]IX!q*k>aU!<P01,_21jhs_ohf`?#%46<,TiU@5f+@hBk5L<\0V,P6?0:*_C_C;=bhnIlPB'%12rfe_F>X2,lK@C
%?K11#1i1A[&O2s#7P(Q%_NGb/XD[LIM0@Me[j#dLb6W7k`.EI;#<)ru0inF'.uWeS9e;_qHT4;?+`h(DO9lsa>m(d*WXsTP*I#sP
%TEh.<_?<$>R^XZ\.WB%*[hk,3"u^tpPMONaP@lP8i:TFt#pAU$i\hA6$S\9&LDjOD=s@'%<(p,U"$6cB(G`CdKOYQN8"I7&Z"5W-
%M#i](AU'2@"<rEg3ApqI[^#mO"?\++cku/#To#UKi#mkR!jQ%I&l2:BS]O]Yn-1UJ4U3]0_JeNibLZN;[hLN]p^tf;O"13+$Pu]A
%FYfV4<9\+Zl\<]tOL+W`2[4LD4TtFOiVS'ElGkU7k21gU2SY=;"s+$$d`IK&auGc)JO?N6L`ngt/HtQZ,87TU@a3k)eVGHY0OCD4
%/r:nnfa/q<!(,K1fm+KB?cXU#'SQ\AKM_@ZS_u.tb6YjH#PBrC#>hqF+s?MVT@$6sMm_Gm@itdqmN:(KWpGN1g.#Q/E9[NJ!B1*&
%&tbAn(F?RWc'12_A'<1MQ.%.IVeIfU`8Q3!:AmEJ]`e0-[X6HBI%fFg-E\W:"V@4YWVS@1LD;;-?*qOu,%f?7#4ZtaL06[ca]Q:>
%HbO_Y6Vc3@+R'2(+F)i^<M0koAThM%RL.X,Qodrr.Y47L/=0nIoCuK/krOAD[Rn\%IIt:Zj>UIn'F+sq>V'9_";)n(b+>0@/BWC7
%%Nk&kWJ^cg%3UZf'9R4hFW?3>:;T693<OgWK9P*[%,WTldpO//&tHIA!$mD[84#@T5!q;EJ-e\l.VF>ed72:RdYq-+2J,8bB//j0
%?V!G@qam/m4PtK7BKJO\@!q<$N+8nu7^9J)po;-o&eUohJ:X#EYf*s?776!-=.Je'\lhT$i`W`9M(Q]5,a'lKC^D!m"#s3d9T+q'
%qp&7[/]J.ajbeVP8$hC#!>$Pb8%;3t8S%lK5)Xll""9ki;PFGm6>Y9+eV1)XdJq.AmhV7/VAB7HX$]GWRmnT]P!`4(]mA@tjs+(s
%A()Y:@XFAR\\L*2#m.\*X`0Co!5hEd./eMqDPq:c.lldKAG0u`6I*+"K`iksYZ>>AX`1,0S79J-cn')LB64+tpKK@Mqf(j5.[r^I
%b$EphoN4h_S`5_D^>Dg>?@7UFjuj6^kj0Rpd])fnN<#/1F?fu\1'CH+9O`He5EqNa?p]MX_2,m[-)o6)P+j1m0LR_c<&fZIEV>]Z
%g\h:X1Hp")=eAp>6<`_sZ63969S1nK&_]-UQV[o!l_Y7f0[-)P>%<5V(3d#i[^A?N=]`lt`^t30C<K.pquD\HOU3CLm(A<"ajQA7
%G.pIL5UiTJi?mUOVN`Tj1G<?Y3b*(AGi1Q^*+u1G>^)\uO#$2;:@U[kUV@(;L`0kJoL!>)pd8QA)2;6.f<@'IIE5QK:bQo7#%R_9
%&.%D43D>Y>#5F:+6->[b;_E%'B-?PonAZ]!$?eTXJN)E#]X<1h`$e'%O&+!;0_YjT&K@UuBkXmlc?[Y#D*es6@7Y8+jhlll(epU>
%R!o*ZI)"81MpR5iSoUGp`6CUa/pW?5J=Zq1L!Je1\/](N!lfO+fVsRL)rF;iNs!!&_qVZp-3T9H^FqQB"N,6p:CptY,0bN\2LNB(
%Zq_.k.ss[%\tr$M,9h^G+UOR`'$`tPhaN);T`sAD#q^<]g^g6A.?=Gs'K(^OP2Pmd_Jg+]iH\FH=Wk)A::+8O)A8>j<,;Ol#9b<k
%SsP59dtT$tT3KZn0QO*(g][<hZWcIFZk+?-iIl:,/@%D^?luX-.1jrCSjC'-8/dtH4Vt'rr>PRs9M^-(9`H,h*Wm0W<lNoS2QY=1
%B4'lp$]H+A7@""?5oPC<INt4X!'ln3.6GMj^`n_K_+)JZ/3!\mAm"DNeI[7BY_;;WQ%Bjd5RTu4l.F;FYXAmF-7-oGc]_t7L+AXR
%W@bo]8G?qZO2IdoP8nNC7!?a?Ci:;WT5-nG3Z',<$hFHGd'69/PnF!lfpm%cG!]4_2[_u)L^4I<n2t7qrX%R'b=<3)*u^'5NDFpl
%JA."Ae1_T0jsTZ_0M-"LOt#Kr8A/i_2^\Sqo\8ibAZ-at0W9WVP2)L\n?BhD<<7j^hiAs"3RL9_X$pE).S_8/&fu>gPou6^2o2Dk
%`QBqR\BTG[i7KB1Q_)$udqXHQ,<^M>7sW"J'3B?\Ml1jm^t0UT+G55%';d-3"/>4@`GHk3kiLjWrddZH&sG\SG7<<p7%@X>]99O7
%(;+(G@#A!H`:0iQ>b(a^%LD]pJGhO&NEo&o9B,A_6E*=>'BP$P]43`@k3o^;A6DQqORe?%Hd_g<FBMD`q8<CO5C=\2K'K56I$/`a
%];)&^NBfi`@KMH/7"Cm3#pW3@qMC,6+I0t0Cib4J-QBJ/#qMN_/pA#V:k3:&;2M!O[hc&N=U9*.`$VuRTTs$$@L"7R2\U)GVZMmV
%f$'i,91KO8qA18(k%IM'6P<1#.MZHS;[8^r->DO/EF#%u;BZl]4C`4J8)nh6SQ<FOqIQ]I6\iS>(tQ\]>MOac>;`jl8\e;(8:O%7
%]u*7l[f^LTORHRU+Qd5kk.tW%Z5YFd&2V6m;B(=$^4Mc'Udm*sX"0;%kXu*u&sa@I6>0c_E?\S:<pYGt&r1:M@uj>lbMTOeOmp>N
%&SHVZ!r7jfkd\VF`W$.%KaEG@DZSukKn2f*3!#1QIretsROUPM7S-pSW%0\>5WDU@&>)WFpRO2.,4Q$B&o/^!$k!ef'8;%=J@LUI
%UeMP)4TM'r)O>1-:pndh_^S2WNh46>XBnA>@u:RA>"X$IPt\6/a9MZ$:dm@-RSUCe7:f8qYqj5+"uED<\0MK5JWppY^SBp)SN@s%
%cskA`JYRYI;hI/o+;j&W^>,m7:pCI?KHEWc(1:sE6DW9]*BBc;?057[/S$/=pdSAPb"[Bp>K&PXb$c<^;cp1nAsW3b<%m:+4N^Ge
%UI,M;TlWPHC6Tc\GBcHFSUJ4_iZj2f#QR+>J<63B<e;u"lTiCZQ&qN)Q-O0OC^$#Qj%Lq`oNtg'rH/u?JR."=P%6+bj?)Bn4X;ok
%&Od=AKYJ8ZL^2q(jiAG%Err&IM_u)?*lD`VgkCKmUKk$3)A2mt$^UI;rPVgJOe>tK)0Z"SEIc24b1.1l1edtHQp!L/r*kEa2+C9*
%YrF&WMrei-"?'\YOD>=11qt`/H[;KS8.N@0PR?:VP4<%Z<1j1%\!)%cOlBmsGtGBjaEi$nDs\i/GM,$SZpOCEIn[Kh`=(#pDF3!W
%6^a^&o,],*>QAlNMcD9/pWitO.5g3SR\.p:2-b2r_tC.ao,7)^ObmUqlIjJ]8A-FdqNHEflKd?6q?t_grEi@0otO,.p$\g5m*Ap1
%Ig24;i2dSh7KXH@%iu$7_D$o";PXdY:R'2MjX/A,0MEa)O5j0#nn]<j1$<#Ng)!=9(am;WcU^,QZ5"jNhL2AM-\GXQVr852CUB;c
%`\p7&Lr\0R&m2(6^7?BG`bA\O.$b!o3,pfBMR4b=JJ*eV%-1<CZ`TdU'cD?sA_?3V+fYU(R6VOJa8a?(:Pi"b.4M0P+knb8&P11@
%\.#%4T#s'*p=9r>#&H(`1(\I,M-)i.L*Ecf!=<7?*XNm&pE?Rr>\sd>/C'Rt[2&siW;3AaiDq@KTnG-%aAt6M3qhpi4\>'Ii*%QT
%8\kP*:g]kGGlju^l01]bQ:?*rJ`&,^o$rd_%7/&B)!\1W28tRd&L=VA;U2\jQ3aQ&L@G"/c>^u6LU!Z'K6f>c=B1WZMK#)9EA3H9
%`'FpE[qlZ_2me[Dp$DNk_74(_9hfldCejdmZ:MiD7KT#qMCf`nQ;[t6/H?*f(mhKj`LPeb1Ite6C0V"!?p;dHQ(V`MKbt?n.lh7o
%QP<3Gh4):GQ-\.8LbT5_YL==P27R.M!8oP]J>X+8\nXpnb0F:H_R/]i8L0WiTIApt+ujt6Lm[\kC1'!;1EN>"/NDhNJ:8fZoqd4%
%Wj6sI)lI4<c>(;;AF.0o-#+-K#cHp++;K,&5pR3G9CadY-qGk".aFH:22a_6NEB=]rrU0$5YA:96tBFEc5h*NKXatARg8j7(^JWD
%C-fAT<*U1U+j,W#n>lj:'ns23!j8H.AGV!bV%/&m#'!CJ/$,@A%F@cG0Y23\5VY!Db9,Y@)8j_@^E,?6L><pRjpd[Da#LsC9T:aK
%?l1uq"%c/K1)`7o,CgmB;E'L.*8kAd@!EqBHX&r>eI\"OOE<6M]+<AEE/6&!&98pt3-Z\Id"pEi38nO>rm4bM^kcH4Lp9EUA/m@a
%:"^nMT@i'na@l5m7Yj#lX<^(kruX]b&u%&`QEq")AIeNrgVCMHJi:':"29mI@^;WYG48:<"l`FiDA`JqL,(HF'NqTC>D*9m`#6+9
%p*//Q=gPo@M.8e/gH^XPXo]k#EY'0/=qICo!9a8hAW`3ViQ2'dUb>0S=H0a2ZBPXR`f5ZL7<a9aN12Yq'Vc\11fY07,`4<AUj,?q
%S3.6.%B;X35QHpt\D9G@b#,),YWsNn?X.](kenqGN=os=N,lrZ1uE`CJ<Fh7([=O:V>ir6+dZKooqB/+R^"2u'`00J-a8Oa`\Phd
%-6HX-9aM&8$i2P^`8u:&gLDZ;X]#C;kY]F4+A<%NgZ'7e/h!G*)C&tR`<FguR1T%d\1VYTI#`2Dm%QHg^bfE[!h_Pq*&eDB>\A"j
%NWV,WT9A\8G)\ag>3EK=!&Bl=b/1e@#GG\aTO)u0+%lT.RA$15CQqTIFu-_4k)[.<Eg:"f2OtP4>1,D+*_5c][JV;q/8[.ueaP[R
%+I+j;?Rd[MPsObm(3(dbHcU?ka\TGZ/]?Yo:+U7J>ES;fFH+Q9C8]rbI\%6S![$KD)(,T\Dr$,[1hP+KPHKa*M@S(!UDU8IS2IWZ
%KWM3_@RmdIVEc=-q9X;]KSeh\[#fD,G[dgYIRV]8fG]5^/UB;fQa8M8hkA?t@J@&!7!W2eGi>kNp9sP^E"Ip22H$h]0T1fOV%>_]
%r@S7GG])6!P-Pq8nLVVAYaq(qQ=#[^oGq5rc_<hKG9;Q7Qki6<_#c4k#QW7D_uR]\<nfSc$Y[Zl8K;bmTkgI*V3Q4f!b<kZQ%`p'
%VNU9-s(Ce+H7ZUhFM[nUr?&Bf+9grG8`t,5[K51>"gec4<Y`DdWdk'DpE6#Ug`o`qS5cKMG5%^FQ997QN(0R*4qg-VoIU[32*qhP
%2]>'Oh)rsJFj.<@mjWSN0)q>A)te$W/;f`<-qY_Q?TQ0tDl6&ia>nH$;3Ln7'61d0J-._klLOTBg*Cj&6&fJdi1m(1q>E/$6Y*PG
%'U6Z\-fXE-ed[Ef#\AS0M\oGhT!=ZRnh(/7@qNR)CpDsfk\<rbEA>[*ed.\T9$/WS^1`B?dfUQ6VAZqFk;g8<&#67HkW4aS1Mq7W
%&<L(]VIf9cR$PiYbt7fk>XsE8$-cBZK9D#d1=H</e>@-Qd$R&9^V*qpMOR9QE$nF[qH9>D$p`U3(s.Tf3Jbs,Aqo8F`-L'36JZM5
%6/cD-IU1QeVImo$$[r,VX+QR)nB-TDjHO#KXu`$/nO6C5jn\Pa7^HeulKU.Ff5Y++cL'.OI[iq7r(0M=.uDlmp6'b$1ERdjP@0!U
%d8&?O%Wai>AMDP+'"HWB:K0a;nM(WgC*$5j1sJDd4O*5jnXhE_aP<K'$sM)5aLj_</LK0GBEUKtm#8`eStjQ)0[uke:7*l)6,T8@
%S4fo3O;mMMf]g_+%FF,QD>K>a2c'$k+j3<IA*LZl8c3QP-IlsC!bGKA*Z<(!49d6hKAu^99_DgN>F9jtG;UfJU45.Y6!<TMX'jkt
%j,;mC[#]ctB%)^oeajcam!%u1lT+n)g0_WfAgJYd:O+\o@4,pm913Ub6.ltZ\/bMFe80hc?mC3'_YuHla=&Q)!'gHG:_Ef#aah5;
%3Q"PkS+>BPY)@t%0VuY-YYCCGJ7)"l`Ft!h(out`WN1YL1kLK5B8@CbC/]`j?3j2O,%AGoR6%.OM"<f$<Dehp=dJ;:W]gfa/H,<1
%2/_unXJ6)6gmYn[#]T2>"]OI0nYl>"Y09Y5p'Sk8Qg<Kk?4C@bh=i"q7j#ik-e@j-T;Q`dj6O!5/_nV)4tZbVF3ZlBrr$^%h!j&/
%q5/5cR5c&R_Q:4/IDbo*a5_2pXp=??(n^QjrBR*6\NV&0HF/%bJ()`Cg(\]$>]t*2"Fk:+#)i6hqHS\PZGECa-Jqcd@[d8pLNa4%
%%fQbLec\XJQ.)Asq%[JtK]3s@34YhuMl4=PhIsHm.-B%ld1[m%M(,u*5`]O0%Y?4HEZ`BhYqmi8@:S2V/Xpgj5gHL=Rr013U0^UZ
%/+?<*cd9_)3CE7bbo%]<H?1ga9h+qs`+t7IPu#7Y7!eSO&UB`SKA[pRiQRYh)-n'/A-kr0L%QU\`?_-H]Wm+1RO78V1@&Lt%P%u:
%`WtA#bm;nBGk)7b7-QAK[Uili1H(UFQF23LVO0L#<JV6#7bf4S]/O/#YBTU5lhL`38&SM)Pbuk?-VAET<1;Tm=@a2>Wrha-q_Rf0
%lPfKaH!Ri0+5DWKZ&fVF-t_O^B<Ei<6PE'AC_0WQ)QZ;\T&RBmgS-015LsG\Hn0>Gpk-'(qq#_^J,P=([XEs#6i8nmTCnq+f#s6+
%@nD]GWu'm(>a3Q^VgSIKm`_*.[rX>F[p%+jIIk?uGoW'Ha$CRFrVj.$HNCldPquA5TK+0o2P<X[.RSX67022/!/(bH;in6jmgB"c
%E+&Du$ZU]W55O181[bBk(G,`WkEjR$CN&>!4!qV@RL7*`g[rn*Ml4[Uj7LK%Q-6[$rp[E=IsdA#Iq"N^Iq"N^2\V^U;N?7uD=jM5
%7M[.'8L8mf>OUVEpH5U$N#g:qUQ=-#kMO;Wj.[1-]a_:.VCqf0Bou-\5^EZ`T[/gIge@2O6%;i5oI.NEFT]Q:l-(#o-m!IZq4Jnd
%:;MOthdeb."e#fR6gJIHZg(1+V<6]gNIIkq*luW&chqs1n=TOMRB8+IEf`Bp']_NEY<Gc.A24dESd^K706SLRcCm6[UbBp_g:`ti
%Fm-TCPX]mgRS0S%:9ksgL'JBbK]d,lc8"@A:h1/,g)-@dbRN(eH<9U2lB`9QMSMD3h])N\\2@/6l35TML1ojrZ,>.]@N28-U+?)P
%=gEbc]at[d\DlGpMLPmke"F4;<*#Oo\uhq`Y<5+sF+"!b!T=%>SDP8@pc;%gTPBnY$^5$-;E_8r8_.bp4c"2Q/ZP>[5JW"NEG#'Z
%p8.IYJI)IP^>f<Gk9phjL8%S?c5FObrHr[*<E3989DfF!YlNgrc@kHZK328k;MI"#"=>M^N":LA5Nr"#gu#iT8M'kHs5+n*l[6Mh
%=e+AHb,FMo,'0>;O`g4M/]+0Vp:"?&a!V7Eb^`)RVP<u";6nL-dNs'X8gIMV,9Z$o9^G@_K2:/8q&m^rkCl%%pZ$-):)Ea$a7[)4
%-fUUb\gueSOUt:?MST.?n2/S/3ADfOpaqXFT,&YHMc!`2E,HH&1Ma'B7DC7onbrX'011(l=[R>L/I>m\I:G;2S4K.TAKL\67,=Fc
%;iJ9h;@o!^oYmn#%4.&)CM[7MZ45C#,Fp[_[Use9jR[[^51tV@VFOn:e&T\hrT*ouP,X4E4Gh=>8`)Un2?CuV`@Hk>6=IZYK7S^g
%NJO.V:B65$'nKrIakR5Xh0pZ7.!**0JeNs/Wott%5Zl)8i2V$JrDUY'Z[U)&$Z;V)ZPcuaWp)oei4,3sBTNN$.1F0QePDnA9$e)Z
%acJJ`U%H"Khn;tgW4;if;>A]4]R]HZ^%6A7<?/B?LsDR,0J-9176T_1I.g<cb:b"QZd+OI]fC9m#j^u9+1/,*cD-l1R*XesGm&jC
%"6tlcOF&o^oBJ6=YE[p>WP98#,:)n((<:El.-u1T'QfQZI5E@D\aVeCB&3*+F>YK4&J@,<'utTAjf"[5Mc8]_0sK&ARZY4.T&V1Q
%!FKBL]GO<PRFoc`g'82o;*^f879LV'..Dk%HHQPI'ANB%7Pc;U/ot)!`F&6J9ru+tr1mrmWi?9ioL2^82,k*f2`h6$]=Q5V'g.:e
%Kdt6Togeh7[\9'<.*IdB,M8J4&XRVO3;Iu:=JL!q6C-r:T:'0#bX=g$=X:Nu*S"N9[c;-IGf;cj2`aFaqg"df:LZIt[4pH%;(R,X
%d27P(JOn8m5+/b#HX2,A3n^"g#2/o.3g^1M=3j9mMZ,UsM+$Tq^(X"jhd\(Jd26]gk%R:<iA2_^.R#,0Rm53*b*in2\('OG:S'Wn
%n$R0I4REnnR9O6g7$p"r#lL-@-5ue]aEBW@M2lKo?Sd6t)e0egqQNI[:NQCnI(#oDd%L:*j$\M]$@g2s9OqUCh8Gm3+Ta!t#3eTI
%UO\NV7jm?Cj"?p;cnD:lF<++`3pu!;35*]r"a0DnVcRikl<Rde'Je`6:;eWa*!;L5:o`Re.,<`Hn][E$2DkjpQ#^t(./orj3/E4g
%RC_Yq[`92^5hojWUY.IKGP+)=T>P[Y4rTZA!;O:om*%;dAZZf'#4Yb+ndPaRg-NNM:j&$IAMhQE&s`.RAg.B0pHE6uo6-14O=gjI
%CjaD/ri-KB1`AaLh)rsJ'l;K`QrWdIBB&I%'9RuQR2F2$K=?3H7GiX$(Y45uonnE=3gsWQ\"1+!./]g+bX@4o9O4p;n*,b-Gh"p\
%d;05?FS.c:T>PhVF$XU\<>:f`OW*g4nQLfZW(^G!GQ??JJ2qJs-/D(di]=rORu,L%ZNk2a*ldDTE?<-pPR.3;(f,',7bkU9cfu6-
%[quIHk'i6tJ;MA&APdDP\p9JWJk5jJM.@Jiktn0r3&_Kbo$PuU3H?eXEDc\rWN/JQs7F9Ab/+tt)pQC\7p"#Xr$a`uG_1)SFXJ)<
%<*YT*1V4>'5r[RBl;2L^a%=b]KiRXWURR*JnMAQ<UQ04C`K"jWU@&lFBJbJ!]6Tjs$ePqr4U[jB-R.Xc-nI51A/M3UT0s\HW`fm&
%ZhS=WkH6.((H`AYnnIC312QgH+mPqU:!Ls]o/ao6HIZBh.o&no.?HJ4f5m2jdDHRc&/M(Y2d2@X$IZ8nl2i6%6I0-c\0+IP]E"*u
%?95bG:=q_-Ip<O%p*$0'A3(<erHK&S&-*2tOQ1Nl1&;q0PV/a0T$"kBk=CGj^6)MbhL5KZ@9FF//Z#*G8u<KFk+R&R`&G]Sf2?Zs
%NBg_n:g"D6Ut#oW/84un=u0+0@8I0Ngb&k.Od)4@.4g,u&hn&Ag6i^4564u*Y$0Ob&/$N9qaG!O8Fk#V7)Nc6Fe3^iQRocMp6ac,
%bZmD&GeKLN""Iej[Z$JAPi,#_`jZT_CWGF[[#D^7l9nk-P$r\_E98`7n+>XXq_&`HQUQVaF8RU/h_I<1:+DM<!3s,b^0k2VK^@4X
%kooiB:C*K%):@V[ph$&*'DdK1:m$ur7=9]u9q':$Kc,7[>(WN9nAjUj]H>.H!(*:\(9$7VP$iEiWW9VNqt>cdJ=Re`$\bM'LVk75
%O$C,hpCi%JbhLqWs0=[h4OD$+#!uc8X*P*T8[/7(S)XPm@M9FZ9/p+R(;`37B5UZ0SkG,gZrs3qh[ifq4)7m$#1cZ@AXs)6&a@XG
%*CuE2TrCsO%j$n*Q-F=iEJu"U[KI`'IW)Pm'0$mB8h^pqWt@6b@G>1`9iu('K(uJ>'kB%nY]1;\14ci:=*nGS[;#fu#"6H8S=8iW
%^53IO%'qH-iJXN?^=Do0@"-)l%hr'?@Uor5ifR,jIb:t,'!'?q8.W5XP0I?.5(+",BhL!]$e6^Mr.d%LEs8W*'(*CA"KXn1GT;(D
%l^-/VKY**X"AZb;ER4OZ\D-ZE7gK"Y*$FkgYg$C4^LcJ1QG5L#2]VjYn''gA]tj6,J7F@gLPlAu.X>nJq+:<t9Am&#:?2;XIHp=6
%_%;E)=naNCh&oeV?]6WC'iBtKO[qa(bN2Y_Ft9+[IY/3cXGFN3?00l%cX.6e`n,@pWjqJ80_o@X2j,Rs9G:!S`5#VWJI[p8iNjqe
%b1Ze":u)\qcl[C06'Qd#_uQ&:P)!&si5'r53jE4PIRc?D]7*951l)Q.9*A"a>hK;S5&=,UBO4\>q4ZcR+ON./FKGFo_?rjklm?[!
%;"g;);G(*'Jk7E$573NEq<lL]5)Y8PlGX=Kd:ml$X8&p1Z-n%%5Y+7I;#G3!!>LLrQ=p7!Z1jp\W0+B?TVY*V#G.\e)jY.IXhD(>
%bo+#Z<R?r&YXfD]E9i=,RT`cs')hc*9m-]"c.3?h0b>#A/fGA95sYL-D&'-P@OY8#1?$ol=g_Rc297'OlR(=mZREJU8."oUiE9<[
%45jg4C+38^0X63dSU&98bR=3U[p\P0VV^$H$P`+?2L"ZiJpRkV^HoHk&6&peE.4.O`J[0-01K/#HEb7PNB$oF1W6l.86.`!8G5?s
%FM*eB&Y>-p@43W+^BoYZ-ksI^f6e,@f`9#a_GM"f)&=#L%!7%6/a9ce)T;Hk]T(HLe@<05qf(g4II:B"qXF.Ai$!+dF\5pu;/0'6
%91=jTI`S7r6)k?d.he!lJqFhI1a7KH;*O0-H2uqs,Jo0U+:dU'6hX\5r8Pj1SZS>n=l'eIURKEh2_1K=YW76Tb!3P2P!TVm[3jZ$
%IVebDAr65qCH(#Fppr3CSn[UVIi[Q\.fInDR^@4AVmX(<ht&=Ejn1%%j`k#AU4H0^`GZLPbr>V2bYe;+=[g'Ac<hkJ=O&QMh5:BJ
%h-L9kG\I/@``8G8if'/&gam+Chb`nJ+ATOljGU>fGRpu%>*ts=mI*uRVDpRT[-f%m7k"^9K2&`t04eLV?2USukb.hr34-!0]1c-k
%Q:oKM7/Nf&+lfMb"2#%c"&]o?p+C<3;QEV#!Kt%]ZXY6?3,_WQFoofS<C,-d+H5<i$?M1Q(tp5=#kZl#,Sl.,\;HXm[X+PW_nTld
%I?lo95?mD8riFUpr;T^\r5hUnnV'WtM)NDLo&!Oi+\qrsQ.FT%,-9+DHk89KNfcJ.j`ZS!GQ0srB/PL)Lr:7Y"Ci9WlaX%W3`^8;
%f63`*%@Q1oZH14`C(?)V+KT^'TOU3jRHFn9rn+]%>_I813tdGtVj]]r']F[?PY'BeR0U.:,_jj3%HQ$KM^>.711L=A;e.?\9PCQ#
%("o;u],(PEFB_gDp*Zq::R+C>^iA0O#T'6f,Pl@'=q<69'1HOp%U@NJnAfOqYAE_HnSHPLZ5NpE&%GBi.n&n(n?rnd'dpJt<GHhY
%)W-it<e4$Z)]+-,*P>JLE5d6XLJ!H&MT^&6E#IX0nd=@l$kgK8:jS"8E2H*>W!MEKVCVdG%gi``$4o73!2W2-7`9f7(8LO.%i(TJ
%CXoJ)bC,l@`MJ)'E2]WA,pDk.]_k5j#X'MDo?f7cdPM?)UE\]TX.H.3?j#,LESHY9Se3<*+=G')o^%[;\(T@;$`])A2aBiTrH%F\
%@2m!c^]DCAZD&?3#&>Js*pBWXf5A=g:%;ZOq*')<EGi2Cg["0O`SKb8QOED*V`nJ#T=kX#jE`(.DG&B;!+U-4ld[,s&SUZmiEi;E
%&<Hog`;JD*hm39!2XQR?P,Ko4Fb4d.j+0LEP+)W>/]=f^8`&Gm=OB>E.$pl'7=tM-_S.<B5]4EKqT(]C#]s52)VWm4<u)9r.?[7A
%D0'eaVf_SjD<jK8]46E$3E=Uc2+pZbfn@QVWnrMoLE!o?Y\@(jgD\:P/$4]PrbVQuMoBi_hI[PH7MNo1$elZr6tl_g,"-(e\207S
%n21[J4"_-9C[4th&h5*l]`H?I:BGo)]CsPL((%Y);6M%ddKof&SkiT%Lb8dBW2sd4%*f,WZgVkQk9ZW686oPEOJ02)[V_uQ_Im!e
%4;&uQ!?/LTO(DsjDM:IbOriTf.,9m:inf)e\Eie^5S`d=]<2td]nCsVK*N8-E<p8EkNf9O.2E/7fe/_;8jEQa.*E(Z1AO>]$5T=p
%LF2daK945i`-msK]a=Ze,S6RM^KU]Oh(/%_LgZQS6T5D$Ngu87EW]\h51%6jLamNKJ-k/o'UQdSX"R!E\te1Q1bKHI,r;Z_qme+:
%o0cQ?;=&^,jogWRTa`'r6I&]4but[E$W#Ne^IWViqRTI=@`m_KH`k)jTB9boa>0Ta3ss(NX:Z4L'b45X?D,BEO1,?d6K<hN#6\$S
%X+hddd?tDP_0VuTaj%L4pmt4'`_u.Qlap94?E1*$-q2@Q/PmqW&ctDeF5RR=XVtnTB$e5QFEZYm%r7tDO/&YrHIjT0mcOHm1\sul
%U49?a>qSO@r%`10RD,.R^gRg3co39Sn*^9N,&=`?1VFRL2(s'\!q0T6I?>3O!$WIETL_bOIqntU:k"*HM8gVQ,?b6hD"l0VKr/[f
%GDuHj/k#'Kk-m1'Wq;,^V_t^sN$f`a/SUl8mK'0!GSkCNWWfX7B:F:".7[Vad%X#BV!,Z1hNNp9[J1e@TD(EY5Mo2kmsLBh+hE/F
%6>?JYR`q>$km<7-4K<@=n\\XUXBZVq,C^P[-#<fe.mkOL$6(i0FpW$WZA4LQNI<DQbaEugE@H?[\=X8PoaorO[Hisf*o#Gur@A&R
%@cB1X6N<p::?<!*iY3`UFE=s!\.`4nLjgg]klM)EXBH5?U2sC\7[o!g86P;IJZ-Yjp4,(D2imLo=<rWCZ/?Je6EG((LLb#Q&2*di
%nr'oc%Qb#=s)%Mgl0`oK`L$9M5g1%3'(t6K7-'@-N@CNb5^6d2&D%O@+Z:/U^4fkU?+N.#>R"df#!=/N&1UhQkRDJ3!lRI#-)#EO
%kb<@W'Eol!(F;$DpG_l_CXZ:n'a2"JJ5Id``\pgIfi;Pg7#F+,/]bOl?(gKt+*[>U.2Q?78MimB#)+9g[^(99J37kqA0hC9+obVe
%qFq.H^;6V1eff9;R1W<%FSbBh7HFdE@#9lD99nf^:c[f!<]:c5k3]Y57O-,,72G4&Tp-ECWiq3sPGsJO<VIJjjgfRaW]QndDGtNd
%.k!(Xn7S66<!EJGXh+<$1Btj$Kn#"\@#?`g4+F]Q.13R1a9_tuQm<L@h]cu&@,+$9%]lM*hdsDWFEM'=ZX;gRpKf2#L0G?/KLq'9
%>@!"*=l5>DKlS6UAG\V'#'AP9a5+c79eX68_gONff0aY0euhO6H>ILqpI,?m"i\/;\O`8Q_/q]mJ#eLrZBQG3oQf/01)Vj[YXghQ
%Jp9$d90d$BINram3Y[#42'O9=:%6_Bi#8>_E)C(9PZ!0de9H1a.1n7kAr6<=C#BMpL+-ART*WS(aY#7&KWdlgIC9SbW#&:2Rl,Nn
%[1N4>PVj+bj&_1"p2*n\T:qsr6;LUK<`OMPs1oF?[7opo7N""#6`!6Y,r0!_qPN/hrI3%Ahd-$V48b#"C-eX>+[^F0')b4oOhBsb
%#<X%'%]D$>BRM#]@0@Y..3X&?Q:8!_DfJ^SIY>n+/u/bEKH,lXWH]I4\Z#iWR_]q42*UJi*jf[>Vah"&!*1$'"N#*YQjl;OnTQKM
%Qf(YL?X[l=]B=UWXC,js$,gR08psa.=EYmgVrCA_'+4r3#n%qhi<3kGI"E<OKe8YjZc[hC((`aT46n(!qcdMYB74+f<%-n1k:^N'
%)F]Q<TRnA;5pFedVRQEX!]fR%`1.m$86L[;M]`BC[\Il1!+/Ic$2`>@PC[523(tXA@_4Tp)[r@j?2lOt,+a%O9`?7J:G9RQ^G6`'
%o>6O@NpFNc2\Wj,"':B-HK:2afCQT?Q^t\C^MG\A[lNMVmTJMk0WBh0%^rr(hC&6s`5OZ_IWHF1LZWoeDU755R,4@og[fk0$Wk_q
%.q)c)U/^\sfqm+,FJ\>:_QqlJ9f#itF7$Tu.0R:&G5gM_7tAB9.;29W>ht75ntP>nAdK53A6LN:\d(jqp2"[o*4[2tJg?X0_>T1m
%=QU9t\?IN2CqgH4WK&(=#I0PeO;0HGR^5;:KbR%1HIqjhg%;'eQ?0)h-2Wo7I%9C-"e?GYR(6^8+fT3R(5JD=i#F_`WJ7]0ps-H:
%*a,C*R4X+;%O.<)3j]r]77)<#b(jlhcHIgLh/ub%Zft29#nqJ+:l*gB%#i'\"]ncZVFH+"er>+Ia>O_ULS%TInpF1<CC)^s3-DU5
%8%5M*h]lmDl-p=6$R^!THU),(<9OhuLa@bt#36+:%OkKqicH$!)T/:QcT:Nqr-aI(:FLFm5Iu<-1m$l.:6C6CWjl/=^mf5j.C8-!
%KuJhWj#;/c5G1>*fKC&58)U`sP36ic?@*3q!d4NS2o,<?a:7Y<V&LP!+#U&i:]s%7X]/A[5WEas<#cYbepW:oeQheHVP/N13U)J:
%'aXjf')$B8%>$dnXP1@pW\B5@BFCo]##iUcj2T^l[](funZFaoZ19?P0E_PP?WDeq^Q/Z)fo2\Z$]P'>qr7f\'+!Z^\^sFVNJI\Z
%\k`V&%T1;TnY)RYOL+R!IYb(P$M#gCJ**m)MYGX#*/?b%*#?`n8jm8fi*X?*NR8M(+KSM%FI$L."ra2L.>9L>pZ7bIdMq%B(oS'p
%"WjW#%nrIRf$"QmW1,Va=IE;9]!p?'XlSr^ObNA<1;-)7YHk<"DClE'WB;+W\D.-D[5?tSUH5ch-Jls+$+=d1M@J.<<Z@9T"/`p/
%H4D@K!Io$l8Gq7an5Cn'\?>KYho-9a5!Q+X"C9:\NO[JpQ,Ntm.(,,3Hmn&JDm^WIGij9C$u2T2A&8Y[!#bOT7._UMBS"h#4J&!:
%hL8\0=e_`9&;X=.>\X258Qp+@+Ss/KiFGi)9(p%KbQ).>"r('^m\K?f=gh08>Ip([(o<DcjAp#8A@o^rKG.a+_tk<L?RW4/rI4H"
%ktN:;hj@L&1dbYf.,tKS#5AJ2UAW9WJd:ph>En%F%;+[/&6!t;DGk#C_lX7QrGU>HO@oK5\quK[Sc&R5nK6d\Ka0Qh:P)OohA@=Y
%L*dpUA\E:]<K:@XTKu>(_@WP^!;]<!XH<i-U!,%&\T_2_mo&,\(I0MQ3%]N5[?,/sDd$`IBOpj0n7keoZZaG+r1N>7?D<.Y+7Rk#
%.S5tZr!J=IKM[kN4t6$G>fV@2d.!)=#]58ZJJ`7aJ:n%O3<U8JOAW\IKFr6B.7G5rL_M\.mf>_fgGXKsOkB.4=`%s(nPG=:5\]c!
%`^2YLY?a*=c>t4&PX;LQ$P%-o+C$kpEOVu%jd[-t$U0\XGA#r^I]g`XH5c6Jm,_JZ:B*aJHmV=SV9N!ah$U<cI(RP:>>][2W-;/6
%<]E=en>i(o]+(oe`q<ZKO^,(h*P[KRr3p+?S66RA#SU(;N/=sOY,as^b/_o4?H*K`XY>RL@HAMg.h]l8d;_nTT&O_I*=R'qO!.*T
%/+ei3aga)Y>Jc&5DbpcYg"Tk%N!9Lo"n@9h)QS7uKu*QFSuNru>eAFpY@V=7'oX=nHK3u&&p8RPV8"[IID(TYhhKAi[9ioX'?!k-
%>UajSJ[2FP1'"qsF<*RoMobmP?)m@;(3O%;]Bl#A8OE;FlV`N2B[r$:j<a!k(-l_+<3#=^6+VQ+-&u7IHP32TSAEF/9LZJKaFp,@
%q),RrA.a>3A1<lHH'@h>j^/76rXF/>H\HXXk/rR>`C=r08Z&F1,_EkEY\:Us)et1GVCD-MCh<5*3jho>9GE^_A-CK:q\GBR%h(bS
%.J+HpY%e8P2:;ge6<VR:'/<[ZJC-G@o9[ihVG,&a^PsijrHR^#s8$lP''Edir8SRRM!4H$IM'URnEl0bi^&6p0"WQ3"!$A2\49[h
%?FllF9*7Hcm.)E>8UWlm^op$`.TjEneM0RQ$\qp"),Q/UiIG?[D_tIH8D&2a2B%>_F<6Q\_SqH\XCKWo#F+u%'X:BN:FKY>..3'd
%T2W)Y>!pt?ZCo!LU<sdTY/13*:nip8@CUAD;1O$kd32>>.$\*-P!9@-_\];dH2PKm0G2tG%&Rl")oZKV4?1rWa5*?%I6r<uXUB)i
%JD.ZBa"EWV9GHEW_82,P-[eq?;d3EfdlQ-HC&9))LPLU#!eH;^:MJc,7OtrTRg;m<EAQn,h&3ks<YJ8!qKh?YZJi,7GB[<<a8,PL
%5Ph+j^4f![b;b@aOnDaH.:1a9*UL)cO-`k#L%\%ka*lkK'E+#lPC^"Of/dAgp'i6u#oXt'of)5H,o59%`:?J)N()E^TJWCE73K#U
%kR^D(i"b[I'<_AA[S[3p0[4077o+N<@Ak_S!i$'Q?El[c]&%_3hd;)>a$<=q2^RC_Cs&eIXZE=c!SqFK16BthMc3X6,DXB>2(1M>
%'<KKXmR1Dtb^VnScaFm=S]"Q@p0OQ1<m@3ef*EgV=H2#)rc*9V12a9uGUc#F3j#k-WX%.d3st1sM6>%s4KQTjn8C18kJcYcGZhB=
%\t58gZ]2OklSIN#h&HC8)b^WZo\G@B,"ceB7#]=a9Fs52gc);7hAh=OW']L=!e:8-6>Sp0=`]ZccZ0,8eZAHN@,>+O8eC5.bH!DV
%g`)CGZG@<UER85&ap-H$.2W5oYgXM.oU!/f>P&^c$H%li)k7CIRu!\5g@;Ws",AA%2U,QX.PH](pR%6Rb0IOBU/2,]S0<;&h$sY%
%P:`gcgMRB>=$8$7fmO/7D3-6cN\^;X$I'?AW.g)#XrR/FA%RYbniH\JKX2@Y?Jp\50pAoI,iMNua[`R/V2Hb4-n%m!UTo<HSGMj:
%(Y3%",+]8uj;d0#;c7ei(k8PX"FZm%q]m]d)h/q2[(@X$9MHX1i&^9e!Yp<g9^&?Xjp&"(^+k3G@,?F[rqK+h>`g8#Qu7HHoi8%M
%CJ#/G(*tAN!4PMDV!5W$`,4o/g1l-u'YYXu2eSTA3*KW9I$0kd?kN/AKGAo_LC4qP.icQ/pPEDqG-[;$<eG:bPZ5]5!JECE\ak7-
%`3BB$:G-/-)5Bt`F:J+&4q4)a(%mZ<*Qh]^h=0[;Dh`>&M/WlC8827(_01j8I/:WuV#Tn5N<$?c@AX!4V3eF7@L3eEs'6:=8e']n
%n]L?A.Z4P!Sgd6bgDI!"$=)LfSaJ7WVEkfrFslj?qPO$Z\RGQB)[nd3(sdqHBh`kKA6R3HH%=P'.U`k*Ab1,<GL=+/:8neb@:!&:
%4k"Yl0\1)`0L%U6#&,<nH5)Pk)er4OJgdml&fA-AKO=Y[<E#>@OGAWC]Mk%4N,@=,EcUrl!ejYas%qS%S_1fRe7YV;lmo>KAu'*>
%4/FBfK_\o(WWt6[7>)OBaAE$c1DB>b_=*QkXE=[tKgV(&rEP1,)maY`cen0e'I+fN6m*G)0rqE,bsUeJnPGZWbZhYmQ*$$2%=+63
%)O*W8GA+jo,=o</!^<QkfkTsGmm`97oXEM5"M65#O!$<oQEgOlJ*jM`M6Qt0<DB/$YFF#j(M?E)<(K$."JT5`YSTO+4cc9L)NYW9
%X$*PbC*?Zk<MKHs*(?W$SLCOpJZ,M$6JhmLE:ld6F\6l;\nj\lYl^MJl^EW>TmWpMkuS:H;`ZC:;FOM\Qpq#aOV@e7/6#%a,&dU;
%js&m#<LC8j4/M5sC=Qm[:_6HL/ARhk49;sR6ouZEZl5X2<eo>qbI'7DhWA,N@EgRp^$CGG\6N*NcH1m$g_&bFN"#,GAGXW=52E-i
%J,G#,Isbi$^QWRXIm)[Qr[cqj^<X4.TDtFGU-VfhqP+]QJV6.^:GE1k7VTtAYl,D!6i?`mMN6N/"A9Dad4TV]ECXl^Vp,a%=,-_U
%Q_m8k<[WT1-ULksL+gua^%1\!T]=>9IWr:_VZI?.)iK4<Y^XC&F`er&LrcB"-W'#-"f8=p]8OG85]7K/!!J:uTKlm*W<#UU@7nY]
%s5hrFhUK/#F^kI+N<93c_M*+EOoZX*^seL>Z$L/>/81hn_kNnck9OSQ:o$So/(K4H+=_E=aio@s(&:4!06RMO-WP[U0KG@E>6W0)
%1]*RDEY]161U9=od,V:V;=Ou]0DoDDT?!@j?L8&E&k+0s2ld^_mX5pS`uJ_\TuT,C&jo5Npcd$(DSr3FbpSRm59np:BM:sPE7KhS
%3N12Zi`K\O]!o`fYTPL4,,<OX_U+Nk]-<[%0q'7gM6Y;f$Vp$pN;/#F!QVq?)*u%M*02'G<\sGu<EE"k)>l<>&%R4X6GM"CB?1!5
%(u2/@.tXi*@[7.9Q)[H:@[BGkW;fU<PebSRN40&L-Kkp"A<sb1?;0cg<f4_G%n/gS0uh)>6M*B+k`[V/`Zp[g$>Y?XbuTcZ&N(a-
%W]BePE=Z=RFjkfa.cR.jWf(9'#&sb-(jmA0AX@[McMp'c6\uJLL=Bml#!B\TM!W9Rh#AF'@k>oc=i75D1dTS^aDW[[JoV3p_X"MP
%77N/?Rn#8H#HMs-],Hp.&b(R.(lgp7K?,fC97.qXDH/2cLT'*o3U_T"jkmnqZ?RXpZiNJNr&7-M$2nNoBu31]>HLO8$ap"?(-@St
%C(e..g4Y&/UgL9OGD%of.TQ,Hmlt3@5*FeuXQAD):$6-.2p:d)E&VQZ?Ms-OS9OK$qqKo:iO9p":$8`:EA6C;=`8T^b5->&j7s*h
%&),9:I,6qH"K;Hr_pa`TO*5I?Dr-;%FVi[I6GSm6n7ukCrLOK^!$_-R%jJMK9[:5+D4,"Ns5@79KnfV\_V9`ceTCKII""MP2h@4B
%aX'A[4T,^/,g-AeB34tV-Vg*sDG'Zj*mL.Kc?BV*j+P$\b5SW(I7'P'L_ho#Y*Wih@de$A+,>mGAbG!G%"8&A1\C[uS07l7"!d9Z
%S'R<;<)m(q0U[VrL>(k`/:j:(lNDAUbU3*5.TJ7k'h.cCU2gI^/7nYNGSZM?gEA'OE?]"L*54mS]tZ$nJgfH$$uUYJqTs%!-4(Mn
%!-hn[NB'[j*1\'("ULDC-I4RnInG'?#XlQS',MXb`c(#0fCKHU7T!E1U,9^aSg_n(@(!Qir:>_uAGr&KfNZ)1Y%u\!kB2g!+5DWK
%B!-t'oX[$<R6=bWU-8kt4KQ+N=Mb;+`H`K47>W6Ren2XD.s51nK=B;+f5@G:W3]9+`BM57+b#rGc[&GPlX`ZQZm9/Cl:(M"(ZdI1
%.A-Wk4*0QOmG&+aT=(89qrW[uni/$nO+T1lqL+1Ti!R5+/ni;SKh=!1e_!(r;FT_*bS?V+l?-SV4H($GUmpj+,=*O7PhWul<i8.X
%hu,A/9rA$Q6*EWK;3Vf;I)cB(/j5NWVN9S>4ABE-VjE];INI+]+!0%oO"^(a:Fu(s:Fu(sAqI?"Fo7_IUCS6S=MMm%Q-YOaMJAd(
%ht+A+(jj4*f))E5H2_[)+*AZu!VA8u&M\Fe5>R2ROpBDskQ?7)bi<;e-WeJcl+j&Tk1:%Ra.tM(p`[i>;Y!,+>t/G&>pE5nd?KXA
%Mpcn"`b-I$,<k>LK8he9miKQd:J^n3GOV7#p5,oT#BGng&/[%Yq<S2hTq'YRSdanTdSVpbN1_\%60QM_]QW+4WC-].V%aZGn9e[7
%!>s>_Z)8JM?jgqf?o_dT2+eH)n<im.BZ<AM'mRT4,uaJl@`3EU1F(Sfp"J,mW'iT0SAX^m/p7fG"KEpb6TPIm;P@7pMrDHj9H4M+
%MEn<T^PH9)ia`+mB%:Tt!t;fgQJjU5cLLj'[5[gpDndC^c^XHVKAp(qhcT_A#DI^2R;]-^8r0]`X6`1_H4>B;kYP_/TOPNClU:e3
%Jp;?T"Bn`g@#QZgW)a3sF=%eFeKsLC`r&0(19;nJ,qW9"$k_-rUoXgI@\<-1YhF[pL%s_=iVFaS#6)u"Kgif6e<>\]K!GP7G[$e@
%ipHWR<,mK4pQ#<V^#m1B/P?KlQdCM$.`#8T(b6\a_U:`D@HDF=m#V$T-]Q1kTZ*uF>,_El!g:u'=L+DU];:jE!ori79?(On9Jnm1
%kD[TYk:#r<_8GtA907l32_F</koVk=nPYYj=p!UF>Z\j>IG>FljDnFhA@ibI/St]A@CZm+$`7NP)-EA/4,;c%L8BUI#/&H6*JIp&
%?0h]pD'7?,Sak"i@9fR8#8.,)n3M:J>EaP_M$+EHJgp<G77k.re$NZ/>.&:I=07a]@+Bpt3Q&/ZoF\sq!mDR(hA/F:<L@@87cQok
%V#MiK?@k:&hEBJ&6tAk-2>!+k<TpK?\dhj`W]4tp])7Ubp>gquj)r)Nk@8Fb3m3;.qIVl`n#Ltg5#(KT7+F7!P9D[g'LPFl>FoD5
%E!sM^?',uQYO][-dnOtT0S6m`i.OK5KIn=XJ^om@dA#JZ5:*Q</$8d!`^$7,Tt3CfJ`/#$'dLS`c2u+0k$h'#1%4*L`dttsQe1Ag
%dcAV'a7^knn1#ii_XqR0^T/+I;',Po=o6b'S3aE2FOWB_nt6^E@"P&1B%@2T1"=/BKI4KC$aV^kZ1US%dlr_.%YDFV?^[4:MDTI>
%#nAY;98%MKci`Qm`fT$$o=VY7mgHOIdAL>6X/sMe-Xm[b,R3%g#OaWQ(7[uTSao!-EsL@iAns>3O0/tM^ZZaLU(Yq9Y3bDE^1[jT
%D%(5;RqAJ!/p"\Z='ec;G3bEfJB$uLaFe053Dar#5uFJfdOU&r$7AmN`'uOBhNq/BKAnQ\LF1SX'5;4DY,Ws::1#j>>sn;#7^FiE
%dFIh.?c%G"0?CSEZbhR-Tp-`L$h(f0('%)r5sMJ9qEP]F_J%G!\tbmS@a!1f6`G53F;u=O?ZcFif0o+cGt>Wr)"m+UBl6.joh[HG
%+t*[r;O`<L-5n^0&<,$BO!#XLXP2Z09SYL,9,e>7q-eA!&b$P8`jA:)1j(#;eEK&7eFu([dMn1^p26I6FLuE=?<>Q!oc3Puj$\NP
%#CjnjMTm?^eRHH)'AaJN;qHED=>!Il4m_8)o=,`O)R6-!:*cF/0-,8S0q@*6RKC*HT%!)NOkdS<$+2u26Ecb?dI9d3ql"*lN==?'
%B"(*t9n;ebWcVM1d3s;@URR)O>kIZ]/WAIF\q*?kRe?HA$2ddFctG7jgq.j#f*gY4;L5_l?49!nGTnWW*hcHd5PS80OTp?O'@qfq
%ohmf6UKM]Un^5lTi>91<-8+kk:L,Q(VOG54MHA%))pQC\7p"#Xr$d4%alo`:$<s%D4\[1;<Xbg70#=p%Oe@4u'/1f`JtYdn)J.*O
%dEP)+iL*5pm"\(a$VOc$T+Z^i)WU(A`e\t#k?5KMk<a03'D;NSai>("^iBF4;E1[lE"g;YL0.Be>.MCG7l)GV*F2C(@.e1W/p^Vq
%>qI[EH@4*S0:E,(RZ5.EY+Fg$jgjJ!)Ee23or`q+h-B+fp6)jYg!W9gAL/R'%h_Mf+h!\RMX'<_fn94LQ:3&u25A0T1N&,AQqlNG
%1.qY#^>lWE&<MAfISk.Qe.)f):M/LbNL!S;[tbasC<*r(J[$B1G%PaT%-!SRRh;]lOj2-aWW`U$R!\Or,-$Po2t];Dc*'VQ`[29/
%#[&dQLtE1]b7]1CIM!`q-O7?Q'V\)]rl`C+X5B=7Ui!D-31#>U@u`/B#VBr'(6J!UA._rIXs7J,\=eYq]^6MMlWQgdWC&fSL)bpj
%7*uAL1YV>!<rlgudW;a/.)l0O@Uei;SQ6o<]!;^fO@#<[=;MC^Mpp`koWY?hIc&Z,_H>T^<'^N%;P"[u5mu_#HPK]9R;+^#`0g"G
%f_<#r#T0al'!fmGkqn-IU-IChj[L8s3`-<U+rbne2X$Fthl$C45@7mqb#][WE8[!_I9N4FqTANX#NOt1>`RG-.K&%J4eHO(T*<#1
%83F)S%rDBZ4r59++<DnV<_tXk)>M'"%hn'P1KMu[.QWM0'\Ii:HiGe[SiGfR7/+=um+3F.?!=AIX@mf]JHC!=5+S\aRI]QuGR43g
%bu!SkVCGDW(-('_P2W'YUgBM;%)Dj%Xe5fkYs+eXa++%pQ\4H(hl"qK4i#D,gnT?3#<*je<jL4-gp1b@Uib)?.bNSBBm5HLR+?+l
%#-:>JBT9tsN6rX961M<LXDMj@A?;W'KUM41FB[TdbL_XX^(o-hG&%_+7ic1;#q<`DgmAOdJj1Wm^sOPL],Zu[ab&/.?RUt2YFaKA
%l@sO/OH+f!6i<%eC''qsMP;)C&jBI4A@2f0)!E#?'Du=dCQu`4cZl@l$lUNF5KruS%S7iE'49p)@dM=.nlQ]=B(=[b0<9$C"Q2WY
%.A@,#*$'QT?KHF51/c\E3Ajus>S"\PbR3q!7f'q!1S/I3:jeL:-;od'`&?i#!PtAa>/3L.(bpH-Ru/5]1eQWT\@=d+@kD(+`p9In
%<#M:pqbUR[c'#W?6I1qmRh++)G[2&P4-<fc^)4qmUkJ^S0'2>V3!G(9Aj)WSnpIsul#9)AKK33>L+ncWK+DKpi<nc,pS%)O1C0<>
%e>4M2+hc]!$EW3Z=F=4-Ul2H2jYogM,,WW0=T!`'9b?-6Ut(2[Nt$BY9U5dc(s%I+$+.%(5Zu&qhoUEPU=j3EXI8Z/L;:^6QPbYu
%<.3M=rH#&mTR^G1DCp$V&h/ei:J?qc)8:YS$Pdl96J+`lfp9aRRn?`Q2N_KY;ZbZ?n,ku\GCV%o':(k9r)X1,">VWfmN=oumi:-a
%Hs)i!$#[p6g1EcL=Jg&%NhTCefF<'oB'4mLP.)1@SiTuR@\lA9])(E.odrYtSXV(>Je'T:V9A#AmBW1qa7@_.Es@2%6V8E;q3I&i
%/\O12j(KcT%3q%(^Y\pUlS_je@1m@`UBs$>=:MniRAebm26ih.[P5370QIGuX/Hj?MCPqWN!>&ngs1S.C.@e;=lL2b_BsfM<*iH6
%g-V;f(0@L/8bH;XWP?f5Uh'_)*^a.8F2qUbT!BjA[.=BQeMehK#,t`4:KfF*ffEh[\AA6Ef83K!W&?mkfaLBX1"7$k).Mn]kJEdF
%QOjW]C8QmQa'i*B[Od\V_!)k?,TUS$90$I.(8eIl!/W"1r=f8o<u'`a(Tl"_fh7mY]Vlijn9]=7lTrBM85D0@/?BjB&TBm<r06=S
%r@G#!Uu;j;d1RbP.?O>4[Q,JIG^`>,AYgG;0Hp(\btMO_(=Nr/mLTSO;c^:B.P"(%*&ddB8g`)NM7QW2=7fRG*9N(^;Q_+e*XRCB
%*;TBICMk6_B[Kb$M_AI7nrb;$=ae7R'J*[ZXXnHYq\ur9eZ$A7+cmFpjeqsbAC;A$X:+VCM^(J\ZQhBDq5oTOQ7b?O3@A+rEMjp"
%TnnK!<8R:$g/a=8fq'b:1Q<a>'F[7_NPqgNYpW1"$I?\T-+W1^$qp.Z(ma5KZO(kuduD<+>E^@Y$tqI96gibmc0H*F4i$3eB1qeh
%PkfO$#ZkW*LbXVYCe87'^69i\<Vk!1l'X:XaTo)?IugbDM>6l*A4\rh2Doh:8mg`UM'_tu5olY&G=6KOIQ,CN0f%pX?X;/D0U-_'
%LUAVOVPsLJlDTldK9$jr?@BD7ZGKW+r$2J>d=k!7P4d0VHi?P8*90PhZDqKrKVti*+,sauI!\2gU#((=dVEMJ\PDV`rP4848Yn%h
%-ogZa1$t<mq=s8Wk-*Y:BA*k?T@SECH2V51J$r>pI8I+L"T:^+]WAEUYb$B<3+9+m2TuM+'/r%<.DH-SMpf*Bhn^Gb<>nqSGh<$Y
%;g'8`VY'W+-@dIsc*,sg;i*fUe=9O=Pet4ddKU`"5I=NCLh^\PK2Y5:==g5IKTpNS;)B\;_s4"1D<Sd1kYG=Q6g@Qs(,Hd6?*uH'
%=;7U9g!5D"nj3c@G"EC!lklb?WI[b&cof[R`IcSY;&cK'7KZOj!#Cf91Gf.7_NNIX`Y8u[,(VDHYn.p;C+#tX4ldIuZ!n&H7@Bn8
%2^f8QaN]D15bN:&"rM#q5TcUR7(?Kl3/WlhU^3LlL((`k\mI^rg?YrFPgbOK^n\jM8]Y1p74,QKdf<-CX`=uBQpq9*Y[fHGlBt3c
%GF\QYdfC3G79s$sqKdNRMEPQA#u]K)8<u9)^F4g=$qWQ&lFC>_T*W7\8U6StpEHTZ3Xd?PbGmLc65=:bgH^HeGdr:]2_9!drMW^V
%eh#%7r-2oYl@,>]O7&`,ZjTgjhCHb8.IRpq4_WsZ03-&3<F?ghk'Vb[B/]?!cFTbNCk2WI?11KPr/4JApqEVf#C%t=OU6[u*[r%S
%n.e[d3V^9*otk9W)*V"9;nQI?&_ld1'sqZP$QlBno/=c'RkUJtq#8FlGRfi:1_S5Q+n$kg5=AJu"%"[dNY1K%1b`gJYQP8nX&?u,
%(7065NGF2<!W$oCF;O?[/5W%O!$Me-kc1_ZasQMA+:@ok.2.Eq.Q3JHQ?FWP"7Z%?.oU>/$uoAPWnt&J/_:m>bk6W'c]3SADLGnR
%-bUC3aot(bE8X5";KM0-BJU@0nRZbU*lHkII_-^7Xu)&_$5ckIJgdlO638'HF.ei9bSM8p7G2Q1/aB>c\/QdXFaR'K;ZuD'a*R8c
%RqQ$PdsL=W^8+(IP4PI-$Z_:2B]^W-5d!H6Q<$H?B<\0a%X)Is-EkHl?!>VZ]WLZSekH95JMjZkj1XXck_YQNdB$;Y:$8aJ*P='T
%h^]QaB?pD1k2$!`hDD=tD*i!e0@q*@9QkkNJe(1A,^Eh(2X!)o9OnK\*MrNO+A:^oS!)/]d7-8gm5r7A/m_`JQj=ChE[3n!70Fo9
%f2]<L].Rlq"2Nba.pIhXEMVs:0SV?IXEKG^`)I`?P,riDR7V0pkb3bcTD"Y?o+_4J`r]a_<!V7pdARq6+K%Mp^uU94%F0Q0%-Jns
%%S?dR]0*s3`WG=r'j%nkFkTDr[EbiY8II!>4_Vg(/j1%U<Ru%sDPCZEp6.7H]E^dfW-3o8>YM9!:.DnAn8Eb,?oMY&LL#2KON</U
%V0`KdVLSp3qr?MUg+P:[np.l.n+Bse;*>>r+QG(KS.)gY.4hI8Qjb1ZTe#orhA*_tl2l33$[t;I/;"&ZMCd\c@p6!R^39rE?UL=*
%EmgV]\)\l3o6$(C]5rNXDb4['V&Sc/^rD@i20%C\:(#ts!(qj,:1H-pb'"+4KjGFrE"ImLc2DtU0(RN?_16nqFp2OF]+*"A8cU8U
%,8;S'4?&7XY^"gHZ=tmhNM6BtKt317_f5kKQ%[UtMLY)I_.)FfreAO8+1@^n%Xb#.MjEt/CoaR6lHKTq[-&e%LVq@NA,t_4.+lt:
%<4fU\nVpcHdf>*M9/ho0!UaO^!On<D;=#'1gQ+Y,+.:(s#iA0L`.IPl^l,kLm\fHl?(H%$_tM9Rcm0Q]-B4#;p0foHg9N8<965=p
%*eZ:jQWt>nX+GB:0Pj>t,nt0EdWF3t9tNF*!tJVfDlSOSAQH[rV2pJ+0FWjReu+;"0LY__8($WDLWZ/WQl[YA/lc,W6!6+"cLM!p
%hr,$Wq$P8rf3K@/L54O/"Ji-k"'%iQpk.*M`MNET]^#98A=ZRojBenpJ:2+b@51SFaM\Y/6<$N]g9F2J(=ci9/Qi^QA.pA"DhB1D
%5fk2HLI?$XTF-+?%!Rli2^0jiLG5seU.e*/KORfe7>\mS#`b-icioa:c(G&a0JF[ei:Nppfm+RV%%0o01:s+J:^YH:1uc'6<*N6S
%H:AcKS,j54s"%#A"po3j:rHt-E1&qSJW;Y4epk/Pa#*]Y7BJI;#&Q8]TVhd>%bC\"eiu\O&/'?I"=40_"r8"-/C[;k=a\u8Y!k'o
%.I_hc*AJ@fdJFmLJ$<]D_\:I3F#poLe1^,uYZO`sb1j3]3&3R:'qr/J2--,r&Y%]8hYQ/oN42JVjk;D#C)cte4(Zr0Rtc-j(-VR<
%ZA:6e-Mnr^9^g%b>)oU&%WqK1WBqg"!4NRhMD7G2!/`q$65^2AF)cS;l1$/-%:B/E-nOB])pFVTn7s.:[NbjJFR3>fL,UubPo4b/
%brK(?5\3G&7gNV8jRqrg*oo5**ZSt;D$<#nBEE*&YL.7o-])GZ82:fkqC,&))?g)ANh>uFMEtb=8lRR50Q[oTcsgVl"T3g-MW5ii
%Pu,KfFREl<DCVH9XK"[X2IWY6<3(&9^+g<WG@YP?/Xu;T,%Er;4=L1LFd8q/;O@nAaS(VlKqthj_#g$eD73fAV55*uMddG3T^GS6
%mrkh"*rNS%Qnk:_TFfBKRr#th0Ui(ob]U`:7?D.:D,]42.7M<cLYse6=(89CD?@u34?XF2W')GiG.fe_f_B.I`6Tk%k(eaN4u]O^
%*Xe)l\2,6"]2%;qX+UG4Aj)t%LM>f1jB6.W((QFl_5@Zl$V3H#X\.ZG2JMD<Dp.-jZc-)pink=)J93S^;l"A,[pWPEm*Eqdoiq.t
%_nntlKcJn/29PKr7DJ=hqms;aq+_WE2=.!(#1q@#n'Z]Q*F%2G%qudfZT0lVU^JS#A!`1u84r9a;u@2?'Po0[8)S^aOZ[1^GD+@g
%l*56/Mh]'9<Eu-@[`A*BI4TIJEF%ib9'"))\(M1N!=53OTuX\CTd9.CN%h?aK;_[,_%q_bK>OAcq(#9]S2\:&iICeVGE0glbTF2@
%O(R+]&ABR.&ISE`j.N/7])YO]R$t;K-mO6sKtpl@]c=oO.c9*-5nIje00r[*7?69a(KmpGPM3V6Z%jK@a]A_YV=%f#%IT1XKHT$S
%=-S7s\9h<-*#pYZ;Wpo@*[&0<d!Jd<Xq%oBID?e3rH1,L2Y>V_Ush)>@f.oO2%`,*Cn(1IJQ939?)=;tHeK@OA9DDg5mG3kLfU#a
%^8c00jics$&t97jJjNk+61IfICKC\9T\>mX+j``1B4F\cA]E.eLT1F9Tdf6@Fn<m*djQW$YH"T)k2.Vs!hpV0:TZ6?!-:r25$T(N
%"^ac;UMpC?:XF2t'O;VrOYB"lT%eE"r%$;m3a*Dm;4U55)8,>RXk8@-g&k%?ES#m+n&]tb2j0DR"sNkVo(CrlN4['D._uj+jJq2>
%9?s8R$l'D3YYS`TW"_E*$A2o*mSApb<#E[N(4(Pi:WDp783kZ+.hVj%YI2]\5A4f@-/d3`/2MlD3uST%io5g5G68m_E%Lm35rB"q
%/Ei0mac=h;m.n?G+!i;oV6Ij=;qG$+C_mG)+8.o8!MP(k<kejC"<],HYL`-9Lco"#5l_i34tKIK-9r][f9[N]OJJ4G(!>A/X%7Rc
%<Jg13C'e)NTNtiuls6*`Wtd";;&*J?=`902s$9N[eTrKVe<+DOh1haUC01'>m"#!J4r^i'*nHoph]1&P85dFl#,`D:J5jW05CfJS
%kYddjcgW2_kuD&WiXY3I0ht"YXPJ"M-tGr*C2M1`O7IN\lh=u:89!iC0U'08@n@3#9iXq7?WX4c1l'#oAO(M[V_ING%=ou_Qk?'U
%52XUbJ#I;T>e-5pLIhmrl9W6!YOq]o.=9^Bo.[HEX9,gjr`51md5-O^*`/+!1(TSGk:"kLkm*;=N-A`Er@37r"=YA7B$\G)p)#j:
%3aUM#QaXtf(H^V"?Rs+k!?ffaLnlFg>2sbBX=EEdrSaH@0i6H5IOA,%NbisXq&!RI#/eEdSlNM3bG`"j=,ai"F<0jj_D6)"bM1F)
%&G9)ko-6T4hn9GQ-X+O<EM&ZiKNGVSbXDkm5N`<HI2TCGNB,]ZfaYC787dV;XET6ccOOahjTrA/DZ14;bjq)VEIVr!:=o.=hO`3>
%EP<LiHc^4A+BK_-.uUPSlRLJgU@0QQY9NU>dU!+J<G:9JG398n@n.5[*Mht#"#.oTinQ%J(;3o$;m82[Dku87`=;C5q;F4Uf_5$$
%O&NcT[LUF,7%s)6?5Qs:elAg-9#%Eg]F*(+H$bOnF^":$c+cZK>NPLS>Lefto(I1bgKdI=/VQ&2)Imr?m2=CY!,"#.`4*@EZOOJ;
%[nLdVnqW$hO6]OD`L-kFWY;E\6jMS\/dHp"2V&R0<Zi)V:e%&7Q70:q;8eU*\2_O+fXjL-<eU=#U;C"\nGp036,'e'oELW:`",.=
%dqW>(Y*I&#*)I1TQm734<]eaTBU##_QLS/V9s"b<RkZ9&O*STUoc-AIKbWgM`0#3=(l6J]Uo!]X1qN1d&kHgAKf)9/>#6_H\f_hn
%f$TSPkm9O2)G-I;.O9^Zi^e'0nCg5bMsEu(@OO6#P'/o`,bZn;]HI$fdaNE8@inRFJIu/>0e1,W)Uld&=I)0V?(@3KgbjTa;uB@3
%8Ng%bdN/a_R(r6&Qo&bA."Z::KpVP&HB*APiY6m03YF*GO!EA!NCkV\B(3dH7TGFVVIqhqm6nZS\?@aUTc(P^8=a0u(5fmVZh12a
%(g5lO3\//T&3uHFOH`^23,Rcd_CDY;ie%::qqSg;M9YOIEiuL_mM6Y:l0ABs.aX<,s8KWpKo)eM]_uo/3Im52V%:*M$<F0iA_nKY
%]S5WInU<sp]o=a(]-]s,Mun8UqaVa!`AR@eb2EPg(d%$(NI`7%JBLTn*Ya+-A:"K@AucT]%SF;2:.LMdPWZdY@g>D!A2`cgYDhD6
%O(P6/67`HW"%>Z^VFU>)<k;pg;32PBqO;4946g4o]U&K%UgXEqgjpS9e6q#QL=EO=a*X@'9WIVYnH(%KM1u0FL0lZ1G;])m=/HSn
%$d[D*e$LiaS4,)ND.<%8@1RUdq0/ol^fN-t'gQ1g(;j)i=`&;U/DfR5_(i#Z=OfZG)p/<-:>EKq$K]SF![Pn=Jh\eUYXietWQPnb
%b1Jd>`2@2S3NI=FBK$rT^5`l[@5ht!ZoKP2<Q.6Y5S*FJ?:![?f_tmq'?:s]C,,!MIQ2Li`rT(5=f/6%d6CktA@tn:?=&B6`n@#D
%bN^dSfM]HtU*@[bglT)n<p_7X#'^M1?le"9*C&>5Td+l(&Q#7OPAJVH-*`moP8nC"!G&b#oWrVtE>PunZP<\]")r2d[U08A#Dds`
%4dr4=A?qY:=aA+$]KH<<6mFCh*T8[m6+e0.o83Q/\6=gb+5qOiN9oM>Z)?E!\Z"lRMmZ(0&'%o&?85k)^_`Ys%]7f4o)B7DaG:FQ
%Nh$Uk+kC4+=qnaXMCPMkP=@.s89!k@ENF2)K/pl"+Z;PJ<GPC%6U[^I;QKCi]5IpBg("_:^t`m>G"YGGWfh\&:fHrr#E]aepdIL,
%<d@",N2=XW<Nc0/CBkk6Od,&[@%u0DqSQ]kOJCKl_O2$?msK@hX2MN(_1#H,]q1'2+!JN[6#"4a8[C=3.;\]p2uc]J?hApjPeJ)q
%"dkc>:Z).^;P^BnWH8't[U]El0\r)Ar9!obH^h&Fph3nBDmS^:_]L@d_'gD6C)6\F9\Mbt0;YN&osSfhHGJGd1e*u`eFWXV5n&Er
%TXhj'#]'^&?Oc8p+c(G%V!0>Ur4G2kp4eaQ9lDh-oG5XADo7:7h"A,2osR!_2RSD4^O:uQI4G38UGpkGfgMegG21;,b_g[J's>an
%D`HK^8>[DC]@Wgl)`c/P_V!b#4.#k;`EUC3(EJb@#nhsuPnS[GL#2)C?&+*5(R/t:5tQ5@J@JRr9W3\Om)lF#_9(-1K55"_.&4kd
%c102T%,kl%#mb<MS*U3on:W`i"M;u-5jP<TQ5$+20_-N5:_r1f+YFLo7CXIkR</>`8H%AsP-,T%1X@_ro7OBQeqs0:,C$I_VGs<e
%qD5U7TYu:gg@J359b])#A.#BqMhCq;:KPDQV@]FYXr:Q!&8)D;Bh!pIfEDuNc".dR#N?2&/5e)\5I`8`ine*`?o=c4+A=MJbB`L6
%PXG\)1mmJ0MnU6V<DauD<VfQ*%!sZUXk%o):U8q@dZ>CSk247X=cY%5'MRkMQE+=4IfIS9=.P[D`C)1j1d':A"M[>aNRDg^2oGY_
%",:$;moLg?B)2#mIdQ?,af*e#2`d6.mQ)hS?&b+M[gV<:H6-S<XJKf4QWDYlUq56\5k2+qGHg&JW5HACgJmG<&AtHk?j*N]\Yu].
%,NV)-RYkhWE6ZZ9?P]]AdOfHe!&mJf@rKt<6EUgu#!9&N"b'R->.&&L1fEpb`Sl4=@j*k3d2I/Yh(9?<a=$C*1qFrg97JXl`CN(8
%(%JP:@##J\ViJO"hIOlZ.gUJFp`6Bj[6kTSH-N!i.q^+;3=-FI4M99`bufBq'#9jB)?WCS0)7-U[MjY1m`Y-Y:3`)<8?ZE?W1\V5
%s(L_[1sS!Nnmdhq4)dEtNfglG9hUhN1NA^'s86d-Sj<8QpB1*'^rCg83?M/@SgDicHJQ]QX!G>MbNC1V#WOKoS)qN9)IN6tG.Xoh
%qRl@-lu?U24$L8s@g-P"X[S0d=aSXEY>>@)d$bV)nhiHA(d^rqD0TM*Ps8(^,`\k@j^N_,`-mJiggJHk0u0Z3Y(Id&_/TtZ1AWKC
%0@Ki`45kR,>d'IJ)sDTF>q`OR47=&ip''QW6?\<"AdKESiZuR`Xi/<m3)!FkfR^k7omd,g)IWV4-+"jmbHUc(!qTK56fdL:E6oNq
%:,+YgU([!]gke2*,B&GC1m&q\ht!d,G^iuT`f.4R`nA!ukNt]52b]ip>,_iqbW49q#UVrKDgeX=;G5B,%?)!oLd>o((obZFPQD'<
%6F8I+A/a.1'Fn;e4CU](C>TH_oqLE2%-\G`nphL<P-D7iF%(t_,[^/tc",]!gb\sK:7@Q-bQcrKE_k,\C(Y`@RI*4?4;K1UTYHo^
%)WR^i#>u?CPXT-5A]HB.]=b'@F7QM.s-aXtJmn#(c\V$U"JmgD"hcHd,d9XpM?8WXGF[R;PX)Pc%Cqja#/!lKp*#^i;il[:KfLP2
%*j'++"_m@iM$W`I(`9I[eC!,@<A>%],u4M#mtTEPk2eD`iC2j?SJnMQ(.g3]K;=;`P.LXD8jUBpLp>#lq'N,SjOcRE>VQI"O8t+t
%G%fE>VFBCd&p\-u'MXX2XK/@iJ\#]f[k.^(%OC"mEPXZT<32:'>Lk]YA3?*T"DCNKn(28H03eIdAVeN6k@I)X5</l@h#5>dfMqc_
%VcNVs]QdtH>p'\kjO;TJO.T6bq.<=08,I1c\'omi2)X\)q`tfD0[FI@Wrp"AH-%B'OBIP-2rpBf"VBQ2+d*g=0D6ZA9WZ`r8QfIA
%7<ns,',[GA9)KnQELl`5*hNb]f9@B<B^,0tn=d[d`m"e;&U3Lio?*Pg;p&c=X?h&hL8M!9hZA5^G,npG]r0/mG5>9q0RQES0qMqf
%.GH7Rd0m:S.0LNW!Ra5P%%@j'"&$G1!]m7eis=.cU1>i#?U8*U-V.,85XL"W6OQ.lG[M4chYO6#eJD1@=`pr/8@0tnCY&d+*iP>]
%;GIZ-9rm]4+9n"aU*N0;LF+FbeI<8!]TY**9gMCm/HUc2m3E.u=*>HXmOrp7':&PQ;X)R1,;f'ah]`bQe<!&s&kR0lR-Wkbju,NS
%p3uV(mEL9JN]ibXg<[sV5An$jOL05^LAuBK34p=788"U,YK346%U4o$l%h28iU.LO*cH<Z5^hfpgiN>jWOP/Y\#84-hjMgjH3'0K
%A=<)@!;?p"KbTQhKf$&q]ia8AkOt+-?i'^R&/%UpY3>EeA9334<PG"$9RXh&m8SbbA`"m+Cqj!f8qo36FN`EU^H[3R]I7.$&$kaQ
%pPh(omtZ`.D')`=KH)KTUec0`5"W$4FMC%*'XP6o;)q'`U+0+H<5u(k6m!6o9Q)52QXO9AYi_E8b&KcuP<D3pcPR&882lWtAO]S`
%8[@#HdlXrd%D)!E"6N.N:B9,5(.DZmX7XqQ&q^>ErDURp@a6,C/V=[P:5a7$e;(Gt%LX7klG\6EbitctWY6P4'Vn?a7-niTJhmu3
%o;GogJ-a'POog0J<.Bh1PH!:nh.)?O-6RRqi>:lmhbqMd$8>(O.a![3Rfee&@4Fjo1/t=B91Gc3bY,NB;,esrcF?qP1YoYk@-[h_
%h*l/!9]*Wb4Ok(pDnQSOrSnhP0?n9T?I>e_K6l!qBGK&6\%p0qQi3=ulN3%aLLS07J7DJ#1%67udV3*l?YNC`_kq1'+k%2a;ZfDj
%][=>8l_;#s.58,2a=\,@Q7r=+"[9"9U5KWN6JB@i#O-g./e2;4(!\3Y2UF8dN-D.bI]>FD8hkq8.E<[L,km-0m4%$sS*I&<lE.'M
%UEC]b:*d?o5pB3^8?TOkF$F0QDnlr8N^OCK%:X9;bHU"-(mnh!k?9K-C>'b*KZSX('4"3Ihj*=<QeL-(k6T,4kc+4$o:;<(Ub\j/
%G?jlY;tiZ7;/!#Q^/!F.h=ntAEH=A'VX*D`#'i"orb=XCg`#&@'&>/#o7H^B^s9<-4DM0CUIiu\.3!5d,ehi>m^7H:CO/4]:,9UX
%#K0oXW_cD`IcE4Y3KA].(hs;AMSt=(r.lN=;B&HrJTl&9ng'q9!X#<.]Yt8HH8#hrU1]XK/3AK=]ZSmJ7A9klk:=EfK&O&--%:\@
%A"i7%*pkSS6=OXcZ>,I-R&"3e`&J5*F@#[K`F)NR5=j0<`$W\4P1G*UBuIfdL'=F<U_[En:GRM6Bj:S10KGrSNGQ23h>:/7l"`Ie
%XsA!;+D5@rrK*i'-qFg5OAq++5?!K2l%9=7Ks3ONSFf3Gg6=4?]QBraNBnkl+R;]S-8Clna.Z[7FXJU'S$/,WH'MLcU_,pk[8*ID
%!3=B^/tW`pioArRCWR7;d.6t7/Gn@B,&?[^Bli1+A4B3A<CHnQ3Vet?d2_U7:P]@sdS`qr_^@,U-a\`KRfXajBr6J`K_u$\@;s^^
%,#bnpO+YS9-q-(ZQ0#a%2uETajb>4CSc?k-_8$$Xo*VIEBm-MfU&K!XD)7#YeZ4+5L[pTL4VB%+3g3=flr8j;Hjs^YH0DX-4>6/L
%/2%>[n/4?efIar9_f06@/e5UO0Y_OO=;Mf':F]'GA=o[I?Q-ce\JO4=0Lljjn4t<L*ndgD9Nl89aAmp1aN[T[\2no+:KWpVbD=`5
%/m4uA5;X3;4$[AnSt.&j:JtR`"%dVk5_@X7kU\7=R2a"C=Bq6Y9^6Z6UrQVM`$$.=Gihriffo:5h%.[DX6qSF++7g>]_+8IN6]8/
%J\c/i^-[]UO+>)jdNscd/I"^Tnd^;%0!GfeFDq(%o5[2oTfkpXosk>H@;6XMJOTBD27/ROl]_D<\m\:7`aoQ4:W?pL(c0U=L'AZ=
%(Y@S"=e2cdiu25uoC\?$2t?b1$!/egVG(/*'\t6G!k`pe#E6?@)ch((dHeF`S0bK1-dDS-R"FDc\;?<Y"TOfXQ+QVAiKUQf<"6(n
%`6GQIJtS&QDfksIM]knuh>"n;B-mDSC#:E$[u1'RH@L>J>i,oJO,E8hj3s@;c)ZTK0K?-uIpdniP5e[9$3>nZ2&GLFN$]ipSuK$I
%J7nTk23g'u>SMdb+pmK8d)NMRYCHHcDBUN].J0NRL$fk`e0T?JM7gLeAGZ\l64dfrd6'6X'1O-]%c%YQ,G\(kQh#UM5srjiE$$>U
%'fKrOlJ!mP8C#mE&1$PT:]U+e7".LV#PWZ/[i0C[(lKlj?+C/D=Z3f/DQ)n6EfO0KK(?ldR-)a;%X9<CDB(c+Zp\37Lf,PFA=!H*
%7(q<NAPi%VZ;HlE*rY*pRRi'D:=Sb&bjVp;Im%W]b%GCgNWF3X5#,u#5i9WrloKh^.5H5VdWb3f6DUYLh,1@ePlYQ>TtL>=@FWIq
%>*TGNkFRQGdM.BR&:@)NVrQ-?77Y:ZS7>=?&@SGNAIaki#;W^liK6Q0^FG?ZTR^_u+IE`!!-V8Rgq[0uX=G+<18<q9`p*)<h)X0_
%."_]&]Oimm!Nr@f,C0NE?D''M(jA2;/F[1(TK4caALff->YPSKV8m?Hn:E54=`nQ#bY0?HDKkJhVo:$4b1@K.E=f4__Q"%DqD_?Y
%e#mZ^!1?2"^e^oBLUZ#en#;MWErOZ5i0B@Es/,Xn$p,@q>Rl)4Tl6fIS4WVu2Z9;?VD2#kgW)8BhLo'\?3-31c`9Ja4+no5&*r9=
%X6_e:2eLKI5ba*]>.p?h)30atlYp"Ga6hSePk_GlpHIW4Heu9qUO/TEj.h+:^kMO9Lm(ICS4>]?It#>FH1PB-^E$DZ%hIZAI@R7G
%k8--&"5t/sQebSe%r\rUhG[55p\<??M/49sr_5gW/.P(fm8T0H`eRSUW;^EB^\?)n9qCHeU=+l^I3br;'V!^iUrRbo9_E3.ml:9W
%G$E)``ehXMYerai/`07P%*(<H10doNEP&Y45/6i>FO(p#I!!\UGC9%Oo6VA0dtesZ!hT[:9>$hMo6A%:*<5Pb\%BK4&q@rX^B<9h
%Y:m4Tm?nVid=T$B%oM^D9M((m+=YeOlC?)aXKkGc1.[FGV"'N(A=sQiOfq7qhs?TMU%=JT-%TmZ_+H+5QonKu=5HsBX9_P=VP$p=
%oWuCllU&Kc6<2nN<5tpA-:%.lOIU83M"Fo@85*+DDdhX9O;"4uLo:D)D4F'HWa78Q"5h?8<T7$BQPQ/<=TGMBJr`/ejo$7f9gL%O
%eD=egl?g)nGq*RhRg%Fee9H2#Hm4h`II:sY>QOn0eQ3358:Rib7F@b3J_B[C).4)5Kn!c[PI0W=**-s%Pk[QTDpX5'EQ2KJ5l?<7
%ntgQl+EQFoeSZ8q3keB:Egc@o]%eiEkQ<r5q0"h8"#QOVm:LEX\DYL]G:[m_Hac\[ZZ8+3nib=V*00=sqW+a6*m3Z@qoK_j&I(0<
%j%d&\_cL@k.PTb'&[@-8Li6=H6@h^/>&444'tV+L=)VIe5=Aq8m^qJW3kQ#ZJ;>lVQIiu4)'Q5oGW)$I2eCL-k?(B3<5<(l$H=K=
%:l(T+"4m83jpK44[AL3FWd-&%ft8*AR3:,2^0o&*/(anh3cMcp3m.bJfXr^;3rpc^S"Ed(%WDWP&_n@*g#eAm_dm.=_WgIl9KF?R
%5oLdeABQCZ&laC`n?j8.3*6kj"B$X@&ZID^WQS"nQP`0,r8?XZKNBM"A=r/th89_ZP/DV\(1rQ%=:&JT-945Iq$giohmQ4b!k`Wr
%JE4OT$78:HKF.h1Nhj(4[j]M=e.UD1Bd"[7n[>2O_]+`,ku@$jL7W7#df(Tl9j?j6O%Hki1p//0^VV"q8jXV_Ldp-S"mEBu!7:41
%*\H&h)7Snn\3(7lo?7!bCPDQ\J"@4$s0<2;78k,eK=Gu>rJb2b#2;eO+/\/PRNTNT^H.0W8#r-AYf]>OJZPG+JL<S:l?5T"*(G#h
%8OZ9GHYq32o>&"3pOEGs.d`3(\R<MoEnGue"K?p)F3r<@AE!]$Mq?G3,>t7U+!A[WN,?[C-8855LLM.tFi'AkE>04(-P7Zno8DW4
%HN4"aqU[a@ol"Y>P.Di^7#i*J6*g@<bg\'L"#:E&FL/gl^ig,s?Xurua^#lj#k!Zj^q8[n(2H,J\2:`mD&k.,qjEO,>]ust1(I7A
%r38lV1;6ZKm@O>HAn>7EOD(,4(UkaU9i5k0nnE'jO^\:uHF;Wu*,QN6o#,!\iZJ=(L3T2"UZ$UCk!-mG<J2Rr%IkMi>Y-s9KnofI
%UgkNYhm8RmLSh>0dTIt,Z.3d4U1=jZQc5g@1PiR"Ep,bmBL?LYngYtG"Injs3*9]bARDL#3CjH^haLio3=XJlf.h<a(2m+'fN[c[
%OISOFbsaWC+D,p*;YL_fKd';-hu+O69O1XF&jap`jSV97p(mT(O4)KZO>L^CQoO$MmZP^r!0pSS(FATlloGhg+R"$.;2CH#CN0[;
%++hObjP1koj'm^QhUokkYNJ_-@Mr&;6S&7)^H[+G,ti%a%R"N4,XAg%=e_6Td'u6T/eA()5/=gGgrpT=ap+#,qQMfp'B_"d3q)s(
%[<EM<,4Ar^_-N/$GkhgVXoC:N9146``p8li>X8F\;-W+7-29@6]?a^r(U6Ys^PmJPUZ)OloQ.%XXnLYTrLm<iXTn&k,f=Y-3kH[J
%AM_DgJgSrCf``s^aV?8I>IQR-V%N1td%]&t^8Us-8BYc@P,Rp[Y%1-bepXmuqm<blgC8Y7Z1:YmgbS,JQ1'"tk&B)qU&20>F!tsf
%men$<#_T1r\<ea*,3W'(h+=uSjK""jR)J#4@e;-e0-^3uG2ET$S#bHk='f>crd40n[6C+g<[><\fIK+[kY=+em'V0hd#\R@dTiO7
%*Pit@Yr=nJql;:Z[m!rgD#Lt[e(G2,.pK,?B$CTXWskFcP>CHG%*9LL#<:Q@H<8^l/eurfpJ79aIW.DMDgR]'_^l@PnhXD1lWX2C
%M.s7GP>HI0bTT;U3q3gR6)=R"l`cs3BsEtp<\quI'Ai^o^"@#*YpFuck&0%9-(d)'6q>$>P&0Y@Tpm2pn.%k/[e[7&hrU^.\ac+3
%0<E.*d%bd;E/FCI6^Dlbg^(4[HD^Lu_rQaM<QbU76[An$+!O6g#mOl$&n\tA1LDb5\`\T75+[<:NXeNWJs,X)Q#j\CU9aX0+Y'&Y
%o7?+tqKNo-o`6?\gnPSso[onC8I%,[e0Rd`4OuHtGt]Xs?[jn;`r#9>`r#41r@@Q:0./"JgTiP7@/<S;^VM=5TZ$7tA43Rm^!B/&
%A!/*'`^:!g_'fTO]6O^=2"bHq>^D89DP9<TocBIDQn`3;&tkZXWBhg4EIS_j<FnqDMBZ+p,eR-b`e"Dn>iWO=\t>p3(oX(V(+/<Z
%Uq4bqp)$e%DJk:*FgoO^\6Zm8Rg2&j="]AlisHpj!<cs\8D4gWd[:)'s&*;HOqeauFTk_5npT!_[im(;,nFfAi*#E93VQp$P9.3W
%nFdam8]1P-dM,Z=">!JK'_Og]_0=?9dXD&<=Cs@o/]Zb9)G@/bglu.SMRJ,H;>-lo?Kk:!db-hY-hVec8\L_p)\I(P-(gdNgEV,f
%n1PF6d8r$p,n0*_8<Z?io70Ki8VqGdc`@(4`<HL!<f\=gV(tORTJVL/JD-'4D9A"G1W*5a)`Lgll9XN`/t79!b'DX+4V$XR<2%im
%>1TgYI4(R3qB*DcKY-ESbF3d=ERUqiWgQ6G6qCW>)+h$$nD:F$G(k4\\IH0n[m0Bgo<X@\\8O!D1+V_(#p6*9Q3ci7!"1L(F%`!S
%l34C'k[CQEnAMS!e^_d^@gXTlF;(p9^)GVOo)slWgSkg&V2+$1e41:2kkZF`9Rm.I4VWX#J(aO!`tl'LPe3@AgFIE,b:7K,/o,T8
%cg/(^T?cD=]%<53X*S'g]7iH;aJYMORG__rTnFEcR+k`+UMgh'6o6*IM&9>bMHJqD-AdGC60^^NckchCa+p`^lptE)`Fk`PP2b'a
%,ak82V53DA?<+)Y4fXf(WBAKp^@]8S?rdsO#,IRbG3Y/KW&gaQ3!HR"Jp6LXUc+Flj3E)!%84'[`7bPl%:I/%:;[5fRGOh(-g-Cp
%-<7ag_o<B+-fF!p:-9_K*LX[r-dtGbjeZ9h4pSV&bhP:)ke_h14/TZ(4o70iKI6!S+>F3&\O+Uc=oa7A(bbf`nWKX01tR0g)GR1u
%l+cIgWES3N!J4S.@riu'HM+OP&[=/!'RKj\Q<IYM*$&5u,@LTc`/7Ppg!==+\^O,&)Bga211iY>pb9lO'ftSIk0+*t-.s8oi*+\9
%_+)k5r6RoN/2e9"*Nq:(aFiMpXdcXfnLBYGNlR598'j3$V&U.$8WqW<)!9KfXn0b"_RI.fHq(a\C"!:aLYR$%r\FLAau_ti>r%VX
%(e5QlLbk6b`F'7;@3e$Xi4T_\%gZK.W)%A.QgWp8OV6rVq%k=l7H<emR;l3sg]U<[7o"3\RqVLdqhM]u!hi7+mkBh=A]2D(*0it:
%e;Y_[hGfr56"uXI=cbn-_FfuH8M4TR[LH&j?1ijeKMm^s.%hkq+LiM)@M@^o]P_>0G8bVbXkU'J6U#jY$mfim')4d+#O:!R)2B)t
%>'c=:Ql^!/#BX"RXt&NS3`[W'-*$8R!hYcLout]J\f;hZ<)(J=M/fIFP6m9h*dFN]G$1AsJ&gh:?Fr7Jk(Gkr"t/L%KbO$%oa,o<
%9o1=j^P+;)VLHEbKon#4)IkBep1QQRBIXYUnM#/s'ni5L4SL<N*#k"uqPZ3Pkt[6a#`X>DlU?6B(s88C(iiP<Lq[5in):XWA+YT%
%;J`glfSbt9KXHF?0f1;=qa%5>^]Bi&NKR>=j+=\3:d?Bc1&/[J-1EAE?c4T3_R(2[)D$hc:@)<ar_:G-pAGA))&6jHRJ7,i6NVER
%oup*C,7bs,oQEgf/3mr$EX1$E,$H5u99Ubg/hI1jOpnZdh&[[C.Zd/;SA6s))^CfOD(e$gi5f,NTbFWi9f$9=-2E'?Se+X;PCpJd
%iPrnILVDK2G:,:%8'=Cfd',]_)=XTQ:L*sNVo1@>n.(a6/b]po&nrUCrIH,12NE"7S.==3PVjAUKcsMGI6\4k+Dh]%Fb)3I>!$[E
%..:%Bp[>:a1R(^=f1nUc*P#JWJ.Q:2dD&?8/ct$b_@P633R:C)WjaPc#JLimZ?ECO;Wh+kfsD+<]<;:Y5c)aR\*Dn$5`9:B?No?h
%dN#_efR.9"JOV%>A^]TC.VW/-XA7#C&FT`QBFe3bS/M+JBJPOLm_4^Y*>)B4.OA%d4LY7++1GZeiKsT-s8=V5TfR2+<<37`N8F*L
%bu]Lko]VfYW8tK>Mh$h`s5=n*Hl]S\30l<:Ce`G+L_<iZaoZ#rW>M1mL,D'jp2'jG[B]O+_WF7!B!]W0L9-Q6+L1P`\$ELN1B*4%
%$sTnI6N\Z/[PtO@quD%bB=h&k2tX&?C09+)(pYbeo^Qj(U43tH>_qtbnG(&k=<G3.@bE)C?qI5+Otp$F\IfY_ml4bN9dUo\0P@g!
%CdDY"cqi3/lPNQ?9\?r$'8#gK^oDh6L`Hl%]@sWJE$FP%V-c![>MrYgQ(&#36S3-=3#b+<lbR,1hBGVd:1\uJI+64X%;9Kq\$Jn.
%F*F,4<V^YEZu#3cbZnB:"kbu@4U*\JfsY`&1OuK]j\@*ng=D*k7QUR8oomZ1%Hi91#4c\Pq/)2t=:&BHUlXlt8s":.i@[_ehhocX
%nK5,ZOS=qH)j2[1B,WggdWM\&Cl<+_*1_6TUjd3Sa30$dk<*fi2Mlg4\ff:\Yda1m<$tt>JZCKY858*W)YC8$3:tG:O$!'Lg;gq!
%`N"6m?r?cO5"&=8<j"A&=)95>I`na)nqi%1&OeV[lgpn.g`]VCGa;Lc(S>9U!tVPPc@+j^2)ukEWf_i>Q^#$]JcuLAYBlf,UE]ho
%=%VaF'fGc]gY.)SSHqG`:mC5p`euDB7&*jg_EkFnUoO&WZNUo9VlgMe^A'<:==5`D+.Ki.D4>SBU+#ru0sKO$(jtf;H&h?sF(PoP
%lFpmQB51COFuoJa4:Or.X7GOm$>/QK0-PauF2Oh)L.?Fmakub@*n2J:3,\#!EDGE`?'Dp_I=S*O4?7V0RIC#9*:qc"'400>_+>W:
%NtX6j,Au_]JM$\p"u#MJG07GBC6PY]g>T,2]T18IMSJC_%O,iL\M">Rl'nQ/X\@o$e#_'PAY(PccHsJHd5Sp350d+l:I3]'PS]*5
%@p6`lAie$B[bpLqDRd!&`MpJ+jR7C8&#t9%O7%T3e#)T&jH]'6*"D)Q\\$%4Ihm*CRGNGQ>8cONU1M*rZ5nFaauc?&_Z!5RQZF[q
%1cL;@o8RVl6/R!Tjk_iEYar@^/0-]u98%MK0R!dT2&\jMh)rsJFhEOp2;NIJLi4B]<.`YN`,^+8[jd($:VI-/o"l9AoOo('P5We_
%9T"jOR&SI5Ro=N:lqZH/jRY+?dI*C?kj:.[T?)l4Ge['kJ"3L=o>6(H(H[K80";=Ir9bg`Nr;14_pGN[7s>1e+.(&:9e(WTG6bXl
%mJL7R]V0b(UZ!qedG8BJ0BCO1m>cGX=;RE^X+SHKZJ3#3Huh^-IlG3eR$RaNag+=gds#nUORc5%:.3Z]SGRnto^kE^qLS.7gh<:>
%4*mLWcXKNmb\j6fAd!B"eEeca4k/pnm4^7N[rinB?FKb]-2M9[J)GA8ll`,:eT@Z<l0@K7,D8g!NPk$=NGc+m-g&],F+#'%+rtsc
%k`7M/&c>L_TuoOk[W4E;.;-q8[F,uVAuoNE:0em9_-/4T;Mq?cU4Oqo:W?]OH5]n(2,D;!4jEMpn`2;i$M,:H8KF7u8We(I3f[Kl
%Z[aI1^#_`I,dW7^f8bTZ7mA*O*Mc7IR]&NlKXn\phDp);Uj%g/%ra?fVD5ZobkHg=R<fkkW$6#WI4[P2nMn`T*q6K-?LYTEb1%]?
%AQ2LPd1CHu8iq0>OSmq[AV7RYf(8YqRoG'93INh+lMWQTd;Y\I]=Z;]b,(GD#!LAK>\k#ImR_R?aF2"!I`tak`:*Z3?Y346[3=T!
%^X!?j)<-3]Xl=Y[TP#iR@"L0#'VkcM$M<2NU7<oo2IZNp7cNG(F0$gWE:jXf6h&e:7R%fcKFgd1&ur@iR5-e3%UqDTr,j3+e#K4h
%M+A^g3BEt(FT:TTc`J[\jADnpmN'10(t^u"Njk2nWZ5%E(;:`^p/1,s',[*tV#tE`p3MZT->`!^HSAW62r<ofj4.gC2b``dmMUZQ
%mEBs+d+=-10>Ph)h5of,_Va_,AJ:[oqYg<Xd(/;J+7[t@`&"YSlj[$G_YuLWjQ8;T+1n$6H#nir48XK"9uT4%CRh1iViKZISZ,'*
%mO\6&V]mY`coI(@&6kbS0j-V7+V92s^jkd"AecAKb0p^jR_?scm_'3)B<HY3ZD>B(R`301SbK<_=7dXY#1[P\6j+&R.g.[OKm1#+
%<oDo[.<-kn?>K1H(ct7qS?:<hU@UPM(>Gc7':+(k\7j>DTjDEp11)s-nN,I#S$Vt]KsUXTQ^q,;;#:1!%MlJ*IE+C!.T$9GB5>1C
%d'0_)Wm;k>U;UKL-DS3D*pb+&'KsRN1*,S2\j&LnZgq"Vq(h&jkL9NBS"+::Y1FH5BZ.RDbZ3L3Pmu`Q68T1/_O;W\cSJWf'u3"q
%QE?ku]c'h`]`[0lc"sf:<3>M[2!'Ue.'XXu+&!u))gnfE1ZuPU%0Rd.=:!lk[!g\8=!RWu(Nsooi'am,ja=1/:E<UYCJ^dP%#`L\
%"L(u#(;m5/)%lCoHIsb9anIIDPODkm-i`iqC8"E*/K3in=cY1:4h=r9W(m_BXCT$.dHa5^c?FU,J+Qd4WOf9/][&nMBAUE#D7[H1
%b4YF+`gFO@^?[E(Y?o9M)3Eq7RY"j1:/k>-0Kjq!.>+>I>E=S.a4>I_]7L#gEbdL:C/9->]cE@:eTY$?kgV0*3;&$L9Vh43:3p!\
%/!"U*S>MUUUuT)eR-I;V`ijeH`fDd3naYddjRMDWjRIpEH/,R='T4gHCVL$;*#kpcQ(<dGd>&iDc^?O![7jLcq9Ph>eun>fNqJ5@
%Wm.LdJ7ll:UU,Slg6@6TYoS7P$!_->\=NXK1ZbJTpJEp5lSb;J+gS!CTdXFfcKS;!9*_&s+C$5^K_(eDHK#Wn:QnC^A`B8?cG^ls
%qTb!X%!sXCDN;NW3Oq6C1Y&6&7%t%=objF`@TBqS1fGO=B`;L5imLc4`kl"_=H\DYghSiJ#>C=S^FIn#TH_0O51I"h2"7.<F26o'
%-=VI`*.;]&3IQ:^PC,[j2(0]mS9='!*AN#')H14jV\dZFRKdh0a.SL]`lsJ3G1,Do@:#B`F.M[<(FK%S)3b#_>k%M+>]<=VdX1iB
%$.EPPs$//D7(8on]#b#Q6@H5"6^]@oUcPb(/hs82VS;!gdK1F>R?$s2<]qJhMrJT!-:3:MHe?)QOA;8c-a(g`7rMmDf4B6_0%S2Z
%*:B6l]&.-I3uI##4l7&59n"0\/GOCO$>"hMl_2ENoahe4g=J0unA0^E>#:Ge@g:U9V"')e/TiZ^Au`<qC+T>8W9UsZ1k-_p6R"^T
%"m7e!H-E2XSX254=ME%WT4\INh2R39Nmu7UgK8tWR9OlED;K29LTsA<csb.Mc3d`['s<S(+6>[/g'4qkhR,L((C(2m%>D^OK"[93
%`[`Vi$r:1XQX45E`ld@UGQTZ.EgU+[Yj<deUM<&1[B'^n_rt:l4u&Ao@a/&dbP.'j0#5_:hg^`>Yj4PigO=&J_St(&eN2dt&P13&
%l#@[VYp^/@A]8B,)N/!''R)*D3%/_WVPGsK;_uF`T"6s2lYs=/`2l5RWN3+.e`i!;`3`8AlckI+pTC+Nf^2M/-Kdqgs%\F%G,\*a
%'Z^e(@0e!fH8Wa<$o0m2.e.gQZVK$0n5GQRg(plKU7h4J3&7k)]Qf1&3>rC6m*XWT>*!@J'34"h;g49$RD1fe,#&.Z%HkjD]?>Rd
%M*:VX6_`.c?kr")>_nFs[42'>V*r5d3-,7nA/$TO_F29=+S._1h@LI9]S*i-M<+,GD%::qr7Ke1FYMYDh0MKF9`l@EO(jR@0(XJp
%GOF?8_PI[JI^#ECJhKQpd?;.%.OG6l@9_/Jng[+pUHTSCUbJFQ4-@+bA#<9Q)U7(]J`Z..-@$@'!(Xq:)PapfI")cQ,'?B>%Z033
%j-eOV6r^]'^7l1dQCYe=$(P2`>MgC%SR[\?AeI;K+!/A!i2!?QVul/R(ZSBaHlCXNGRV@]p,pNbYTttW(RlM`k,[W4($[Y=.&hJp
%(*2anmG0+Pf.YXV*Ot&8*]eL(PPAE:@Ags]<L!14]8M^)SA&d%f<>d)1d%Wi]"?2\kHO$98#h@4glF7R4spp&AqgYm/DW/28@FYW
%]-`fBT:5/):!I`T#N<2f:IN2q:HdsjSNh@(r6r0%Z["b"l?S,f?q1ouhO6=\$Ij`i1UZNE"NcPBek8D=-6]:DjL#B<Qol;,?=<$]
%mND>;?GD+2F4L9^mWr^>o\Cr%GoGUS3)@iU?0;$*fWjhQf[A51JrtCT7-]K.Ftf`s=MI8Ho)D^6/N[te61AcKJ+1Dn,brM.pCUFK
%+g#8bgsO9G$kg"rRYUZb3[-AlCSlDp<]e<?NL?rP7s<B41Xa,f'g^T?]"Um6r`2-[``CTF\GuO.#0*GI76rI:lb`U[L@E$]@b]f6
%b'R"KD7kNf,!&U*jWVHC/Q1R2/^-Y;&9dZP("3CX9.]GX+R?\7b%1Akf2&E:'fSGu[gm)%7_Uu*M[N-jj*S\hX[<8I5C,,oihlEu
%,_Lb2;RF6-W&+,ResS.6*GjP%^itAJTGNsU0Eb+fnZ.+SgY]ST>i1DWOXU4!A&2VUp6("2YO!nN)^,abZG-ik\"_/PGS+^Z+%@1i
%nQ:V][)*K:`tI3<b]P@o1C2fK3+Q=AF?d)2Z+EF"?JGhR!A$<ii%`1'%`JS\)]@NPL&dOQK)Wfa).)+RhN)-*'UpL`oQU^pdt#ej
%AE,i.<SKpPdj)#0CR:7"D,(mO;'TO\21itb6W(jM_]*fG*%JDqD6LSgFl(+G(aKGOUT)l../=;%DY8Z(!QBL_O1aLZ:?W9d%VNb?
%OOM^8)P<#.)=*:Nh<Ap\i:b33cF*uFrST:)n!DCaQDQB@H?5Bs<[VjW5\)tt&h#JWXf)TPd*2cgjO[SNC*B=M\C0;7m.L79`Sb8M
%lal0YVde*qjR:h4jJ,]FmdC[-jOaTr"-W,Pk>9ha8b'GY"dn-nE%:`q]eT9jBYQYj8n9i1f+0We#MIWNqL3FNe>.hKg2!]L!q'g6
%WNT!%CkiPP@h9@$_N_"oMNQVYe^:-P5d;&F^%%=<+V2!_5I,&,ks,K<a5D>8<hM;P@Z$)U$Ya%goM=CF,`l::<-pM.ilDOjkZ2;u
%+V`I&S0L:;6M_Vr&4j,adi/XMH:/*;+Uo!($n>e%=)h!le6f/T2A2\6UG\D&%KNKB#2>S@.7?9c/Z"aEiWt@<re(=U]a/IUj8"C1
%E&TK&@DuGi4eY5r74G9-eIk,Pl&1qk"X2TsokL=V$jV27\;I*(L*FS]+PHe)BO@ALbgiC)?.N+t)gA9em\($#ru!pZ/hsb5\'unI
%V/Sbp<"72Z[&]:JN5m@3A-k?W+D[,FJoke<4tQD7S6I$V*X93O-k5!*F4::3[%CL\e](=OpL1aU<p]j#`dNB*BP8]?&N,t"Vd+le
%W"Wj-oEie'nrrJug99s&N8m)`m"g"IkQ&9jP`(J"^pE?<q''t)\\"S-$tRmW[Ns`\`5<T^`B:C]oF%kpaiJfq[P-7l9o1GR*dRpV
%:V;9>'%[WB5R0Q.iYd9FnRj/V#3d\3fUQnu#q=T7l_?e&RFW)c;]WamA1/l-h<gLMonHo\)P[KH-j&'3+?E>L+M2:jf$`s1$2J_*
%5:a\?iB^$.7S%XS!FL8uMof4;`QU_RCL.l>-*UmeCSH`!/C85h,k]+]"=YRt5^+B'@j(EX+u`GT"L^[&4UmKd-<o2)oLIRE)^ZmJ
%gJL;J\:%b51L&)RTcO+#k1jsbQ$(p&?1>FZ,_`B0RHYY.@SRN:d(u=3M2(7_c>TY6BDGb`-M\oc@'-c7X?j@Wj:PArDB0Bn'G>Ie
%a3D9:DFfFsP^'95_ehZ7%NQreW^_0jQC5iJT>Q^6q'EB/&LZ3]Z6_:I;C,:a9o3)Bd(!3k*3Yb9ZKUG-=clYS'X4YhDYL&@?@@@U
%b=+nc`M5R%P,</1Dc1D9j0No)YI6(71m&B].,D=n)5.8qO-E>"O)+\ESHX>9BJ@2OW*eRG0bbj,A0#=&hU[+XJ=;!OX0RE>H@.l/
%EcucJ#pZ.>le8"g^s+KZZ*LOL4#Sb5fkW.(W>:HT(1dI-E2RRsjm..l/.C#6&:D84nHN>3GjDGZM*&AOEl+K^DCIJb<imh=KISfp
%'82pOeq2o<.&mH/<:Ju'BsFtjlSL&$"S-Q2b\]$Ec$R-K/o+CHpZSkVR4B_U@nKj:<fYTI6r,-0_3p[_Y0K=P.^m0!m&1;"p;%2l
%0rnaqRnVcX38[P8]r:fr'MG:<-s4,=@P,LG&3YsM4J8.^QF^WZfH2sS/CM+-N?oX^!Aa>"';Y-aaN\r6i@KG6T!_GTqWL%HK/Vct
%V9n$q'r()Cf$oEHglcrjoN=7#e1V/IW.$G@'W`sQ<kG4Q=Y$uV2p+gfcZ.Kt"RZkh$'Thn('j/"[I5'3R.].b]D0O.Zfl/me.G1]
%93*-!k45X3Ao.hYbZ?;pAV0+R`02XoOj-!=put4%SkePZiZqedIg.]foiUU`O>)-_hd.s.h8lc/3@r++14K_+@[HUaK]KH_RQVfG
%(Beog6th2d8i\=gcNZY'hNml"K&+)W[VW5UR$@dd>!98,]:M3:.mH%b^:MXGNUDMoF.f;&#9+6/d\&LmMqWSVR9i0/"C#0$1b55l
%dp:Xl;cYf_D?NSVD/=A>\J3*&YQ[9AF2V!im4Me79H'(bYll$J[H\N@OD9::qeN(>K!Up*J)n9bgCSuP#QMhs[XO#[&N1OL\3H)B
%UaYO#a8H%u8<TOY0oqP%cXk)lED@(Y1t2;X>q,r`E;cN)Ck+@C"36!0o`@#KC;WsnbOna`Z\\XdU@#go9!jp]_%mS&Lk0L_c:;kC
%;lk<2eg9l-RY??QTJl5ng<4Z=kX(0G-ch+M1Z9mkfLln'f`4Um(#ZZgi/Oj@Y7b#B;(_iPZ@u5?j5Erhg3alm_>?L'>u;6W)C(++
%gUc835E`!"Tu:Q>0i]p#dMI7I\+M#^,-K/j2(H7k_<cL-_&Vi@@kZQ&n(A77\>VQgcf7g_pQ)U"&l>,*W(mIp%gf2["B9"8.L-*@
%B*([]!Mr-b8i$M0M1Ea`5sX[rJC7+VGp8o%83h;ETK3`_4X?[]'2Y)&W#QFHSd?gi"I))&!Mr-b8i$M0R=OiO!L8Lll:aJ9OFZUi
%5\2:8Hpg56-D31-;#5)Dd!aNgf3bYpJ,*sWiTiEe?Jk['Hh[I6$9\4Rk1/knG;hbdEdRQ6P?73jrj[B&oB$KS^AW3Ql057\gNUEG
%]t8^hm\dOD!l77Y"4*QerSj<mT)9$ZAOqR~>
%AI9_PrivateDataEnd
